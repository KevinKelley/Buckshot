function Isolate() {}
init();

var $ = Isolate.$isolateProperties;
Isolate.$defineClass("Closure103", "Closure330",
function Closure(this_1) {
  this.this_1 = this_1;
}, {
 $call$1: function(_) {
  var t0 = this.this_1;
  if (typeof t0 === 'object' && !!t0.is$IFrameworkContainer) {
    this.this_1.updateLayout$0();
  } else {
    if (!$.eqNullB(this.this_1.get$parent())) {
      this.this_1.get$parent().updateLayout$0();
    }
  }
 },
});

Isolate.$defineClass("Closure33", "Closure330",
function Closure(this_14) {
  this.this_14 = this_14;
}, {
 $call$1: function(e) {
  if (!(this.this_14.get$mouseMove().get$hasHandlers() === true)) {
    return;
  }
  e.stopPropagation$0();
  var p = $.document().get$window().webkitConvertPointFromPageToNode$2(this.this_14.get$_lib2_component(), $.Point(e.get$pageX(), e.get$pageY()));
  this.this_14.get$mouseMove().invoke$2(this.this_14, $.MouseEventArgs$4(p.get$x(), p.get$y(), e.get$pageX(), e.get$pageY()));
 },
});

Isolate.$defineClass("Closure131", "Closure330",
function Closure(this_2) {
  this.this_2 = this_2;
}, {
 $call$0: function() {
  if (!$.eqNullB(this.this_2.get$itemsSource()) && !($.isEmpty(this.this_2.get$itemsSource()) === true)) {
    var t0 = $.index(this.this_2.get$itemsSource(), $.get$dynamic(this.this_2.get$_lib2_component()).get$selectedIndex());
    this.this_2.get$selectedItemProperty().get$value().set$name(t0);
    var t1 = $.index(this.this_2.get$itemsSource(), $.get$dynamic(this.this_2.get$_lib2_component()).get$selectedIndex());
    this.this_2.get$selectedItemProperty().get$value().set$value(t1);
    var selected = this.this_2.get$selectedItemProperty().get$value();
  } else {
    selected = (void 0);
    if (!($.isEmpty(this.this_2.get$items()) === true)) {
      var selected0 = $.index(this.this_2.get$items(), $.get$dynamic(this.this_2.get$_lib2_component()).get$selectedIndex());
      var t2 = selected0.get$name();
      this.this_2.get$selectedItemProperty().get$value().set$name(t2);
      var t3 = selected0.get$value();
      this.this_2.get$selectedItemProperty().get$value().set$value(t3);
      selected = selected0;
    }
  }
  if (!$.eqNullB(selected)) {
    var t4 = this.this_2.get$selectionChanged();
    var t5 = this.this_2;
    var t6 = $.SelectedItemChangedEventArgs$1(selected);
    $.setRuntimeTypeInfo(t6, ({T: 'DropDownListItem'}));
    t4.invoke$2(t5, t6);
  }
 },
});

Isolate.$defineClass("_ChildNodeListLazy", "Object",
function _ChildNodeListLazy(_lib5_this) {
  this._lib5_this = _lib5_this;
}, {
 operator$index$1: function(index) {
  return $.index(this.get$_lib5_this().get$$dom_childNodes(), index);
 },
 get$length: function() {
  return $.get$length(this.get$_lib5_this().get$$dom_childNodes());
 },
 getRange$2: function(start, rangeLength) {
  return $._lib5_NodeListWrapper$1($.getRange2(this, start, rangeLength, []));
 },
 removeRange$2: function(start, rangeLength) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot removeRange on immutable List.'));
 },
 indexOf$2: function(element, start) {
  return $.indexOf2(this, element, start, $.get$length(this));
 },
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 sort$1: function(compare) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot sort immutable List.'));
 },
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
 },
 some$1: function(f) {
  return $.some3(this, f);
 },
 every$1: function(f) {
  return $.every3(this, f);
 },
 filter$1: function(f) {
  return $._lib5_NodeListWrapper$1($.filter3(this, [], f));
 },
 forEach$1: function(f) {
  return $.forEach3(this, f);
 },
 iterator$0: function() {
  return $.iterator(this.get$_lib5_this().get$$dom_childNodes());
 },
 operator$indexSet$2: function(index, value) {
  this.get$_lib5_this().$dom_replaceChild$2(value, this.operator$index$1(index));
 },
 clear$0: function() {
  this.get$_lib5_this().set$text('');
 },
 removeLast$0: function() {
  var result = this.last$0();
  if (!$.eqNullB(result)) {
    this.get$_lib5_this().$dom_removeChild$1(result);
  }
  return result;
 },
 addAll$1: function(collection) {
  for (var t0 = $.iterator(collection); t0.hasNext$0() === true; ) {
    var t1 = t0.next$0();
    this.get$_lib5_this().$dom_appendChild$1(t1);
  }
 },
 addLast$1: function(value) {
  this.get$_lib5_this().$dom_appendChild$1(value);
 },
 add$1: function(value) {
  this.get$_lib5_this().$dom_appendChild$1(value);
 },
 last$0: function() {
  return this._this.lastChild;;
 },
 get$first: function() {
  return this._this.firstChild;;
 },
 first$0: function() { return this.get$first().$call$0(); },
 get$_lib5_this: function() { return this._lib5_this; },
 is$List2: function() { return true; },
 is$Collection: function() { return true; },
});

Isolate.$defineClass("_AudioContextEventsImpl", "_EventsImpl",
function _AudioContextEventsImpl(_EventsImpl__lib5_ptr) {
  this._lib5_ptr = _EventsImpl__lib5_ptr;
}, {
 get$complete: function() {
  return this._lib5_get$1('complete');
 },
 complete$1: function(arg0) { return this.get$complete().$call$1(arg0); },
});

Isolate.$defineClass("Object", "",
function Object() {
}, {
 toString$0: function() {
  return $.objectToString(this);
 },
});

Isolate.$defineClass("Closure71", "Closure330",
function Closure(this_24) {
  this.this_24 = this_24;
}, {
 $call$1: function(value) {
  $.setXPCSS(this.this_24.get$_lib2_component(), 'transform-origin', '' + $.stringToString($.getValue(this.this_24.get$transformOriginXProperty())) + '% ' + $.stringToString($.getValue(this.this_24.get$transformOriginYProperty())) + '% ' + $.stringToString($.getValue(this.this_24.get$transformOriginZProperty())) + 'px');
 },
});

Isolate.$defineClass("Closure56", "Closure330",
function Closure() {
}, {
 $call$1: function(e) {
  return $._completeMeasurementFutures();
 },
});

Isolate.$defineClass("Closure165", "Closure330",
function Closure() {
}, {
 $call$1: function(_) {
 },
});

Isolate.$defineClass("Closure276", "Closure330",
function Closure(box_2) {
  this.box_2 = box_2;
}, {
 $call$1: function(el) {
  if (!($.isEmpty(this.box_2.list_4) === true)) {
    return;
  }
  el._lib7_queryAttributeInternal$2(this.box_2.aMap_3, this.box_2.list_4);
 },
});

Isolate.$defineClass("XmlNamespace", "XmlNode",
function XmlNamespace(uri, name, XmlNode_parent, XmlNode_type) {
  this.uri = uri;
  this.name = name;
  this.parent = XmlNode_parent;
  this.type = XmlNode_type;
}, {
 toString$0: function() {
  if ($.contains$1(this.get$uri(), '"') === true) {
    var t0 = ' xmlns:' + $.stringToString(this.get$name()) + '=\'' + $.stringToString(this.get$uri()) + '\'';
  } else {
    t0 = ' xmlns:' + $.stringToString(this.get$name()) + '="' + $.stringToString(this.get$uri()) + '"';
  }
  return t0;
 },
 get$uri: function() { return this.uri; },
 get$name: function() { return this.name; },
 is$XmlNamespace: true,
});

Isolate.$defineClass("_NodeListWrapper", "_ListWrapper",
function _NodeListWrapper(_ListWrapper__lib5_list) {
  this._lib5_list = _ListWrapper__lib5_list;
}, {
 getRange$2: function(start, rangeLength) {
  return $._lib5_NodeListWrapper$1($.getRange(this.get$_lib5_list(), start, rangeLength));
 },
 filter$1: function(f) {
  return $._lib5_NodeListWrapper$1($.filter(this.get$_lib5_list(), f));
 },
 is$List2: function() { return true; },
 is$Collection: function() { return true; },
});

Isolate.$defineClass("Closure229", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$2: function(_, __) {
  this.this_0.get$selectionChanged().invoke$2(this.this_0, $.EventArgs$0());
 },
});

Isolate.$defineClass("Closure89", "Closure330",
function Closure(this_41) {
  this.this_41 = this_41;
}, {
 $call$1: function(value) {
  if ($.eqNullB(value)) {
    this.this_41.get$_lib2_style()._lib2_unregisterElement$1(this.this_41);
    var t0 = this.this_41.get$_lib2_style();
    this.this_41.get$styleProperty().set$_lib2_previousValue(t0);
    var t1 = $._lib2_StyleTemplateImplementation$0();
    this.this_41.set$_lib2_style(t1);
    var t2 = this.this_41.get$_lib2_style();
    this.this_41.get$styleProperty().set$value(t2);
  } else {
    if (!$.eqNullB(this.this_41.get$_lib2_style())) {
      this.this_41.get$_lib2_style()._lib2_unregisterElement$1(this.this_41);
    }
    value._lib2_registerElement$1(this.this_41);
    this.this_41.set$_lib2_style(value);
  }
 },
});

Isolate.$defineClass("Closure308", "Closure330",
function Closure() {
}, {
 $call$1: function(_) {
 },
});

Isolate.$defineClass("Closure180", "Closure330",
function Closure(this_1) {
  this.this_1 = this_1;
}, {
 $call$1: function(v) {
  if (!(typeof v === 'number')) {
    return;
  }
  var result = v / 2;
  $.indexSet(this.this_1.get$shapeElement().get$attributes(), 'cy', result);
  $.setValue(this.this_1.get$_lib2_ryProperty(), result);
 },
});

Isolate.$defineClass("Closure203", "Closure330",
function Closure(this_3) {
  this.this_3 = this_3;
}, {
 $call$2: function(_, __) {
  return this.this_3._lib2_updateRowLayout$1(this.this_3.get$actualHeight());
 },
});

Isolate.$defineClass("Closure90", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$1: function(item) {
  if (this.this_0.get$_lib2_setters().containsKey$1(item.get$property()) === true) {
    this.this_0.get$_lib2_setters().remove$1(item.get$property());
  }
 },
});

Isolate.$defineClass("BuckshotTemplateProvider", "HashableObject",
function BuckshotTemplateProvider(HashableObject__lib2_assignedHash) {
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$type: function() {
  return 'BuckshotTemplateProvider';
 },
 _lib2_assignAttributeProperties$2: function(element, xmlElement) {
  var t0 = ({});
  t0.element_1 = element;
  if ($.eqB($.get$length(xmlElement.get$attributes()), 0)) {
    return;
  }
  $.forEach(xmlElement.get$attributes(), new $.Closure257(this, t0));
 },
 _lib2_processResource$1: function(resource) {
  if (typeof resource === 'object' && !!resource.is$ResourceCollection) {
    return;
  }
  if ($.isEmpty(resource.get$key()) === true) {
    throw $.captureStackTrace($.CTC215);
  }
  $.buckshot().registerResource$1(resource);
 },
 _lib2_resolveBinding$2: function(p, binding) {
  var t0 = ({});
  t0.p_1 = p;
  var t1 = $.startsWith(binding, '{') === true;
  var t2 = !t1;
  if (t1) {
    t2 = !($.endsWith(binding, '}') === true);
  }
  if (t2) {
    throw $.captureStackTrace($.CTC215);
  }
  t0.placeholder_2 = $.FrameworkProperty$5((void 0), 'placeholder', new $.Closure258(), (void 0), (void 0));
  var stripped = $.substring$2(binding, 1, $.sub($.get$length(binding), 1));
  t0.mode_3 = $.CTC159;
  t0.vc_4 = (void 0);
  var params = $.split(stripped, ',');
  var words = $.split($.trim($.index(params, 0)), ' ');
  if ($.gtB($.get$length(params), 1) && !$.eqB($.index(words, 0), 'template')) {
    $.forEach($.getRange(params, 1, $.sub($.get$length(params), 1)), new $.Closure259(this, t0));
  }
  $0:{
    var t3 = $.index(words, 0);
    if ('resource' === t3) {
      if (!$.eqB($.get$length(words), 2)) {
        throw $.captureStackTrace($.CTC215);
      }
      $.setValue(t0.p_1, $.buckshot().retrieveResource$1($.index(words, 1)));
      break $0;
    } else {
      if ('template' === t3) {
        if (!$.eqB($.get$length(words), 2)) {
          throw $.captureStackTrace($.CTC8);
        }
        $.indexSet($.get$dynamic(t0.p_1.get$sourceObject()).get$_lib2_templateBindings(), t0.p_1, $.index(words, 1));
        break $0;
      } else {
        if ('data' === t3) {
          var t4 = t0.p_1.get$sourceObject();
          if (!((typeof t4 === 'object') && !!t4.is$FrameworkElement)) {
            throw $.captureStackTrace($.CTC215);
          }
          $1:{
            var t5 = $.get$length(words);
            if (1 === t5) {
              $.indexSet($.get$dynamic(t0.p_1.get$sourceObject()).get$lateBindings(), t0.p_1, $.BindingData$3('', (void 0), t0.mode_3));
              break $1;
            } else {
              if (2 === t5) {
                $.indexSet($.get$dynamic(t0.p_1.get$sourceObject()).get$lateBindings(), t0.p_1, $.BindingData$3($.index(words, 1), (void 0), t0.mode_3));
                break $1;
              } else {
                throw $.captureStackTrace($.CTC215);
              }
            }
          }
          break $0;
        } else {
          if ('element' === t3) {
            if (!$.eqB($.get$length(words), 2)) {
              throw $.captureStackTrace($.CTC215);
            }
            if ($.contains$1($.index(words, 1), '.') === true) {
              t0.ne_5 = $.substring$2($.index(words, 1), 0, $.indexOf$1($.index(words, 1), '.'));
              t0.prop_6 = $.substring$1($.index(words, 1), $.add($.indexOf$1($.index(words, 1), '.'), 1));
              if (!($.buckshot().get$namedElements().containsKey$1(t0.ne_5) === true)) {
                throw $.captureStackTrace($.PresentationProviderException$1('Named element \'' + $.stringToString(t0.ne_5) + '\' not found.'));
              }
              t0.b_7 = (void 0);
              try {
                $._lib2_BindingImplementation$4($.index($.buckshot().get$namedElements(), t0.ne_5).resolveProperty$1(t0.prop_6), t0.p_1, t0.mode_3, $.CTC160);
              }catch (t6) {
                var t7 = $.unwrapException(t6);
                if (t7 === (void 0) || typeof t7 === 'object' && !!t7.is$Exception) {
                  var theProperty = $.index($.buckshot().get$namedElements(), t0.ne_5).resolveFirstProperty$1(t0.prop_6);
                  $.add(theProperty.get$propertyChanging(), new $.Closure260(t0));
                } else {
                  throw t6;
                }
              }
            } else {
              throw $.captureStackTrace($.CTC215);
            }
            break $0;
          } else {
            throw $.captureStackTrace($.CTC215);
          }
        }
      }
    }
  }
 },
 _lib2_getNextElement$1: function(xmlElement) {
  var lowerTagName = $.toLowerCase(xmlElement.get$name());
  if (!($.buckshot().get$_lib2_objectRegistry().containsKey$1(lowerTagName) === true)) {
    throw $.captureStackTrace($.PresentationProviderException$1('Element "' + $.stringToString(lowerTagName) + '" not found in object registry.'));
  }
  var newElement = $.index($.buckshot().get$_lib2_objectRegistry(), lowerTagName).makeMe$0();
  if ($.gtB($.get$length(xmlElement.get$children()), 0) && $.every(xmlElement.get$children(), new $.Closure255()) === true) {
    for (var t0 = $.iterator(xmlElement.get$children()); t0.hasNext$0() === true; ) {
      var t1 = t0.next$0();
      var elementLowerTagName = $.toLowerCase(t1.get$name());
      if ($.buckshot().get$_lib2_objectRegistry().containsKey$1(elementLowerTagName) === true) {
        if ($.contains$1(t1.get$name(), '.') === true) {
          $.print('attached: ' + $.stringToString(elementLowerTagName) + ', value: ' + $.stringToString($.trim(t1.get$text())));
          $.index($.buckshot().get$_lib2_objectRegistry(), elementLowerTagName).$call$2(newElement, $.parseInt($.trim(t1.get$text())));
        } else {
          if (!(newElement.get$isContainer() === true)) {
            throw $.captureStackTrace($.CTC215);
          }
          var cc = $.index(newElement.get$_lib2_stateBag(), 'CONTAINER_CONTEXT');
          var childElement = this._lib2_getNextElement$1(t1);
          if ($.eqNullB(childElement)) {
            continue;
          }
          if (typeof cc === 'object' && (cc.constructor === Array || cc.is$List2())) {
            $.add$1(cc, childElement);
          } else {
            $.setValue(cc, childElement);
          }
        }
      } else {
        var p = newElement.resolveProperty$1(elementLowerTagName);
        if ($.eqNullB(p)) {
          throw $.captureStackTrace($.PresentationProviderException$1('Property node name \'' + $.stringToString(elementLowerTagName) + '\' is not a valid property of \'' + $.stringToString(lowerTagName) + '\'.'));
        }
        if ($.eqB(elementLowerTagName, 'itemstemplate')) {
          if (!$.eqB($.get$length(t1.get$children()), 1)) {
            throw $.captureStackTrace($.CTC215);
          }
          $.setValue(p, $.toString($.index(t1.get$children(), 0)));
        } else {
          var testValue = $.getValue(p);
          if (!$.eqNullB(testValue) && (typeof testValue === 'object' && ((testValue.constructor === Array || testValue.is$List2())))) {
            for (var t2 = $.iterator(t1.get$children()); t2.hasNext$0() === true; ) {
              $.add$1(testValue, this._lib2_getNextElement$1(t2.next$0()));
            }
          } else {
            if ($.startsWith($.trim(t1.get$text()), '{') === true) {
              this._lib2_resolveBinding$2(p, $.trim(t1.get$text()));
            } else {
              if ($.isEmpty(t1.get$children()) === true) {
                $.setValue(p, $.trim(t1.get$text()));
              } else {
                if ($.every(t1.get$children(), new $.Closure256()) === true) {
                  $.setValue(p, $.trim(t1.get$text()));
                } else {
                  var t3 = $.eqB($.get$length(t1.get$children()), 1);
                  var t4 = t3;
                  if (t3) {
                    var t5 = $.index(t1.get$children(), 0);
                    t4 = !((typeof t5 === 'object') && !!t5.is$XmlText);
                  }
                  if (t4) {
                    $.setValue(p, this._lib2_getNextElement$1($.index(t1.get$children(), 0)));
                  }
                }
              }
            }
          }
        }
      }
    }
  } else {
    if (!$.eqB($.trim(xmlElement.get$text()), '')) {
      if (!(newElement.get$isContainer() === true)) {
        throw $.captureStackTrace($.CTC215);
      }
      var cc0 = $.index(newElement.get$_lib2_stateBag(), 'CONTAINER_CONTEXT');
      if (typeof cc0 === 'object' && (cc0.constructor === Array || cc0.is$List2())) {
        throw $.captureStackTrace($.CTC215);
      }
      $.setValue(cc0, $.trim(xmlElement.get$text()));
    }
  }
  this._lib2_assignAttributeProperties$2(newElement, xmlElement);
  if (typeof newElement === 'object' && !!newElement.is$FrameworkResource) {
    newElement.set$rawData($.toString(xmlElement));
    this._lib2_processResource$1(newElement);
    return;
  } else {
    return newElement;
  }
 },
 deserialize$1: function(fileData) {
  return this._lib2_getNextElement$1($.parse(fileData, true));
 },
});

Isolate.$defineClass("Closure59", "Closure330",
function Closure(this_1) {
  this.this_1 = this_1;
}, {
 $call$1: function(aList) {
  if (!$.eqNullB(this.this_1.get$actionsProperty())) {
    throw $.captureStackTrace($.CTC8);
  }
  $.add(aList.get$listChanged(), new $.Closure104(this.this_1));
 },
});

Isolate.$defineClass("Closure55", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$0: function() {
  return $._lib5_ElementRectImpl$1(this.this_0);
 },
});

Isolate.$defineClass("AttachedPropertyChangedEventArgs", "EventArgs",
function AttachedPropertyChangedEventArgs(value, element, property, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this.value = value;
  this.element = element;
  this.property = property;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$value: function() { return this.value; },
 get$element: function() { return this.element; },
 get$property: function() { return this.property; },
});

Isolate.$defineClass("Closure70", "Closure330",
function Closure(this_23) {
  this.this_23 = this_23;
}, {
 $call$1: function(value) {
  $.setXPCSS(this.this_23.get$_lib2_component(), 'transform-origin', '' + $.stringToString($.getValue(this.this_23.get$transformOriginXProperty())) + '% ' + $.stringToString($.getValue(this.this_23.get$transformOriginYProperty())) + '% ' + $.stringToString($.getValue(this.this_23.get$transformOriginZProperty())) + 'px');
 },
});

Isolate.$defineClass("Closure134", "Closure330",
function Closure() {
}, {
 $call$1: function(v) {
 },
});

Isolate.$defineClass("EmptyQueueException", "Object",
function EmptyQueueException() {
}, {
 toString$0: function() {
  return 'EmptyQueueException';
 },
 is$Exception: true,
});

Isolate.$defineClass("XmlAttribute", "XmlNode",
function XmlAttribute(value, name, XmlNode_parent, XmlNode_type) {
  this.value = value;
  this.name = name;
  this.parent = XmlNode_parent;
  this.type = XmlNode_type;
}, {
 toString$0: function() {
  if ($.contains$1(this.get$value(), '"') === true) {
    var t0 = ' ' + $.stringToString(this.get$name()) + '=\'' + $.stringToString(this.get$value()) + '\'';
  } else {
    t0 = ' ' + $.stringToString(this.get$name()) + '="' + $.stringToString(this.get$value()) + '"';
  }
  return t0;
 },
 get$value: function() { return this.value; },
 get$name: function() { return this.name; },
 is$XmlAttribute: true,
});

Isolate.$defineClass("IllegalJSRegExpException", "Object",
function IllegalJSRegExpException(_lib4_errmsg, _lib4_pattern) {
  this._lib4_errmsg = _lib4_errmsg;
  this._lib4_pattern = _lib4_pattern;
}, {
 get$_lib4_errmsg: function() { return this._lib4_errmsg; },
 get$_lib4_pattern: function() { return this._lib4_pattern; },
 toString$0: function() {
  return 'IllegalJSRegExpException: \'' + $.stringToString(this.get$_lib4_pattern()) + '\' \'' + $.stringToString(this.get$_lib4_errmsg()) + '\'';
 },
 is$Exception: true,
});

Isolate.$defineClass("Closure196", "Closure330",
function Closure() {
}, {
 $call$1: function(item) {
  item.set$parent((void 0));
 },
});

Isolate.$defineClass("Closure158", "Closure330",
function Closure() {
}, {
 $call$2: function(e, v) {
  e.set$margin($.Thickness$specified$4(v, 0, 0, $.getLeft(e)));
 },
});

Isolate.$defineClass("XmlNode", "Object",
function XmlNode() {
}, {
 toString$0: function() {
  var s = $.StringBufferImpl$1('');
  $._stringifyInternal(s, this, 0);
  return s.toString$0();
 },
 remove$0: function() {
  if ($.eqNullB(this.get$parent())) {
    return;
  }
  var i = $.indexOf$1(this.get$parent().get$_lib7_children(), this);
  if ($.eqB(i, -1)) {
    throw $.captureStackTrace($.CTC221);
  }
  this.get$parent().get$_lib7_children()._lib7_removeRange$2(i, 1);
 },
 set$parent: function(v) { this.parent = v; },
 get$parent: function() { return this.parent; },
 get$type: function() { return this.type; },
});

Isolate.$defineClass("Closure237", "Closure330",
function Closure(this_2) {
  this.this_2 = this_2;
}, {
 $call$1: function(value) {
  $.indexSet(this.this_2.get$_lib2_component().get$attributes(), 'href', $.toString(value));
 },
});

Isolate.$defineClass("Closure48", "Closure330",
function Closure(this_39, box_2) {
  this.this_39 = this_39;
  this.box_2 = box_2;
}, {
 $call$1: function(e) {
  var t0 = ({});
  t0.e_1 = e;
  if (!(this.this_39.get$mouseLeave().get$hasHandlers() === true)) {
    return;
  }
  t0.e_1.stopPropagation$0();
  this.this_39.get$_lib2_component().get$rect().then$1(new $.Closure54(this.this_39, t0, this.box_2));
 },
});

Isolate.$defineClass("VarResource", "FrameworkResource",
function VarResource(valueProperty, FrameworkResource_rawData, FrameworkResource_keyProperty, FrameworkObject_mostRecentMeasurement, FrameworkObject__lib2_dataContextUpdated, FrameworkObject_nameProperty, FrameworkObject_attachedPropertyChanged, FrameworkObject_measurementChanged, FrameworkObject_unloaded, FrameworkObject_loaded, FrameworkObject_lateBindings, FrameworkObject_dataContextProperty, FrameworkObject__lib2_isLoaded, FrameworkObject__lib2_parent, FrameworkObject__lib2_component, FrameworkObject__lib2_previousMeasurement, FrameworkObject__lib2_animationFrameID, FrameworkObject__lib2_watchingMeasurement, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this.valueProperty = valueProperty;
  this.rawData = FrameworkResource_rawData;
  this.keyProperty = FrameworkResource_keyProperty;
  this.mostRecentMeasurement = FrameworkObject_mostRecentMeasurement;
  this._lib2_dataContextUpdated = FrameworkObject__lib2_dataContextUpdated;
  this.nameProperty = FrameworkObject_nameProperty;
  this.attachedPropertyChanged = FrameworkObject_attachedPropertyChanged;
  this.measurementChanged = FrameworkObject_measurementChanged;
  this.unloaded = FrameworkObject_unloaded;
  this.loaded = FrameworkObject_loaded;
  this.lateBindings = FrameworkObject_lateBindings;
  this.dataContextProperty = FrameworkObject_dataContextProperty;
  this._lib2_isLoaded = FrameworkObject__lib2_isLoaded;
  this._lib2_parent = FrameworkObject__lib2_parent;
  this._lib2_component = FrameworkObject__lib2_component;
  this._lib2_previousMeasurement = FrameworkObject__lib2_previousMeasurement;
  this._lib2_animationFrameID = FrameworkObject__lib2_animationFrameID;
  this._lib2_watchingMeasurement = FrameworkObject__lib2_watchingMeasurement;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$type: function() {
  return 'Var';
 },
 set$value: function(c) {
  return $.setValue(this.get$valueProperty(), c);
 },
 get$value: function() {
  return $.getValue(this.get$valueProperty());
 },
 _lib2_initVarProperties$0: function() {
  this.set$valueProperty($.FrameworkProperty$5(this, 'value', new $.Closure306(), (void 0), (void 0)));
 },
 makeMe$0: function() {
  return $.VarResource$0();
 },
 set$valueProperty: function(v) { this.valueProperty = v; },
 get$valueProperty: function() { return this.valueProperty; },
 VarResource$0: function() {
  this._lib2_initVarProperties$0();
  $.indexSet(this.get$_lib2_stateBag(), 'RESOURCE_PROPERTY', this.get$valueProperty());
  $.indexSet(this.get$_lib2_stateBag(), 'CONTAINER_CONTEXT', this.get$valueProperty());
 },
});

Isolate.$defineClass("Closure230", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$1: function(v) {
  $.indexSet(this.this_0.get$_lib2_component().get$attributes(), 'value', v);
 },
});

Isolate.$defineClass("Closure304", "Closure330",
function Closure() {
}, {
 $call$1: function(v) {
 },
});

Isolate.$defineClass("_DefaultConverter", "Object",
function _DefaultConverter() {
}, {
 convert$2: function(value, parameter) {
  return value;
 },
 convert$1: function(value) {
  return this.convert$2(value,(void 0))
},
 is$IValueConverter: true,
});

Isolate.$defineClass("Closure298", "Closure330",
function Closure() {
}, {
 $call$1: function(v) {
 },
});

Isolate.$defineClass("DoubleLinkedQueueEntry", "Object",
function DoubleLinkedQueueEntry(_lib3_element, _lib3_next, _lib3_previous) {
  this._lib3_element = _lib3_element;
  this._lib3_next = _lib3_next;
  this._lib3_previous = _lib3_previous;
}, {
 get$element: function() {
  return this.get$_lib3_element();
 },
 previousEntry$0: function() {
  return this.get$_lib3_previous()._lib3_asNonSentinelEntry$0();
 },
 _lib3_asNonSentinelEntry$0: function() {
  return this;
 },
 remove$0: function() {
  var t0 = this.get$_lib3_next();
  this.get$_lib3_previous().set$_lib3_next(t0);
  var t1 = this.get$_lib3_previous();
  this.get$_lib3_next().set$_lib3_previous(t1);
  this.set$_lib3_next((void 0));
  this.set$_lib3_previous((void 0));
  return this.get$_lib3_element();
 },
 prepend$1: function(e) {
  var t0 = $.DoubleLinkedQueueEntry$1(e);
  $.setRuntimeTypeInfo(t0, ({E: 'E'}));
  t0._lib3_link$2(this.get$_lib3_previous(), this);
 },
 append$1: function(e) {
  var t0 = $.DoubleLinkedQueueEntry$1(e);
  $.setRuntimeTypeInfo(t0, ({E: 'E'}));
  t0._lib3_link$2(this, this.get$_lib3_next());
 },
 _lib3_link$2: function(p, n) {
  this.set$_lib3_next(n);
  this.set$_lib3_previous(p);
  p.set$_lib3_next(this);
  n.set$_lib3_previous(this);
 },
 set$_lib3_element: function(v) { this._lib3_element = v; },
 get$_lib3_element: function() { return this._lib3_element; },
 set$_lib3_next: function(v) { this._lib3_next = v; },
 get$_lib3_next: function() { return this._lib3_next; },
 set$_lib3_previous: function(v) { this._lib3_previous = v; },
 get$_lib3_previous: function() { return this._lib3_previous; },
 DoubleLinkedQueueEntry$1: function(e) {
  this.set$_lib3_element(e);
 },
});

Isolate.$defineClass("Closure326", "Closure330",
function Closure() {
}, {
 $call$1: function(value) {
 },
});

Isolate.$defineClass("Image", "FrameworkElement",
function Image(altProperty, sourceUriProperty, FrameworkElement_mouseUp, FrameworkElement_mouseDown, FrameworkElement_mouseMove, FrameworkElement_click, FrameworkElement_mouseLeave, FrameworkElement_mouseEnter, FrameworkElement_lostFocus, FrameworkElement_gotFocus, FrameworkElement_actionsProperty, FrameworkElement_perspectiveProperty, FrameworkElement_transformOriginZProperty, FrameworkElement_transformOriginYProperty, FrameworkElement_transformOriginXProperty, FrameworkElement_rotateZProperty, FrameworkElement_rotateYProperty, FrameworkElement_rotateXProperty, FrameworkElement_scaleZProperty, FrameworkElement_scaleYProperty, FrameworkElement_scaleXProperty, FrameworkElement_translateZProperty, FrameworkElement_translateYProperty, FrameworkElement_translateXProperty, FrameworkElement_styleProperty, FrameworkElement_visibilityProperty, FrameworkElement_opacityProperty, FrameworkElement_actualHeightProperty, FrameworkElement_actualWidthProperty, FrameworkElement_zOrderProperty, FrameworkElement_verticalAlignmentProperty, FrameworkElement_horizontalAlignmentProperty, FrameworkElement_tagProperty, FrameworkElement_cursorProperty, FrameworkElement_minHeightProperty, FrameworkElement_maxHeightProperty, FrameworkElement_minWidthProperty, FrameworkElement_maxWidthProperty, FrameworkElement_htmlIDProperty, FrameworkElement_heightProperty, FrameworkElement_widthProperty, FrameworkElement_marginProperty, FrameworkElement__lib2_transitionProperties, FrameworkElement__lib2_templateBindings, FrameworkElement__lib2_style, FrameworkElement__lib2_containerParent, FrameworkObject_mostRecentMeasurement, FrameworkObject__lib2_dataContextUpdated, FrameworkObject_nameProperty, FrameworkObject_attachedPropertyChanged, FrameworkObject_measurementChanged, FrameworkObject_unloaded, FrameworkObject_loaded, FrameworkObject_lateBindings, FrameworkObject_dataContextProperty, FrameworkObject__lib2_isLoaded, FrameworkObject__lib2_parent, FrameworkObject__lib2_component, FrameworkObject__lib2_previousMeasurement, FrameworkObject__lib2_animationFrameID, FrameworkObject__lib2_watchingMeasurement, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this.altProperty = altProperty;
  this.sourceUriProperty = sourceUriProperty;
  this.mouseUp = FrameworkElement_mouseUp;
  this.mouseDown = FrameworkElement_mouseDown;
  this.mouseMove = FrameworkElement_mouseMove;
  this.click = FrameworkElement_click;
  this.mouseLeave = FrameworkElement_mouseLeave;
  this.mouseEnter = FrameworkElement_mouseEnter;
  this.lostFocus = FrameworkElement_lostFocus;
  this.gotFocus = FrameworkElement_gotFocus;
  this.actionsProperty = FrameworkElement_actionsProperty;
  this.perspectiveProperty = FrameworkElement_perspectiveProperty;
  this.transformOriginZProperty = FrameworkElement_transformOriginZProperty;
  this.transformOriginYProperty = FrameworkElement_transformOriginYProperty;
  this.transformOriginXProperty = FrameworkElement_transformOriginXProperty;
  this.rotateZProperty = FrameworkElement_rotateZProperty;
  this.rotateYProperty = FrameworkElement_rotateYProperty;
  this.rotateXProperty = FrameworkElement_rotateXProperty;
  this.scaleZProperty = FrameworkElement_scaleZProperty;
  this.scaleYProperty = FrameworkElement_scaleYProperty;
  this.scaleXProperty = FrameworkElement_scaleXProperty;
  this.translateZProperty = FrameworkElement_translateZProperty;
  this.translateYProperty = FrameworkElement_translateYProperty;
  this.translateXProperty = FrameworkElement_translateXProperty;
  this.styleProperty = FrameworkElement_styleProperty;
  this.visibilityProperty = FrameworkElement_visibilityProperty;
  this.opacityProperty = FrameworkElement_opacityProperty;
  this.actualHeightProperty = FrameworkElement_actualHeightProperty;
  this.actualWidthProperty = FrameworkElement_actualWidthProperty;
  this.zOrderProperty = FrameworkElement_zOrderProperty;
  this.verticalAlignmentProperty = FrameworkElement_verticalAlignmentProperty;
  this.horizontalAlignmentProperty = FrameworkElement_horizontalAlignmentProperty;
  this.tagProperty = FrameworkElement_tagProperty;
  this.cursorProperty = FrameworkElement_cursorProperty;
  this.minHeightProperty = FrameworkElement_minHeightProperty;
  this.maxHeightProperty = FrameworkElement_maxHeightProperty;
  this.minWidthProperty = FrameworkElement_minWidthProperty;
  this.maxWidthProperty = FrameworkElement_maxWidthProperty;
  this.htmlIDProperty = FrameworkElement_htmlIDProperty;
  this.heightProperty = FrameworkElement_heightProperty;
  this.widthProperty = FrameworkElement_widthProperty;
  this.marginProperty = FrameworkElement_marginProperty;
  this._lib2_transitionProperties = FrameworkElement__lib2_transitionProperties;
  this._lib2_templateBindings = FrameworkElement__lib2_templateBindings;
  this._lib2_style = FrameworkElement__lib2_style;
  this._lib2_containerParent = FrameworkElement__lib2_containerParent;
  this.mostRecentMeasurement = FrameworkObject_mostRecentMeasurement;
  this._lib2_dataContextUpdated = FrameworkObject__lib2_dataContextUpdated;
  this.nameProperty = FrameworkObject_nameProperty;
  this.attachedPropertyChanged = FrameworkObject_attachedPropertyChanged;
  this.measurementChanged = FrameworkObject_measurementChanged;
  this.unloaded = FrameworkObject_unloaded;
  this.loaded = FrameworkObject_loaded;
  this.lateBindings = FrameworkObject_lateBindings;
  this.dataContextProperty = FrameworkObject_dataContextProperty;
  this._lib2_isLoaded = FrameworkObject__lib2_isLoaded;
  this._lib2_parent = FrameworkObject__lib2_parent;
  this._lib2_component = FrameworkObject__lib2_component;
  this._lib2_previousMeasurement = FrameworkObject__lib2_previousMeasurement;
  this._lib2_animationFrameID = FrameworkObject__lib2_animationFrameID;
  this._lib2_watchingMeasurement = FrameworkObject__lib2_watchingMeasurement;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$type: function() {
  return 'Image';
 },
 CreateElement$0: function() {
  this.set$_lib2_component($.createByTag('img'));
 },
 _lib2_initializeImageProperties$0: function() {
  this.set$sourceUriProperty($.FrameworkProperty$5(this, 'sourceUri', new $.Closure241(this), (void 0), (void 0)));
  this.set$altProperty($.FrameworkProperty$5(this, 'alt', new $.Closure242(this), 'undefined', (void 0)));
 },
 makeMe$0: function() {
  return $.Image$0();
 },
 set$altProperty: function(v) { this.altProperty = v; },
 set$sourceUriProperty: function(v) { this.sourceUriProperty = v; },
 Image$0: function() {
  $.appendBuckshotClass(this.get$_lib2_component(), 'image');
  this._lib2_initializeImageProperties$0();
 },
});

Isolate.$defineClass("NotImplementedException", "Object",
function NotImplementedException() {
}, {
 toString$0: function() {
  return 'NotImplementedException';
 },
 is$Exception: true,
});

Isolate.$defineClass("NullPointerException", "Object",
function NullPointerException(arguments, functionName) {
  this.arguments = arguments;
  this.functionName = functionName;
}, {
 get$arguments: function() { return this.arguments; },
 get$functionName: function() { return this.functionName; },
 get$exceptionName: function() {
  return 'NullPointerException';
 },
 toString$0: function() {
  if ($.eqNullB(this.get$functionName())) {
    return this.get$exceptionName();
  } else {
    return '' + $.stringToString(this.get$exceptionName()) + ' : method: \'' + $.stringToString(this.get$functionName()) + '\'\nReceiver: null\nArguments: ' + $.stringToString(this.get$arguments());
  }
 },
 is$Exception: true,
});

Isolate.$defineClass("Closure88", "Closure330",
function Closure(this_39) {
  this.this_39 = this_39;
}, {
 $call$1: function(value) {
  this.this_39.get$updateMeasurementAsync().then$1(new $.Closure97(this.this_39));
 },
});

Isolate.$defineClass("RowDefinition", "GridLayoutDefinition",
function RowDefinition(heightProperty, _lib2_rowDefinitionChanged, GridLayoutDefinition_minLength, GridLayoutDefinition_maxLength, GridLayoutDefinition__lib2_adjustedOffset, GridLayoutDefinition__lib2_value, GridLayoutDefinition__lib2_htmlNode, GridLayoutDefinition__lib2_adjustedLengthInternal, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this.heightProperty = heightProperty;
  this._lib2_rowDefinitionChanged = _lib2_rowDefinitionChanged;
  this.minLength = GridLayoutDefinition_minLength;
  this.maxLength = GridLayoutDefinition_maxLength;
  this._lib2_adjustedOffset = GridLayoutDefinition__lib2_adjustedOffset;
  this._lib2_value = GridLayoutDefinition__lib2_value;
  this._lib2_htmlNode = GridLayoutDefinition__lib2_htmlNode;
  this._lib2_adjustedLengthInternal = GridLayoutDefinition__lib2_adjustedLengthInternal;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$type: function() {
  return 'RowDefinition';
 },
 get$height: function() {
  return $.getValue(this.get$heightProperty());
 },
 set$height: function(v) {
  return $.setValue(this.get$heightProperty(), v);
 },
 _lib2_initRowDefinitionProperties$0: function() {
  this.set$heightProperty($.FrameworkProperty$5(this, 'height', new $.Closure248(this), $.GridLength$0(), $.CTC214));
 },
 makeMe$0: function() {
  return $.RowDefinition$0();
 },
 set$heightProperty: function(v) { this.heightProperty = v; },
 get$heightProperty: function() { return this.heightProperty; },
 get$_lib2_rowDefinitionChanged: function() { return this._lib2_rowDefinitionChanged; },
 RowDefinition$0: function() {
  this._lib2_initRowDefinitionProperties$0();
 },
});

Isolate.$defineClass("Closure171", "Closure330",
function Closure() {
}, {
 $call$2: function(a, b) {
  if ($.ltB(a.get$time(), b.get$time())) {
    return -1;
  }
  if ($.gtB(a.get$time(), b.get$time())) {
    return 1;
  }
  return 0;
 },
});

Isolate.$defineClass("JSSyntaxRegExp", "Object",
function JSSyntaxRegExp(ignoreCase, multiLine, pattern) {
  this.ignoreCase = ignoreCase;
  this.multiLine = multiLine;
  this.pattern = pattern;
}, {
 allMatches$1: function(str) {
  $.checkString(str);
  return $._lib3_AllMatchesIterable$2(this, str);
 },
 hasMatch$1: function(str) {
  return $.regExpTest(this, $.checkString(str));
 },
 firstMatch$1: function(str) {
  var m = $.regExpExec(this, $.checkString(str));
  if (m === (void 0)) {
    return;
  }
  var matchStart = $.regExpMatchStart(m);
  var matchEnd = $.add(matchStart, $.get$length($.index(m, 0)));
  return $.MatchImplementation$5(this.get$pattern(), str, matchStart, matchEnd, m);
 },
 get$ignoreCase: function() { return this.ignoreCase; },
 get$multiLine: function() { return this.multiLine; },
 get$pattern: function() { return this.pattern; },
 JSSyntaxRegExp$_globalVersionOf$1: function(other) {
  $.regExpAttachGlobalNative(this);
 },
 is$JSSyntaxRegExp: true,
});

Isolate.$defineClass("Color", "FrameworkResource",
function Color(valueProperty, FrameworkResource_rawData, FrameworkResource_keyProperty, FrameworkObject_mostRecentMeasurement, FrameworkObject__lib2_dataContextUpdated, FrameworkObject_nameProperty, FrameworkObject_attachedPropertyChanged, FrameworkObject_measurementChanged, FrameworkObject_unloaded, FrameworkObject_loaded, FrameworkObject_lateBindings, FrameworkObject_dataContextProperty, FrameworkObject__lib2_isLoaded, FrameworkObject__lib2_parent, FrameworkObject__lib2_component, FrameworkObject__lib2_previousMeasurement, FrameworkObject__lib2_animationFrameID, FrameworkObject__lib2_watchingMeasurement, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this.valueProperty = valueProperty;
  this.rawData = FrameworkResource_rawData;
  this.keyProperty = FrameworkResource_keyProperty;
  this.mostRecentMeasurement = FrameworkObject_mostRecentMeasurement;
  this._lib2_dataContextUpdated = FrameworkObject__lib2_dataContextUpdated;
  this.nameProperty = FrameworkObject_nameProperty;
  this.attachedPropertyChanged = FrameworkObject_attachedPropertyChanged;
  this.measurementChanged = FrameworkObject_measurementChanged;
  this.unloaded = FrameworkObject_unloaded;
  this.loaded = FrameworkObject_loaded;
  this.lateBindings = FrameworkObject_lateBindings;
  this.dataContextProperty = FrameworkObject_dataContextProperty;
  this._lib2_isLoaded = FrameworkObject__lib2_isLoaded;
  this._lib2_parent = FrameworkObject__lib2_parent;
  this._lib2_component = FrameworkObject__lib2_component;
  this._lib2_previousMeasurement = FrameworkObject__lib2_previousMeasurement;
  this._lib2_animationFrameID = FrameworkObject__lib2_animationFrameID;
  this._lib2_watchingMeasurement = FrameworkObject__lib2_watchingMeasurement;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$type: function() {
  return 'Color';
 },
 toString$0: function() {
  return this.get$value();
 },
 _lib2_initColorProperties$0: function() {
  this.set$valueProperty($.FrameworkProperty$5(this, 'value', new $.Closure13(), $.CTC9.toString$0(), (void 0)));
 },
 set$value: function(c) {
  return $.setValue(this.get$valueProperty(), c);
 },
 get$value: function() {
  return $.getValue(this.get$valueProperty());
 },
 makeMe$0: function() {
  return $.Color$0();
 },
 set$valueProperty: function(v) { this.valueProperty = v; },
 get$valueProperty: function() { return this.valueProperty; },
 Color$0: function() {
  this._lib2_initColorProperties$0();
  $.indexSet(this.get$_lib2_stateBag(), 'RESOURCE_PROPERTY', this.get$valueProperty());
 },
 Color$hex$1: function(hex) {
  this._lib2_initColorProperties$0();
  this.set$value(hex);
 },
 Color$predefined$1: function(predefinedColor) {
  this._lib2_initColorProperties$0();
  this.set$value($.toString(predefinedColor));
 },
});

Isolate.$defineClass("Closure269", "Closure330",
function Closure(box_0) {
  this.box_0 = box_0;
}, {
 $call$1: function(ns) {
  return $.eq(ns.get$name(), this.box_0.namespace_1);
 },
});

Isolate.$defineClass("Closure297", "Closure330",
function Closure() {
}, {
 $call$1: function(r) {
  var t0 = typeof r === 'object' && !!r.is$FrameworkResource;
  var t1 = !t0;
  if (t0) {
    t1 = !!r.is$ResourceCollection;
  }
  if (t1) {
    throw $.captureStackTrace($.CTC8);
  }
 },
});

Isolate.$defineClass("Closure108", "Closure330",
function Closure() {
}, {
 $call$1: function(v) {
 },
});

Isolate.$defineClass("LinearGradientDirection", "Object",
function LinearGradientDirection(_lib2_str) {
  this._lib2_str = _lib2_str;
}, {
 toString$0: function() {
  return this.get$_lib2_str();
 },
 get$_lib2_str: function() { return this._lib2_str; },
});

Isolate.$defineClass("StringToNumericConverter", "Object",
function StringToNumericConverter() {
}, {
 convert$2: function(value, parameter) {
  var t0 = value;
  var t1 = typeof t0 === 'string';
  var t2 = !t1;
  if (t1) {
    t2 = $.eqB(value, 'auto');
  }
  if (t2) {
    return value;
  }
  try {
    return $.parseDouble(value);
  }catch (t3) {
    var t4 = $.unwrapException(t3);
    if (t4 === (void 0) || typeof t4 === 'object' && !!t4.is$Exception) {
      return value;
    } else {
      throw t3;
    }
  }
 },
 convert$1: function(value) {
  return this.convert$2(value,(void 0))
},
 is$IValueConverter: true,
});

Isolate.$defineClass("HorizontalAlignment", "Object",
function HorizontalAlignment(_lib2_str) {
  this._lib2_str = _lib2_str;
}, {
 toString$0: function() {
  return this.asString$0();
 },
 asString$0: function() {
  return this.get$_lib2_str();
 },
 get$_lib2_str: function() { return this._lib2_str; },
});

Isolate.$defineClass("FrameworkPropertyResolutionException", "Object",
function FrameworkPropertyResolutionException(message) {
  this.message = message;
}, {
 get$message: function() { return this.message; },
 is$Exception: true,
});

Isolate.$defineClass("StringToThicknessConverter", "Object",
function StringToThicknessConverter() {
}, {
 convert$2: function(value, parameter) {
  if (!(typeof value === 'string')) {
    return value;
  }
  var svl = $.split(value, ',');
  $0:{
    var t0 = $.get$length(svl);
    if (1 === t0) {
      return $.Thickness$1($.parseInt($.trim($.index(svl, 0))));
    } else {
      if (2 === t0) {
        return $.Thickness$widthheight$2($.parseInt($.trim($.index(svl, 0))), $.parseInt($.trim($.index(svl, 1))));
      } else {
        if (4 === t0) {
          return $.Thickness$specified$4($.parseInt($.trim($.index(svl, 0))), $.parseInt($.trim($.index(svl, 1))), $.parseInt($.trim($.index(svl, 2))), $.parseInt($.trim($.index(svl, 3))));
        } else {
          throw $.captureStackTrace($.CTC8);
        }
      }
    }
  }
 },
 convert$1: function(value) {
  return this.convert$2(value,(void 0))
},
 is$IValueConverter: true,
});

Isolate.$defineClass("XmlCollection", "Object",
function XmlCollection(_lib7_collection) {
  this._lib7_collection = _lib7_collection;
}, {
 toString$0: function() {
  return $.toString(this.get$_lib7_collection());
 },
 _lib7_queryNameInternal$3: function(tagName, list, element) {
  var t0 = ({});
  t0.tagName_1 = tagName;
  t0.list_2 = list;
  if ($.eqB(element.get$name(), t0.tagName_1)) {
    t0.list_2._lib7_add$1(element);
    return;
  } else {
    if (element.get$hasChildren() === true) {
      $.forEach($.filter(element.get$children(), new $.Closure284()), new $.Closure285(t0));
    }
  }
 },
 _lib7_queryNodeTypeInternal$3: function(nodeType, list, node) {
  var t0 = ({});
  t0.nodeType_1 = nodeType;
  t0.list_2 = list;
  if ($.eqB(node.get$type(), t0.nodeType_1)) {
    t0.list_2._lib7_add$1(node);
    return;
  } else {
    if (typeof node === 'object' && !!node.is$XmlElement && $.get$dynamic(node).get$hasChildren() === true) {
      $.forEach($.get$dynamic(node).get$children(), new $.Closure282(t0));
    }
  }
 },
 _lib7_queryAttributeInternal$3: function(aMap, list, n) {
  var t0 = ({});
  t0.list_4 = list;
  t0.n_5 = n;
  t0.aMap_3 = aMap;
  if (new $.Closure274(t0).$call$0() === true) {
    t0.list_4._lib7_add$1(t0.n_5);
    return;
  } else {
    if (t0.n_5.get$hasChildren() === true) {
      $.forEach($.filter(t0.n_5.get$children(), new $.Closure275()), new $.Closure276(t0));
    }
  }
 },
 query$1: function(queryOn) {
  var list = $.XmlCollection$_internal$0();
  if (typeof queryOn === 'string') {
    for (var t0 = this.iterator$0(); t0.hasNext$0() === true; ) {
      var t1 = t0.next$0();
      if (!((typeof t1 === 'object') && !!t1.is$XmlElement)) {
        continue;
      }
      this._lib7_queryNameInternal$3(queryOn, list, t1);
      if (!(list.isEmpty$0() === true)) {
        break;
      }
    }
  } else {
    if (typeof queryOn === 'object' && !!queryOn.is$XmlNodeType) {
      for (var t2 = this.iterator$0(); t2.hasNext$0() === true; ) {
        this._lib7_queryNodeTypeInternal$3(queryOn, list, t2.next$0());
        if (!(list.isEmpty$0() === true)) {
          break;
        }
      }
    } else {
      if (typeof queryOn === 'object' && queryOn.is$Map()) {
        for (var t3 = this.iterator$0(); t3.hasNext$0() === true; ) {
          var t4 = t3.next$0();
          if (!((typeof t4 === 'object') && !!t4.is$XmlElement)) {
            continue;
          }
          this._lib7_queryAttributeInternal$3(queryOn, list, t4);
          if (!(list.isEmpty$0() === true)) {
            break;
          }
        }
      }
    }
  }
  return list;
 },
 iterator$0: function() {
  return $.iterator(this.get$_lib7_collection());
 },
 get$length: function() {
  return $.get$length(this.get$_lib7_collection());
 },
 isEmpty$0: function() {
  return $.isEmpty(this.get$_lib7_collection());
 },
 some$1: function(f) {
  return $.some(this.get$_lib7_collection(), f);
 },
 every$1: function(f) {
  return $.every(this.get$_lib7_collection(), f);
 },
 filter$1: function(f) {
  return $.XmlCollection$_from$1($.filter(this.get$_lib7_collection(), f));
 },
 forEach$1: function(f) {
  return $.forEach(this.get$_lib7_collection(), f);
 },
 _lib7_removeRange$2: function(start, length$) {
  return $.removeRange(this.get$_lib7_collection(), start, length$);
 },
 _lib7_add$1: function(element) {
  return $.add$1(this.get$_lib7_collection(), element);
 },
 operator$index$1: function(index) {
  return $.index(this.get$_lib7_collection(), index);
 },
 indexOf$1: function(element) {
  return $.indexOf$1(this.get$_lib7_collection(), element);
 },
 last$0: function() {
  return $.last(this.get$_lib7_collection());
 },
 get$_lib7_collection: function() { return this._lib7_collection; },
 XmlCollection$_from$1: function(list) {
  $.addAll(this.get$_lib7_collection(), list);
 },
 is$Collection: function() { return true; },
});

Isolate.$defineClass("Closure309", "Closure330",
function Closure(this_2, box_0) {
  this.this_2 = this_2;
  this.box_0 = box_0;
}, {
 $call$1: function(stop$) {
  var colorString = $.add(this.box_0.colorString_1, $.toString(stop$.get$color()));
  this.box_0.colorString_1 = colorString;
  if (!$.eqB(stop$.get$percent(), -1)) {
    var colorString0 = $.add(this.box_0.colorString_1, ' ' + $.stringToString(stop$.get$percent()) + '%');
    this.box_0.colorString_1 = colorString0;
  }
  if (!$.eqB(stop$, $.last(this.this_2.get$stops()))) {
    var colorString1 = $.add(this.box_0.colorString_1, ', ');
    this.box_0.colorString_1 = colorString1;
  }
 },
});

Isolate.$defineClass("Closure119", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$1: function(v) {
  if ($.eqNullB(this.this_0.get$_lib2_border())) {
    return;
  }
  this.this_0.get$_lib2_border().set$borderColor(v);
 },
});

Isolate.$defineClass("Closure271", "Closure330",
function Closure(box_0) {
  this.box_0 = box_0;
}, {
 $call$1: function(element) {
  var counter = $.add(this.box_0.counter_1, 1);
  this.box_0.counter_1 = counter;
 },
});

Isolate.$defineClass("Closure254", "Closure330",
function Closure(this_2) {
  this.this_2 = this_2;
}, {
 $call$1: function(iterationObject) {
  var it = this.this_2.get$_lib2_pfp().deserialize$1(this.this_2.get$itemsTemplate());
  $.indexSet(it.get$_lib2_stateBag(), '__CollectionPresenterData__', iterationObject);
  it.set$dataContext(iterationObject);
  this.this_2.get$itemCreated().invoke$2(this.this_2, $.ItemCreatedEventArgs$1(it));
  $.add$1(this.this_2.get$presentationPanel().get$children(), it);
 },
});

Isolate.$defineClass("Closure69", "Closure330",
function Closure(this_22, doTransform_21) {
  this.this_22 = this_22;
  this.doTransform_21 = doTransform_21;
}, {
 $call$1: function(value) {
  this.doTransform_21.$call$1(this.this_22);
 },
});

Isolate.$defineClass("Closure123", "Closure330",
function Closure(this_3) {
  this.this_3 = this_3;
}, {
 $call$1: function(value) {
  if ($.eqNullB(this.this_3.get$_lib2_presenter())) {
    return;
  }
  this.this_3.get$_lib2_presenter().set$itemsTemplate(value);
 },
});

Isolate.$defineClass("Closure329", "Closure330",
function Closure() {
}, {
 $call$1: function(_) {
 },
});

Isolate.$defineClass("TextArea", "Control",
function TextArea(textChanged, spellcheckProperty, placeholderProperty, textProperty, Control__lib2_templateBindingsApplied, Control__lib2_templateApplied, Control__lib2_visualTemplateApplied, Control_template, Control_isEnabledProperty, FrameworkElement_mouseUp, FrameworkElement_mouseDown, FrameworkElement_mouseMove, FrameworkElement_click, FrameworkElement_mouseLeave, FrameworkElement_mouseEnter, FrameworkElement_lostFocus, FrameworkElement_gotFocus, FrameworkElement_actionsProperty, FrameworkElement_perspectiveProperty, FrameworkElement_transformOriginZProperty, FrameworkElement_transformOriginYProperty, FrameworkElement_transformOriginXProperty, FrameworkElement_rotateZProperty, FrameworkElement_rotateYProperty, FrameworkElement_rotateXProperty, FrameworkElement_scaleZProperty, FrameworkElement_scaleYProperty, FrameworkElement_scaleXProperty, FrameworkElement_translateZProperty, FrameworkElement_translateYProperty, FrameworkElement_translateXProperty, FrameworkElement_styleProperty, FrameworkElement_visibilityProperty, FrameworkElement_opacityProperty, FrameworkElement_actualHeightProperty, FrameworkElement_actualWidthProperty, FrameworkElement_zOrderProperty, FrameworkElement_verticalAlignmentProperty, FrameworkElement_horizontalAlignmentProperty, FrameworkElement_tagProperty, FrameworkElement_cursorProperty, FrameworkElement_minHeightProperty, FrameworkElement_maxHeightProperty, FrameworkElement_minWidthProperty, FrameworkElement_maxWidthProperty, FrameworkElement_htmlIDProperty, FrameworkElement_heightProperty, FrameworkElement_widthProperty, FrameworkElement_marginProperty, FrameworkElement__lib2_transitionProperties, FrameworkElement__lib2_templateBindings, FrameworkElement__lib2_style, FrameworkElement__lib2_containerParent, FrameworkObject_mostRecentMeasurement, FrameworkObject__lib2_dataContextUpdated, FrameworkObject_nameProperty, FrameworkObject_attachedPropertyChanged, FrameworkObject_measurementChanged, FrameworkObject_unloaded, FrameworkObject_loaded, FrameworkObject_lateBindings, FrameworkObject_dataContextProperty, FrameworkObject__lib2_isLoaded, FrameworkObject__lib2_parent, FrameworkObject__lib2_component, FrameworkObject__lib2_previousMeasurement, FrameworkObject__lib2_animationFrameID, FrameworkObject__lib2_watchingMeasurement, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this.textChanged = textChanged;
  this.spellcheckProperty = spellcheckProperty;
  this.placeholderProperty = placeholderProperty;
  this.textProperty = textProperty;
  this._lib2_templateBindingsApplied = Control__lib2_templateBindingsApplied;
  this._lib2_templateApplied = Control__lib2_templateApplied;
  this._lib2_visualTemplateApplied = Control__lib2_visualTemplateApplied;
  this.template = Control_template;
  this.isEnabledProperty = Control_isEnabledProperty;
  this.mouseUp = FrameworkElement_mouseUp;
  this.mouseDown = FrameworkElement_mouseDown;
  this.mouseMove = FrameworkElement_mouseMove;
  this.click = FrameworkElement_click;
  this.mouseLeave = FrameworkElement_mouseLeave;
  this.mouseEnter = FrameworkElement_mouseEnter;
  this.lostFocus = FrameworkElement_lostFocus;
  this.gotFocus = FrameworkElement_gotFocus;
  this.actionsProperty = FrameworkElement_actionsProperty;
  this.perspectiveProperty = FrameworkElement_perspectiveProperty;
  this.transformOriginZProperty = FrameworkElement_transformOriginZProperty;
  this.transformOriginYProperty = FrameworkElement_transformOriginYProperty;
  this.transformOriginXProperty = FrameworkElement_transformOriginXProperty;
  this.rotateZProperty = FrameworkElement_rotateZProperty;
  this.rotateYProperty = FrameworkElement_rotateYProperty;
  this.rotateXProperty = FrameworkElement_rotateXProperty;
  this.scaleZProperty = FrameworkElement_scaleZProperty;
  this.scaleYProperty = FrameworkElement_scaleYProperty;
  this.scaleXProperty = FrameworkElement_scaleXProperty;
  this.translateZProperty = FrameworkElement_translateZProperty;
  this.translateYProperty = FrameworkElement_translateYProperty;
  this.translateXProperty = FrameworkElement_translateXProperty;
  this.styleProperty = FrameworkElement_styleProperty;
  this.visibilityProperty = FrameworkElement_visibilityProperty;
  this.opacityProperty = FrameworkElement_opacityProperty;
  this.actualHeightProperty = FrameworkElement_actualHeightProperty;
  this.actualWidthProperty = FrameworkElement_actualWidthProperty;
  this.zOrderProperty = FrameworkElement_zOrderProperty;
  this.verticalAlignmentProperty = FrameworkElement_verticalAlignmentProperty;
  this.horizontalAlignmentProperty = FrameworkElement_horizontalAlignmentProperty;
  this.tagProperty = FrameworkElement_tagProperty;
  this.cursorProperty = FrameworkElement_cursorProperty;
  this.minHeightProperty = FrameworkElement_minHeightProperty;
  this.maxHeightProperty = FrameworkElement_maxHeightProperty;
  this.minWidthProperty = FrameworkElement_minWidthProperty;
  this.maxWidthProperty = FrameworkElement_maxWidthProperty;
  this.htmlIDProperty = FrameworkElement_htmlIDProperty;
  this.heightProperty = FrameworkElement_heightProperty;
  this.widthProperty = FrameworkElement_widthProperty;
  this.marginProperty = FrameworkElement_marginProperty;
  this._lib2_transitionProperties = FrameworkElement__lib2_transitionProperties;
  this._lib2_templateBindings = FrameworkElement__lib2_templateBindings;
  this._lib2_style = FrameworkElement__lib2_style;
  this._lib2_containerParent = FrameworkElement__lib2_containerParent;
  this.mostRecentMeasurement = FrameworkObject_mostRecentMeasurement;
  this._lib2_dataContextUpdated = FrameworkObject__lib2_dataContextUpdated;
  this.nameProperty = FrameworkObject_nameProperty;
  this.attachedPropertyChanged = FrameworkObject_attachedPropertyChanged;
  this.measurementChanged = FrameworkObject_measurementChanged;
  this.unloaded = FrameworkObject_unloaded;
  this.loaded = FrameworkObject_loaded;
  this.lateBindings = FrameworkObject_lateBindings;
  this.dataContextProperty = FrameworkObject_dataContextProperty;
  this._lib2_isLoaded = FrameworkObject__lib2_isLoaded;
  this._lib2_parent = FrameworkObject__lib2_parent;
  this._lib2_component = FrameworkObject__lib2_component;
  this._lib2_previousMeasurement = FrameworkObject__lib2_previousMeasurement;
  this._lib2_animationFrameID = FrameworkObject__lib2_animationFrameID;
  this._lib2_watchingMeasurement = FrameworkObject__lib2_watchingMeasurement;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$type: function() {
  return 'TextArea';
 },
 CreateElement$0: function() {
  this.set$_lib2_component($.createByTag('textarea'));
 },
 set$text: function(value) {
  return $.setValue(this.get$textProperty(), value);
 },
 get$text: function() {
  return $.getValue(this.get$textProperty());
 },
 _lib2_initEvents$0: function() {
  $.add$1(this.get$_lib2_component().get$on().get$keyUp(), new $.Closure224(this));
  $.add$1(this.get$_lib2_component().get$on().get$change(), new $.Closure225(this));
 },
 _lib2_initProperties$0: function() {
  this.set$placeholderProperty($.FrameworkProperty$5(this, 'placeholder', new $.Closure226(this), (void 0), (void 0)));
  this.set$textProperty($.FrameworkProperty$5(this, 'text', new $.Closure227(this), '', (void 0)));
  this.set$spellcheckProperty($.FrameworkProperty$5(this, 'spellcheck', new $.Closure228(this), (void 0), $.CTC7));
 },
 makeMe$0: function() {
  return $.TextArea$0();
 },
 get$textChanged: function() { return this.textChanged; },
 set$spellcheckProperty: function(v) { this.spellcheckProperty = v; },
 set$placeholderProperty: function(v) { this.placeholderProperty = v; },
 set$textProperty: function(v) { this.textProperty = v; },
 get$textProperty: function() { return this.textProperty; },
 TextArea$0: function() {
  $.appendBuckshotClass(this.get$_lib2_component(), 'textarea');
  this._lib2_initProperties$0();
  $.indexSet(this.get$_lib2_stateBag(), 'CONTAINER_CONTEXT', this.get$textProperty());
  this._lib2_initEvents$0();
 },
});

Isolate.$defineClass("Closure227", "Closure330",
function Closure(this_1) {
  this.this_1 = this_1;
}, {
 $call$1: function(value) {
  $.get$dynamic(this.this_1.get$_lib2_component()).set$value(value);
 },
});

Isolate.$defineClass("ItemCreatedEventArgs", "EventArgs",
function ItemCreatedEventArgs(itemCreated, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this.itemCreated = itemCreated;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$itemCreated: function() { return this.itemCreated; },
});

Isolate.$defineClass("Closure145", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$1: function(v) {
  $.indexSet(this.this_0.get$_lib2_component().get$attributes(), 'min', $.toString(v));
 },
});

Isolate.$defineClass("Closure218", "Closure330",
function Closure(box_3) {
  this.box_3 = box_3;
}, {
 $call$1: function(child) {
  child.set$margin($.Thickness$specified$4(child.get$margin().get$top(), 0, 0, 0));
  var t0 = '' + $.stringToString(this.box_3.gridWidth_4) + 'px';
  child.get$rawElement().get$style().set$width(t0);
 },
});

Isolate.$defineClass("Closure77", "Closure330",
function Closure() {
}, {
 $call$1: function(_) {
 },
});

Isolate.$defineClass("_DOMApplicationCacheEventsImpl", "_EventsImpl",
function _DOMApplicationCacheEventsImpl(_EventsImpl__lib5_ptr) {
  this._lib5_ptr = _EventsImpl__lib5_ptr;
}, {
});

Isolate.$defineClass("StringMatch", "Object",
function StringMatch(pattern, str, _lib6_start) {
  this.pattern = pattern;
  this.str = str;
  this._lib6_start = _lib6_start;
}, {
 get$pattern: function() { return this.pattern; },
 group$1: function(group_) {
  if (!$.eqB(group_, 0)) {
    throw $.captureStackTrace($.IndexOutOfRangeException$1(group_));
  }
  return this.get$pattern();
 },
 operator$index$1: function(g) {
  return this.group$1(g);
 },
});

Isolate.$defineClass("ExceptionImplementation", "Object",
function ExceptionImplementation(_lib3_msg) {
  this._lib3_msg = _lib3_msg;
}, {
 get$_lib3_msg: function() { return this._lib3_msg; },
 toString$0: function() {
  if (this.get$_lib3_msg() === (void 0)) {
    var t0 = 'Exception';
  } else {
    t0 = 'Exception: ' + $.stringToString(this.get$_lib3_msg());
  }
  return t0;
 },
 is$Exception: true,
});

Isolate.$defineClass("Rectangle", "Shape",
function Rectangle(Shape__lib2_shProperty, Shape__lib2_swProperty, Shape_strokeWidthProperty, Shape_strokeProperty, Shape_fillProperty, Shape__lib2_svgWrapper, Shape_shapeElement, FrameworkElement_mouseUp, FrameworkElement_mouseDown, FrameworkElement_mouseMove, FrameworkElement_click, FrameworkElement_mouseLeave, FrameworkElement_mouseEnter, FrameworkElement_lostFocus, FrameworkElement_gotFocus, FrameworkElement_actionsProperty, FrameworkElement_perspectiveProperty, FrameworkElement_transformOriginZProperty, FrameworkElement_transformOriginYProperty, FrameworkElement_transformOriginXProperty, FrameworkElement_rotateZProperty, FrameworkElement_rotateYProperty, FrameworkElement_rotateXProperty, FrameworkElement_scaleZProperty, FrameworkElement_scaleYProperty, FrameworkElement_scaleXProperty, FrameworkElement_translateZProperty, FrameworkElement_translateYProperty, FrameworkElement_translateXProperty, FrameworkElement_styleProperty, FrameworkElement_visibilityProperty, FrameworkElement_opacityProperty, FrameworkElement_actualHeightProperty, FrameworkElement_actualWidthProperty, FrameworkElement_zOrderProperty, FrameworkElement_verticalAlignmentProperty, FrameworkElement_horizontalAlignmentProperty, FrameworkElement_tagProperty, FrameworkElement_cursorProperty, FrameworkElement_minHeightProperty, FrameworkElement_maxHeightProperty, FrameworkElement_minWidthProperty, FrameworkElement_maxWidthProperty, FrameworkElement_htmlIDProperty, FrameworkElement_heightProperty, FrameworkElement_widthProperty, FrameworkElement_marginProperty, FrameworkElement__lib2_transitionProperties, FrameworkElement__lib2_templateBindings, FrameworkElement__lib2_style, FrameworkElement__lib2_containerParent, FrameworkObject_mostRecentMeasurement, FrameworkObject__lib2_dataContextUpdated, FrameworkObject_nameProperty, FrameworkObject_attachedPropertyChanged, FrameworkObject_measurementChanged, FrameworkObject_unloaded, FrameworkObject_loaded, FrameworkObject_lateBindings, FrameworkObject_dataContextProperty, FrameworkObject__lib2_isLoaded, FrameworkObject__lib2_parent, FrameworkObject__lib2_component, FrameworkObject__lib2_previousMeasurement, FrameworkObject__lib2_animationFrameID, FrameworkObject__lib2_watchingMeasurement, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this._lib2_shProperty = Shape__lib2_shProperty;
  this._lib2_swProperty = Shape__lib2_swProperty;
  this.strokeWidthProperty = Shape_strokeWidthProperty;
  this.strokeProperty = Shape_strokeProperty;
  this.fillProperty = Shape_fillProperty;
  this._lib2_svgWrapper = Shape__lib2_svgWrapper;
  this.shapeElement = Shape_shapeElement;
  this.mouseUp = FrameworkElement_mouseUp;
  this.mouseDown = FrameworkElement_mouseDown;
  this.mouseMove = FrameworkElement_mouseMove;
  this.click = FrameworkElement_click;
  this.mouseLeave = FrameworkElement_mouseLeave;
  this.mouseEnter = FrameworkElement_mouseEnter;
  this.lostFocus = FrameworkElement_lostFocus;
  this.gotFocus = FrameworkElement_gotFocus;
  this.actionsProperty = FrameworkElement_actionsProperty;
  this.perspectiveProperty = FrameworkElement_perspectiveProperty;
  this.transformOriginZProperty = FrameworkElement_transformOriginZProperty;
  this.transformOriginYProperty = FrameworkElement_transformOriginYProperty;
  this.transformOriginXProperty = FrameworkElement_transformOriginXProperty;
  this.rotateZProperty = FrameworkElement_rotateZProperty;
  this.rotateYProperty = FrameworkElement_rotateYProperty;
  this.rotateXProperty = FrameworkElement_rotateXProperty;
  this.scaleZProperty = FrameworkElement_scaleZProperty;
  this.scaleYProperty = FrameworkElement_scaleYProperty;
  this.scaleXProperty = FrameworkElement_scaleXProperty;
  this.translateZProperty = FrameworkElement_translateZProperty;
  this.translateYProperty = FrameworkElement_translateYProperty;
  this.translateXProperty = FrameworkElement_translateXProperty;
  this.styleProperty = FrameworkElement_styleProperty;
  this.visibilityProperty = FrameworkElement_visibilityProperty;
  this.opacityProperty = FrameworkElement_opacityProperty;
  this.actualHeightProperty = FrameworkElement_actualHeightProperty;
  this.actualWidthProperty = FrameworkElement_actualWidthProperty;
  this.zOrderProperty = FrameworkElement_zOrderProperty;
  this.verticalAlignmentProperty = FrameworkElement_verticalAlignmentProperty;
  this.horizontalAlignmentProperty = FrameworkElement_horizontalAlignmentProperty;
  this.tagProperty = FrameworkElement_tagProperty;
  this.cursorProperty = FrameworkElement_cursorProperty;
  this.minHeightProperty = FrameworkElement_minHeightProperty;
  this.maxHeightProperty = FrameworkElement_maxHeightProperty;
  this.minWidthProperty = FrameworkElement_minWidthProperty;
  this.maxWidthProperty = FrameworkElement_maxWidthProperty;
  this.htmlIDProperty = FrameworkElement_htmlIDProperty;
  this.heightProperty = FrameworkElement_heightProperty;
  this.widthProperty = FrameworkElement_widthProperty;
  this.marginProperty = FrameworkElement_marginProperty;
  this._lib2_transitionProperties = FrameworkElement__lib2_transitionProperties;
  this._lib2_templateBindings = FrameworkElement__lib2_templateBindings;
  this._lib2_style = FrameworkElement__lib2_style;
  this._lib2_containerParent = FrameworkElement__lib2_containerParent;
  this.mostRecentMeasurement = FrameworkObject_mostRecentMeasurement;
  this._lib2_dataContextUpdated = FrameworkObject__lib2_dataContextUpdated;
  this.nameProperty = FrameworkObject_nameProperty;
  this.attachedPropertyChanged = FrameworkObject_attachedPropertyChanged;
  this.measurementChanged = FrameworkObject_measurementChanged;
  this.unloaded = FrameworkObject_unloaded;
  this.loaded = FrameworkObject_loaded;
  this.lateBindings = FrameworkObject_lateBindings;
  this.dataContextProperty = FrameworkObject_dataContextProperty;
  this._lib2_isLoaded = FrameworkObject__lib2_isLoaded;
  this._lib2_parent = FrameworkObject__lib2_parent;
  this._lib2_component = FrameworkObject__lib2_component;
  this._lib2_previousMeasurement = FrameworkObject__lib2_previousMeasurement;
  this._lib2_animationFrameID = FrameworkObject__lib2_animationFrameID;
  this._lib2_watchingMeasurement = FrameworkObject__lib2_watchingMeasurement;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 CreateElement$0: function() {
  this.set$_lib2_component($.createByTag2('div'));
 },
 get$type: function() {
  return 'Rectangle';
 },
 get$shapeTag: function() {
  return 'rect';
 },
 _lib2_initShapeProperties$0: function() {
  this.set$strokeWidthProperty($.AnimatingFrameworkProperty$6(this, 'strokeWidth', new $.Closure188(this), 'border-thickness', (void 0), $.CTC6));
  this.set$strokeProperty($.AnimatingFrameworkProperty$6(this, 'stroke', new $.Closure189(this), 'border-color', (void 0), $.CTC4));
  this.set$fillProperty($.AnimatingFrameworkProperty$6(this, 'fill', new $.Closure190(this), 'background', (void 0), $.CTC4));
 },
 makeMe$0: function() {
  return $.Rectangle$0();
 },
 Rectangle$0: function() {
  $.appendBuckshotClass(this.get$_lib2_component(), 'rectangle');
 },
});

Isolate.$defineClass("ColumnDefinition", "GridLayoutDefinition",
function ColumnDefinition(widthProperty, _lib2_columnDefinitionChanged, GridLayoutDefinition_minLength, GridLayoutDefinition_maxLength, GridLayoutDefinition__lib2_adjustedOffset, GridLayoutDefinition__lib2_value, GridLayoutDefinition__lib2_htmlNode, GridLayoutDefinition__lib2_adjustedLengthInternal, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this.widthProperty = widthProperty;
  this._lib2_columnDefinitionChanged = _lib2_columnDefinitionChanged;
  this.minLength = GridLayoutDefinition_minLength;
  this.maxLength = GridLayoutDefinition_maxLength;
  this._lib2_adjustedOffset = GridLayoutDefinition__lib2_adjustedOffset;
  this._lib2_value = GridLayoutDefinition__lib2_value;
  this._lib2_htmlNode = GridLayoutDefinition__lib2_htmlNode;
  this._lib2_adjustedLengthInternal = GridLayoutDefinition__lib2_adjustedLengthInternal;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$type: function() {
  return 'ColumnDefinition';
 },
 get$width: function() {
  return $.getValue(this.get$widthProperty());
 },
 set$width: function(v) {
  return $.setValue(this.get$widthProperty(), v);
 },
 _lib2_initColumnDefinitionProperties$0: function() {
  this.set$widthProperty($.FrameworkProperty$5(this, 'width', new $.Closure245(this), $.GridLength$0(), $.CTC214));
 },
 makeMe$0: function() {
  return $.ColumnDefinition$0();
 },
 set$widthProperty: function(v) { this.widthProperty = v; },
 get$widthProperty: function() { return this.widthProperty; },
 get$_lib2_columnDefinitionChanged: function() { return this._lib2_columnDefinitionChanged; },
 ColumnDefinition$0: function() {
  this._lib2_initColumnDefinitionProperties$0();
 },
});

Isolate.$defineClass("ObservableList", "Object",
function ObservableList(_lib2_list, listChanged) {
  this._lib2_list = _lib2_list;
  this.listChanged = listChanged;
}, {
 _lib2_notifySingleOldAndNew$2: function(oldItem, newItem) {
  var ol = $.List((void 0));
  $.setRuntimeTypeInfo(ol, ({E: 'T'}));
  var nl = $.List((void 0));
  $.setRuntimeTypeInfo(nl, ({E: 'T'}));
  ol.push(oldItem);
  nl.push(newItem);
  var t0 = this.get$listChanged();
  var t1 = $.ListChangedEventArgs$2(ol, nl);
  $.setRuntimeTypeInfo(t1, ({T: 'T'}));
  t0.invoke$2(this, t1);
 },
 _lib2_notifySingleNew$1: function(newItem) {
  var nl = $.List((void 0));
  $.setRuntimeTypeInfo(nl, ({E: 'T'}));
  nl.push(newItem);
  var t0 = this.get$listChanged();
  var t1 = $.List((void 0));
  $.setRuntimeTypeInfo(t1, ({E: 'T'}));
  var t2 = $.ListChangedEventArgs$2(t1, nl);
  $.setRuntimeTypeInfo(t2, ({T: 'T'}));
  t0.invoke$2(this, t2);
 },
 _lib2_notifySingleOld$1: function(oldItem) {
  var ol = $.List((void 0));
  $.setRuntimeTypeInfo(ol, ({E: 'T'}));
  ol.push(oldItem);
  var t0 = this.get$listChanged();
  var t1 = $.List((void 0));
  $.setRuntimeTypeInfo(t1, ({E: 'T'}));
  var t2 = $.ListChangedEventArgs$2(ol, t1);
  $.setRuntimeTypeInfo(t2, ({T: 'T'}));
  t0.invoke$2(this, t2);
 },
 removeRange$2: function(start, length$) {
  var l = this.getRange$2(start, length$);
  $.removeRange(this.get$_lib2_list(), start, length$);
  var t0 = this.get$listChanged();
  var t1 = $.List((void 0));
  $.setRuntimeTypeInfo(t1, ({E: 'T'}));
  var t2 = $.ListChangedEventArgs$2(l, t1);
  $.setRuntimeTypeInfo(t2, ({T: 'T'}));
  t0.invoke$2(this, t2);
 },
 addLast$1: function(value) {
  return $.addLast(this.get$_lib2_list(), value);
 },
 sort$1: function(compare) {
  return $.sort(this.get$_lib2_list(), compare);
 },
 last$0: function() {
  return $.last(this.get$_lib2_list());
 },
 removeLast$0: function() {
  var item = $.last(this.get$_lib2_list());
  $.removeLast(this.get$_lib2_list());
  this._lib2_notifySingleOld$1(item);
  return item;
 },
 clear$0: function() {
  var c = this.get$_lib2_list();
  $.clear(this.get$_lib2_list());
  var t0 = this.get$listChanged();
  var t1 = $.List((void 0));
  $.setRuntimeTypeInfo(t1, ({E: 'T'}));
  var t2 = $.ListChangedEventArgs$2(c, t1);
  $.setRuntimeTypeInfo(t2, ({T: 'T'}));
  t0.invoke$2(this, t2);
 },
 addAll$1: function(elements) {
  $.addAll(this.get$_lib2_list(), elements);
  var t0 = this.get$listChanged();
  var t1 = $.List((void 0));
  $.setRuntimeTypeInfo(t1, ({E: 'T'}));
  var t2 = $.ListChangedEventArgs$2(t1, elements);
  $.setRuntimeTypeInfo(t2, ({T: 'T'}));
  t0.invoke$2(this, t2);
 },
 remove$1: function(element) {
  if ($.eqB($.indexOf$1(this.get$_lib2_list(), element), -1)) {
    return;
  }
  $.removeRange(this.get$_lib2_list(), $.indexOf$1(this.get$_lib2_list(), element), 1);
  this._lib2_notifySingleOld$1(element);
 },
 add$1: function(element) {
  $.add$1(this.get$_lib2_list(), element);
  this._lib2_notifySingleNew$1(element);
 },
 getRange$2: function(start, length$) {
  return $.getRange(this.get$_lib2_list(), start, length$);
 },
 get$length: function() {
  return $.get$length(this.get$_lib2_list());
 },
 indexOf$2: function(element, start) {
  return $.indexOf$2(this.get$_lib2_list(), element, start);
 },
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 iterator$0: function() {
  return $.iterator(this.get$_lib2_list());
 },
 some$1: function(f) {
  return $.some(this.get$_lib2_list(), f);
 },
 every$1: function(f) {
  return $.every(this.get$_lib2_list(), f);
 },
 filter$1: function(f) {
  return $.filter(this.get$_lib2_list(), f);
 },
 forEach$1: function(f) {
  return $.forEach(this.get$_lib2_list(), f);
 },
 isEmpty$0: function() {
  return $.isEmpty(this.get$_lib2_list());
 },
 operator$index$1: function(index) {
  return $.index(this.get$_lib2_list(), index);
 },
 operator$indexSet$2: function(index, value) {
  var oldValue = $.index(this.get$_lib2_list(), index);
  $.indexSet(this.get$_lib2_list(), index, value);
  this._lib2_notifySingleOldAndNew$2(oldValue, value);
 },
 get$_lib2_list: function() { return this._lib2_list; },
 get$listChanged: function() { return this.listChanged; },
 is$ObservableList: true,
 is$List2: function() { return true; },
 is$Collection: function() { return true; },
});

Isolate.$defineClass("SolidColorBrush", "Brush",
function SolidColorBrush(colorProperty, FrameworkResource_rawData, FrameworkResource_keyProperty, FrameworkObject_mostRecentMeasurement, FrameworkObject__lib2_dataContextUpdated, FrameworkObject_nameProperty, FrameworkObject_attachedPropertyChanged, FrameworkObject_measurementChanged, FrameworkObject_unloaded, FrameworkObject_loaded, FrameworkObject_lateBindings, FrameworkObject_dataContextProperty, FrameworkObject__lib2_isLoaded, FrameworkObject__lib2_parent, FrameworkObject__lib2_component, FrameworkObject__lib2_previousMeasurement, FrameworkObject__lib2_animationFrameID, FrameworkObject__lib2_watchingMeasurement, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this.colorProperty = colorProperty;
  this.rawData = FrameworkResource_rawData;
  this.keyProperty = FrameworkResource_keyProperty;
  this.mostRecentMeasurement = FrameworkObject_mostRecentMeasurement;
  this._lib2_dataContextUpdated = FrameworkObject__lib2_dataContextUpdated;
  this.nameProperty = FrameworkObject_nameProperty;
  this.attachedPropertyChanged = FrameworkObject_attachedPropertyChanged;
  this.measurementChanged = FrameworkObject_measurementChanged;
  this.unloaded = FrameworkObject_unloaded;
  this.loaded = FrameworkObject_loaded;
  this.lateBindings = FrameworkObject_lateBindings;
  this.dataContextProperty = FrameworkObject_dataContextProperty;
  this._lib2_isLoaded = FrameworkObject__lib2_isLoaded;
  this._lib2_parent = FrameworkObject__lib2_parent;
  this._lib2_component = FrameworkObject__lib2_component;
  this._lib2_previousMeasurement = FrameworkObject__lib2_previousMeasurement;
  this._lib2_animationFrameID = FrameworkObject__lib2_animationFrameID;
  this._lib2_watchingMeasurement = FrameworkObject__lib2_watchingMeasurement;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$type: function() {
  return 'SolidColorBrush';
 },
 renderBrush$1: function(element) {
  var t0 = '' + $.stringToString(this.get$color());
  element.get$style().set$background(t0);
  element.get$style().setProperty$2('fill', '' + $.stringToString(this.get$color()));
 },
 get$color: function() {
  return $.getValue(this.get$colorProperty());
 },
 set$color: function(c) {
  return $.setValue(this.get$colorProperty(), c);
 },
 _lib2_initSolidColorBrushProperties$0: function() {
  this.set$colorProperty($.FrameworkProperty$5(this, 'color', new $.Closure15(), (void 0), (void 0)));
 },
 makeMe$0: function() {
  return $.SolidColorBrush$1((void 0));
 },
 set$colorProperty: function(v) { this.colorProperty = v; },
 get$colorProperty: function() { return this.colorProperty; },
 SolidColorBrush$1: function(toColor) {
  this._lib2_initSolidColorBrushProperties$0();
  if (!$.eqNullB(toColor)) {
    this.set$color(toColor);
  }
 },
});

Isolate.$defineClass("Closure293", "Closure330",
function Closure(this_2) {
  this.this_2 = this_2;
}, {
 $call$1: function(chars) {
  var z = this.this_2.get$_lib7_i();
  if (typeof z !== 'number') return this.$call$1$bailout(chars, 1, z);
  for (var z0 = z; $.ltB(z0, this.this_2.get$_lib7_length()) && $.eqB($.indexOf$1(chars, $.charCodeAt(this.this_2.get$_lib7_xml(), z0)), -1); ) {
    z0 = z0 + 1;
  }
  return $.charCodeAt(this.this_2.get$_lib7_xml(), z0);
 },
 $call$1$bailout: function(chars, state, env0) {
  switch (state) {
    case 1:
      z = env0;
      break;
  }
  switch (state) {
    case 0:
      var z = this.this_2.get$_lib7_i();
    case 1:
      state = 0;
      var z0 = z;
      L0: while (true) {
        if (!($.ltB(z0, this.this_2.get$_lib7_length()) && $.eqB($.indexOf$1(chars, $.charCodeAt(this.this_2.get$_lib7_xml(), z0)), -1))) break L0;
        z0 = $.add(z0, 1);
      }
      return $.charCodeAt(this.this_2.get$_lib7_xml(), z0);
  }
 },
});

Isolate.$defineClass("Closure30", "Closure330",
function Closure(this_9) {
  this.this_9 = this_9;
}, {
 $call$1: function(e) {
  this.this_9.get$_lib2_component().focus$0();
  if (!(this.this_9.get$mouseDown().get$hasHandlers() === true)) {
    return;
  }
  e.stopPropagation$0();
  var p = $.document().get$window().webkitConvertPointFromPageToNode$2(this.this_9.get$_lib2_component(), $.Point(e.get$pageX(), e.get$pageY()));
  this.this_9.get$mouseDown().invoke$2(this.this_9, $.MouseEventArgs$4(p.get$x(), p.get$y(), e.get$pageX(), e.get$pageY()));
 },
});

Isolate.$defineClass("Closure222", "Closure330",
function Closure(this_12, box_0) {
  this.this_12 = this_12;
  this.box_0 = box_0;
}, {
 $call$1: function(child) {
  return $.eqB($.getColumn(child.get$content()), $.indexOf$2(this.this_12.get$columnDefinitions(), this.box_0.c_1, 0)) && $.ltB($.getColumnSpan(child.get$content()), 2);
 },
});

Isolate.$defineClass("ListChangedEventArgs", "EventArgs",
function ListChangedEventArgs(newItems, oldItems, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this.newItems = newItems;
  this.oldItems = oldItems;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$type: function() {
  return 'ListChangedEventArgs';
 },
 makeMe$0: function() {
  return;
 },
 get$newItems: function() { return this.newItems; },
 get$oldItems: function() { return this.oldItems; },
 ListChangedEventArgs$2: function(oldItems, newItems) {
 },
});

Isolate.$defineClass("FrameworkObject", "BuckshotObject",
function FrameworkObject(mostRecentMeasurement, _lib2_dataContextUpdated, nameProperty, attachedPropertyChanged, measurementChanged, unloaded, loaded, lateBindings, dataContextProperty, _lib2_isLoaded, _lib2_parent, _lib2_component, _lib2_previousMeasurement, _lib2_animationFrameID, _lib2_watchingMeasurement, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this.mostRecentMeasurement = mostRecentMeasurement;
  this._lib2_dataContextUpdated = _lib2_dataContextUpdated;
  this.nameProperty = nameProperty;
  this.attachedPropertyChanged = attachedPropertyChanged;
  this.measurementChanged = measurementChanged;
  this.unloaded = unloaded;
  this.loaded = loaded;
  this.lateBindings = lateBindings;
  this.dataContextProperty = dataContextProperty;
  this._lib2_isLoaded = _lib2_isLoaded;
  this._lib2_parent = _lib2_parent;
  this._lib2_component = _lib2_component;
  this._lib2_previousMeasurement = _lib2_previousMeasurement;
  this._lib2_animationFrameID = _lib2_animationFrameID;
  this._lib2_watchingMeasurement = _lib2_watchingMeasurement;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$type: function() {
  return 'FrameworkObject';
 },
 updateLayout$0: function() {
 },
 CreateElement$0: function() {
  this.set$_lib2_component($.createByTag('div'));
 },
 applyVisualTemplate$0: function() {
  this.CreateElement$0();
 },
 get$dataContext: function() {
  return $.getValue(this.get$dataContextProperty());
 },
 set$dataContext: function(value) {
  return $.setValue(this.get$dataContextProperty(), value);
 },
 get$parent: function() {
  return this.get$_lib2_parent();
 },
 set$parent: function(value) {
  this.set$_lib2_parent(value);
  return value;
 },
 get$name: function() {
  return $.getValue(this.get$nameProperty());
 },
 set$name: function(value) {
  return $.setValue(this.get$nameProperty(), value);
 },
 resolveDataContext$0: function() {
  if (!$.eqNullB(this.get$dataContext())) {
    return this.get$dataContextProperty();
  }
  if ($.eqNullB(this.get$parent())) {
    return;
  }
  return this.get$parent().resolveDataContext$0();
 },
 updateMeasurement$0: function() {
  this.get$_lib2_component().get$rect().then$1(new $.Closure313(this));
 },
 set$mostRecentMeasurement: function(v) { this.mostRecentMeasurement = v; },
 get$mostRecentMeasurement: function() { return this.mostRecentMeasurement; },
 _lib2_onRemoveFromDOM$0: function() {
  this.set$_lib2_isLoaded(false);
  this.onUnloaded$0();
  this.get$unloaded().invoke$2(this, $.EventArgs$0());
  if (!!!this.is$IFrameworkContainer) {
    return;
  }
  var t0 = $.get$dynamic(this).get$content();
  if (typeof t0 === 'object' && (t0.constructor === Array || t0.is$List2())) {
    $.forEach($.get$dynamic(this).get$content(), new $.Closure25());
  } else {
    var t1 = $.get$dynamic(this).get$content();
    if (typeof t1 === 'object' && !!t1.is$FrameworkElement) {
      $.get$dynamic(this).get$content()._lib2_onRemoveFromDOM$0();
    }
  }
 },
 removeFromLayoutTree$0: function() {
  this.get$_lib2_component().remove$0();
  var p = this.get$parent();
  this.set$parent((void 0));
  if (!(p.get$_lib2_isLoaded() === true)) {
    return;
  }
  this._lib2_onRemoveFromDOM$0();
 },
 updateDataContext$0: function() {
  var t0 = ({});
  if (this.get$_lib2_dataContextUpdated() === true) {
    return;
  }
  this.set$_lib2_dataContextUpdated(true);
  t0.dc_1 = this.resolveDataContext$0();
  if ($.eqNullB(t0.dc_1)) {
    return;
  }
  $.forEach(this.get$lateBindings(), new $.Closure19(t0));
 },
 set$_lib2_dataContextUpdated: function(v) { this._lib2_dataContextUpdated = v; },
 get$_lib2_dataContextUpdated: function() { return this._lib2_dataContextUpdated; },
 onUnloaded$0: function() {
 },
 onLoaded$0: function() {
 },
 _lib2_onAddedToDOM$0: function() {
  this.updateDataContext$0();
  this.set$_lib2_isLoaded(true);
  this.get$parent().updateLayout$0();
  this.onLoaded$0();
  this.get$loaded().invoke$2(this, $.EventArgs$0());
  if (!!!this.is$IFrameworkContainer) {
    return;
  }
  var t0 = $.get$dynamic(this).get$content();
  if (typeof t0 === 'object' && (t0.constructor === Array || t0.is$List2())) {
    $.forEach($.get$dynamic(this).get$content(), new $.Closure18());
  } else {
    var t1 = $.get$dynamic(this).get$content();
    if (typeof t1 === 'object' && !!t1.is$FrameworkElement) {
      $.get$dynamic(this).get$content()._lib2_onAddedToDOM$0();
    }
  }
 },
 addToLayoutTree$1: function(parentElement) {
  $.add$1(parentElement.get$_lib2_component().get$elements(), this.get$_lib2_component());
  this.set$parent(parentElement);
  if (!(parentElement.get$_lib2_isLoaded() === true)) {
    return;
  }
  this._lib2_onAddedToDOM$0();
 },
 _lib2_initFrameworkObjectEvents$0: function() {
  var t0 = $._lib2_FrameworkEventImplementation$_watchFirstAndLast$2(new $.Closure321(this), new $.Closure322(this));
  $.setRuntimeTypeInfo(t0, ({T: 'MeasurementChangedEventArgs'}));
  this.set$measurementChanged(t0);
 },
 _lib2_stopWatchMeasurement$0: function() {
  if (!$.eqNullB(this.get$_lib2_animationFrameID())) {
    $.window().webkitCancelAnimationFrame$1(this.get$_lib2_animationFrameID());
  }
  this.set$_lib2_previousMeasurement((void 0));
  this.set$_lib2_watchingMeasurement(false);
 },
 _lib2_startWatchMeasurement$0: function() {
  this.set$_lib2_watchingMeasurement(true);
  var t0 = new $.Closure323(this);
  this.set$_lib2_animationFrameID($.window().requestAnimationFrame$1(t0));
 },
 _lib2_initFrameworkObjectProperties$0: function() {
  this.set$nameProperty($.FrameworkProperty$5(this, 'name', new $.Closure325(this), (void 0), (void 0)));
  this.set$dataContextProperty($.FrameworkProperty$5(this, 'dataContext', new $.Closure326(), (void 0), (void 0)));
 },
 get$isContainer: function() {
  return this.get$_lib2_stateBag().containsKey$1('CONTAINER_CONTEXT');
 },
 makeMe$0: function() {
  return $.FrameworkObject$0();
 },
 set$nameProperty: function(v) { this.nameProperty = v; },
 get$nameProperty: function() { return this.nameProperty; },
 get$attachedPropertyChanged: function() { return this.attachedPropertyChanged; },
 get$rawElement: function() {
  return this.get$_lib2_component();
 },
 set$measurementChanged: function(v) { this.measurementChanged = v; },
 get$measurementChanged: function() { return this.measurementChanged; },
 get$unloaded: function() { return this.unloaded; },
 get$loaded: function() { return this.loaded; },
 get$lateBindings: function() { return this.lateBindings; },
 set$dataContextProperty: function(v) { this.dataContextProperty = v; },
 get$dataContextProperty: function() { return this.dataContextProperty; },
 set$_lib2_isLoaded: function(v) { this._lib2_isLoaded = v; },
 get$_lib2_isLoaded: function() { return this._lib2_isLoaded; },
 set$_lib2_parent: function(v) { this._lib2_parent = v; },
 get$_lib2_parent: function() { return this._lib2_parent; },
 set$_lib2_component: function(v) { this._lib2_component = v; },
 get$_lib2_component: function() { return this._lib2_component; },
 set$_lib2_previousMeasurement: function(v) { this._lib2_previousMeasurement = v; },
 get$_lib2_previousMeasurement: function() { return this._lib2_previousMeasurement; },
 set$_lib2_animationFrameID: function(v) { this._lib2_animationFrameID = v; },
 get$_lib2_animationFrameID: function() { return this._lib2_animationFrameID; },
 set$_lib2_watchingMeasurement: function(v) { this._lib2_watchingMeasurement = v; },
 get$_lib2_watchingMeasurement: function() { return this._lib2_watchingMeasurement; },
 FrameworkObject$0: function() {
  this.applyVisualTemplate$0();
  if ($.eqNullB(this.get$_lib2_component())) {
    this.CreateElement$0();
  }
  $.appendBuckshotClass(this.get$_lib2_component(), 'frameworkobject');
  this._lib2_initFrameworkObjectProperties$0();
  this._lib2_initFrameworkObjectEvents$0();
 },
});

Isolate.$defineClass("Closure223", "Closure330",
function Closure(box_0) {
  this.box_0 = box_0;
}, {
 $call$1: function(child) {
  var childWidth = child.get$content().get$mostRecentMeasurement().get$bounding().get$width();
  if ($.gtB(childWidth, this.box_0.widestAuto_2)) {
    this.box_0.widestAuto_2 = childWidth;
  }
 },
});

Isolate.$defineClass("Closure4", "Closure330",
function Closure(this_1) {
  this.this_1 = this_1;
}, {
 $call$1: function(value) {
  if ($.eqNullB(value)) {
    this.this_1.get$_lib2_component().get$style().set$background('None');
    return;
  }
  value.renderBrush$1(this.this_1.get$_lib2_component());
 },
});

Isolate.$defineClass("_EventSourceEventsImpl", "_EventsImpl",
function _EventSourceEventsImpl(_EventsImpl__lib5_ptr) {
  this._lib5_ptr = _EventsImpl__lib5_ptr;
}, {
 get$message: function() {
  return this._lib5_get$1('message');
 },
});

Isolate.$defineClass("ViewModelBase", "FrameworkObject",
function ViewModelBase() {
}, {
});

Isolate.$defineClass("Closure141", "Closure330",
function Closure(this_2) {
  this.this_2 = this_2;
}, {
 $call$1: function(value) {
  var t0 = '' + $.stringToString(value);
  this.this_2.get$_lib2_component().set$text(t0);
 },
});

Isolate.$defineClass("ListBox", "Control",
function ListBox(selectionChanged, _lib2_selectedIndex, _lib2_border, _lib2_presenter, selectColorProperty, highlightColorProperty, borderThicknessProperty, borderColorProperty, itemsTemplateProperty, presentationPanelProperty, selectedItemProperty, verticalScrollEnabledProperty, horizontalScrollEnabledProperty, Control__lib2_templateBindingsApplied, Control__lib2_templateApplied, Control__lib2_visualTemplateApplied, Control_template, Control_isEnabledProperty, FrameworkElement_mouseUp, FrameworkElement_mouseDown, FrameworkElement_mouseMove, FrameworkElement_click, FrameworkElement_mouseLeave, FrameworkElement_mouseEnter, FrameworkElement_lostFocus, FrameworkElement_gotFocus, FrameworkElement_actionsProperty, FrameworkElement_perspectiveProperty, FrameworkElement_transformOriginZProperty, FrameworkElement_transformOriginYProperty, FrameworkElement_transformOriginXProperty, FrameworkElement_rotateZProperty, FrameworkElement_rotateYProperty, FrameworkElement_rotateXProperty, FrameworkElement_scaleZProperty, FrameworkElement_scaleYProperty, FrameworkElement_scaleXProperty, FrameworkElement_translateZProperty, FrameworkElement_translateYProperty, FrameworkElement_translateXProperty, FrameworkElement_styleProperty, FrameworkElement_visibilityProperty, FrameworkElement_opacityProperty, FrameworkElement_actualHeightProperty, FrameworkElement_actualWidthProperty, FrameworkElement_zOrderProperty, FrameworkElement_verticalAlignmentProperty, FrameworkElement_horizontalAlignmentProperty, FrameworkElement_tagProperty, FrameworkElement_cursorProperty, FrameworkElement_minHeightProperty, FrameworkElement_maxHeightProperty, FrameworkElement_minWidthProperty, FrameworkElement_maxWidthProperty, FrameworkElement_htmlIDProperty, FrameworkElement_heightProperty, FrameworkElement_widthProperty, FrameworkElement_marginProperty, FrameworkElement__lib2_transitionProperties, FrameworkElement__lib2_templateBindings, FrameworkElement__lib2_style, FrameworkElement__lib2_containerParent, FrameworkObject_mostRecentMeasurement, FrameworkObject__lib2_dataContextUpdated, FrameworkObject_nameProperty, FrameworkObject_attachedPropertyChanged, FrameworkObject_measurementChanged, FrameworkObject_unloaded, FrameworkObject_loaded, FrameworkObject_lateBindings, FrameworkObject_dataContextProperty, FrameworkObject__lib2_isLoaded, FrameworkObject__lib2_parent, FrameworkObject__lib2_component, FrameworkObject__lib2_previousMeasurement, FrameworkObject__lib2_animationFrameID, FrameworkObject__lib2_watchingMeasurement, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this.selectionChanged = selectionChanged;
  this._lib2_selectedIndex = _lib2_selectedIndex;
  this._lib2_border = _lib2_border;
  this._lib2_presenter = _lib2_presenter;
  this.selectColorProperty = selectColorProperty;
  this.highlightColorProperty = highlightColorProperty;
  this.borderThicknessProperty = borderThicknessProperty;
  this.borderColorProperty = borderColorProperty;
  this.itemsTemplateProperty = itemsTemplateProperty;
  this.presentationPanelProperty = presentationPanelProperty;
  this.selectedItemProperty = selectedItemProperty;
  this.verticalScrollEnabledProperty = verticalScrollEnabledProperty;
  this.horizontalScrollEnabledProperty = horizontalScrollEnabledProperty;
  this._lib2_templateBindingsApplied = Control__lib2_templateBindingsApplied;
  this._lib2_templateApplied = Control__lib2_templateApplied;
  this._lib2_visualTemplateApplied = Control__lib2_visualTemplateApplied;
  this.template = Control_template;
  this.isEnabledProperty = Control_isEnabledProperty;
  this.mouseUp = FrameworkElement_mouseUp;
  this.mouseDown = FrameworkElement_mouseDown;
  this.mouseMove = FrameworkElement_mouseMove;
  this.click = FrameworkElement_click;
  this.mouseLeave = FrameworkElement_mouseLeave;
  this.mouseEnter = FrameworkElement_mouseEnter;
  this.lostFocus = FrameworkElement_lostFocus;
  this.gotFocus = FrameworkElement_gotFocus;
  this.actionsProperty = FrameworkElement_actionsProperty;
  this.perspectiveProperty = FrameworkElement_perspectiveProperty;
  this.transformOriginZProperty = FrameworkElement_transformOriginZProperty;
  this.transformOriginYProperty = FrameworkElement_transformOriginYProperty;
  this.transformOriginXProperty = FrameworkElement_transformOriginXProperty;
  this.rotateZProperty = FrameworkElement_rotateZProperty;
  this.rotateYProperty = FrameworkElement_rotateYProperty;
  this.rotateXProperty = FrameworkElement_rotateXProperty;
  this.scaleZProperty = FrameworkElement_scaleZProperty;
  this.scaleYProperty = FrameworkElement_scaleYProperty;
  this.scaleXProperty = FrameworkElement_scaleXProperty;
  this.translateZProperty = FrameworkElement_translateZProperty;
  this.translateYProperty = FrameworkElement_translateYProperty;
  this.translateXProperty = FrameworkElement_translateXProperty;
  this.styleProperty = FrameworkElement_styleProperty;
  this.visibilityProperty = FrameworkElement_visibilityProperty;
  this.opacityProperty = FrameworkElement_opacityProperty;
  this.actualHeightProperty = FrameworkElement_actualHeightProperty;
  this.actualWidthProperty = FrameworkElement_actualWidthProperty;
  this.zOrderProperty = FrameworkElement_zOrderProperty;
  this.verticalAlignmentProperty = FrameworkElement_verticalAlignmentProperty;
  this.horizontalAlignmentProperty = FrameworkElement_horizontalAlignmentProperty;
  this.tagProperty = FrameworkElement_tagProperty;
  this.cursorProperty = FrameworkElement_cursorProperty;
  this.minHeightProperty = FrameworkElement_minHeightProperty;
  this.maxHeightProperty = FrameworkElement_maxHeightProperty;
  this.minWidthProperty = FrameworkElement_minWidthProperty;
  this.maxWidthProperty = FrameworkElement_maxWidthProperty;
  this.htmlIDProperty = FrameworkElement_htmlIDProperty;
  this.heightProperty = FrameworkElement_heightProperty;
  this.widthProperty = FrameworkElement_widthProperty;
  this.marginProperty = FrameworkElement_marginProperty;
  this._lib2_transitionProperties = FrameworkElement__lib2_transitionProperties;
  this._lib2_templateBindings = FrameworkElement__lib2_templateBindings;
  this._lib2_style = FrameworkElement__lib2_style;
  this._lib2_containerParent = FrameworkElement__lib2_containerParent;
  this.mostRecentMeasurement = FrameworkObject_mostRecentMeasurement;
  this._lib2_dataContextUpdated = FrameworkObject__lib2_dataContextUpdated;
  this.nameProperty = FrameworkObject_nameProperty;
  this.attachedPropertyChanged = FrameworkObject_attachedPropertyChanged;
  this.measurementChanged = FrameworkObject_measurementChanged;
  this.unloaded = FrameworkObject_unloaded;
  this.loaded = FrameworkObject_loaded;
  this.lateBindings = FrameworkObject_lateBindings;
  this.dataContextProperty = FrameworkObject_dataContextProperty;
  this._lib2_isLoaded = FrameworkObject__lib2_isLoaded;
  this._lib2_parent = FrameworkObject__lib2_parent;
  this._lib2_component = FrameworkObject__lib2_component;
  this._lib2_previousMeasurement = FrameworkObject__lib2_previousMeasurement;
  this._lib2_animationFrameID = FrameworkObject__lib2_animationFrameID;
  this._lib2_watchingMeasurement = FrameworkObject__lib2_watchingMeasurement;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$type: function() {
  return 'ListBox';
 },
 _lib2_initListBoxProperties$0: function() {
  this.set$highlightColorProperty($.FrameworkProperty$5(this, 'highlightColor', new $.Closure117(), $.SolidColorBrush$1($.Color$predefined$1($.CTC122)), $.CTC4));
  this.set$selectColorProperty($.FrameworkProperty$5(this, 'selectColor', new $.Closure118(), $.SolidColorBrush$1($.Color$predefined$1($.CTC134)), $.CTC4));
  this.set$borderColorProperty($.FrameworkProperty$5(this, 'borderColor', new $.Closure119(this), $.SolidColorBrush$1($.Color$predefined$1($.CTC18)), $.CTC4));
  this.set$borderThicknessProperty($.FrameworkProperty$5(this, 'borderThickness', new $.Closure120(this), $.Thickness$1(1), $.CTC5));
  this.set$selectedItemProperty($.FrameworkProperty$5(this, 'selectedItem', new $.Closure121(), (void 0), (void 0)));
  this.set$presentationPanelProperty($.FrameworkProperty$5(this, 'presentationPanel', new $.Closure122(this), (void 0), (void 0)));
  this.set$itemsTemplateProperty($.FrameworkProperty$5(this, 'itemsTemplate', new $.Closure123(this), (void 0), (void 0)));
  this.set$horizontalScrollEnabledProperty($.FrameworkProperty$5(this, 'horizontalScrollEnabled', new $.Closure124(), false, $.CTC7));
  this.set$verticalScrollEnabledProperty($.FrameworkProperty$5(this, 'verticalScrollEnabled', new $.Closure125(), true, $.CTC7));
 },
 onItemMouseLeave$1: function(item) {
  if (item.get$_lib2_stateBag().containsKey$1('__lb_item_bg_brush__') === true) {
    var t0 = $.index(item.get$_lib2_stateBag(), '__lb_item_bg_brush__');
    $.get$dynamic(item).set$background(t0);
  }
 },
 onItemMouseEnter$1: function(item) {
  if (item.hasProperty$1('background') === true) {
    $.indexSet(item.get$_lib2_stateBag(), '__lb_item_bg_brush__', $.get$dynamic(item).get$background());
    var t0 = $.getValue(this.get$highlightColorProperty());
    $.get$dynamic(item).set$background(t0);
  }
 },
 onItemMouseUp$1: function(item) {
  if (item.hasProperty$1('background') === true) {
    var t0 = $.getValue(this.get$highlightColorProperty());
    $.get$dynamic(item).set$background(t0);
  }
 },
 onItemMouseDown$1: function(item) {
  if (item.hasProperty$1('background') === true) {
    var t0 = $.getValue(this.get$selectColorProperty());
    $.get$dynamic(item).set$background(t0);
  }
 },
 get$content: function() {
  return this.get$template();
 },
 _lib2_OnItemCreated$2: function(sender, args) {
  var t0 = ({});
  t0.item_1 = args.get$itemCreated();
  $.add(t0.item_1.get$click(), new $.Closure109(this, t0));
  $.add(t0.item_1.get$mouseEnter(), new $.Closure110(this, t0));
  $.add(t0.item_1.get$mouseLeave(), new $.Closure111(this, t0));
  $.add(t0.item_1.get$mouseDown(), new $.Closure112(this, t0));
  $.add(t0.item_1.get$mouseUp(), new $.Closure113(this, t0));
 },
 get$_lib2_OnItemCreated: function() { return new $.Closure334(this); },
 get$defaultControlTemplate: function() {
  return '<controltemplate controlType="' + $.stringToString(this.get$templateName()) + '">\r\n          <template>\r\n            <border bordercolor="{template bordercolor}" \r\n                    borderthickness="{template borderThickness}" \r\n                    horizontalScrollEnabled="{template horizontalScrollEnabled}" \r\n                    verticalScrollEnabled="{template verticalScrollEnabled}"\r\n                    name="__buckshot_listbox_border__"\r\n                    cursor="Arrow">\r\n                <collectionPresenter name="__buckshot_listbox_presenter__" \r\n                                      horizontalAlignment=\'stretch\'>\r\n                </collectionPresenter>\r\n            </border>\r\n          </template>\r\n        </controltemplate>\r\n    ';
 },
 makeMe$0: function() {
  return $.ListBox$0();
 },
 get$selectedIndex: function() {
  return this.get$_lib2_selectedIndex();
 },
 get$selectionChanged: function() { return this.selectionChanged; },
 set$_lib2_selectedIndex: function(v) { this._lib2_selectedIndex = v; },
 get$_lib2_selectedIndex: function() { return this._lib2_selectedIndex; },
 set$_lib2_border: function(v) { this._lib2_border = v; },
 get$_lib2_border: function() { return this._lib2_border; },
 set$_lib2_presenter: function(v) { this._lib2_presenter = v; },
 get$_lib2_presenter: function() { return this._lib2_presenter; },
 set$selectColorProperty: function(v) { this.selectColorProperty = v; },
 get$selectColorProperty: function() { return this.selectColorProperty; },
 set$highlightColorProperty: function(v) { this.highlightColorProperty = v; },
 get$highlightColorProperty: function() { return this.highlightColorProperty; },
 set$borderThicknessProperty: function(v) { this.borderThicknessProperty = v; },
 set$borderColorProperty: function(v) { this.borderColorProperty = v; },
 set$itemsTemplateProperty: function(v) { this.itemsTemplateProperty = v; },
 set$presentationPanelProperty: function(v) { this.presentationPanelProperty = v; },
 set$selectedItemProperty: function(v) { this.selectedItemProperty = v; },
 get$selectedItemProperty: function() { return this.selectedItemProperty; },
 set$verticalScrollEnabledProperty: function(v) { this.verticalScrollEnabledProperty = v; },
 set$horizontalScrollEnabledProperty: function(v) { this.horizontalScrollEnabledProperty = v; },
 ListBox$0: function() {
  $.appendBuckshotClass(this.get$_lib2_component(), 'listbox');
  this._lib2_initListBoxProperties$0();
  if ($.eqNullB(this.get$template())) {
    throw $.captureStackTrace($.CTC8);
  }
  this.set$_lib2_presenter($.findByName('__buckshot_listbox_presenter__', this.get$template()));
  this.set$_lib2_border($.findByName('__buckshot_listbox_border__', this.get$template()));
  if ($.eqNullB(this.get$_lib2_presenter())) {
    throw $.captureStackTrace($.CTC8);
  }
  $.add(this.get$_lib2_presenter().get$itemCreated(), this.get$_lib2_OnItemCreated());
 },
 is$IFrameworkContainer: true,
});

Isolate.$defineClass("Closure320", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$1: function(e) {
  if ($.eqNullB($._ref)) {
    return;
  }
  if (!$.eqB($.window().get$innerWidth(), this.this_0.get$windowWidth())) {
    $.setValue(this.this_0.get$windowWidthProperty(), $.window().get$innerWidth());
  }
  if (!$.eqB($.window().get$innerHeight(), this.this_0.get$windowHeight())) {
    $.setValue(this.this_0.get$windowHeightProperty(), $.window().get$innerHeight());
  }
 },
});

Isolate.$defineClass("_NotificationEventsImpl", "_EventsImpl",
function _NotificationEventsImpl(_EventsImpl__lib5_ptr) {
  this._lib5_ptr = _EventsImpl__lib5_ptr;
}, {
 get$display: function() {
  return this._lib5_get$1('display');
 },
 get$click: function() {
  return this._lib5_get$1('click');
 },
});

Isolate.$defineClass("Closure225", "Closure330",
function Closure(this_1) {
  this.this_1 = this_1;
}, {
 $call$1: function(e) {
  if ($.eqB(this.this_1.get$text(), $.get$dynamic(this.this_1.get$_lib2_component()).get$value())) {
    return;
  }
  var oldValue = this.this_1.get$text();
  var t0 = $.get$dynamic(this.this_1.get$_lib2_component()).get$value();
  this.this_1.set$text(t0);
  if (!(this.this_1.get$textChanged().get$hasHandlers() === true)) {
    return;
  }
  this.this_1.get$textChanged().invoke$2(this.this_1, $.TextChangedEventArgs$with$2(oldValue, this.this_1.get$text()));
  if (e.get$cancelable() === true) {
    e.set$cancelBubble(true);
  }
 },
});

Isolate.$defineClass("Closure96", "Closure330",
function Closure(this_2, box_0) {
  this.this_2 = this_2;
  this.box_0 = box_0;
}, {
 $call$2: function(k, v) {
  if ($.startsWith(k, this.this_2.get$stateBagPrefix()) === true) {
    v.unregister$0();
    this.box_0.element_1.get$_lib2_stateBag().remove$1(k);
  }
 },
});

Isolate.$defineClass("Closure102", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$1: function(_) {
  var t0 = this.this_0;
  if (typeof t0 === 'object' && !!t0.is$IFrameworkContainer) {
    this.this_0.updateLayout$0();
  } else {
    if (!$.eqNullB(this.this_0.get$parent())) {
      this.this_0.get$parent().updateLayout$0();
    }
  }
 },
});

Isolate.$defineClass("Brush", "FrameworkResource",
function Brush() {
}, {
 get$type: function() {
  return 'Brush';
 },
});

Isolate.$defineClass("Closure231", "Closure330",
function Closure(this_1) {
  this.this_1 = this_1;
}, {
 $call$1: function(v) {
  $.indexSet(this.this_1.get$_lib2_component().get$attributes(), 'name', v);
 },
});

Isolate.$defineClass("VerticalAlignment", "Object",
function VerticalAlignment(_lib2_str) {
  this._lib2_str = _lib2_str;
}, {
 toString$0: function() {
  return this.get$_lib2_str();
 },
 get$_lib2_str: function() { return this._lib2_str; },
});

Isolate.$defineClass("Closure52", "Closure330",
function Closure(box_0) {
  this.box_0 = box_0;
}, {
 $call$0: function() {
  return this.box_0.closure_1.$call$1(this.box_0.arg1_2);
 },
});

Isolate.$defineClass("Closure249", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$1: function(p) {
  if (!$.eqNullB(p.get$parent())) {
    throw $.captureStackTrace($.CTC8);
  }
  if (!($.isEmpty(this.this_0.get$_lib2_component().get$elements()) === true)) {
    $.index(this.this_0.get$_lib2_component().get$elements(), 0).remove$0();
  }
  $.add(p.get$loaded(), new $.Closure251(this.this_0));
  p.addToLayoutTree$1(this.this_0);
 },
});

Isolate.$defineClass("AnimationException", "ExceptionBase",
function AnimationException() {
}, {
 get$type: function() {
  return 'AnimationException';
 },
});

Isolate.$defineClass("Panel", "FrameworkElement",
function Panel() {
}, {
 CreateElement$0: function() {
  this.set$_lib2_component($.createByTag('div'));
  this.get$_lib2_component().get$style().set$overflow('hidden');
 },
 get$type: function() {
  return 'Panel';
 },
 get$background: function() {
  return $.getValue(this.get$backgroundProperty());
 },
 set$background: function(value) {
  return $.setValue(this.get$backgroundProperty(), value);
 },
 get$content: function() {
  return this.get$children();
 },
 onChildrenChanging$1: function(args) {
  $.forEach(args.get$oldItems(), new $.Closure196());
  $.forEach(args.get$newItems(), new $.Closure197(this));
 },
 set$backgroundProperty: function(v) { this.backgroundProperty = v; },
 get$backgroundProperty: function() { return this.backgroundProperty; },
 get$children: function() { return this.children; },
 Panel$0: function() {
  $.appendBuckshotClass(this.get$_lib2_component(), 'panel');
  $.indexSet(this.get$_lib2_stateBag(), 'CONTAINER_CONTEXT', this.get$children());
  this.set$backgroundProperty($.FrameworkProperty$5(this, 'background', new $.Closure192(this), (void 0), $.CTC4));
  $.add(this.get$children().get$listChanged(), new $.Closure193(this));
 },
 is$IFrameworkContainer: true,
});

Isolate.$defineClass("Closure106", "Closure330",
function Closure(this_2, box_0) {
  this.this_2 = this_2;
  this.box_0 = box_0;
}, {
 $call$1: function(e) {
  this.this_2._lib2_bindSetterToElement$2(this.box_0.newSetter_1, e);
 },
});

Isolate.$defineClass("Closure114", "Closure330",
function Closure(box_0) {
  this.box_0 = box_0;
}, {
 $call$1: function(p) {
  return $.eq($.toLowerCase(p.get$propertyName()), $.toLowerCase(this.box_0.propertyName_1));
 },
});

Isolate.$defineClass("_PeerConnection00EventsImpl", "_EventsImpl",
function _PeerConnection00EventsImpl(_EventsImpl__lib5_ptr) {
  this._lib5_ptr = _EventsImpl__lib5_ptr;
}, {
});

Isolate.$defineClass("ControlTemplate", "FrameworkResource",
function ControlTemplate(templateProperty, controlTypeProperty, FrameworkResource_rawData, FrameworkResource_keyProperty, FrameworkObject_mostRecentMeasurement, FrameworkObject__lib2_dataContextUpdated, FrameworkObject_nameProperty, FrameworkObject_attachedPropertyChanged, FrameworkObject_measurementChanged, FrameworkObject_unloaded, FrameworkObject_loaded, FrameworkObject_lateBindings, FrameworkObject_dataContextProperty, FrameworkObject__lib2_isLoaded, FrameworkObject__lib2_parent, FrameworkObject__lib2_component, FrameworkObject__lib2_previousMeasurement, FrameworkObject__lib2_animationFrameID, FrameworkObject__lib2_watchingMeasurement, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this.templateProperty = templateProperty;
  this.controlTypeProperty = controlTypeProperty;
  this.rawData = FrameworkResource_rawData;
  this.keyProperty = FrameworkResource_keyProperty;
  this.mostRecentMeasurement = FrameworkObject_mostRecentMeasurement;
  this._lib2_dataContextUpdated = FrameworkObject__lib2_dataContextUpdated;
  this.nameProperty = FrameworkObject_nameProperty;
  this.attachedPropertyChanged = FrameworkObject_attachedPropertyChanged;
  this.measurementChanged = FrameworkObject_measurementChanged;
  this.unloaded = FrameworkObject_unloaded;
  this.loaded = FrameworkObject_loaded;
  this.lateBindings = FrameworkObject_lateBindings;
  this.dataContextProperty = FrameworkObject_dataContextProperty;
  this._lib2_isLoaded = FrameworkObject__lib2_isLoaded;
  this._lib2_parent = FrameworkObject__lib2_parent;
  this._lib2_component = FrameworkObject__lib2_component;
  this._lib2_previousMeasurement = FrameworkObject__lib2_previousMeasurement;
  this._lib2_animationFrameID = FrameworkObject__lib2_animationFrameID;
  this._lib2_watchingMeasurement = FrameworkObject__lib2_watchingMeasurement;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$type: function() {
  return 'ControlTemplate';
 },
 get$template: function() {
  return $.getValue(this.get$templateProperty());
 },
 _lib2_initializeControlTemplateProperties$0: function() {
  this.set$controlTypeProperty($.FrameworkProperty$5(this, 'controlType', new $.Closure307(), '', (void 0)));
  this.set$templateProperty($.FrameworkProperty$5(this, 'template', new $.Closure308(), (void 0), (void 0)));
  $._lib2_BindingImplementation$4(this.get$controlTypeProperty(), this.get$keyProperty(), $.CTC159, $.CTC160);
 },
 makeMe$0: function() {
  return $.ControlTemplate$0();
 },
 set$templateProperty: function(v) { this.templateProperty = v; },
 get$templateProperty: function() { return this.templateProperty; },
 set$controlTypeProperty: function(v) { this.controlTypeProperty = v; },
 get$controlTypeProperty: function() { return this.controlTypeProperty; },
 ControlTemplate$0: function() {
  this._lib2_initializeControlTemplateProperties$0();
  $.indexSet(this.get$_lib2_stateBag(), 'CONTAINER_CONTEXT', this.get$templateProperty());
 },
});

Isolate.$defineClass("_ElementList", "_ListWrapper",
function _ElementList(_ListWrapper__lib5_list) {
  this._lib5_list = _ListWrapper__lib5_list;
}, {
 getRange$2: function(start, rangeLength) {
  return $._lib5_ElementList$1($._ListWrapper.prototype.getRange$2.call(this, start, rangeLength));
 },
 filter$1: function(f) {
  return $._lib5_ElementList$1($._ListWrapper.prototype.filter$1.call(this, f));
 },
 is$List2: function() { return true; },
 is$Collection: function() { return true; },
});

Isolate.$defineClass("_WorkerContextEventsImpl", "_EventsImpl",
function _WorkerContextEventsImpl(_EventsImpl__lib5_ptr) {
  this._lib5_ptr = _EventsImpl__lib5_ptr;
}, {
});

Isolate.$defineClass("BindingMode", "Object",
function BindingMode(_lib2_val) {
  this._lib2_val = _lib2_val;
}, {
 toString$0: function() {
  $0:{
    var t0 = this.get$_lib2_val();
    if (1 === t0) {
      return 'OneWay';
    } else {
      if (2 === t0) {
        return 'TwoWay';
      } else {
        if (3 === t0) {
          return 'OneTime';
        } else {
          return '';
        }
      }
    }
  }
 },
 get$_lib2_val: function() { return this._lib2_val; },
});

Isolate.$defineClass("Closure62", "Closure330",
function Closure(this_8, doTransform_7) {
  this.this_8 = this_8;
  this.doTransform_7 = doTransform_7;
}, {
 $call$1: function(value) {
  this.doTransform_7.$call$1(this.this_8);
 },
});

Isolate.$defineClass("LinearGradientBrush", "Brush",
function LinearGradientBrush(fallbackColorProperty, directionProperty, stopsProperty, FrameworkResource_rawData, FrameworkResource_keyProperty, FrameworkObject_mostRecentMeasurement, FrameworkObject__lib2_dataContextUpdated, FrameworkObject_nameProperty, FrameworkObject_attachedPropertyChanged, FrameworkObject_measurementChanged, FrameworkObject_unloaded, FrameworkObject_loaded, FrameworkObject_lateBindings, FrameworkObject_dataContextProperty, FrameworkObject__lib2_isLoaded, FrameworkObject__lib2_parent, FrameworkObject__lib2_component, FrameworkObject__lib2_previousMeasurement, FrameworkObject__lib2_animationFrameID, FrameworkObject__lib2_watchingMeasurement, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this.fallbackColorProperty = fallbackColorProperty;
  this.directionProperty = directionProperty;
  this.stopsProperty = stopsProperty;
  this.rawData = FrameworkResource_rawData;
  this.keyProperty = FrameworkResource_keyProperty;
  this.mostRecentMeasurement = FrameworkObject_mostRecentMeasurement;
  this._lib2_dataContextUpdated = FrameworkObject__lib2_dataContextUpdated;
  this.nameProperty = FrameworkObject_nameProperty;
  this.attachedPropertyChanged = FrameworkObject_attachedPropertyChanged;
  this.measurementChanged = FrameworkObject_measurementChanged;
  this.unloaded = FrameworkObject_unloaded;
  this.loaded = FrameworkObject_loaded;
  this.lateBindings = FrameworkObject_lateBindings;
  this.dataContextProperty = FrameworkObject_dataContextProperty;
  this._lib2_isLoaded = FrameworkObject__lib2_isLoaded;
  this._lib2_parent = FrameworkObject__lib2_parent;
  this._lib2_component = FrameworkObject__lib2_component;
  this._lib2_previousMeasurement = FrameworkObject__lib2_previousMeasurement;
  this._lib2_animationFrameID = FrameworkObject__lib2_animationFrameID;
  this._lib2_watchingMeasurement = FrameworkObject__lib2_watchingMeasurement;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$type: function() {
  return 'LinearGradientBrush';
 },
 renderBrush$1: function(element) {
  var t0 = ({});
  var t1 = $.toString(this.get$fallbackColor());
  element.get$style().set$background(t1);
  t0.colorString_1 = '';
  $.forEach(this.get$stops(), new $.Closure310(this, t0));
  var t2 = '-webkit-linear-gradient(' + $.stringToString($.toString(this.get$direction())) + ', ' + $.stringToString(t0.colorString_1) + ')';
  element.get$style().set$background(t2);
  var t3 = '-moz-linear-gradient(' + $.stringToString($.toString(this.get$direction())) + ', ' + $.stringToString(t0.colorString_1) + ')';
  element.get$style().set$background(t3);
  var t4 = '-ms-linear-gradient(' + $.stringToString($.toString(this.get$direction())) + ', ' + $.stringToString(t0.colorString_1) + ')';
  element.get$style().set$background(t4);
  var t5 = '-o-linear-gradient(' + $.stringToString($.toString(this.get$direction())) + ', ' + $.stringToString(t0.colorString_1) + ')';
  element.get$style().set$background(t5);
  var t6 = 'linear-gradient(' + $.stringToString($.toString(this.get$direction())) + ', ' + $.stringToString(t0.colorString_1) + ')';
  element.get$style().set$background(t6);
 },
 _lib2_initLinearGradientBrushProperties$0: function() {
  var t0 = new $.Closure298();
  var t1 = $.List((void 0));
  $.setRuntimeTypeInfo(t1, ({E: 'GradientStop'}));
  this.set$stopsProperty($.FrameworkProperty$5(this, 'stops', t0, t1, (void 0)));
  this.set$directionProperty($.FrameworkProperty$5(this, 'direction', new $.Closure299(), $.CTC239, $.CTC240));
  this.set$fallbackColorProperty($.FrameworkProperty$5(this, 'fallbackColor', new $.Closure300(), $.Color$predefined$1($.CTC9), $.CTC241));
 },
 get$fallbackColor: function() {
  return $.getValue(this.get$fallbackColorProperty());
 },
 set$fallbackColor: function(value) {
  return $.setValue(this.get$fallbackColorProperty(), value);
 },
 get$direction: function() {
  return $.getValue(this.get$directionProperty());
 },
 set$direction: function(value) {
  return $.setValue(this.get$directionProperty(), value);
 },
 get$stops: function() {
  return $.getValue(this.get$stopsProperty());
 },
 makeMe$0: function() {
  return $.LinearGradientBrush$2((void 0), (void 0));
 },
 set$fallbackColorProperty: function(v) { this.fallbackColorProperty = v; },
 get$fallbackColorProperty: function() { return this.fallbackColorProperty; },
 set$directionProperty: function(v) { this.directionProperty = v; },
 get$directionProperty: function() { return this.directionProperty; },
 set$stopsProperty: function(v) { this.stopsProperty = v; },
 get$stopsProperty: function() { return this.stopsProperty; },
 LinearGradientBrush$2: function(dir, fallback) {
  this._lib2_initLinearGradientBrushProperties$0();
  if (!$.eqNullB(dir)) {
    this.set$direction(dir);
  }
  if (!$.eqNullB(fallback)) {
    this.set$fallbackColor(fallback);
  }
  $.indexSet(this.get$_lib2_stateBag(), 'CONTAINER_CONTEXT', this.get$stopsProperty());
 },
});

Isolate.$defineClass("LayoutCanvas", "Panel",
function LayoutCanvas(Panel_backgroundProperty, Panel_children, FrameworkElement_mouseUp, FrameworkElement_mouseDown, FrameworkElement_mouseMove, FrameworkElement_click, FrameworkElement_mouseLeave, FrameworkElement_mouseEnter, FrameworkElement_lostFocus, FrameworkElement_gotFocus, FrameworkElement_actionsProperty, FrameworkElement_perspectiveProperty, FrameworkElement_transformOriginZProperty, FrameworkElement_transformOriginYProperty, FrameworkElement_transformOriginXProperty, FrameworkElement_rotateZProperty, FrameworkElement_rotateYProperty, FrameworkElement_rotateXProperty, FrameworkElement_scaleZProperty, FrameworkElement_scaleYProperty, FrameworkElement_scaleXProperty, FrameworkElement_translateZProperty, FrameworkElement_translateYProperty, FrameworkElement_translateXProperty, FrameworkElement_styleProperty, FrameworkElement_visibilityProperty, FrameworkElement_opacityProperty, FrameworkElement_actualHeightProperty, FrameworkElement_actualWidthProperty, FrameworkElement_zOrderProperty, FrameworkElement_verticalAlignmentProperty, FrameworkElement_horizontalAlignmentProperty, FrameworkElement_tagProperty, FrameworkElement_cursorProperty, FrameworkElement_minHeightProperty, FrameworkElement_maxHeightProperty, FrameworkElement_minWidthProperty, FrameworkElement_maxWidthProperty, FrameworkElement_htmlIDProperty, FrameworkElement_heightProperty, FrameworkElement_widthProperty, FrameworkElement_marginProperty, FrameworkElement__lib2_transitionProperties, FrameworkElement__lib2_templateBindings, FrameworkElement__lib2_style, FrameworkElement__lib2_containerParent, FrameworkObject_mostRecentMeasurement, FrameworkObject__lib2_dataContextUpdated, FrameworkObject_nameProperty, FrameworkObject_attachedPropertyChanged, FrameworkObject_measurementChanged, FrameworkObject_unloaded, FrameworkObject_loaded, FrameworkObject_lateBindings, FrameworkObject_dataContextProperty, FrameworkObject__lib2_isLoaded, FrameworkObject__lib2_parent, FrameworkObject__lib2_component, FrameworkObject__lib2_previousMeasurement, FrameworkObject__lib2_animationFrameID, FrameworkObject__lib2_watchingMeasurement, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this.backgroundProperty = Panel_backgroundProperty;
  this.children = Panel_children;
  this.mouseUp = FrameworkElement_mouseUp;
  this.mouseDown = FrameworkElement_mouseDown;
  this.mouseMove = FrameworkElement_mouseMove;
  this.click = FrameworkElement_click;
  this.mouseLeave = FrameworkElement_mouseLeave;
  this.mouseEnter = FrameworkElement_mouseEnter;
  this.lostFocus = FrameworkElement_lostFocus;
  this.gotFocus = FrameworkElement_gotFocus;
  this.actionsProperty = FrameworkElement_actionsProperty;
  this.perspectiveProperty = FrameworkElement_perspectiveProperty;
  this.transformOriginZProperty = FrameworkElement_transformOriginZProperty;
  this.transformOriginYProperty = FrameworkElement_transformOriginYProperty;
  this.transformOriginXProperty = FrameworkElement_transformOriginXProperty;
  this.rotateZProperty = FrameworkElement_rotateZProperty;
  this.rotateYProperty = FrameworkElement_rotateYProperty;
  this.rotateXProperty = FrameworkElement_rotateXProperty;
  this.scaleZProperty = FrameworkElement_scaleZProperty;
  this.scaleYProperty = FrameworkElement_scaleYProperty;
  this.scaleXProperty = FrameworkElement_scaleXProperty;
  this.translateZProperty = FrameworkElement_translateZProperty;
  this.translateYProperty = FrameworkElement_translateYProperty;
  this.translateXProperty = FrameworkElement_translateXProperty;
  this.styleProperty = FrameworkElement_styleProperty;
  this.visibilityProperty = FrameworkElement_visibilityProperty;
  this.opacityProperty = FrameworkElement_opacityProperty;
  this.actualHeightProperty = FrameworkElement_actualHeightProperty;
  this.actualWidthProperty = FrameworkElement_actualWidthProperty;
  this.zOrderProperty = FrameworkElement_zOrderProperty;
  this.verticalAlignmentProperty = FrameworkElement_verticalAlignmentProperty;
  this.horizontalAlignmentProperty = FrameworkElement_horizontalAlignmentProperty;
  this.tagProperty = FrameworkElement_tagProperty;
  this.cursorProperty = FrameworkElement_cursorProperty;
  this.minHeightProperty = FrameworkElement_minHeightProperty;
  this.maxHeightProperty = FrameworkElement_maxHeightProperty;
  this.minWidthProperty = FrameworkElement_minWidthProperty;
  this.maxWidthProperty = FrameworkElement_maxWidthProperty;
  this.htmlIDProperty = FrameworkElement_htmlIDProperty;
  this.heightProperty = FrameworkElement_heightProperty;
  this.widthProperty = FrameworkElement_widthProperty;
  this.marginProperty = FrameworkElement_marginProperty;
  this._lib2_transitionProperties = FrameworkElement__lib2_transitionProperties;
  this._lib2_templateBindings = FrameworkElement__lib2_templateBindings;
  this._lib2_style = FrameworkElement__lib2_style;
  this._lib2_containerParent = FrameworkElement__lib2_containerParent;
  this.mostRecentMeasurement = FrameworkObject_mostRecentMeasurement;
  this._lib2_dataContextUpdated = FrameworkObject__lib2_dataContextUpdated;
  this.nameProperty = FrameworkObject_nameProperty;
  this.attachedPropertyChanged = FrameworkObject_attachedPropertyChanged;
  this.measurementChanged = FrameworkObject_measurementChanged;
  this.unloaded = FrameworkObject_unloaded;
  this.loaded = FrameworkObject_loaded;
  this.lateBindings = FrameworkObject_lateBindings;
  this.dataContextProperty = FrameworkObject_dataContextProperty;
  this._lib2_isLoaded = FrameworkObject__lib2_isLoaded;
  this._lib2_parent = FrameworkObject__lib2_parent;
  this._lib2_component = FrameworkObject__lib2_component;
  this._lib2_previousMeasurement = FrameworkObject__lib2_previousMeasurement;
  this._lib2_animationFrameID = FrameworkObject__lib2_animationFrameID;
  this._lib2_watchingMeasurement = FrameworkObject__lib2_watchingMeasurement;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$type: function() {
  return 'LayoutCanvas';
 },
 updateLayout$0: function() {
 },
 CreateElement$0: function() {
  this.set$_lib2_component($.createByTag('div'));
  this.get$_lib2_component().get$style().set$overflow('hidden');
 },
 _lib2_onAttachedPropertyChanging$2: function(sender, args) {
  args.get$property().get$propertyChangedCallback().$call$2(sender, args.get$value());
 },
 get$_lib2_onAttachedPropertyChanging: function() { return new $.Closure335(this); },
 onChildrenChanging$1: function(args) {
  $.Panel.prototype.onChildrenChanging$1.call(this, args);
  $.forEach(args.get$oldItems(), new $.Closure198(this));
  $.forEach(args.get$newItems(), new $.Closure199(this));
 },
 makeMe$0: function() {
  return $.LayoutCanvas$0();
 },
 LayoutCanvas$0: function() {
  $.appendBuckshotClass(this.get$_lib2_component(), 'layoutcanvas');
 },
});

Isolate.$defineClass("Closure317", "Closure330",
function Closure() {
}, {
 $call$1: function(_) {
 },
});

Isolate.$defineClass("Closure291", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$1: function(token) {
  token.set$_lib7_location(this.this_0.get$_lib7_i());
  $.addLast(this.this_0.get$_lib7_tq(), token);
 },
});

Isolate.$defineClass("_DocumentEventsImpl", "_ElementEventsImpl",
function _DocumentEventsImpl(_EventsImpl__lib5_ptr) {
  this._lib5_ptr = _EventsImpl__lib5_ptr;
}, {
 get$scroll: function() {
  return this._lib5_get$1('scroll');
 },
 get$mouseUp: function() {
  return this._lib5_get$1('mouseup');
 },
 get$mouseOver: function() {
  return this._lib5_get$1('mouseover');
 },
 get$mouseOut: function() {
  return this._lib5_get$1('mouseout');
 },
 get$mouseMove: function() {
  return this._lib5_get$1('mousemove');
 },
 get$mouseDown: function() {
  return this._lib5_get$1('mousedown');
 },
 get$keyUp: function() {
  return this._lib5_get$1('keyup');
 },
 get$focus: function() {
  return this._lib5_get$1('focus');
 },
 focus$0: function() { return this.get$focus().$call$0(); },
 get$click: function() {
  return this._lib5_get$1('click');
 },
 get$change: function() {
  return this._lib5_get$1('change');
 },
 get$blur: function() {
  return this._lib5_get$1('blur');
 },
});

Isolate.$defineClass("StringToInputTypesConverter", "Object",
function StringToInputTypesConverter() {
}, {
 convert$2: function(value, parameter) {
  if (!(typeof value === 'string')) {
    return value;
  }
  $0:{
    if ('password' === value) {
      return $.CTC195;
    } else {
      if ('email' === value) {
        return $.CTC196;
      } else {
        if ('date' === value) {
          return $.CTC197;
        } else {
          if ('datetime' === value) {
            return $.CTC198;
          } else {
            if ('month' === value) {
              return $.CTC199;
            } else {
              if ('search' === value) {
                return $.CTC200;
              } else {
                if ('telephone' === value) {
                  return $.CTC201;
                } else {
                  if ('text' === value) {
                    return $.CTC193;
                  } else {
                    if ('time' === value) {
                      return $.CTC202;
                    } else {
                      if ('url' === value) {
                        return $.CTC203;
                      } else {
                        if ('week' === value) {
                          return $.CTC204;
                        } else {
                          throw $.captureStackTrace($.CTC8);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
 },
 convert$1: function(value) {
  return this.convert$2(value,(void 0))
},
 is$IValueConverter: true,
});

Isolate.$defineClass("Closure5", "Closure330",
function Closure(this_2) {
  this.this_2 = this_2;
}, {
 $call$1: function(value) {
  var t0 = '' + $.stringToString(value.get$top()) + 'px ' + $.stringToString(value.get$right()) + 'px ' + $.stringToString(value.get$bottom()) + 'px ' + $.stringToString(value.get$left()) + 'px';
  this.this_2.get$_lib2_component().get$style().set$padding(t0);
  this.this_2.updateLayout$0();
 },
});

Isolate.$defineClass("Closure167", "Closure330",
function Closure() {
}, {
 $call$1: function(_) {
 },
});

Isolate.$defineClass("Closure294", "Closure330",
function Closure(this_3) {
  this.this_3 = this_3;
}, {
 $call$1: function(word) {
  var z = this.this_3.get$_lib7_i();
  if (typeof z !== 'number') return this.$call$1$bailout(word, 1, z);
  for (var ii = 0, z0 = z; $.ltB(ii, $.get$length(word)); ii = ii + 1) {
    if (!$.eqB($.charCodeAt(this.this_3.get$_lib7_xml(), z0), $.charCodeAt(word, ii))) {
      return -1;
    }
    z0 = z0 + 1;
  }
  return z0 - 1;
 },
 $call$1$bailout: function(word, state, env0) {
  switch (state) {
    case 1:
      z = env0;
      break;
  }
  switch (state) {
    case 0:
      var z = this.this_3.get$_lib7_i();
    case 1:
      state = 0;
      var ii = 0;
      var z0 = z;
      L0: while (true) {
        if (!$.ltB(ii, $.get$length(word))) break L0;
        if (!$.eqB($.charCodeAt(this.this_3.get$_lib7_xml(), z0), $.charCodeAt(word, ii))) {
          return -1;
        }
        z0 = $.add(z0, 1);
        ii = ii + 1;
      }
      return $.sub(z0, 1);
  }
 },
});

Isolate.$defineClass("Closure199", "Closure330",
function Closure(this_1) {
  this.this_1 = this_1;
}, {
 $call$1: function(element) {
  element.get$_lib2_component().get$style().set$position('absolute');
  var l = $.getLeft(element);
  var t = $.getTop(element);
  $.indexSet(element.get$_lib2_stateBag(), 'margin', element.get$margin());
  element.set$margin($.Thickness$specified$4(t, 0, 0, l));
  $.add$1(this.this_1.get$_lib2_component().get$nodes(), element.get$_lib2_component());
  $.add(element.get$attachedPropertyChanged(), this.this_1.get$_lib2_onAttachedPropertyChanging());
 },
});

Isolate.$defineClass("Closure280", "Closure330",
function Closure(this_6, box_0) {
  this.this_6 = this_6;
  this.box_0 = box_0;
}, {
 $call$2: function(k, v) {
  if (this.box_0.succeed_1 === true && this.this_6.get$attributes().containsKey$1(k) === true) {
    if (!$.eqB($.index(this.this_6.get$attributes(), k), v)) {
      this.box_0.succeed_1 = false;
    }
  } else {
    this.box_0.succeed_1 = false;
  }
 },
});

Isolate.$defineClass("Grid", "Panel",
function Grid(rowDefinitionsProperty, columnDefinitionsProperty, _lib2_internalChildren, Panel_backgroundProperty, Panel_children, FrameworkElement_mouseUp, FrameworkElement_mouseDown, FrameworkElement_mouseMove, FrameworkElement_click, FrameworkElement_mouseLeave, FrameworkElement_mouseEnter, FrameworkElement_lostFocus, FrameworkElement_gotFocus, FrameworkElement_actionsProperty, FrameworkElement_perspectiveProperty, FrameworkElement_transformOriginZProperty, FrameworkElement_transformOriginYProperty, FrameworkElement_transformOriginXProperty, FrameworkElement_rotateZProperty, FrameworkElement_rotateYProperty, FrameworkElement_rotateXProperty, FrameworkElement_scaleZProperty, FrameworkElement_scaleYProperty, FrameworkElement_scaleXProperty, FrameworkElement_translateZProperty, FrameworkElement_translateYProperty, FrameworkElement_translateXProperty, FrameworkElement_styleProperty, FrameworkElement_visibilityProperty, FrameworkElement_opacityProperty, FrameworkElement_actualHeightProperty, FrameworkElement_actualWidthProperty, FrameworkElement_zOrderProperty, FrameworkElement_verticalAlignmentProperty, FrameworkElement_horizontalAlignmentProperty, FrameworkElement_tagProperty, FrameworkElement_cursorProperty, FrameworkElement_minHeightProperty, FrameworkElement_maxHeightProperty, FrameworkElement_minWidthProperty, FrameworkElement_maxWidthProperty, FrameworkElement_htmlIDProperty, FrameworkElement_heightProperty, FrameworkElement_widthProperty, FrameworkElement_marginProperty, FrameworkElement__lib2_transitionProperties, FrameworkElement__lib2_templateBindings, FrameworkElement__lib2_style, FrameworkElement__lib2_containerParent, FrameworkObject_mostRecentMeasurement, FrameworkObject__lib2_dataContextUpdated, FrameworkObject_nameProperty, FrameworkObject_attachedPropertyChanged, FrameworkObject_measurementChanged, FrameworkObject_unloaded, FrameworkObject_loaded, FrameworkObject_lateBindings, FrameworkObject_dataContextProperty, FrameworkObject__lib2_isLoaded, FrameworkObject__lib2_parent, FrameworkObject__lib2_component, FrameworkObject__lib2_previousMeasurement, FrameworkObject__lib2_animationFrameID, FrameworkObject__lib2_watchingMeasurement, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this.rowDefinitionsProperty = rowDefinitionsProperty;
  this.columnDefinitionsProperty = columnDefinitionsProperty;
  this._lib2_internalChildren = _lib2_internalChildren;
  this.backgroundProperty = Panel_backgroundProperty;
  this.children = Panel_children;
  this.mouseUp = FrameworkElement_mouseUp;
  this.mouseDown = FrameworkElement_mouseDown;
  this.mouseMove = FrameworkElement_mouseMove;
  this.click = FrameworkElement_click;
  this.mouseLeave = FrameworkElement_mouseLeave;
  this.mouseEnter = FrameworkElement_mouseEnter;
  this.lostFocus = FrameworkElement_lostFocus;
  this.gotFocus = FrameworkElement_gotFocus;
  this.actionsProperty = FrameworkElement_actionsProperty;
  this.perspectiveProperty = FrameworkElement_perspectiveProperty;
  this.transformOriginZProperty = FrameworkElement_transformOriginZProperty;
  this.transformOriginYProperty = FrameworkElement_transformOriginYProperty;
  this.transformOriginXProperty = FrameworkElement_transformOriginXProperty;
  this.rotateZProperty = FrameworkElement_rotateZProperty;
  this.rotateYProperty = FrameworkElement_rotateYProperty;
  this.rotateXProperty = FrameworkElement_rotateXProperty;
  this.scaleZProperty = FrameworkElement_scaleZProperty;
  this.scaleYProperty = FrameworkElement_scaleYProperty;
  this.scaleXProperty = FrameworkElement_scaleXProperty;
  this.translateZProperty = FrameworkElement_translateZProperty;
  this.translateYProperty = FrameworkElement_translateYProperty;
  this.translateXProperty = FrameworkElement_translateXProperty;
  this.styleProperty = FrameworkElement_styleProperty;
  this.visibilityProperty = FrameworkElement_visibilityProperty;
  this.opacityProperty = FrameworkElement_opacityProperty;
  this.actualHeightProperty = FrameworkElement_actualHeightProperty;
  this.actualWidthProperty = FrameworkElement_actualWidthProperty;
  this.zOrderProperty = FrameworkElement_zOrderProperty;
  this.verticalAlignmentProperty = FrameworkElement_verticalAlignmentProperty;
  this.horizontalAlignmentProperty = FrameworkElement_horizontalAlignmentProperty;
  this.tagProperty = FrameworkElement_tagProperty;
  this.cursorProperty = FrameworkElement_cursorProperty;
  this.minHeightProperty = FrameworkElement_minHeightProperty;
  this.maxHeightProperty = FrameworkElement_maxHeightProperty;
  this.minWidthProperty = FrameworkElement_minWidthProperty;
  this.maxWidthProperty = FrameworkElement_maxWidthProperty;
  this.htmlIDProperty = FrameworkElement_htmlIDProperty;
  this.heightProperty = FrameworkElement_heightProperty;
  this.widthProperty = FrameworkElement_widthProperty;
  this.marginProperty = FrameworkElement_marginProperty;
  this._lib2_transitionProperties = FrameworkElement__lib2_transitionProperties;
  this._lib2_templateBindings = FrameworkElement__lib2_templateBindings;
  this._lib2_style = FrameworkElement__lib2_style;
  this._lib2_containerParent = FrameworkElement__lib2_containerParent;
  this.mostRecentMeasurement = FrameworkObject_mostRecentMeasurement;
  this._lib2_dataContextUpdated = FrameworkObject__lib2_dataContextUpdated;
  this.nameProperty = FrameworkObject_nameProperty;
  this.attachedPropertyChanged = FrameworkObject_attachedPropertyChanged;
  this.measurementChanged = FrameworkObject_measurementChanged;
  this.unloaded = FrameworkObject_unloaded;
  this.loaded = FrameworkObject_loaded;
  this.lateBindings = FrameworkObject_lateBindings;
  this.dataContextProperty = FrameworkObject_dataContextProperty;
  this._lib2_isLoaded = FrameworkObject__lib2_isLoaded;
  this._lib2_parent = FrameworkObject__lib2_parent;
  this._lib2_component = FrameworkObject__lib2_component;
  this._lib2_previousMeasurement = FrameworkObject__lib2_previousMeasurement;
  this._lib2_animationFrameID = FrameworkObject__lib2_animationFrameID;
  this._lib2_watchingMeasurement = FrameworkObject__lib2_watchingMeasurement;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$type: function() {
  return 'Grid';
 },
 _lib2_updateRowLayout$1: function(gridHeight) {
  var t0 = ({});
  t0.gridHeight_4 = gridHeight;
  if (!(this.get$_lib2_isLoaded() === true)) {
    return;
  }
  if ($.eqB($.get$length(this.get$rowDefinitions()), 0)) {
    $.forEach(this.get$_lib2_internalChildren(), new $.Closure211(t0));
    return;
  }
  t0.totalPixelValue_5 = 0;
  t0.totalStarValue_6 = 0;
  t0.lastStar_7 = (void 0);
  $.forEach(this.get$rowDefinitions(), new $.Closure212(this, t0));
  t0.availRowHeight_8 = $.sub(t0.gridHeight_4, t0.totalPixelValue_5);
  t0.ii_9 = 0;
  t0.totalStarLength_10 = 0;
  $.forEach(this.get$rowDefinitions(), new $.Closure213(this, t0));
  $.forEach(this.get$_lib2_internalChildren(), new $.Closure214(this));
 },
 _lib2_updateColumnLayout$1: function(gridMeasurement) {
  var t0 = ({});
  if (!(this.get$_lib2_isLoaded() === true)) {
    return;
  }
  t0.gridWidth_4 = gridMeasurement;
  if ($.eqB($.get$length(this.get$columnDefinitions()), 0)) {
    $.forEach(this.get$_lib2_internalChildren(), new $.Closure218(t0));
    return;
  }
  t0.totalPixelValue_5 = 0;
  t0.totalStarValue_6 = 0;
  t0.lastStar_7 = (void 0);
  $.forEach(this.get$columnDefinitions(), new $.Closure219(this, t0));
  t0.availColWidth_8 = $.sub(t0.gridWidth_4, t0.totalPixelValue_5);
  t0.ii_9 = 0;
  t0.totalStarLength_10 = 0;
  $.forEach(this.get$columnDefinitions(), new $.Closure220(this, t0));
  $.forEach(this.get$_lib2_internalChildren(), new $.Closure221(this));
 },
 _lib2_updateMeasurements$0: function() {
  this.updateMeasurement$0();
  $.forEach(this.get$_lib2_internalChildren(), new $.Closure312());
 },
 updateLayout$0: function() {
  this._lib2_updateMeasurements$0();
  $.window().requestLayoutFrame$1(new $.Closure311(this));
 },
 _lib2_totalLengthOf$1: function(definitions) {
  var t0 = ({});
  t0.total_1 = 0;
  $.forEach(definitions, new $.Closure215(t0));
  return t0.total_1;
 },
 _lib2_onChildrenChanging$2: function(_, args) {
  $.forEach(args.get$oldItems(), new $.Closure205());
  $.forEach(args.get$newItems(), new $.Closure206(this));
  this.updateLayout$0();
 },
 get$_lib2_onChildrenChanging: function() { return new $.Closure336(this); },
 get$rowDefinitions: function() {
  return $.getValue(this.get$rowDefinitionsProperty());
 },
 get$columnDefinitions: function() {
  return $.getValue(this.get$columnDefinitionsProperty());
 },
 makeMe$0: function() {
  return $.Grid$0();
 },
 set$rowDefinitionsProperty: function(v) { this.rowDefinitionsProperty = v; },
 get$rowDefinitionsProperty: function() { return this.rowDefinitionsProperty; },
 set$columnDefinitionsProperty: function(v) { this.columnDefinitionsProperty = v; },
 get$columnDefinitionsProperty: function() { return this.columnDefinitionsProperty; },
 get$_lib2_internalChildren: function() { return this._lib2_internalChildren; },
 Grid$0: function() {
  $.appendBuckshotClass(this.get$_lib2_component(), 'grid');
  var t0 = new $.Closure200(this);
  var t1 = $.ObservableList$0();
  $.setRuntimeTypeInfo(t1, ({T: 'ColumnDefinition'}));
  this.set$columnDefinitionsProperty($.FrameworkProperty$5(this, 'columnDefinitions', t0, t1, (void 0)));
  var t2 = new $.Closure201(this);
  var t3 = $.ObservableList$0();
  $.setRuntimeTypeInfo(t3, ({T: 'RowDefinition'}));
  this.set$rowDefinitionsProperty($.FrameworkProperty$5(this, 'rowDefinitions', t2, t3, (void 0)));
  $.add(this.get$children().get$listChanged(), this.get$_lib2_onChildrenChanging());
  $.add(this.get$columnDefinitions().get$listChanged(), new $.Closure202(this));
  $.add(this.get$rowDefinitions().get$listChanged(), new $.Closure203(this));
  $.add(this.get$measurementChanged(), new $.Closure204(this));
 },
});

Isolate.$defineClass("Closure302", "Closure330",
function Closure() {
}, {
 $call$1: function(v) {
 },
});

Isolate.$defineClass("Closure265", "Closure330",
function Closure(box_0) {
  this.box_0 = box_0;
}, {
 $call$2: function(name$, value) {
  $.indexSet(this.box_0.el_3.get$attributes(), name$, value);
 },
});

Isolate.$defineClass("Closure306", "Closure330",
function Closure() {
}, {
 $call$1: function(v) {
 },
});

Isolate.$defineClass("Closure170", "Closure330",
function Closure(box_7) {
  this.box_7 = box_7;
}, {
 $call$2: function(t, ah) {
  var t0 = ({});
  t0.ah_5 = ah;
  $.add$1(t0.ah_5.get$css(), ' } ');
  t0.sb_6 = $.StringBufferImpl$1('');
  $.forEach($.CTC158, new $.Closure172(t0));
  $.add$1(t0.sb_6, '#' + $.stringToString(t) + ' { ' + $.stringToString($.generateXPCSS('animation', '' + $.stringToString(this.box_7.anim_8.get$key()) + $.stringToString(t) + ' ' + $.stringToString($.last(this.box_7.anim_8.get$keyFrames()).get$time()) + 's linear forwards')) + ' }');
  $.add$1(this.box_7.compiledCSS_9, $.toString(t0.sb_6));
 },
});

Isolate.$defineClass("Closure322", "Closure330",
function Closure(this_1) {
  this.this_1 = this_1;
}, {
 $call$0: function() {
  return this.this_1._lib2_stopWatchMeasurement$0();
 },
});

Isolate.$defineClass("Closure279", "Closure330",
function Closure(box_2) {
  this.box_2 = box_2;
}, {
 $call$1: function(el) {
  if (!($.isEmpty(this.box_2.list_4) === true)) {
    return;
  }
  el._lib7_queryAttributeInternal$2(this.box_2.aMap_3, this.box_2.list_4);
 },
});

Isolate.$defineClass("_EventsImpl", "Object",
function _EventsImpl(_lib5_ptr) {
  this._lib5_ptr = _lib5_ptr;
}, {
 _lib5_get$1: function(type) {
  return $._lib5_EventListenerListImpl$2(this.get$_lib5_ptr(), type);
 },
 operator$index$1: function(type) {
  return this._lib5_get$1($.toLowerCase(type));
 },
 get$_lib5_ptr: function() { return this._lib5_ptr; },
});

Isolate.$defineClass("Closure87", "Closure330",
function Closure(this_37) {
  this.this_37 = this_37;
}, {
 $call$1: function(value) {
  this.this_37.get$updateMeasurementAsync().then$1(new $.Closure99(this.this_37));
 },
});

Isolate.$defineClass("Border", "FrameworkElement",
function Border(verticalScrollEnabledProperty, horizontalScrollEnabledProperty, contentProperty, borderThicknessProperty, borderColorProperty, cornerRadiusProperty, paddingProperty, backgroundProperty, _lib2_ref, FrameworkElement_mouseUp, FrameworkElement_mouseDown, FrameworkElement_mouseMove, FrameworkElement_click, FrameworkElement_mouseLeave, FrameworkElement_mouseEnter, FrameworkElement_lostFocus, FrameworkElement_gotFocus, FrameworkElement_actionsProperty, FrameworkElement_perspectiveProperty, FrameworkElement_transformOriginZProperty, FrameworkElement_transformOriginYProperty, FrameworkElement_transformOriginXProperty, FrameworkElement_rotateZProperty, FrameworkElement_rotateYProperty, FrameworkElement_rotateXProperty, FrameworkElement_scaleZProperty, FrameworkElement_scaleYProperty, FrameworkElement_scaleXProperty, FrameworkElement_translateZProperty, FrameworkElement_translateYProperty, FrameworkElement_translateXProperty, FrameworkElement_styleProperty, FrameworkElement_visibilityProperty, FrameworkElement_opacityProperty, FrameworkElement_actualHeightProperty, FrameworkElement_actualWidthProperty, FrameworkElement_zOrderProperty, FrameworkElement_verticalAlignmentProperty, FrameworkElement_horizontalAlignmentProperty, FrameworkElement_tagProperty, FrameworkElement_cursorProperty, FrameworkElement_minHeightProperty, FrameworkElement_maxHeightProperty, FrameworkElement_minWidthProperty, FrameworkElement_maxWidthProperty, FrameworkElement_htmlIDProperty, FrameworkElement_heightProperty, FrameworkElement_widthProperty, FrameworkElement_marginProperty, FrameworkElement__lib2_transitionProperties, FrameworkElement__lib2_templateBindings, FrameworkElement__lib2_style, FrameworkElement__lib2_containerParent, FrameworkObject_mostRecentMeasurement, FrameworkObject__lib2_dataContextUpdated, FrameworkObject_nameProperty, FrameworkObject_attachedPropertyChanged, FrameworkObject_measurementChanged, FrameworkObject_unloaded, FrameworkObject_loaded, FrameworkObject_lateBindings, FrameworkObject_dataContextProperty, FrameworkObject__lib2_isLoaded, FrameworkObject__lib2_parent, FrameworkObject__lib2_component, FrameworkObject__lib2_previousMeasurement, FrameworkObject__lib2_animationFrameID, FrameworkObject__lib2_watchingMeasurement, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this.verticalScrollEnabledProperty = verticalScrollEnabledProperty;
  this.horizontalScrollEnabledProperty = horizontalScrollEnabledProperty;
  this.contentProperty = contentProperty;
  this.borderThicknessProperty = borderThicknessProperty;
  this.borderColorProperty = borderColorProperty;
  this.cornerRadiusProperty = cornerRadiusProperty;
  this.paddingProperty = paddingProperty;
  this.backgroundProperty = backgroundProperty;
  this._lib2_ref = _lib2_ref;
  this.mouseUp = FrameworkElement_mouseUp;
  this.mouseDown = FrameworkElement_mouseDown;
  this.mouseMove = FrameworkElement_mouseMove;
  this.click = FrameworkElement_click;
  this.mouseLeave = FrameworkElement_mouseLeave;
  this.mouseEnter = FrameworkElement_mouseEnter;
  this.lostFocus = FrameworkElement_lostFocus;
  this.gotFocus = FrameworkElement_gotFocus;
  this.actionsProperty = FrameworkElement_actionsProperty;
  this.perspectiveProperty = FrameworkElement_perspectiveProperty;
  this.transformOriginZProperty = FrameworkElement_transformOriginZProperty;
  this.transformOriginYProperty = FrameworkElement_transformOriginYProperty;
  this.transformOriginXProperty = FrameworkElement_transformOriginXProperty;
  this.rotateZProperty = FrameworkElement_rotateZProperty;
  this.rotateYProperty = FrameworkElement_rotateYProperty;
  this.rotateXProperty = FrameworkElement_rotateXProperty;
  this.scaleZProperty = FrameworkElement_scaleZProperty;
  this.scaleYProperty = FrameworkElement_scaleYProperty;
  this.scaleXProperty = FrameworkElement_scaleXProperty;
  this.translateZProperty = FrameworkElement_translateZProperty;
  this.translateYProperty = FrameworkElement_translateYProperty;
  this.translateXProperty = FrameworkElement_translateXProperty;
  this.styleProperty = FrameworkElement_styleProperty;
  this.visibilityProperty = FrameworkElement_visibilityProperty;
  this.opacityProperty = FrameworkElement_opacityProperty;
  this.actualHeightProperty = FrameworkElement_actualHeightProperty;
  this.actualWidthProperty = FrameworkElement_actualWidthProperty;
  this.zOrderProperty = FrameworkElement_zOrderProperty;
  this.verticalAlignmentProperty = FrameworkElement_verticalAlignmentProperty;
  this.horizontalAlignmentProperty = FrameworkElement_horizontalAlignmentProperty;
  this.tagProperty = FrameworkElement_tagProperty;
  this.cursorProperty = FrameworkElement_cursorProperty;
  this.minHeightProperty = FrameworkElement_minHeightProperty;
  this.maxHeightProperty = FrameworkElement_maxHeightProperty;
  this.minWidthProperty = FrameworkElement_minWidthProperty;
  this.maxWidthProperty = FrameworkElement_maxWidthProperty;
  this.htmlIDProperty = FrameworkElement_htmlIDProperty;
  this.heightProperty = FrameworkElement_heightProperty;
  this.widthProperty = FrameworkElement_widthProperty;
  this.marginProperty = FrameworkElement_marginProperty;
  this._lib2_transitionProperties = FrameworkElement__lib2_transitionProperties;
  this._lib2_templateBindings = FrameworkElement__lib2_templateBindings;
  this._lib2_style = FrameworkElement__lib2_style;
  this._lib2_containerParent = FrameworkElement__lib2_containerParent;
  this.mostRecentMeasurement = FrameworkObject_mostRecentMeasurement;
  this._lib2_dataContextUpdated = FrameworkObject__lib2_dataContextUpdated;
  this.nameProperty = FrameworkObject_nameProperty;
  this.attachedPropertyChanged = FrameworkObject_attachedPropertyChanged;
  this.measurementChanged = FrameworkObject_measurementChanged;
  this.unloaded = FrameworkObject_unloaded;
  this.loaded = FrameworkObject_loaded;
  this.lateBindings = FrameworkObject_lateBindings;
  this.dataContextProperty = FrameworkObject_dataContextProperty;
  this._lib2_isLoaded = FrameworkObject__lib2_isLoaded;
  this._lib2_parent = FrameworkObject__lib2_parent;
  this._lib2_component = FrameworkObject__lib2_component;
  this._lib2_previousMeasurement = FrameworkObject__lib2_previousMeasurement;
  this._lib2_animationFrameID = FrameworkObject__lib2_animationFrameID;
  this._lib2_watchingMeasurement = FrameworkObject__lib2_watchingMeasurement;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$type: function() {
  return 'Border';
 },
 updateLayout$0: function() {
  if (!(this.get$_lib2_isLoaded() === true)) {
    return;
  }
  if (!$.eqNullB(this.get$content())) {
    if (!$.eqNullB(this.get$content().get$horizontalAlignment())) {
      if ($.eqB(this.get$content().get$horizontalAlignment(), $.CTC150)) {
        if (!($.attemptSetXPCSS(this.get$content().get$rawElement(), 'flex', '1') === true)) {
          if ($.eqNullB(this.get$_lib2_ref())) {
            this.set$_lib2_ref($.add(this.get$measurementChanged(), new $.Closure16(this)));
          }
        }
      } else {
        if (!($.attemptSetXPCSS(this.get$content().get$rawElement(), 'flex', 'none') === true)) {
          if (!$.eqNullB(this.get$_lib2_ref())) {
            $.sub(this.get$measurementChanged(), this.get$_lib2_ref());
            this.set$_lib2_ref((void 0));
            this.get$content().get$rawElement().get$style().set$width('auto');
          }
        }
        $.setHorizontalFlexBoxAlignment(this, this.get$content().get$horizontalAlignment());
      }
    }
    if (!$.eqNullB(this.get$content().get$verticalAlignment())) {
      $.setVerticalFlexBoxAlignment(this, this.get$content().get$verticalAlignment());
    }
  }
 },
 CreateElement$0: function() {
  this.set$_lib2_component($.createByTag('div'));
  this.get$_lib2_component().get$style().set$overflow('hidden');
  $.makeFlexBox(this);
 },
 set$content: function(value) {
  return $.setValue(this.get$contentProperty(), value);
 },
 get$content: function() {
  return $.getValue(this.get$contentProperty());
 },
 set$borderThickness: function(value) {
  return $.setValue(this.get$borderThicknessProperty(), value);
 },
 get$borderColor: function() {
  return $.getValue(this.get$borderColorProperty());
 },
 set$borderColor: function(value) {
  return $.setValue(this.get$borderColorProperty(), value);
 },
 get$padding: function() {
  return $.getValue(this.get$paddingProperty());
 },
 set$padding: function(value) {
  return $.setValue(this.get$paddingProperty(), value);
 },
 get$background: function() {
  return $.getValue(this.get$backgroundProperty());
 },
 set$background: function(value) {
  return $.setValue(this.get$backgroundProperty(), value);
 },
 _lib2_assignOverflowY$1: function(value) {
  if ($.eqB(value, true)) {
    this.get$_lib2_component().get$style().set$overflowY('auto');
  } else {
    this.get$_lib2_component().get$style().set$overflowY('hidden');
  }
 },
 _lib2_assignOverflowX$1: function(value) {
  if ($.eqB(value, true)) {
    this.get$_lib2_component().get$style().set$overflowX('auto');
  } else {
    this.get$_lib2_component().get$style().set$overflowX('hidden');
  }
 },
 _lib2_initBorderProperties$0: function() {
  this.set$contentProperty($.FrameworkProperty$5(this, 'content', new $.Closure3(this), (void 0), (void 0)));
  this.set$backgroundProperty($.AnimatingFrameworkProperty$6(this, 'background', new $.Closure4(this), 'background', (void 0), $.CTC4));
  this.set$paddingProperty($.FrameworkProperty$5(this, 'padding', new $.Closure5(this), $.Thickness$1(0), $.CTC5));
  this.set$cornerRadiusProperty($.AnimatingFrameworkProperty$6(this, 'cornerRadius', new $.Closure6(this), 'border-radius', (void 0), $.CTC6));
  this.set$borderColorProperty($.AnimatingFrameworkProperty$6(this, 'borderColor', new $.Closure7(this), 'border', (void 0), $.CTC4));
  this.set$borderThicknessProperty($.FrameworkProperty$5(this, 'borderThickness', new $.Closure8(this), $.Thickness$1(0), $.CTC5));
  this.set$horizontalScrollEnabledProperty($.AnimatingFrameworkProperty$6(this, 'horizontalScrollEnabled', new $.Closure9(this), 'overflow', false, $.CTC7));
  this.set$verticalScrollEnabledProperty($.AnimatingFrameworkProperty$6(this, 'verticalScrollEnabled', new $.Closure10(this), 'overflow', false, $.CTC7));
 },
 makeMe$0: function() {
  return $.Border$0();
 },
 set$verticalScrollEnabledProperty: function(v) { this.verticalScrollEnabledProperty = v; },
 set$horizontalScrollEnabledProperty: function(v) { this.horizontalScrollEnabledProperty = v; },
 set$contentProperty: function(v) { this.contentProperty = v; },
 get$contentProperty: function() { return this.contentProperty; },
 set$borderThicknessProperty: function(v) { this.borderThicknessProperty = v; },
 get$borderThicknessProperty: function() { return this.borderThicknessProperty; },
 set$borderColorProperty: function(v) { this.borderColorProperty = v; },
 get$borderColorProperty: function() { return this.borderColorProperty; },
 set$cornerRadiusProperty: function(v) { this.cornerRadiusProperty = v; },
 set$paddingProperty: function(v) { this.paddingProperty = v; },
 get$paddingProperty: function() { return this.paddingProperty; },
 set$backgroundProperty: function(v) { this.backgroundProperty = v; },
 get$backgroundProperty: function() { return this.backgroundProperty; },
 set$_lib2_ref: function(v) { this._lib2_ref = v; },
 get$_lib2_ref: function() { return this._lib2_ref; },
 Border$0: function() {
  $.appendBuckshotClass(this.get$_lib2_component(), 'border');
  this._lib2_initBorderProperties$0();
  $.indexSet(this.get$_lib2_stateBag(), 'CONTAINER_CONTEXT', this.get$contentProperty());
 },
 is$Border: true,
 is$IFrameworkContainer: true,
});

Isolate.$defineClass("Closure314", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$1: function(r) {
  this.this_0.set$mostRecentMeasurement(r);
 },
});

Isolate.$defineClass("_StyleTemplateImplementation", "FrameworkResource",
function _StyleTemplateImplementation(settersProperty, stateBagPrefix, _lib2_setters, _lib2_registeredElements, FrameworkResource_rawData, FrameworkResource_keyProperty, FrameworkObject_mostRecentMeasurement, FrameworkObject__lib2_dataContextUpdated, FrameworkObject_nameProperty, FrameworkObject_attachedPropertyChanged, FrameworkObject_measurementChanged, FrameworkObject_unloaded, FrameworkObject_loaded, FrameworkObject_lateBindings, FrameworkObject_dataContextProperty, FrameworkObject__lib2_isLoaded, FrameworkObject__lib2_parent, FrameworkObject__lib2_component, FrameworkObject__lib2_previousMeasurement, FrameworkObject__lib2_animationFrameID, FrameworkObject__lib2_watchingMeasurement, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this.settersProperty = settersProperty;
  this.stateBagPrefix = stateBagPrefix;
  this._lib2_setters = _lib2_setters;
  this._lib2_registeredElements = _lib2_registeredElements;
  this.rawData = FrameworkResource_rawData;
  this.keyProperty = FrameworkResource_keyProperty;
  this.mostRecentMeasurement = FrameworkObject_mostRecentMeasurement;
  this._lib2_dataContextUpdated = FrameworkObject__lib2_dataContextUpdated;
  this.nameProperty = FrameworkObject_nameProperty;
  this.attachedPropertyChanged = FrameworkObject_attachedPropertyChanged;
  this.measurementChanged = FrameworkObject_measurementChanged;
  this.unloaded = FrameworkObject_unloaded;
  this.loaded = FrameworkObject_loaded;
  this.lateBindings = FrameworkObject_lateBindings;
  this.dataContextProperty = FrameworkObject_dataContextProperty;
  this._lib2_isLoaded = FrameworkObject__lib2_isLoaded;
  this._lib2_parent = FrameworkObject__lib2_parent;
  this._lib2_component = FrameworkObject__lib2_component;
  this._lib2_previousMeasurement = FrameworkObject__lib2_previousMeasurement;
  this._lib2_animationFrameID = FrameworkObject__lib2_animationFrameID;
  this._lib2_watchingMeasurement = FrameworkObject__lib2_watchingMeasurement;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$type: function() {
  return 'StyleTemplate';
 },
 _lib2_bindSetterToElement$2: function(setter, element) {
  var t0 = ({});
  t0.setter_1 = setter;
  $.forEach($.filter(element.get$_lib2_frameworkProperties(), new $.Closure94(t0)), new $.Closure95(this, t0));
 },
 _lib2_unsetStyleBindings$1: function(element) {
  var t0 = ({});
  t0.element_1 = element;
  $.forEach(t0.element_1.get$_lib2_stateBag(), new $.Closure96(this, t0));
 },
 _lib2_setStyleBindings$1: function(element) {
  var t0 = ({});
  t0.element_1 = element;
  $.forEach(this.get$_lib2_setters(), new $.Closure93(this, t0));
 },
 _lib2_unregisterElement$1: function(element) {
  if ($.contains$1(this.get$_lib2_registeredElements(), element) === true) {
    this.get$_lib2_registeredElements().remove$1(element);
    this._lib2_unsetStyleBindings$1(element);
  }
 },
 _lib2_registerElement$1: function(element) {
  $.add$1(this.get$_lib2_registeredElements(), element);
  this._lib2_setStyleBindings$1(element);
 },
 _lib2_initStyleTemplateProperties$0: function() {
  var t0 = new $.Closure92();
  var t1 = $.ObservableList$0();
  $.setRuntimeTypeInfo(t1, ({T: 'StyleSetter'}));
  this.set$settersProperty($.FrameworkProperty$5(this, 'setters', t0, t1, (void 0)));
 },
 _lib2_registerNewSetterBindings$1: function(newSetter) {
  var t0 = ({});
  t0.newSetter_1 = newSetter;
  $.forEach(this.get$_lib2_registeredElements(), new $.Closure106(this, t0));
 },
 _lib2_onSettersCollectionChanging$2: function(_, args) {
  $.forEach(args.get$oldItems(), new $.Closure90(this));
  $.forEach(args.get$newItems(), new $.Closure91(this));
 },
 get$_lib2_onSettersCollectionChanging: function() { return new $.Closure337(this); },
 setProperty$2: function(property, newValue) {
  if (this.get$_lib2_setters().containsKey$1(property) === true) {
    $.index(this.get$_lib2_setters(), property).set$value(newValue);
  } else {
    $.indexSet(this.get$_lib2_setters(), property, $.StyleSetter$with$2(property, newValue));
    this._lib2_registerNewSetterBindings$1($.index(this.get$_lib2_setters(), property));
  }
 },
 get$setters: function() {
  return $.getValue(this.get$settersProperty());
 },
 makeMe$0: function() {
  return $._lib2_StyleTemplateImplementation$0();
 },
 set$settersProperty: function(v) { this.settersProperty = v; },
 get$settersProperty: function() { return this.settersProperty; },
 get$stateBagPrefix: function() { return this.stateBagPrefix; },
 get$_lib2_setters: function() { return this._lib2_setters; },
 get$_lib2_registeredElements: function() { return this._lib2_registeredElements; },
 _lib2_StyleTemplateImplementation$0: function() {
  this._lib2_initStyleTemplateProperties$0();
  $.add(this.get$setters().get$listChanged(), this.get$_lib2_onSettersCollectionChanging());
 },
});

Isolate.$defineClass("Closure8", "Closure330",
function Closure(this_5) {
  this.this_5 = this_5;
}, {
 $call$1: function(value) {
  if (!$.eqNullB(this.this_5.get$borderColor())) {
    var color = this.this_5.get$_lib2_component().get$style().get$borderColor();
  } else {
    color = $.CTC9.toString$0();
  }
  var t0 = 'solid ' + $.stringToString(value.get$top()) + 'px ' + $.stringToString(color);
  this.this_5.get$_lib2_component().get$style().set$borderTop(t0);
  var t1 = 'solid ' + $.stringToString(value.get$right()) + 'px ' + $.stringToString(color);
  this.this_5.get$_lib2_component().get$style().set$borderRight(t1);
  var t2 = 'solid ' + $.stringToString(value.get$left()) + 'px ' + $.stringToString(color);
  this.this_5.get$_lib2_component().get$style().set$borderLeft(t2);
  var t3 = 'solid ' + $.stringToString(value.get$bottom()) + 'px ' + $.stringToString(color);
  this.this_5.get$_lib2_component().get$style().set$borderBottom(t3);
 },
});

Isolate.$defineClass("HashSetImplementation", "Object",
function HashSetImplementation(_lib3_backingMap) {
  this._lib3_backingMap = _lib3_backingMap;
}, {
 set$_lib3_backingMap: function(v) { this._lib3_backingMap = v; },
 get$_lib3_backingMap: function() { return this._lib3_backingMap; },
 toString$0: function() {
  return $.collectionToString(this);
 },
 iterator$0: function() {
  var t0 = $.HashSetIterator$1(this);
  $.setRuntimeTypeInfo(t0, ({E: 'E'}));
  return t0;
 },
 get$length: function() {
  return $.get$length(this.get$_lib3_backingMap());
 },
 isEmpty$0: function() {
  return $.isEmpty(this.get$_lib3_backingMap());
 },
 some$1: function(f) {
  return $.some(this.get$_lib3_backingMap().getKeys$0(), f);
 },
 every$1: function(f) {
  return $.every(this.get$_lib3_backingMap().getKeys$0(), f);
 },
 filter$1: function(f) {
  var t0 = ({});
  t0.f_1 = f;
  var result = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(result, ({E: 'E'}));
  t0.result_2 = result;
  $.forEach(this.get$_lib3_backingMap(), new $.Closure21(t0));
  return t0.result_2;
 },
 forEach$1: function(f) {
  var t0 = ({});
  t0.f_1 = f;
  $.forEach(this.get$_lib3_backingMap(), new $.Closure2(t0));
 },
 addAll$1: function(collection) {
  $.forEach(collection, new $.Closure244(this));
 },
 remove$1: function(value) {
  if (!(this.get$_lib3_backingMap().containsKey$1(value) === true)) {
    return false;
  }
  this.get$_lib3_backingMap().remove$1(value);
  return true;
 },
 contains$1: function(value) {
  return this.get$_lib3_backingMap().containsKey$1(value);
 },
 add$1: function(value) {
  $.indexSet(this.get$_lib3_backingMap(), value, value);
 },
 clear$0: function() {
  $.clear(this.get$_lib3_backingMap());
 },
 HashSetImplementation$0: function() {
  this.set$_lib3_backingMap($.HashMapImplementation$0());
 },
 is$Collection: function() { return true; },
});

Isolate.$defineClass("StringToHorizontalAlignmentConverter", "Object",
function StringToHorizontalAlignmentConverter() {
}, {
 convert$2: function(value, parameter) {
  if (!(typeof value === 'string')) {
    return value;
  }
  $0:{
    if ('center' === value) {
      return $.CTC157;
    } else {
      if ('stretch' === value) {
        return $.CTC150;
      } else {
        if ('left' === value) {
          return $.CTC155;
        } else {
          if ('right' === value) {
            return $.CTC156;
          } else {
            throw $.captureStackTrace($.BuckshotException$1('Invalid horizontalAlignment value "' + $.stringToString(value) + '".'));
          }
        }
      }
    }
  }
 },
 convert$1: function(value) {
  return this.convert$2(value,(void 0))
},
 is$IValueConverter: true,
});

Isolate.$defineClass("Closure115", "Closure330",
function Closure(keys_0) {
  this.keys_0 = keys_0;
}, {
 $call$2: function(k, v) {
  return $.add$1(this.keys_0, k);
 },
});

Isolate.$defineClass("_IDBRequestEventsImpl", "_EventsImpl",
function _IDBRequestEventsImpl(_EventsImpl__lib5_ptr) {
  this._lib5_ptr = _EventsImpl__lib5_ptr;
}, {
});

Isolate.$defineClass("Closure219", "Closure330",
function Closure(this_11, box_3) {
  this.this_11 = this_11;
  this.box_3 = box_3;
}, {
 $call$1: function(c) {
  var t0 = ({});
  t0.c_1 = c;
  if ($.eqB(t0.c_1.get$width().get$gridUnitType(), $.CTC212)) {
    var t1 = t0.c_1.get$width().get$value();
    t0.c_1.set$_lib2_adjustedLength(t1);
    var totalPixelValue = $.add(this.box_3.totalPixelValue_5, t0.c_1.get$width().get$value());
    this.box_3.totalPixelValue_5 = totalPixelValue;
  } else {
    if ($.eqB(t0.c_1.get$width().get$gridUnitType(), $.CTC211)) {
      var totalStarValue = $.add(this.box_3.totalStarValue_6, t0.c_1.get$width().get$value());
      this.box_3.totalStarValue_6 = totalStarValue;
      var lastStar = t0.c_1;
      this.box_3.lastStar_7 = lastStar;
    } else {
      if ($.eqB(t0.c_1.get$width().get$gridUnitType(), $.CTC213)) {
        t0.widestAuto_2 = 0;
        $.forEach($.filter(this.this_11.get$_lib2_internalChildren(), new $.Closure222(this.this_11, t0)), new $.Closure223(t0));
        var t2 = t0.widestAuto_2;
        t0.c_1.set$_lib2_adjustedLength(t2);
        var totalPixelValue0 = $.add(this.box_3.totalPixelValue_5, t0.widestAuto_2);
        this.box_3.totalPixelValue_5 = totalPixelValue0;
      }
    }
  }
 },
});

Isolate.$defineClass("Closure155", "Closure330",
function Closure(box_0) {
  this.box_0 = box_0;
}, {
 $call$2: function(k, v) {
  $.indexSet(this.box_0.list_1, k, v);
 },
});

Isolate.$defineClass("Closure243", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$1: function(value) {
  var t0 = $.toString(value);
  this.this_0.get$_lib2_component().set$innerHTML(t0);
 },
});

Isolate.$defineClass("Closure10", "Closure330",
function Closure(this_7) {
  this.this_7 = this_7;
}, {
 $call$1: function(value) {
  this.this_7._lib2_assignOverflowY$1(value);
 },
});

Isolate.$defineClass("Closure125", "Closure330",
function Closure() {
}, {
 $call$1: function(value) {
 },
});

Isolate.$defineClass("_SpeechRecognitionEventsImpl", "_EventsImpl",
function _SpeechRecognitionEventsImpl(_EventsImpl__lib5_ptr) {
  this._lib5_ptr = _EventsImpl__lib5_ptr;
}, {
});

Isolate.$defineClass("Visibility", "Object",
function Visibility(_lib2_str) {
  this._lib2_str = _lib2_str;
}, {
 toString$0: function() {
  return this.get$_lib2_str();
 },
 get$_lib2_str: function() { return this._lib2_str; },
});

Isolate.$defineClass("Closure234", "Closure330",
function Closure(this_1) {
  this.this_1 = this_1;
}, {
 $call$1: function(v) {
  $.indexSet(this.this_1.get$_lib2_component().get$attributes(), 'name', v);
 },
});

Isolate.$defineClass("_SVGElementInstanceEventsImpl", "_EventsImpl",
function _SVGElementInstanceEventsImpl(_EventsImpl__lib5_ptr) {
  this._lib5_ptr = _EventsImpl__lib5_ptr;
}, {
 get$scroll: function() {
  return this._lib5_get$1('scroll');
 },
 get$resize: function() {
  return this._lib5_get$1('resize');
 },
 get$mouseUp: function() {
  return this._lib5_get$1('mouseup');
 },
 get$mouseOver: function() {
  return this._lib5_get$1('mouseover');
 },
 get$mouseOut: function() {
  return this._lib5_get$1('mouseout');
 },
 get$mouseMove: function() {
  return this._lib5_get$1('mousemove');
 },
 get$mouseDown: function() {
  return this._lib5_get$1('mousedown');
 },
 get$keyUp: function() {
  return this._lib5_get$1('keyup');
 },
 get$focus: function() {
  return this._lib5_get$1('focus');
 },
 focus$0: function() { return this.get$focus().$call$0(); },
 get$click: function() {
  return this._lib5_get$1('click');
 },
 get$change: function() {
  return this._lib5_get$1('change');
 },
 get$blur: function() {
  return this._lib5_get$1('blur');
 },
});

Isolate.$defineClass("Closure185", "Closure330",
function Closure(this_2) {
  this.this_2 = this_2;
}, {
 $call$1: function(value) {
  value.renderBrush$1(this.this_2.get$shapeElement());
 },
});

Isolate.$defineClass("Closure195", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$1: function(element) {
  element.addToLayoutTree$1(this.this_0);
  element.set$_lib2_containerParent(this.this_0);
 },
});

Isolate.$defineClass("Closure14", "Closure330",
function Closure() {
}, {
 $call$1: function(_) {
 },
});

Isolate.$defineClass("Closure38", "Closure330",
function Closure(this_23, clickHandler_22) {
  this.this_23 = this_23;
  this.clickHandler_22 = clickHandler_22;
}, {
 $call$0: function() {
  return this.this_23.get$_lib2_component().get$on().get$click().remove$1(this.clickHandler_22);
 },
});

Isolate.$defineClass("Closure133", "Closure330",
function Closure(doNotify_5) {
  this.doNotify_5 = doNotify_5;
}, {
 $call$1: function(e) {
  return this.doNotify_5.$call$0();
 },
});

Isolate.$defineClass("Closure22", "Closure330",
function Closure(box_0, output_2) {
  this.box_0 = box_0;
  this.output_2 = output_2;
}, {
 $call$1: function(element) {
  if (this.box_0.f_1.$call$1(element) === true) {
    $.add$1(this.output_2, element);
  }
 },
});

Isolate.$defineClass("Closure169", "Closure330",
function Closure(box_7, animHash_10) {
  this.box_7 = box_7;
  this.animHash_10 = animHash_10;
}, {
 $call$1: function(k) {
  var t0 = ({});
  t0.k_3 = k;
  $.forEach(t0.k_3.get$states(), new $.Closure174(this.box_7, this.animHash_10));
  $.forEach(this.animHash_10, new $.Closure175(t0));
  $.forEach(t0.k_3.get$states(), new $.Closure176(this.animHash_10));
  $.forEach(this.animHash_10, new $.Closure177());
 },
});

Isolate.$defineClass("Closure160", "Closure330",
function Closure() {
}, {
 $call$2: function(e, value) {
 },
});

Isolate.$defineClass("_XmlToken2", "Object",
function _XmlToken(_lib7_location, _lib7_str, quoteKind, kind) {
  this._lib7_location = _lib7_location;
  this._lib7_str = _lib7_str;
  this.quoteKind = quoteKind;
  this.kind = kind;
}, {
 toStringLiteral$0: function() {
  $0:{
    var t0 = this.get$kind();
    if (18 === t0) {
      return 'xmlns:';
    } else {
      if (2 === t0) {
        return '>';
      } else {
        if (1 === t0) {
          return '<';
        } else {
          if (3 === t0) {
            return '?';
          } else {
            if (4 === t0) {
              return this.get$_lib7_str();
            } else {
              if (5 === t0) {
                return '!';
              } else {
                if (6 === t0) {
                  return ':';
                } else {
                  if (7 === t0) {
                    return '/';
                  } else {
                    if (8 === t0) {
                      return '=';
                    } else {
                      if (9 === t0) {
                        if ($.eqB(this.get$quoteKind(), 34)) {
                          var t1 = '"';
                        } else {
                          t1 = '\'';
                        }
                        return t1;
                      } else {
                        if (10 === t0) {
                          return 'INVALID()';
                        } else {
                          throw $.captureStackTrace($.XmlException$1('String literal unavailable for ' + $.stringToString(this)));
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
 },
 toString$0: function() {
  $0:{
    var t0 = this.get$kind();
    if (16 === t0) {
      return '(<?)';
    } else {
      if (17 === t0) {
        return '(?>)';
      } else {
        if (11 === t0) {
          return '(-)';
        } else {
          if (1 === t0) {
            return '(<)';
          } else {
            if (2 === t0) {
              return '(>)';
            } else {
              if (3 === t0) {
                return '(?)';
              } else {
                if (4 === t0) {
                  return 'STRING(' + $.stringToString(this.get$_lib7_str()) + ')';
                } else {
                  if (5 === t0) {
                    return '(!)';
                  } else {
                    if (6 === t0) {
                      return '(:)';
                    } else {
                      if (7 === t0) {
                        return '(/)';
                      } else {
                        if (8 === t0) {
                          return '(=)';
                        } else {
                          if (9 === t0) {
                            return '(")';
                          } else {
                            if (12 === t0) {
                              return '(<!--)';
                            } else {
                              if (13 === t0) {
                                return '(-->)';
                              } else {
                                if (14 === t0) {
                                  return '(<![CDATA[)';
                                } else {
                                  if (15 === t0) {
                                    return '(]]>)';
                                  } else {
                                    if (18 === t0) {
                                      return 'xmlns:';
                                    } else {
                                      if (10 === t0) {
                                        return 'INVALID()';
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
 },
 set$_lib7_location: function(v) { this._lib7_location = v; },
 get$_lib7_location: function() { return this._lib7_location; },
 get$_lib7_str: function() { return this._lib7_str; },
 get$quoteKind: function() { return this.quoteKind; },
 get$kind: function() { return this.kind; },
});

Isolate.$defineClass("Closure226", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$1: function(value) {
  $.indexSet(this.this_0.get$_lib2_component().get$attributes(), 'placeholder', value);
 },
});

Isolate.$defineClass("XmlText", "XmlNode",
function XmlText(text, XmlNode_parent, XmlNode_type) {
  this.text = text;
  this.parent = XmlNode_parent;
  this.type = XmlNode_type;
}, {
 toString$0: function() {
  return this.get$text();
 },
 get$text: function() { return this.text; },
 is$XmlText: true,
});

Isolate.$defineClass("Closure92", "Closure330",
function Closure() {
}, {
 $call$1: function(v) {
 },
});

Isolate.$defineClass("Closure82", "Closure330",
function Closure(this_33) {
  this.this_33 = this_33;
}, {
 $call$1: function(value) {
  var t0 = '' + $.stringToString(value) + 'px';
  this.this_33.get$_lib2_component().get$style().set$maxHeight(t0);
 },
});

Isolate.$defineClass("PropertyChangingEventArgs", "EventArgs",
function PropertyChangingEventArgs(newValue, oldValue, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this.newValue = newValue;
  this.oldValue = oldValue;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
});

Isolate.$defineClass("Closure113", "Closure330",
function Closure(this_6, box_0) {
  this.this_6 = this_6;
  this.box_0 = box_0;
}, {
 $call$2: function(_, __) {
  return this.this_6.onItemMouseUp$1(this.box_0.item_1);
 },
});

Isolate.$defineClass("Closure224", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$1: function(e) {
  if ($.eqB(this.this_0.get$text(), $.get$dynamic(this.this_0.get$_lib2_component()).get$value())) {
    return;
  }
  var oldValue = this.this_0.get$text();
  var t0 = $.get$dynamic(this.this_0.get$_lib2_component()).get$value();
  this.this_0.set$text(t0);
  if (!(this.this_0.get$textChanged().get$hasHandlers() === true)) {
    return;
  }
  this.this_0.get$textChanged().invoke$2(this.this_0, $.TextChangedEventArgs$with$2(oldValue, this.this_0.get$text()));
  if (e.get$cancelable() === true) {
    e.set$cancelBubble(true);
  }
 },
});

Isolate.$defineClass("Closure273", "Closure330",
function Closure(box_0) {
  this.box_0 = box_0;
}, {
 $call$1: function(entry) {
  this.box_0.f_1.$call$2(entry.get$key(), entry.get$value());
 },
});

Isolate.$defineClass("Closure75", "Closure330",
function Closure(this_28) {
  this.this_28 = this_28;
}, {
 $call$1: function(value) {
  var t0 = $.toString($.toInt(value));
  this.this_28.get$_lib2_component().get$style().set$zIndex(t0);
 },
});

Isolate.$defineClass("Closure207", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$1: function(c) {
  if (!$.eqNullB(this.this_0.get$contentProperty().get$previousValue())) {
    this.this_0.get$contentProperty().get$previousValue().removeFromLayoutTree$0();
  }
  if (!$.eqNullB(c)) {
    c.addToLayoutTree$1(this.this_0);
  }
 },
});

Isolate.$defineClass("StringToCursorConverter", "Object",
function StringToCursorConverter() {
}, {
 convert$2: function(value, parameter) {
  if (!(typeof value === 'string')) {
    return value;
  }
  $0:{
    if ('Auto' === value) {
      return $.CTC174;
    } else {
      if ('Crosshair' === value) {
        return $.CTC175;
      } else {
        if ('Default' === value || 'Arrow' === value) {
          return $.CTC176;
        } else {
          if ('ResizeE' === value) {
            return $.CTC177;
          } else {
            if ('Help' === value) {
              return $.CTC178;
            } else {
              if ('Move' === value) {
                return $.CTC179;
              } else {
                if ('ResizeN' === value) {
                  return $.CTC180;
                } else {
                  if ('ResizeNE' === value) {
                    return $.CTC181;
                  } else {
                    if ('ResizeNW' === value) {
                      return $.CTC182;
                    } else {
                      if ('Pointer' === value) {
                        return $.CTC183;
                      } else {
                        if ('Progress' === value) {
                          return $.CTC184;
                        } else {
                          if ('ResizeS' === value) {
                            return $.CTC185;
                          } else {
                            if ('ResizeSE' === value) {
                              return $.CTC186;
                            } else {
                              if ('ResizeSW' === value) {
                                return $.CTC187;
                              } else {
                                if ('Text' === value) {
                                  return $.CTC188;
                                } else {
                                  if ('Wait' === value) {
                                    return $.CTC189;
                                  } else {
                                    if ('Inherit' === value) {
                                      return $.CTC190;
                                    } else {
                                      throw $.captureStackTrace($.CTC8);
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
 },
 convert$1: function(value) {
  return this.convert$2(value,(void 0))
},
 is$IValueConverter: true,
});

Isolate.$defineClass("Closure83", "Closure330",
function Closure(this_34) {
  this.this_34 = this_34;
}, {
 $call$1: function(value) {
  var t0 = '' + $.stringToString(value) + 'px';
  this.this_34.get$_lib2_component().get$style().set$minWidth(t0);
 },
});

Isolate.$defineClass("AnimatingFrameworkProperty", "FrameworkProperty",
function AnimatingFrameworkProperty(cssPropertyPeer, FrameworkProperty_readOnly, FrameworkProperty__lib2_previousValue, FrameworkProperty__lib2_value, FrameworkPropertyBase_stringToValueConverter, FrameworkPropertyBase_propertyChanging, FrameworkPropertyBase_propertyName, FrameworkPropertyBase_propertyChangedCallback, FrameworkPropertyBase_sourceObject, HashableObject__lib2_assignedHash) {
  this.cssPropertyPeer = cssPropertyPeer;
  this.readOnly = FrameworkProperty_readOnly;
  this._lib2_previousValue = FrameworkProperty__lib2_previousValue;
  this._lib2_value = FrameworkProperty__lib2_value;
  this.stringToValueConverter = FrameworkPropertyBase_stringToValueConverter;
  this.propertyChanging = FrameworkPropertyBase_propertyChanging;
  this.propertyName = FrameworkPropertyBase_propertyName;
  this.propertyChangedCallback = FrameworkPropertyBase_propertyChangedCallback;
  this.sourceObject = FrameworkPropertyBase_sourceObject;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$type: function() {
  return 'AnimatingFrameworkProperty';
 },
 get$cssPropertyPeer: function() { return this.cssPropertyPeer; },
 AnimatingFrameworkProperty$6: function(sourceObject, propertyName, propertyChangedCallback, cssPropertyPeer, value, converter) {
  if (!((typeof sourceObject === 'object') && !!sourceObject.is$FrameworkElement)) {
    throw $.captureStackTrace($.CTC8);
  }
 },
 is$AnimatingFrameworkProperty: true,
});

Isolate.$defineClass("Closure233", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$1: function(v) {
  $.indexSet(this.this_0.get$_lib2_component().get$attributes(), 'value', v);
 },
});

Isolate.$defineClass("Closure253", "Closure330",
function Closure(this_1) {
  this.this_1 = this_1;
}, {
 $call$1: function(iterationObject) {
  var it = this.this_1.get$_lib2_pfp().deserialize$1('<textblock horizontalalignment="stretch">' + $.stringToString(iterationObject) + '</textblock>');
  $.indexSet(it.get$_lib2_stateBag(), '__CollectionPresenterData__', iterationObject);
  this.this_1.get$itemCreated().invoke$2(this.this_1, $.ItemCreatedEventArgs$1(it));
  $.add$1(this.this_1.get$presentationPanel().get$children(), it);
 },
});

Isolate.$defineClass("ObjectNotClosureException", "Object",
function ObjectNotClosureException() {
}, {
 toString$0: function() {
  return 'Object is not closure';
 },
 is$Exception: true,
});

Isolate.$defineClass("Closure", "Closure330",
function Closure(box_0) {
  this.box_0 = box_0;
}, {
 $call$2: function(k, v) {
  if (!(this.box_0.first_3 === true)) {
    $.add$1(this.box_0.result_1, ', ');
  }
  this.box_0.first_3 = false;
  $._emitObject(k, this.box_0.result_1, this.box_0.visiting_2);
  $.add$1(this.box_0.result_1, ': ');
  $._emitObject(v, this.box_0.result_1, this.box_0.visiting_2);
 },
});

Isolate.$defineClass("Closure192", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$1: function(value) {
  if ($.eqNullB(value)) {
    this.this_0.get$_lib2_component().get$style().set$background('None');
    return;
  }
  value.renderBrush$1(this.this_0.get$_lib2_component());
 },
});

Isolate.$defineClass("EmptyElementRect", "Object",
function EmptyElementRect(clientRects, bounding, scroll, offset, client) {
  this.clientRects = clientRects;
  this.bounding = bounding;
  this.scroll = scroll;
  this.offset = offset;
  this.client = client;
}, {
 get$bounding: function() { return this.bounding; },
 get$scroll: function() { return this.scroll; },
 get$offset: function() { return this.offset; },
 get$client: function() { return this.client; },
});

Isolate.$defineClass("Closure179", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$1: function(v) {
  if (!(typeof v === 'number')) {
    return;
  }
  var result = v / 2;
  $.indexSet(this.this_0.get$shapeElement().get$attributes(), 'cx', result);
  $.setValue(this.this_0.get$_lib2_rxProperty(), result);
 },
});

Isolate.$defineClass("Closure36", "Closure330",
function Closure(this_19) {
  this.this_19 = this_19;
}, {
 $call$1: function(e) {
  this.this_19.get$_lib2_component().focus$0();
  if (!(this.this_19.get$click().get$hasHandlers() === true)) {
    return;
  }
  e.stopPropagation$0();
  var p = $.document().get$window().webkitConvertPointFromPageToNode$2(this.this_19.get$_lib2_component(), $.Point(e.get$pageX(), e.get$pageY()));
  this.this_19.get$click().invoke$2(this.this_19, $.MouseEventArgs$4(p.get$x(), p.get$y(), e.get$pageX(), e.get$pageY()));
 },
});

Isolate.$defineClass("Ellipse", "Shape",
function Ellipse(_lib2_ryProperty, _lib2_rxProperty, _lib2_cyProperty, _lib2_cxProperty, Shape__lib2_shProperty, Shape__lib2_swProperty, Shape_strokeWidthProperty, Shape_strokeProperty, Shape_fillProperty, Shape__lib2_svgWrapper, Shape_shapeElement, FrameworkElement_mouseUp, FrameworkElement_mouseDown, FrameworkElement_mouseMove, FrameworkElement_click, FrameworkElement_mouseLeave, FrameworkElement_mouseEnter, FrameworkElement_lostFocus, FrameworkElement_gotFocus, FrameworkElement_actionsProperty, FrameworkElement_perspectiveProperty, FrameworkElement_transformOriginZProperty, FrameworkElement_transformOriginYProperty, FrameworkElement_transformOriginXProperty, FrameworkElement_rotateZProperty, FrameworkElement_rotateYProperty, FrameworkElement_rotateXProperty, FrameworkElement_scaleZProperty, FrameworkElement_scaleYProperty, FrameworkElement_scaleXProperty, FrameworkElement_translateZProperty, FrameworkElement_translateYProperty, FrameworkElement_translateXProperty, FrameworkElement_styleProperty, FrameworkElement_visibilityProperty, FrameworkElement_opacityProperty, FrameworkElement_actualHeightProperty, FrameworkElement_actualWidthProperty, FrameworkElement_zOrderProperty, FrameworkElement_verticalAlignmentProperty, FrameworkElement_horizontalAlignmentProperty, FrameworkElement_tagProperty, FrameworkElement_cursorProperty, FrameworkElement_minHeightProperty, FrameworkElement_maxHeightProperty, FrameworkElement_minWidthProperty, FrameworkElement_maxWidthProperty, FrameworkElement_htmlIDProperty, FrameworkElement_heightProperty, FrameworkElement_widthProperty, FrameworkElement_marginProperty, FrameworkElement__lib2_transitionProperties, FrameworkElement__lib2_templateBindings, FrameworkElement__lib2_style, FrameworkElement__lib2_containerParent, FrameworkObject_mostRecentMeasurement, FrameworkObject__lib2_dataContextUpdated, FrameworkObject_nameProperty, FrameworkObject_attachedPropertyChanged, FrameworkObject_measurementChanged, FrameworkObject_unloaded, FrameworkObject_loaded, FrameworkObject_lateBindings, FrameworkObject_dataContextProperty, FrameworkObject__lib2_isLoaded, FrameworkObject__lib2_parent, FrameworkObject__lib2_component, FrameworkObject__lib2_previousMeasurement, FrameworkObject__lib2_animationFrameID, FrameworkObject__lib2_watchingMeasurement, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this._lib2_ryProperty = _lib2_ryProperty;
  this._lib2_rxProperty = _lib2_rxProperty;
  this._lib2_cyProperty = _lib2_cyProperty;
  this._lib2_cxProperty = _lib2_cxProperty;
  this._lib2_shProperty = Shape__lib2_shProperty;
  this._lib2_swProperty = Shape__lib2_swProperty;
  this.strokeWidthProperty = Shape_strokeWidthProperty;
  this.strokeProperty = Shape_strokeProperty;
  this.fillProperty = Shape_fillProperty;
  this._lib2_svgWrapper = Shape__lib2_svgWrapper;
  this.shapeElement = Shape_shapeElement;
  this.mouseUp = FrameworkElement_mouseUp;
  this.mouseDown = FrameworkElement_mouseDown;
  this.mouseMove = FrameworkElement_mouseMove;
  this.click = FrameworkElement_click;
  this.mouseLeave = FrameworkElement_mouseLeave;
  this.mouseEnter = FrameworkElement_mouseEnter;
  this.lostFocus = FrameworkElement_lostFocus;
  this.gotFocus = FrameworkElement_gotFocus;
  this.actionsProperty = FrameworkElement_actionsProperty;
  this.perspectiveProperty = FrameworkElement_perspectiveProperty;
  this.transformOriginZProperty = FrameworkElement_transformOriginZProperty;
  this.transformOriginYProperty = FrameworkElement_transformOriginYProperty;
  this.transformOriginXProperty = FrameworkElement_transformOriginXProperty;
  this.rotateZProperty = FrameworkElement_rotateZProperty;
  this.rotateYProperty = FrameworkElement_rotateYProperty;
  this.rotateXProperty = FrameworkElement_rotateXProperty;
  this.scaleZProperty = FrameworkElement_scaleZProperty;
  this.scaleYProperty = FrameworkElement_scaleYProperty;
  this.scaleXProperty = FrameworkElement_scaleXProperty;
  this.translateZProperty = FrameworkElement_translateZProperty;
  this.translateYProperty = FrameworkElement_translateYProperty;
  this.translateXProperty = FrameworkElement_translateXProperty;
  this.styleProperty = FrameworkElement_styleProperty;
  this.visibilityProperty = FrameworkElement_visibilityProperty;
  this.opacityProperty = FrameworkElement_opacityProperty;
  this.actualHeightProperty = FrameworkElement_actualHeightProperty;
  this.actualWidthProperty = FrameworkElement_actualWidthProperty;
  this.zOrderProperty = FrameworkElement_zOrderProperty;
  this.verticalAlignmentProperty = FrameworkElement_verticalAlignmentProperty;
  this.horizontalAlignmentProperty = FrameworkElement_horizontalAlignmentProperty;
  this.tagProperty = FrameworkElement_tagProperty;
  this.cursorProperty = FrameworkElement_cursorProperty;
  this.minHeightProperty = FrameworkElement_minHeightProperty;
  this.maxHeightProperty = FrameworkElement_maxHeightProperty;
  this.minWidthProperty = FrameworkElement_minWidthProperty;
  this.maxWidthProperty = FrameworkElement_maxWidthProperty;
  this.htmlIDProperty = FrameworkElement_htmlIDProperty;
  this.heightProperty = FrameworkElement_heightProperty;
  this.widthProperty = FrameworkElement_widthProperty;
  this.marginProperty = FrameworkElement_marginProperty;
  this._lib2_transitionProperties = FrameworkElement__lib2_transitionProperties;
  this._lib2_templateBindings = FrameworkElement__lib2_templateBindings;
  this._lib2_style = FrameworkElement__lib2_style;
  this._lib2_containerParent = FrameworkElement__lib2_containerParent;
  this.mostRecentMeasurement = FrameworkObject_mostRecentMeasurement;
  this._lib2_dataContextUpdated = FrameworkObject__lib2_dataContextUpdated;
  this.nameProperty = FrameworkObject_nameProperty;
  this.attachedPropertyChanged = FrameworkObject_attachedPropertyChanged;
  this.measurementChanged = FrameworkObject_measurementChanged;
  this.unloaded = FrameworkObject_unloaded;
  this.loaded = FrameworkObject_loaded;
  this.lateBindings = FrameworkObject_lateBindings;
  this.dataContextProperty = FrameworkObject_dataContextProperty;
  this._lib2_isLoaded = FrameworkObject__lib2_isLoaded;
  this._lib2_parent = FrameworkObject__lib2_parent;
  this._lib2_component = FrameworkObject__lib2_component;
  this._lib2_previousMeasurement = FrameworkObject__lib2_previousMeasurement;
  this._lib2_animationFrameID = FrameworkObject__lib2_animationFrameID;
  this._lib2_watchingMeasurement = FrameworkObject__lib2_watchingMeasurement;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$type: function() {
  return 'Ellipse';
 },
 get$shapeTag: function() {
  return 'ellipse';
 },
 _lib2_initEllipseProperties$0: function() {
  this.set$_lib2_cxProperty($.FrameworkProperty$5(this, '_cx', new $.Closure179(this), (void 0), (void 0)));
  this.set$_lib2_cyProperty($.FrameworkProperty$5(this, '_cy', new $.Closure180(this), (void 0), (void 0)));
  this.set$_lib2_rxProperty($.FrameworkProperty$5(this, '_rx', new $.Closure181(this), (void 0), (void 0)));
  this.set$_lib2_ryProperty($.FrameworkProperty$5(this, '_ry', new $.Closure182(this), (void 0), (void 0)));
  $._lib2_BindingImplementation$4(this.get$widthProperty(), this.get$_lib2_cxProperty(), $.CTC159, $.CTC160);
  $._lib2_BindingImplementation$4(this.get$heightProperty(), this.get$_lib2_cyProperty(), $.CTC159, $.CTC160);
 },
 set$_lib2_ryProperty: function(v) { this._lib2_ryProperty = v; },
 get$_lib2_ryProperty: function() { return this._lib2_ryProperty; },
 set$_lib2_rxProperty: function(v) { this._lib2_rxProperty = v; },
 get$_lib2_rxProperty: function() { return this._lib2_rxProperty; },
 set$_lib2_cyProperty: function(v) { this._lib2_cyProperty = v; },
 get$_lib2_cyProperty: function() { return this._lib2_cyProperty; },
 set$_lib2_cxProperty: function(v) { this._lib2_cxProperty = v; },
 get$_lib2_cxProperty: function() { return this._lib2_cxProperty; },
 makeMe$0: function() {
  return $.Ellipse$0();
 },
 Ellipse$0: function() {
  $.appendBuckshotClass(this.get$_lib2_component(), 'ellipse');
  this._lib2_initEllipseProperties$0();
 },
});

Isolate.$defineClass("Closure128", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$1: function(v) {
  this.this_0._lib2_updateDDL$0();
 },
});

Isolate.$defineClass("Closure43", "Closure330",
function Closure(this_31, lostFocusHandler_30) {
  this.this_31 = this_31;
  this.lostFocusHandler_30 = lostFocusHandler_30;
}, {
 $call$0: function() {
  return $.add$1(this.this_31.get$_lib2_component().get$on().get$blur(), this.lostFocusHandler_30);
 },
});

Isolate.$defineClass("InputTypes", "Object",
function InputTypes(_lib2_str) {
  this._lib2_str = _lib2_str;
}, {
 toString$0: function() {
  return this.get$_lib2_str();
 },
 get$_lib2_str: function() { return this._lib2_str; },
});

Isolate.$defineClass("Closure175", "Closure330",
function Closure(box_2) {
  this.box_2 = box_2;
}, {
 $call$2: function(_, s) {
  $.add$1(s.get$css(), ' ' + $.stringToString(this.box_2.k_3.get$_lib2_percentage()) + '% {');
 },
});

Isolate.$defineClass("Closure197", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$1: function(item) {
  if (!$.eqNullB(item.get$parent())) {
    throw $.captureStackTrace($.CTC8);
  }
  item.set$parent(this.this_0);
 },
});

Isolate.$defineClass("Closure19", "Closure330",
function Closure(box_0) {
  this.box_0 = box_0;
}, {
 $call$2: function(p, bd) {
  if ($.eqB(bd.get$dataContextPath(), '')) {
    $._lib2_BindingImplementation$4(this.box_0.dc_1, p, $.CTC159, $.CTC160);
  } else {
    var t0 = this.box_0.dc_1.get$value();
    if (!((typeof t0 === 'object') && !!t0.is$BuckshotObject)) {
      throw $.captureStackTrace($.BuckshotException$1('Datacontext binding attempted to resolve properties \'' + $.stringToString(bd.get$dataContextPath()) + '\' on non-BuckshotObject type.'));
    }
    if (!$.eqNullB(bd.get$converter())) {
      $._lib2_BindingImplementation$4(this.box_0.dc_1.get$value().resolveProperty$1(bd.get$dataContextPath()), p, bd.get$bindingMode(), bd.get$converter());
    } else {
      $._lib2_BindingImplementation$4(this.box_0.dc_1.get$value().resolveProperty$1(bd.get$dataContextPath()), p, bd.get$bindingMode(), $.CTC160);
    }
  }
 },
});

Isolate.$defineClass("IllegalAccessException", "Object",
function IllegalAccessException() {
}, {
 toString$0: function() {
  return 'Attempt to modify an immutable object';
 },
 is$Exception: true,
});

Isolate.$defineClass("Closure152", "Closure330",
function Closure(this_1) {
  this.this_1 = this_1;
}, {
 $call$1: function(value) {
  $.get$dynamic(this.this_1.get$_lib2_component()).set$value(value);
 },
});

Isolate.$defineClass("Closure319", "Closure330",
function Closure() {
}, {
 $call$1: function(_) {
 },
});

Isolate.$defineClass("Closure313", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$1: function(r) {
  this.this_0.set$mostRecentMeasurement(r);
 },
});

Isolate.$defineClass("Closure124", "Closure330",
function Closure() {
}, {
 $call$1: function(value) {
 },
});

Isolate.$defineClass("Closure84", "Closure330",
function Closure(this_35) {
  this.this_35 = this_35;
}, {
 $call$1: function(value) {
  var t0 = '' + $.stringToString(value) + 'px';
  this.this_35.get$_lib2_component().get$style().set$maxWidth(t0);
 },
});

Isolate.$defineClass("Closure267", "Closure330",
function Closure(box_0) {
  this.box_0 = box_0;
}, {
 $call$2: function(name$, uri) {
  $.indexSet(this.box_0.el_2.get$namespaces(), name$, uri);
 },
});

Isolate.$defineClass("Closure182", "Closure330",
function Closure(this_3) {
  this.this_3 = this_3;
}, {
 $call$1: function(v) {
  $.indexSet(this.this_3.get$shapeElement().get$attributes(), 'ry', '' + $.stringToString($.sub(v, $.div($.getValue(this.this_3.get$strokeWidthProperty()), 2))));
 },
});

Isolate.$defineClass("BadNumberFormatException", "Object",
function BadNumberFormatException(_lib4_s) {
  this._lib4_s = _lib4_s;
}, {
 get$_lib4_s: function() { return this._lib4_s; },
 toString$0: function() {
  return 'BadNumberFormatException: \'' + $.stringToString(this.get$_lib4_s()) + '\'';
 },
 is$BadNumberFormatException: true,
 is$Exception: true,
});

Isolate.$defineClass("Closure61", "Closure330",
function Closure(this_6, doTransform_5) {
  this.this_6 = this_6;
  this.doTransform_5 = doTransform_5;
}, {
 $call$1: function(value) {
  this.doTransform_5.$call$1(this.this_6);
 },
});

Isolate.$defineClass("_DeletedKeySentinel", "Object",
function _DeletedKeySentinel() {
}, {
});

Isolate.$defineClass("_FrozenElementListIterator", "Object",
function _FrozenElementListIterator(_lib5_index, _lib5_list) {
  this._lib5_index = _lib5_index;
  this._lib5_list = _lib5_list;
}, {
 hasNext$0: function() {
  return $.lt(this.get$_lib5_index(), $.get$length(this.get$_lib5_list()));
 },
 next$0: function() {
  if (!(this.hasNext$0() === true)) {
    throw $.captureStackTrace($.CTC3);
  }
  var t0 = this.get$_lib5_list();
  var t1 = this.get$_lib5_index();
  this.set$_lib5_index($.add(t1, 1));
  return $.index(t0, t1);
 },
 set$_lib5_index: function(v) { this._lib5_index = v; },
 get$_lib5_index: function() { return this._lib5_index; },
 get$_lib5_list: function() { return this._lib5_list; },
});

Isolate.$defineClass("Closure270", "Closure330",
function Closure(box_0) {
  this.box_0 = box_0;
}, {
 $call$2: function(nname, uri) {
  $.add$1(this.box_0.l_1, $.XmlNamespace$2(nname, uri));
 },
});

Isolate.$defineClass("SelectedItemChangedEventArgs", "EventArgs",
function SelectedItemChangedEventArgs(selectedItem, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this.selectedItem = selectedItem;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 makeMe$0: function() {
  return;
 },
 SelectedItemChangedEventArgs$1: function(selectedItem) {
 },
});

Isolate.$defineClass("Closure188", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$1: function(value) {
  if (!$.eqNullB($.getValue(this.this_0.get$strokeProperty()))) {
    var color = $.getValue(this.this_0.get$strokeProperty());
  } else {
    color = $.CTC9.toString$0();
  }
  var t0 = 'solid ' + $.stringToString(value.get$top()) + 'px ' + $.stringToString(color);
  this.this_0.get$_lib2_component().get$style().set$borderTop(t0);
  var t1 = 'solid ' + $.stringToString(value.get$right()) + 'px ' + $.stringToString(color);
  this.this_0.get$_lib2_component().get$style().set$borderRight(t1);
  var t2 = 'solid ' + $.stringToString(value.get$left()) + 'px ' + $.stringToString(color);
  this.this_0.get$_lib2_component().get$style().set$borderLeft(t2);
  var t3 = 'solid ' + $.stringToString(value.get$bottom()) + 'px ' + $.stringToString(color);
  this.this_0.get$_lib2_component().get$style().set$borderBottom(t3);
 },
});

Isolate.$defineClass("Closure242", "Closure330",
function Closure(this_1) {
  this.this_1 = this_1;
}, {
 $call$1: function(value) {
  $.indexSet(this.this_1.get$_lib2_component().get$attributes(), 'alt', $.toString(value));
 },
});

Isolate.$defineClass("AnimationKeyFrame", "BuckshotObject",
function AnimationKeyFrame(_lib2_percentage, statesProperty, timeProperty, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this._lib2_percentage = _lib2_percentage;
  this.statesProperty = statesProperty;
  this.timeProperty = timeProperty;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$type: function() {
  return 'AnimationKeyFrame';
 },
 makeMe$0: function() {
  return $.AnimationKeyFrame$0();
 },
 get$states: function() {
  return $.getValue(this.get$statesProperty());
 },
 get$time: function() {
  return $.getValue(this.get$timeProperty());
 },
 _lib2_initAnimationKeyFrameProperties$0: function() {
  this.set$timeProperty($.FrameworkProperty$5(this, 'time', new $.Closure166(), (void 0), $.CTC6));
  var t0 = new $.Closure167();
  var t1 = $.List((void 0));
  $.setRuntimeTypeInfo(t1, ({E: 'AnimationState'}));
  this.set$statesProperty($.FrameworkProperty$5(this, 'states', t0, t1, (void 0)));
 },
 set$_lib2_percentage: function(v) { this._lib2_percentage = v; },
 get$_lib2_percentage: function() { return this._lib2_percentage; },
 set$statesProperty: function(v) { this.statesProperty = v; },
 get$statesProperty: function() { return this.statesProperty; },
 set$timeProperty: function(v) { this.timeProperty = v; },
 get$timeProperty: function() { return this.timeProperty; },
 AnimationKeyFrame$0: function() {
  this._lib2_initAnimationKeyFrameProperties$0();
  $.indexSet(this.get$_lib2_stateBag(), 'CONTAINER_CONTEXT', this.get$statesProperty());
 },
});

Isolate.$defineClass("_JavaScriptAudioNodeEventsImpl", "_EventsImpl",
function _JavaScriptAudioNodeEventsImpl(_EventsImpl__lib5_ptr) {
  this._lib5_ptr = _EventsImpl__lib5_ptr;
}, {
});

Isolate.$defineClass("_XMLHttpRequestEventsImpl", "_EventsImpl",
function _XMLHttpRequestEventsImpl(_EventsImpl__lib5_ptr) {
  this._lib5_ptr = _EventsImpl__lib5_ptr;
}, {
});

Isolate.$defineClass("Closure91", "Closure330",
function Closure(this_1) {
  this.this_1 = this_1;
}, {
 $call$1: function(item) {
  this.this_1.setProperty$2(item.get$property(), item.get$value());
 },
});

Isolate.$defineClass("Buckshot", "FrameworkObject",
function Buckshot(versionProperty, windowHeightProperty, windowWidthProperty, namedElements, domRoot, _lib2_objectRegistry, _lib2_resourceRegistry, _lib2_attachedProperties, defaultPresentationProvider, _lib2_buckshotCSS, _lib2_domRootElement, _lib2_currentView, FrameworkObject_mostRecentMeasurement, FrameworkObject__lib2_dataContextUpdated, FrameworkObject_nameProperty, FrameworkObject_attachedPropertyChanged, FrameworkObject_measurementChanged, FrameworkObject_unloaded, FrameworkObject_loaded, FrameworkObject_lateBindings, FrameworkObject_dataContextProperty, FrameworkObject__lib2_isLoaded, FrameworkObject__lib2_parent, FrameworkObject__lib2_component, FrameworkObject__lib2_previousMeasurement, FrameworkObject__lib2_animationFrameID, FrameworkObject__lib2_watchingMeasurement, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this.versionProperty = versionProperty;
  this.windowHeightProperty = windowHeightProperty;
  this.windowWidthProperty = windowWidthProperty;
  this.namedElements = namedElements;
  this.domRoot = domRoot;
  this._lib2_objectRegistry = _lib2_objectRegistry;
  this._lib2_resourceRegistry = _lib2_resourceRegistry;
  this._lib2_attachedProperties = _lib2_attachedProperties;
  this.defaultPresentationProvider = defaultPresentationProvider;
  this._lib2_buckshotCSS = _lib2_buckshotCSS;
  this._lib2_domRootElement = _lib2_domRootElement;
  this._lib2_currentView = _lib2_currentView;
  this.mostRecentMeasurement = FrameworkObject_mostRecentMeasurement;
  this._lib2_dataContextUpdated = FrameworkObject__lib2_dataContextUpdated;
  this.nameProperty = FrameworkObject_nameProperty;
  this.attachedPropertyChanged = FrameworkObject_attachedPropertyChanged;
  this.measurementChanged = FrameworkObject_measurementChanged;
  this.unloaded = FrameworkObject_unloaded;
  this.loaded = FrameworkObject_loaded;
  this.lateBindings = FrameworkObject_lateBindings;
  this.dataContextProperty = FrameworkObject_dataContextProperty;
  this._lib2_isLoaded = FrameworkObject__lib2_isLoaded;
  this._lib2_parent = FrameworkObject__lib2_parent;
  this._lib2_component = FrameworkObject__lib2_component;
  this._lib2_previousMeasurement = FrameworkObject__lib2_previousMeasurement;
  this._lib2_animationFrameID = FrameworkObject__lib2_animationFrameID;
  this._lib2_watchingMeasurement = FrameworkObject__lib2_watchingMeasurement;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$type: function() {
  return 'BuckshotSystem';
 },
 set$rootView: function(view) {
  this.set$_lib2_currentView(view);
  this.get$domRoot().set$_lib2_isLoaded(true);
  var t0 = view.get$rootVisual();
  this.get$domRoot().set$content(t0);
 },
 get$windowHeight: function() {
  return $.getValue(this.get$windowHeightProperty());
 },
 get$windowWidth: function() {
  return $.getValue(this.get$windowWidthProperty());
 },
 registerElement$1: function(o) {
  $.indexSet(this.get$_lib2_objectRegistry(), $.toLowerCase($.trim(o.get$type())), o);
 },
 registerResource$1: function(resource) {
  $.indexSet(this.get$_lib2_resourceRegistry(), $.toLowerCase($.trim(resource.get$key())), resource);
 },
 retrieveResource$1: function(resourceKey) {
  var lowered = $.toLowerCase($.trim(resourceKey));
  if (!(this.get$_lib2_resourceRegistry().containsKey$1(lowered) === true)) {
    return;
  }
  var res = $.index(this.get$_lib2_resourceRegistry(), lowered);
  if (res.get$_lib2_stateBag().containsKey$1('RESOURCE_PROPERTY') === true) {
    return $.getValue($.index(res.get$_lib2_stateBag(), 'RESOURCE_PROPERTY'));
  } else {
    return res;
  }
 },
 _lib2_registerCoreControls$0: function() {
  this.registerElement$1($.TextBox$0());
  this.registerElement$1($.Slider$0());
  this.registerElement$1($.Button$0());
  this.registerElement$1($.DropDownList$0());
  this.registerElement$1($.ListBox$0());
 },
 _lib2_registerCoreElements$0: function() {
  this.registerElement$1($.Ellipse$0());
  this.registerElement$1($.Rectangle$0());
  this.registerElement$1($.Line$0());
  this.registerElement$1($.PolyLine$0());
  this.registerElement$1($.Polygon$0());
  this.registerElement$1($.StackPanel$0());
  this.registerElement$1($.Grid$0());
  this.registerElement$1($.Border$0());
  this.registerElement$1($.TextArea$0());
  this.registerElement$1($.LayoutCanvas$0());
  this.registerElement$1($.TextBlock$0());
  this.registerElement$1($.CheckBox$0());
  this.registerElement$1($.RadioButton$0());
  this.registerElement$1($.Hyperlink$0());
  this.registerElement$1($.Image$0());
  this.registerElement$1($.RawHtml$0());
  this.registerElement$1($.ColumnDefinition$0());
  this.registerElement$1($.RowDefinition$0());
  this.registerElement$1($.DropDownListItem$0());
  this.registerElement$1($.CollectionPresenter$0());
  this.registerElement$1($.ResourceCollection$0());
  this.registerElement$1($.Color$0());
  this.registerElement$1($.LinearGradientBrush$2((void 0), (void 0)));
  this.registerElement$1($.GradientStop$0());
  this.registerElement$1($.SolidColorBrush$1((void 0)));
  this.registerElement$1($.RadialGradientBrush$2((void 0), (void 0)));
  this.registerElement$1($.StyleSetter$0());
  this.registerElement$1($._lib2_StyleTemplateImplementation$0());
  this.registerElement$1($.VarResource$0());
  this.registerElement$1($.ControlTemplate$0());
  this.registerElement$1($.AnimationResource$0());
  this.registerElement$1($.AnimationKeyFrame$0());
  this.registerElement$1($.AnimationState$0());
  $.indexSet(this.get$_lib2_objectRegistry(), 'grid.column', $.setColumn);
  $.indexSet(this.get$_lib2_objectRegistry(), 'grid.row', $.setRow);
  $.indexSet(this.get$_lib2_objectRegistry(), 'grid.columnspan', $.setColumnSpan);
  $.indexSet(this.get$_lib2_objectRegistry(), 'grid.rowspan', $.setRowSpan);
  $.indexSet(this.get$_lib2_objectRegistry(), 'layoutcanvas.top', $.setTop);
  $.indexSet(this.get$_lib2_objectRegistry(), 'layoutcanvas.left', $.setLeft);
 },
 _lib2_initializeBuckshotProperties$0: function() {
  this.set$versionProperty($.FrameworkProperty$5($._ref, 'version', new $.Closure317(), '0.41 Alpha', (void 0)));
  this.get$versionProperty().set$readOnly(true);
  this.set$windowWidthProperty($.FrameworkProperty$5($._ref, 'windowWidth', new $.Closure318(), $.window().get$innerWidth(), (void 0)));
  this.set$windowHeightProperty($.FrameworkProperty$5($._ref, 'windowHeight', new $.Closure319(), $.window().get$innerHeight(), (void 0)));
  $.add$1($.window().get$on().get$resize(), new $.Closure320(this));
 },
 _lib2_initCSS$0: function() {
  $.add$1($.document().get$head().get$elements(), $.Element$html('<style id="__BuckshotCSS__"></style>'));
  this.set$_lib2_buckshotCSS($.document().get$head().query$1('#__BuckshotCSS__'));
  if ($.eqNullB(this.get$_lib2_buckshotCSS())) {
    throw $.captureStackTrace($.CTC8);
  }
 },
 _lib2_initBuckshotSystem$1: function(rootID) {
  this.set$_lib2_domRootElement($.document().query$1(rootID));
  if ($.eqNullB(this.get$_lib2_domRootElement())) {
    throw $.captureStackTrace($.BuckshotException$1('Unable to locate required root element (must be <div id=\'' + $.stringToString(rootID) + '\' />)'));
  }
  if (!$.eqB(this.get$_lib2_domRootElement().get$tagName(), 'DIV')) {
    throw $.captureStackTrace($.BuckshotException$1('Root element for Buckshot must be a <div>. Element given was a <' + $.stringToString($.toLowerCase(this.get$_lib2_domRootElement().get$tagName())) + '>'));
  }
  this._lib2_initCSS$0();
  this.set$defaultPresentationProvider($.BuckshotTemplateProvider$0());
  this._lib2_initializeBuckshotProperties$0();
  $.clear(this.get$_lib2_domRootElement().get$elements());
  $.add$1(this.get$_lib2_domRootElement().get$elements(), this.get$domRoot().get$_lib2_component());
  this._lib2_registerCoreElements$0();
  this._lib2_registerCoreControls$0();
 },
 set$versionProperty: function(v) { this.versionProperty = v; },
 get$versionProperty: function() { return this.versionProperty; },
 set$windowHeightProperty: function(v) { this.windowHeightProperty = v; },
 get$windowHeightProperty: function() { return this.windowHeightProperty; },
 set$windowWidthProperty: function(v) { this.windowWidthProperty = v; },
 get$windowWidthProperty: function() { return this.windowWidthProperty; },
 get$namedElements: function() { return this.namedElements; },
 get$domRoot: function() { return this.domRoot; },
 get$_lib2_objectRegistry: function() { return this._lib2_objectRegistry; },
 get$_lib2_resourceRegistry: function() { return this._lib2_resourceRegistry; },
 get$_lib2_attachedProperties: function() { return this._lib2_attachedProperties; },
 set$defaultPresentationProvider: function(v) { this.defaultPresentationProvider = v; },
 get$defaultPresentationProvider: function() { return this.defaultPresentationProvider; },
 set$_lib2_buckshotCSS: function(v) { this._lib2_buckshotCSS = v; },
 get$_lib2_buckshotCSS: function() { return this._lib2_buckshotCSS; },
 set$_lib2_domRootElement: function(v) { this._lib2_domRootElement = v; },
 get$_lib2_domRootElement: function() { return this._lib2_domRootElement; },
 set$_lib2_currentView: function(v) { this._lib2_currentView = v; },
 Buckshot$_init$1: function(rootID) {
  $._ref = this;
  this._lib2_initBuckshotSystem$1(rootID);
 },
});

Isolate.$defineClass("_IDBDatabaseEventsImpl", "_EventsImpl",
function _IDBDatabaseEventsImpl(_EventsImpl__lib5_ptr) {
  this._lib5_ptr = _EventsImpl__lib5_ptr;
}, {
});

Isolate.$defineClass("XmlParser", "Object",
function XmlParser(_lib7_root, _lib7_withQuirks, _lib7_scopes, _lib7_xml) {
  this._lib7_root = _lib7_root;
  this._lib7_withQuirks = _lib7_withQuirks;
  this._lib7_scopes = _lib7_scopes;
  this._lib7_xml = _lib7_xml;
}, {
 _lib7_assertKind$3: function(tok, matchID, info) {
  var match = $._XmlToken(matchID);
  var t0 = 'Expected ' + $.stringToString(match) + ', but found ' + $.stringToString(tok) + '. ';
  if ($.eqNullB(info)) {
    var t1 = '';
  } else {
    t1 = '\r' + $.stringToString(info);
  }
  var msg = t0 + $.stringToString(t1);
  if (!$.eqB(tok.get$kind(), match.get$kind())) {
    throw $.captureStackTrace($.XmlException$withDebug$3(msg, this.get$_lib7_xml(), tok.get$_lib7_location()));
  }
 },
 _lib7_assertKind$2: function(tok,matchID) {
  return this._lib7_assertKind$3(tok,matchID,(void 0))
},
 _lib7_peek$0: function() {
  return this.get$_lib7_scopes().first$0();
 },
 _lib7_pop$0: function() {
  this.get$_lib7_scopes().removeFirst$0();
 },
 _lib7_push$1: function(element) {
  this.get$_lib7_scopes().addFirst$1(element);
 },
 _lib7_parseAttribute$2: function(t, attributeName) {
  var t0 = ({});
  t0.attributeName_2 = attributeName;
  t0.t_1 = t;
  t0.el_3 = this._lib7_peek$0();
  var t1 = new $.Closure265(t0);
  t0.next_4 = t0.t_1.next$0();
  if ($.eqB(t0.next_4.get$kind(), 6)) {
    t0.next_4 = t0.t_1.next$0();
    this._lib7_assertKind$3(t0.next_4, 4, 'Namespace prefix must pair with an attribute name: (myNamespace:myattribute="...")');
    if (!(t0.el_3.isNamespaceInScope$1(t0.attributeName_2) === true)) {
      throw $.captureStackTrace($.XmlException$withDebug$3('Namespace "' + $.stringToString(t0.attributeName_2) + '" is not declared in scope.', this.get$_lib7_xml(), t0.next_4.get$_lib7_location()));
    }
    t0.attributeName_2 = '' + $.stringToString(t0.attributeName_2) + ':' + $.stringToString(t0.next_4.get$_lib7_str());
    t0.next_4 = t0.t_1.next$0();
  }
  this._lib7_assertKind$3(t0.next_4, 8, 'Must have an = after an attribute name.');
  t0.next_4 = t0.t_1.next$0();
  var t2 = new $.Closure266(t1, t0, this);
  if (this.get$_lib7_withQuirks() === true) {
    if ($.eqB(t0.next_4.get$kind(), 4)) {
      t1.$call$2(t0.attributeName_2, t0.next_4.get$_lib7_str());
    } else {
      if ($.eqB(t0.next_4.get$kind(), 9)) {
        t2.$call$0();
      }
    }
  } else {
    t2.$call$0();
  }
 },
 _lib7_parseNamespace$1: function(t) {
  var t0 = ({});
  t0.t_1 = t;
  t0.el_2 = this._lib7_peek$0();
  var t1 = new $.Closure267(t0);
  t0.next_3 = t0.t_1.next$0();
  this._lib7_assertKind$3(t0.next_3, 4, 'Must declare namespace name.');
  t0.name_4 = t0.next_3.get$_lib7_str();
  t0.next_3 = t0.t_1.next$0();
  this._lib7_assertKind$3(t0.next_3, 8, 'Must have an = after a namespace name.');
  t0.next_3 = t0.t_1.next$0();
  var t2 = new $.Closure268(this, t0, t1);
  if (this.get$_lib7_withQuirks() === true) {
    if ($.eqB(t0.next_3.get$kind(), 4)) {
      t1.$call$2(t0.name_4, t0.next_3.get$_lib7_str());
    } else {
      if ($.eqB(t0.next_3.get$kind(), 9)) {
        t2.$call$0();
      }
    }
  } else {
    t2.$call$0();
  }
 },
 _lib7_parseTextNode$2: function(t, text) {
  var t0 = ({});
  t0.s_1 = $.StringBufferImpl$1('');
  var t1 = new $.Closure261(this, t0);
  $.add$1(t0.s_1, text);
  for (var next = t.next$0(); !$.eqB(next.get$kind(), 1); ) {
    $1:{
      var t2 = next.get$kind();
      if (12 === t2) {
        t1.$call$0();
        this._lib7_parseComment$1(t);
        t0.s_1 = $.StringBufferImpl$1('');
        break $1;
      } else {
        if (14 === t2) {
          t1.$call$0();
          this._lib7_parseCDATA$1(t);
          t0.s_1 = $.StringBufferImpl$1('');
          break $1;
        } else {
          if (16 === t2) {
            t1.$call$0();
            this._lib7_parsePI$1(t);
            t0.s_1 = $.StringBufferImpl$1('');
            break $1;
          } else {
            $.add$1(t0.s_1, next.toStringLiteral$0());
            break $1;
          }
        }
      }
    }
    var next0 = t.next$0();
    if ($.eqNullB(next0)) {
      throw $.captureStackTrace($.CTC219);
    }
    next = next0;
  }
  t1.$call$0();
 },
 _lib7_parseTag$1: function(t) {
  var next = t.next$0();
  if ($.eqB(next.get$kind(), 7)) {
    var next0 = t.next$0();
    this._lib7_assertKind$2(next0, 4);
    var name$ = next0.get$_lib7_str();
    var next1 = t.next$0();
    var next2 = next1;
    var name0 = name$;
    if ($.eqB(next1.get$kind(), 6)) {
      var next3 = t.next$0();
      this._lib7_assertKind$3(next3, 4, 'Namespace prefix must pair with an tag name: (<myNamespace:tagName ...)');
      var name1 = '' + $.stringToString(name$) + ':' + $.stringToString(next3.get$_lib7_str());
      next2 = t.next$0();
      name0 = name1;
    }
    if (!$.eqB(this._lib7_peek$0().get$name(), name0)) {
      throw $.captureStackTrace($.XmlException$withDebug$3('Expected closing tag "' + $.stringToString(this._lib7_peek$0().get$name()) + '" but found "' + $.stringToString(name0) + '" instead.', this.get$_lib7_xml(), next2.get$_lib7_location()));
    }
    this._lib7_assertKind$2(next2, 2);
    this._lib7_pop$0();
    return;
  }
  this._lib7_assertKind$2(next, 4);
  var name2 = next.get$_lib7_str();
  var next4 = t.next$0();
  var next5 = next4;
  var name3 = name2;
  if ($.eqB(next4.get$kind(), 6)) {
    var next6 = t.next$0();
    this._lib7_assertKind$3(next6, 4, 'Namespace prefix must pair with an tag name: (<myNamespace:tagName ...)');
    var name4 = '' + $.stringToString(name2) + ':' + $.stringToString(next6.get$_lib7_str());
    next5 = next6;
    name3 = name4;
  }
  var newElement = $.XmlElement$2(name3, $.CTC);
  if ($.eqNullB(this.get$_lib7_root())) {
    this.set$_lib7_root(newElement);
    this._lib7_push$1(this.get$_lib7_root());
  } else {
    this._lib7_peek$0().addChild$1(newElement);
    this._lib7_push$1(newElement);
  }
  var next7 = next5;
  if ($.contains$1(this._lib7_peek$0().get$name(), ':') === true) {
    var ns = $.index($.split(this._lib7_peek$0().get$name(), ':'), 0);
    if (!(this._lib7_peek$0().isNamespaceInScope$1(ns) === true)) {
      throw $.captureStackTrace($.XmlException$withDebug$3('Namespace "' + $.stringToString(ns) + '" is not declared in scope.', this.get$_lib7_xml(), next5.get$_lib7_location()));
    }
    next7 = t.next$0();
  }
  for (; !$.eqNullB(next7); ) {
    $1:{
      var t0 = next7.get$kind();
      if (18 === t0) {
        this._lib7_parseNamespace$1(t);
        break $1;
      } else {
        if (4 === t0) {
          this._lib7_parseAttribute$2(t, next7.get$_lib7_str());
          break $1;
        } else {
          if (2 === t0) {
            this._lib7_parseElement$1(t);
            return;
          } else {
            if (7 === t0) {
              this._lib7_assertKind$2(t.next$0(), 2);
              this._lib7_pop$0();
              return;
            } else {
              throw $.captureStackTrace($.XmlException$withDebug$3('Invalid xml ' + $.stringToString(next7) + ' found at this location.', this.get$_lib7_xml(), next7.get$_lib7_location()));
            }
          }
        }
      }
    }
    var next8 = t.next$0();
    if ($.eqNullB(next8)) {
      throw $.captureStackTrace($.CTC227);
    }
    next7 = next8;
  }
 },
 _lib7_parseComment$1: function(t) {
  this._lib7_assertKind$2(t.next$0(), 4);
  this._lib7_assertKind$2(t.next$0(), 13);
 },
 _lib7_parseCDATA$1: function(t) {
  if ($.isEmpty(this.get$_lib7_scopes()) === true) {
    throw $.captureStackTrace($.CTC230);
  }
  var next = t.next$0();
  this._lib7_assertKind$2(next, 4);
  var data = next.get$_lib7_str();
  this._lib7_assertKind$2(t.next$0(), 15);
  this._lib7_peek$0().addChild$1($.XmlCDATA$1(data));
 },
 _lib7_parsePI$1: function(t) {
  if ($.isEmpty(this.get$_lib7_scopes()) === true) {
    throw $.captureStackTrace($.CTC229);
  }
  var next = t.next$0();
  this._lib7_assertKind$2(next, 4);
  var data = next.get$_lib7_str();
  this._lib7_assertKind$2(t.next$0(), 17);
  this._lib7_peek$0().addChild$1($.XmlProcessingInstruction$1(data));
 },
 _lib7_parseElement$1: function(t) {
  for (var tok = t.next$0(); !$.eqNullB(tok); ) {
    $1:{
      var t0 = tok.get$kind();
      if (12 === t0) {
        this._lib7_parseComment$1(t);
        break $1;
      } else {
        if (14 === t0) {
          this._lib7_parseCDATA$1(t);
          break $1;
        } else {
          if (16 === t0) {
            this._lib7_parsePI$1(t);
            break $1;
          } else {
            if (1 === t0) {
              this._lib7_parseTag$1(t);
              break $1;
            } else {
              if (4 === t0) {
                if ($.isEmpty(this.get$_lib7_scopes()) === true) {
                  throw $.captureStackTrace($.CTC217);
                } else {
                  this._lib7_parseTextNode$2(t, tok.get$_lib7_str());
                  this._lib7_parseTag$1(t);
                }
                break $1;
              }
            }
          }
        }
      }
    }
    tok = t.next$0();
  }
  if (!($.isEmpty(this.get$_lib7_scopes()) === true)) {
    throw $.captureStackTrace($.CTC218);
  }
 },
 set$_lib7_root: function(v) { this._lib7_root = v; },
 get$_lib7_root: function() { return this._lib7_root; },
 get$_lib7_withQuirks: function() { return this._lib7_withQuirks; },
 get$_lib7_scopes: function() { return this._lib7_scopes; },
 get$_lib7_xml: function() { return this._lib7_xml; },
});

Isolate.$defineClass("Closure311", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$0: function() {
  this.this_0._lib2_updateRowLayout$1(this.this_0.get$mostRecentMeasurement().get$bounding().get$height());
  this.this_0._lib2_updateColumnLayout$1(this.this_0.get$mostRecentMeasurement().get$bounding().get$width());
 },
});

Isolate.$defineClass("Closure37", "Closure330",
function Closure(this_21, clickHandler_20) {
  this.this_21 = this_21;
  this.clickHandler_20 = clickHandler_20;
}, {
 $call$0: function() {
  return $.add$1(this.this_21.get$_lib2_component().get$on().get$click(), this.clickHandler_20);
 },
});

Isolate.$defineClass("Closure282", "Closure330",
function Closure(box_0) {
  this.box_0 = box_0;
}, {
 $call$1: function(el) {
  if (!($.isEmpty(this.box_0.list_2) === true)) {
    return;
  }
  if (typeof el === 'object' && !!el.is$XmlElement) {
    el._lib7_queryNodeTypeInternal$2(this.box_0.nodeType_1, this.box_0.list_2);
  } else {
    if ($.eqB(el.get$type(), this.box_0.nodeType_1)) {
      this.box_0.list_2._lib7_add$1(el);
      return;
    }
  }
 },
});

Isolate.$defineClass("Closure275", "Closure330",
function Closure() {
}, {
 $call$1: function(el) {
  return typeof el === 'object' && !!el.is$XmlElement;
 },
});

Isolate.$defineClass("Closure66", "Closure330",
function Closure(this_16, doTransform_15) {
  this.this_16 = this_16;
  this.doTransform_15 = doTransform_15;
}, {
 $call$1: function(value) {
  this.doTransform_15.$call$1(this.this_16);
 },
});

Isolate.$defineClass("_MeasurementRequest", "Object",
function _MeasurementRequest(exception, value, completer, computeValue) {
  this.exception = exception;
  this.value = value;
  this.completer = completer;
  this.computeValue = computeValue;
}, {
 set$exception: function(v) { this.exception = v; },
 get$exception: function() { return this.exception; },
 set$value: function(v) { this.value = v; },
 get$value: function() { return this.value; },
 get$completer: function() { return this.completer; },
 computeValue$0: function() { return this.computeValue.$call$0(); },
});

Isolate.$defineClass("Closure202", "Closure330",
function Closure(this_2) {
  this.this_2 = this_2;
}, {
 $call$2: function(_, __) {
  return this.this_2._lib2_updateColumnLayout$1(this.this_2.get$actualWidth());
 },
});

Isolate.$defineClass("Closure148", "Closure330",
function Closure(this_3) {
  this.this_3 = this_3;
}, {
 $call$1: function(v) {
  var t0 = $.toString(v);
  $.get$dynamic(this.this_3.get$_lib2_component()).set$value(t0);
 },
});

Isolate.$defineClass("Closure73", "Closure330",
function Closure(this_26) {
  this.this_26 = this_26;
}, {
 $call$1: function(value) {
  var value0 = value;
  if ($.ltB(value, 0.0)) {
    value0 = 0.0;
  }
  var value1 = value0;
  if ($.gtB(value0, 1.0)) {
    value1 = 1.0;
  }
  var t0 = $.toStringAsPrecision(value1, 2);
  this.this_26.get$_lib2_component().get$style().set$opacity(t0);
 },
});

Isolate.$defineClass("Closure252", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$2: function(_, __) {
  return this.this_0._lib2_updateCollection$0();
 },
});

Isolate.$defineClass("Closure117", "Closure330",
function Closure() {
}, {
 $call$1: function(_) {
 },
});

Isolate.$defineClass("_TextTrackCueEventsImpl", "_EventsImpl",
function _TextTrackCueEventsImpl(_EventsImpl__lib5_ptr) {
  this._lib5_ptr = _EventsImpl__lib5_ptr;
}, {
});

Isolate.$defineClass("Closure173", "Closure330",
function Closure(box_0) {
  this.box_0 = box_0;
}, {
 $call$1: function(p) {
  $.add$1(this.box_0.sb_3, '' + $.stringToString(p) + $.stringToString(this.box_0.declaration_1) + ': ' + $.stringToString(this.box_0.value_2) + ';');
 },
});

Isolate.$defineClass("Closure105", "Closure330",
function Closure(this_3) {
  this.this_3 = this_3;
}, {
 $call$1: function(action) {
  $.setValue(action.get$_lib2_sourceProperty(), this.this_3);
 },
});

Isolate.$defineClass("Closure239", "Closure330",
function Closure(this_4) {
  this.this_4 = this_4;
}, {
 $call$1: function(value) {
  var t0 = '' + $.stringToString($.toString(value)) + 'px';
  this.this_4.get$_lib2_component().get$style().set$fontSize(t0);
 },
});

Isolate.$defineClass("Closure259", "Closure330",
function Closure(this_8, box_0) {
  this.this_8 = this_8;
  this.box_0 = box_0;
}, {
 $call$1: function(param) {
  var lParam = $.toLowerCase($.trim(param));
  if ($.startsWith(lParam, 'mode=') === true || $.startsWith(lParam, 'mode =') === true) {
    var modeSplit = $.split(lParam, '=');
    if ($.eqB($.get$length(modeSplit), 2)) {
      $0:{
        var t0 = $.index(modeSplit, 1);
        if ('twoway' === t0) {
          this.box_0.mode_3 = $.CTC161;
          break $0;
        } else {
          if ('onetime' === t0) {
            this.box_0.mode_3 = $.CTC10;
            break $0;
          }
        }
      }
    }
  } else {
    if ($.startsWith(lParam, 'converter=') === true || $.startsWith(lParam, 'converter =') === true) {
      var converterSplit = $.split(lParam, '=');
      if ($.eqB($.get$length(converterSplit), 2) && $.startsWith($.index(converterSplit, 1), '{resource ') === true && $.endsWith($.index(converterSplit, 1), '}') === true) {
        this.this_8._lib2_resolveBinding$2(this.box_0.placeholder_2, $.index(converterSplit, 1));
        var testValueConverter = $.getValue(this.box_0.placeholder_2);
        if (typeof testValueConverter === 'object' && !!testValueConverter.is$IValueConverter) {
          this.box_0.vc_4 = testValueConverter;
        }
      }
    }
  }
 },
});

Isolate.$defineClass("Closure272", "Closure330",
function Closure(box_0) {
  this.box_0 = box_0;
}, {
 $call$1: function(entry) {
  var t0 = this.box_0.list_1;
  var t1 = this.box_0.index_2;
  var index = $.add(t1, 1);
  this.box_0.index_2 = index;
  $.indexSet(t0, t1, entry.get$key());
 },
});

Isolate.$defineClass("Closure29", "Closure330",
function Closure(this_8, mouseUpHandler_7) {
  this.this_8 = this_8;
  this.mouseUpHandler_7 = mouseUpHandler_7;
}, {
 $call$0: function() {
  return this.this_8.get$_lib2_component().get$on().get$mouseUp().remove$1(this.mouseUpHandler_7);
 },
});

Isolate.$defineClass("_BindingImplementation", "BuckshotObject",
function _BindingImplementation(bindingSet, _lib2_toProperty, _lib2_fromProperty, converter, _lib2_twoWayPartner, bindingMode, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this.bindingSet = bindingSet;
  this._lib2_toProperty = _lib2_toProperty;
  this._lib2_fromProperty = _lib2_fromProperty;
  this.converter = converter;
  this._lib2_twoWayPartner = _lib2_twoWayPartner;
  this.bindingMode = bindingMode;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$type: function() {
  return 'Binding';
 },
 unregister$0: function() {
  if (!(this.get$bindingSet() === true)) {
    return;
  }
  this.set$bindingSet(false);
  var i = $.indexOf$2(this.get$_lib2_fromProperty().get$sourceObject().get$_lib2_bindings(), this, 0);
  if ($.eqB(i, -1)) {
    throw $.captureStackTrace($.CTC8);
  }
  $.removeRange(this.get$_lib2_fromProperty().get$sourceObject().get$_lib2_bindings(), i, 1);
  if (!$.eqB(this.get$bindingMode(), $.CTC161)) {
    return;
  }
  this.get$_lib2_twoWayPartner().set$bindingSet(false);
  var pi = $.indexOf$2(this.get$_lib2_twoWayPartner().get$_lib2_fromProperty().get$sourceObject().get$_lib2_bindings(), this.get$_lib2_twoWayPartner(), 0);
  if ($.eqB(pi, -1)) {
    throw $.captureStackTrace($.CTC8);
  }
  $.removeRange(this.get$_lib2_twoWayPartner().get$_lib2_fromProperty().get$sourceObject().get$_lib2_bindings(), pi, 1);
 },
 _lib2_registerBinding$0: function() {
  this.set$bindingSet(true);
  if ($.eqB(this.get$bindingMode(), $.CTC161)) {
    $.add$1(this.get$_lib2_fromProperty().get$sourceObject().get$_lib2_bindings(), this);
    var other = $._lib2_BindingImplementation$loose$4(this.get$_lib2_toProperty(), this.get$_lib2_fromProperty(), $.CTC159, $.CTC160);
    this.set$_lib2_twoWayPartner(other);
    other.set$_lib2_twoWayPartner(this);
    $.get$dynamic($.last(this.get$_lib2_toProperty().get$sourceObject().get$_lib2_bindings())).set$bindingMode($.CTC161);
  } else {
    $.add$1(this.get$_lib2_fromProperty().get$sourceObject().get$_lib2_bindings(), this);
    $._executeBindingsFor(this.get$_lib2_fromProperty());
  }
 },
 makeMe$0: function() {
  return;
 },
 set$bindingSet: function(v) { this.bindingSet = v; },
 get$bindingSet: function() { return this.bindingSet; },
 get$_lib2_toProperty: function() { return this._lib2_toProperty; },
 get$_lib2_fromProperty: function() { return this._lib2_fromProperty; },
 get$converter: function() { return this.converter; },
 set$_lib2_twoWayPartner: function(v) { this._lib2_twoWayPartner = v; },
 get$_lib2_twoWayPartner: function() { return this._lib2_twoWayPartner; },
 set$bindingMode: function(v) { this.bindingMode = v; },
 get$bindingMode: function() { return this.bindingMode; },
 _lib2_BindingImplementation$loose$4: function(_fromProperty, _toProperty, bindingMode, converter) {
  if ($.eqNullB(this.get$_lib2_fromProperty()) || $.eqNullB(this.get$_lib2_toProperty())) {
    return;
  }
  if (this.get$_lib2_fromProperty() === this.get$_lib2_toProperty()) {
    throw $.captureStackTrace($.CTC8);
  }
  this._lib2_registerBinding$0();
 },
 _lib2_BindingImplementation$4: function(_fromProperty, _toProperty, bindingMode, converter) {
  if ($.eqNullB(this.get$_lib2_fromProperty()) || $.eqNullB(this.get$_lib2_toProperty())) {
    throw $.captureStackTrace($.CTC8);
  }
  if (this.get$_lib2_fromProperty() === this.get$_lib2_toProperty()) {
    throw $.captureStackTrace($.CTC8);
  }
  this._lib2_registerBinding$0();
 },
});

Isolate.$defineClass("_SimpleClientRect", "Object",
function _SimpleClientRect(height, width, top, left) {
  this.height = height;
  this.width = width;
  this.top = top;
  this.left = left;
}, {
 toString$0: function() {
  return '(' + $.stringToString(this.get$left()) + ', ' + $.stringToString(this.get$top()) + ', ' + $.stringToString(this.get$width()) + ', ' + $.stringToString(this.get$height()) + ')';
 },
 operator$eq$1: function(other) {
  return !(other === (void 0)) && $.eqB(this.get$left(), other.get$left()) && $.eqB(this.get$top(), other.get$top()) && $.eqB(this.get$width(), other.get$width()) && $.eqB(this.get$height(), other.get$height());
 },
 get$bottom: function() {
  return $.add(this.get$top(), this.get$height());
 },
 get$right: function() {
  return $.add(this.get$left(), this.get$width());
 },
 get$height: function() { return this.height; },
 get$width: function() { return this.width; },
 get$top: function() { return this.top; },
 get$left: function() { return this.left; },
});

Isolate.$defineClass("MatchImplementation", "Object",
function MatchImplementation(_lib3_groups, _lib3_end, _lib3_start, str, pattern) {
  this._lib3_groups = _lib3_groups;
  this._lib3_end = _lib3_end;
  this._lib3_start = _lib3_start;
  this.str = str;
  this.pattern = pattern;
}, {
 operator$index$1: function(index) {
  return this.group$1(index);
 },
 group$1: function(index) {
  return $.index(this.get$_lib3_groups(), index);
 },
 get$_lib3_groups: function() { return this._lib3_groups; },
 get$pattern: function() { return this.pattern; },
});

Isolate.$defineClass("AnimationState", "FrameworkObject",
function AnimationState(valueProperty, propertyProperty, targetProperty, FrameworkObject_mostRecentMeasurement, FrameworkObject__lib2_dataContextUpdated, FrameworkObject_nameProperty, FrameworkObject_attachedPropertyChanged, FrameworkObject_measurementChanged, FrameworkObject_unloaded, FrameworkObject_loaded, FrameworkObject_lateBindings, FrameworkObject_dataContextProperty, FrameworkObject__lib2_isLoaded, FrameworkObject__lib2_parent, FrameworkObject__lib2_component, FrameworkObject__lib2_previousMeasurement, FrameworkObject__lib2_animationFrameID, FrameworkObject__lib2_watchingMeasurement, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this.valueProperty = valueProperty;
  this.propertyProperty = propertyProperty;
  this.targetProperty = targetProperty;
  this.mostRecentMeasurement = FrameworkObject_mostRecentMeasurement;
  this._lib2_dataContextUpdated = FrameworkObject__lib2_dataContextUpdated;
  this.nameProperty = FrameworkObject_nameProperty;
  this.attachedPropertyChanged = FrameworkObject_attachedPropertyChanged;
  this.measurementChanged = FrameworkObject_measurementChanged;
  this.unloaded = FrameworkObject_unloaded;
  this.loaded = FrameworkObject_loaded;
  this.lateBindings = FrameworkObject_lateBindings;
  this.dataContextProperty = FrameworkObject_dataContextProperty;
  this._lib2_isLoaded = FrameworkObject__lib2_isLoaded;
  this._lib2_parent = FrameworkObject__lib2_parent;
  this._lib2_component = FrameworkObject__lib2_component;
  this._lib2_previousMeasurement = FrameworkObject__lib2_previousMeasurement;
  this._lib2_animationFrameID = FrameworkObject__lib2_animationFrameID;
  this._lib2_watchingMeasurement = FrameworkObject__lib2_watchingMeasurement;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$type: function() {
  return 'AnimationState';
 },
 makeMe$0: function() {
  return $.AnimationState$0();
 },
 set$value: function(v) {
  return $.setValue(this.get$valueProperty(), v);
 },
 get$value: function() {
  return $.getValue(this.get$valueProperty());
 },
 get$property: function() {
  return $.getValue(this.get$propertyProperty());
 },
 get$target: function() {
  return $.getValue(this.get$targetProperty());
 },
 _lib2_initAnimationStateProperties$0: function() {
  this.set$targetProperty($.FrameworkProperty$5(this, 'target', new $.Closure163(), (void 0), (void 0)));
  this.set$propertyProperty($.FrameworkProperty$5(this, 'property', new $.Closure164(), (void 0), (void 0)));
  this.set$valueProperty($.FrameworkProperty$5(this, 'value', new $.Closure165(), (void 0), (void 0)));
 },
 set$valueProperty: function(v) { this.valueProperty = v; },
 get$valueProperty: function() { return this.valueProperty; },
 set$propertyProperty: function(v) { this.propertyProperty = v; },
 get$propertyProperty: function() { return this.propertyProperty; },
 set$targetProperty: function(v) { this.targetProperty = v; },
 get$targetProperty: function() { return this.targetProperty; },
 AnimationState$0: function() {
  this._lib2_initAnimationStateProperties$0();
 },
});

Isolate.$defineClass("UnsupportedOperationException", "Object",
function UnsupportedOperationException(_lib4_message) {
  this._lib4_message = _lib4_message;
}, {
 get$_lib4_message: function() { return this._lib4_message; },
 toString$0: function() {
  return 'UnsupportedOperationException: ' + $.stringToString(this.get$_lib4_message());
 },
 is$Exception: true,
});

Isolate.$defineClass("Closure166", "Closure330",
function Closure() {
}, {
 $call$1: function(_) {
 },
});

Isolate.$defineClass("Closure46", "Closure330",
function Closure(this_36, mouseEnterHandler_35) {
  this.this_36 = this_36;
  this.mouseEnterHandler_35 = mouseEnterHandler_35;
}, {
 $call$0: function() {
  return $.add$1(this.this_36.get$_lib2_component().get$on().get$mouseOver(), this.mouseEnterHandler_35);
 },
});

Isolate.$defineClass("StringToOrientationConverter", "Object",
function StringToOrientationConverter() {
}, {
 convert$2: function(value, parameter) {
  if (!(typeof value === 'string')) {
    return value;
  }
  $0:{
    if ('horizontal' === value) {
      return $.CTC210;
    } else {
      if ('vertical' === value) {
        return $.CTC209;
      } else {
        throw $.captureStackTrace($.BuckshotException$1('Invalid orientation value "' + $.stringToString(value) + '".'));
      }
    }
  }
 },
 convert$1: function(value) {
  return this.convert$2(value,(void 0))
},
 is$IValueConverter: true,
});

Isolate.$defineClass("Closure138", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$1: function(value) {
  var t0 = this.this_0.get$_lib2_content();
  if (typeof t0 === 'object' && !!t0.is$TextBlock && typeof value === 'string') {
    this.this_0.get$_lib2_content().set$text(value);
    return;
  }
  var value0 = value;
  if (typeof value === 'string') {
    var value1 = $.TextBlock$0();
    value1.set$text(value);
    value0 = value1;
  }
  if (!$.eqNullB(this.this_0.get$_lib2_content())) {
    this.this_0.get$_lib2_content().get$_lib2_component().remove$0();
    this.this_0.get$_lib2_content().set$parent((void 0));
  }
  if (!$.eqNullB(value0)) {
    this.this_0.set$_lib2_content(value0);
    var t1 = this.this_0;
    this.this_0.get$_lib2_content().set$parent(t1);
    $.add$1(this.this_0.get$_lib2_component().get$nodes(), this.this_0.get$_lib2_content().get$_lib2_component());
  } else {
    this.this_0.set$_lib2_content((void 0));
  }
 },
});

Isolate.$defineClass("StyleSetter", "BuckshotObject",
function StyleSetter(propertyProperty, valueProperty, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this.propertyProperty = propertyProperty;
  this.valueProperty = valueProperty;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$type: function() {
  return 'StyleSetter';
 },
 _lib2_initStyleSetterProperties$0: function() {
  this.set$valueProperty($.FrameworkProperty$5(this, 'value', new $.Closure107(), (void 0), (void 0)));
  this.set$propertyProperty($.FrameworkProperty$5(this, 'property', new $.Closure108(), (void 0), (void 0)));
 },
 set$property: function(v) {
  return $.setValue(this.get$propertyProperty(), v);
 },
 get$property: function() {
  return $.getValue(this.get$propertyProperty());
 },
 set$value: function(newValue) {
  return $.setValue(this.get$valueProperty(), newValue);
 },
 get$value: function() {
  return $.getValue(this.get$valueProperty());
 },
 makeMe$0: function() {
  return $.StyleSetter$0();
 },
 set$propertyProperty: function(v) { this.propertyProperty = v; },
 get$propertyProperty: function() { return this.propertyProperty; },
 set$valueProperty: function(v) { this.valueProperty = v; },
 get$valueProperty: function() { return this.valueProperty; },
 StyleSetter$0: function() {
  this._lib2_initStyleSetterProperties$0();
 },
 StyleSetter$with$2: function(propertyName, propertyValue) {
  this._lib2_initStyleSetterProperties$0();
  this.set$property(propertyName);
  this.set$value(propertyValue);
 },
});

Isolate.$defineClass("Closure107", "Closure330",
function Closure() {
}, {
 $call$1: function(v) {
 },
});

Isolate.$defineClass("EventArgs", "BuckshotObject",
function EventArgs(BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$type: function() {
  return 'EventArgs';
 },
 makeMe$0: function() {
  return $.EventArgs$0();
 },
});

Isolate.$defineClass("Closure120", "Closure330",
function Closure(this_1) {
  this.this_1 = this_1;
}, {
 $call$1: function(v) {
  if ($.eqNullB(this.this_1.get$_lib2_border())) {
    return;
  }
  this.this_1.get$_lib2_border().set$borderThickness(v);
 },
});

Isolate.$defineClass("Closure327", "Closure330",
function Closure(box_0) {
  this.box_0 = box_0;
}, {
 $call$1: function(p) {
  var pre = '' + $.stringToString(p) + 'flexbox';
  this.box_0.element_1.get$_lib2_component().get$style().set$display(pre);
 },
});

Isolate.$defineClass("Closure57", "Closure330",
function Closure() {
}, {
 $call$0: function() {
  return $.CTC169;
 },
});

Isolate.$defineClass("_DedicatedWorkerContextEventsImpl", "_WorkerContextEventsImpl",
function _DedicatedWorkerContextEventsImpl(_EventsImpl__lib5_ptr) {
  this._lib5_ptr = _EventsImpl__lib5_ptr;
}, {
 get$message: function() {
  return this._lib5_get$1('message');
 },
});

Isolate.$defineClass("Closure129", "Closure330",
function Closure() {
}, {
 $call$1: function(v) {
 },
});

Isolate.$defineClass("Closure316", "Closure330",
function Closure() {
}, {
 $call$1: function(child) {
  $.setVerticalItemFlexAlignment(child, child.get$verticalAlignment());
 },
});

Isolate.$defineClass("Closure255", "Closure330",
function Closure() {
}, {
 $call$1: function(n) {
  return !((typeof n === 'object') && !!n.is$XmlText);
 },
});

Isolate.$defineClass("StringToRadialGradientDrawModeConverter", "Object",
function StringToRadialGradientDrawModeConverter() {
}, {
 convert$2: function(value, parameter) {
  if (!(typeof value === 'string')) {
    return value;
  }
  $0:{
    if ('cover' === value) {
      return $.CTC245;
    } else {
      if ('contain' === value) {
        return $.CTC243;
      } else {
        throw $.captureStackTrace($.CTC8);
      }
    }
  }
 },
 convert$1: function(value) {
  return this.convert$2(value,(void 0))
},
 is$IValueConverter: true,
});

Isolate.$defineClass("_FileReaderEventsImpl", "_EventsImpl",
function _FileReaderEventsImpl(_EventsImpl__lib5_ptr) {
  this._lib5_ptr = _EventsImpl__lib5_ptr;
}, {
});

Isolate.$defineClass("StringToSolidColorBrushConverter", "Object",
function StringToSolidColorBrushConverter() {
}, {
 convert$2: function(value, parameter) {
  if (!(typeof value === 'string')) {
    return value;
  }
  if ($.startsWith(value, '#') === true) {
    return $.SolidColorBrush$1($.Color$hex$1(value));
  }
  $0:{
    if ('AliceBlue' === value) {
      return $.SolidColorBrush$1($.Color$hex$1($.CTC11.toString$0()));
    } else {
      if ('AntiqueWhite' === value) {
        return $.SolidColorBrush$1($.Color$hex$1($.CTC12.toString$0()));
      } else {
        if ('Aqua' === value) {
          return $.SolidColorBrush$1($.Color$hex$1($.CTC13.toString$0()));
        } else {
          if ('Aquamarine' === value) {
            return $.SolidColorBrush$1($.Color$hex$1($.CTC14.toString$0()));
          } else {
            if ('Azure' === value) {
              return $.SolidColorBrush$1($.Color$hex$1($.CTC15.toString$0()));
            } else {
              if ('Beige' === value) {
                return $.SolidColorBrush$1($.Color$hex$1($.CTC16.toString$0()));
              } else {
                if ('Bisque' === value) {
                  return $.SolidColorBrush$1($.Color$hex$1($.CTC17.toString$0()));
                } else {
                  if ('Black' === value) {
                    return $.SolidColorBrush$1($.Color$hex$1($.CTC18.toString$0()));
                  } else {
                    if ('BlanchedAlmond' === value) {
                      return $.SolidColorBrush$1($.Color$hex$1($.CTC19.toString$0()));
                    } else {
                      if ('Blue' === value) {
                        return $.SolidColorBrush$1($.Color$hex$1($.CTC20.toString$0()));
                      } else {
                        if ('BlueViolet' === value) {
                          return $.SolidColorBrush$1($.Color$hex$1($.CTC21.toString$0()));
                        } else {
                          if ('Brown' === value) {
                            return $.SolidColorBrush$1($.Color$hex$1($.CTC22.toString$0()));
                          } else {
                            if ('BurlyWood' === value) {
                              return $.SolidColorBrush$1($.Color$hex$1($.CTC23.toString$0()));
                            } else {
                              if ('CadetBlue' === value) {
                                return $.SolidColorBrush$1($.Color$hex$1($.CTC24.toString$0()));
                              } else {
                                if ('Chartreuse' === value) {
                                  return $.SolidColorBrush$1($.Color$hex$1($.CTC25.toString$0()));
                                } else {
                                  if ('Chocolate' === value) {
                                    return $.SolidColorBrush$1($.Color$hex$1($.CTC26.toString$0()));
                                  } else {
                                    if ('Coral' === value) {
                                      return $.SolidColorBrush$1($.Color$hex$1($.CTC27.toString$0()));
                                    } else {
                                      if ('ConflowerBlue' === value) {
                                        return $.SolidColorBrush$1($.Color$hex$1($.CTC28.toString$0()));
                                      } else {
                                        if ('Cornsilk' === value) {
                                          return $.SolidColorBrush$1($.Color$hex$1($.CTC29.toString$0()));
                                        } else {
                                          if ('Crimson' === value) {
                                            return $.SolidColorBrush$1($.Color$hex$1($.CTC30.toString$0()));
                                          } else {
                                            if ('Cyan' === value) {
                                              return $.SolidColorBrush$1($.Color$hex$1($.CTC31.toString$0()));
                                            } else {
                                              if ('DarkBlue' === value) {
                                                return $.SolidColorBrush$1($.Color$hex$1($.CTC32.toString$0()));
                                              } else {
                                                if ('DarkCyan' === value) {
                                                  return $.SolidColorBrush$1($.Color$hex$1($.CTC33.toString$0()));
                                                } else {
                                                  if ('DarkGoldenrod' === value) {
                                                    return $.SolidColorBrush$1($.Color$hex$1($.CTC34.toString$0()));
                                                  } else {
                                                    if ('DarkGray' === value) {
                                                      return $.SolidColorBrush$1($.Color$hex$1($.CTC35.toString$0()));
                                                    } else {
                                                      if ('DarkGreen' === value) {
                                                        return $.SolidColorBrush$1($.Color$hex$1($.CTC36.toString$0()));
                                                      } else {
                                                        if ('DarkKhaki' === value) {
                                                          return $.SolidColorBrush$1($.Color$hex$1($.CTC37.toString$0()));
                                                        } else {
                                                          if ('DarkMagenta' === value) {
                                                            return $.SolidColorBrush$1($.Color$hex$1($.CTC38.toString$0()));
                                                          } else {
                                                            if ('DarkOliveGreen' === value) {
                                                              return $.SolidColorBrush$1($.Color$hex$1($.CTC39.toString$0()));
                                                            } else {
                                                              if ('DarkOrange' === value) {
                                                                return $.SolidColorBrush$1($.Color$hex$1($.CTC40.toString$0()));
                                                              } else {
                                                                if ('DarkOrchid' === value) {
                                                                  return $.SolidColorBrush$1($.Color$hex$1($.CTC41.toString$0()));
                                                                } else {
                                                                  if ('DarkRed' === value) {
                                                                    return $.SolidColorBrush$1($.Color$hex$1($.CTC42.toString$0()));
                                                                  } else {
                                                                    if ('DarkSalmon' === value) {
                                                                      return $.SolidColorBrush$1($.Color$hex$1($.CTC43.toString$0()));
                                                                    } else {
                                                                      if ('DarkSeaGreen' === value) {
                                                                        return $.SolidColorBrush$1($.Color$hex$1($.CTC44.toString$0()));
                                                                      } else {
                                                                        if ('DarkSlateBlue' === value) {
                                                                          return $.SolidColorBrush$1($.Color$hex$1($.CTC45.toString$0()));
                                                                        } else {
                                                                          if ('DarkSlateGray' === value) {
                                                                            return $.SolidColorBrush$1($.Color$hex$1($.CTC46.toString$0()));
                                                                          } else {
                                                                            if ('DarkTurquoise' === value) {
                                                                              return $.SolidColorBrush$1($.Color$hex$1($.CTC47.toString$0()));
                                                                            } else {
                                                                              if ('DarkViolet' === value) {
                                                                                return $.SolidColorBrush$1($.Color$hex$1($.CTC48.toString$0()));
                                                                              } else {
                                                                                if ('DeepPink' === value) {
                                                                                  return $.SolidColorBrush$1($.Color$hex$1($.CTC49.toString$0()));
                                                                                } else {
                                                                                  if ('DeepSkyBlue' === value) {
                                                                                    return $.SolidColorBrush$1($.Color$hex$1($.CTC50.toString$0()));
                                                                                  } else {
                                                                                    if ('DimGray' === value) {
                                                                                      return $.SolidColorBrush$1($.Color$hex$1($.CTC51.toString$0()));
                                                                                    } else {
                                                                                      if ('DodgerBlue' === value) {
                                                                                        return $.SolidColorBrush$1($.Color$hex$1($.CTC52.toString$0()));
                                                                                      } else {
                                                                                        if ('Firebrick' === value) {
                                                                                          return $.SolidColorBrush$1($.Color$hex$1($.CTC53.toString$0()));
                                                                                        } else {
                                                                                          if ('FloralWhite' === value) {
                                                                                            return $.SolidColorBrush$1($.Color$hex$1($.CTC54.toString$0()));
                                                                                          } else {
                                                                                            if ('ForestGreen' === value) {
                                                                                              return $.SolidColorBrush$1($.Color$hex$1($.CTC55.toString$0()));
                                                                                            } else {
                                                                                              if ('Fuchsia' === value) {
                                                                                                return $.SolidColorBrush$1($.Color$hex$1($.CTC56.toString$0()));
                                                                                              } else {
                                                                                                if ('Gainsboro' === value) {
                                                                                                  return $.SolidColorBrush$1($.Color$hex$1($.CTC57.toString$0()));
                                                                                                } else {
                                                                                                  if ('GhostWhite' === value) {
                                                                                                    return $.SolidColorBrush$1($.Color$hex$1($.CTC58.toString$0()));
                                                                                                  } else {
                                                                                                    if ('Gold' === value) {
                                                                                                      return $.SolidColorBrush$1($.Color$hex$1($.CTC59.toString$0()));
                                                                                                    } else {
                                                                                                      if ('Goldenrod' === value) {
                                                                                                        return $.SolidColorBrush$1($.Color$hex$1($.CTC60.toString$0()));
                                                                                                      } else {
                                                                                                        if ('Gray' === value) {
                                                                                                          return $.SolidColorBrush$1($.Color$hex$1($.CTC61.toString$0()));
                                                                                                        } else {
                                                                                                          if ('Green' === value) {
                                                                                                            return $.SolidColorBrush$1($.Color$hex$1($.CTC62.toString$0()));
                                                                                                          } else {
                                                                                                            if ('GreenYellow' === value) {
                                                                                                              return $.SolidColorBrush$1($.Color$hex$1($.CTC63.toString$0()));
                                                                                                            } else {
                                                                                                              if ('Honeydew' === value) {
                                                                                                                return $.SolidColorBrush$1($.Color$hex$1($.CTC64.toString$0()));
                                                                                                              } else {
                                                                                                                if ('HotPink' === value) {
                                                                                                                  return $.SolidColorBrush$1($.Color$hex$1($.CTC65.toString$0()));
                                                                                                                } else {
                                                                                                                  if ('IndianRed' === value) {
                                                                                                                    return $.SolidColorBrush$1($.Color$hex$1($.CTC66.toString$0()));
                                                                                                                  } else {
                                                                                                                    if ('Indigo' === value) {
                                                                                                                      return $.SolidColorBrush$1($.Color$hex$1($.CTC67.toString$0()));
                                                                                                                    } else {
                                                                                                                      if ('Ivory' === value) {
                                                                                                                        return $.SolidColorBrush$1($.Color$hex$1($.CTC68.toString$0()));
                                                                                                                      } else {
                                                                                                                        if ('Khaki' === value) {
                                                                                                                          return $.SolidColorBrush$1($.Color$hex$1($.CTC69.toString$0()));
                                                                                                                        } else {
                                                                                                                          if ('Lavender' === value) {
                                                                                                                            return $.SolidColorBrush$1($.Color$hex$1($.CTC70.toString$0()));
                                                                                                                          } else {
                                                                                                                            if ('LavenderBlush' === value) {
                                                                                                                              return $.SolidColorBrush$1($.Color$hex$1($.CTC71.toString$0()));
                                                                                                                            } else {
                                                                                                                              if ('LawnGreen' === value) {
                                                                                                                                return $.SolidColorBrush$1($.Color$hex$1($.CTC72.toString$0()));
                                                                                                                              } else {
                                                                                                                                if ('LemonChiffon' === value) {
                                                                                                                                  return $.SolidColorBrush$1($.Color$hex$1($.CTC73.toString$0()));
                                                                                                                                } else {
                                                                                                                                  if ('LightBlue' === value) {
                                                                                                                                    return $.SolidColorBrush$1($.Color$hex$1($.CTC74.toString$0()));
                                                                                                                                  } else {
                                                                                                                                    if ('LightCoral' === value) {
                                                                                                                                      return $.SolidColorBrush$1($.Color$hex$1($.CTC75.toString$0()));
                                                                                                                                    } else {
                                                                                                                                      if ('LightCyan' === value) {
                                                                                                                                        return $.SolidColorBrush$1($.Color$hex$1($.CTC76.toString$0()));
                                                                                                                                      } else {
                                                                                                                                        if ('LightGoldenrod' === value) {
                                                                                                                                          return $.SolidColorBrush$1($.Color$hex$1($.CTC77.toString$0()));
                                                                                                                                        } else {
                                                                                                                                          if ('LightGray' === value) {
                                                                                                                                            return $.SolidColorBrush$1($.Color$hex$1($.CTC78.toString$0()));
                                                                                                                                          } else {
                                                                                                                                            if ('LightGreen' === value) {
                                                                                                                                              return $.SolidColorBrush$1($.Color$hex$1($.CTC79.toString$0()));
                                                                                                                                            } else {
                                                                                                                                              if ('LightPink' === value) {
                                                                                                                                                return $.SolidColorBrush$1($.Color$hex$1($.CTC80.toString$0()));
                                                                                                                                              } else {
                                                                                                                                                if ('LightSalmon' === value) {
                                                                                                                                                  return $.SolidColorBrush$1($.Color$hex$1($.CTC81.toString$0()));
                                                                                                                                                } else {
                                                                                                                                                  if ('LightSeaGreen' === value) {
                                                                                                                                                    return $.SolidColorBrush$1($.Color$hex$1($.CTC82.toString$0()));
                                                                                                                                                  } else {
                                                                                                                                                    if ('LightSkyBlue' === value) {
                                                                                                                                                      return $.SolidColorBrush$1($.Color$hex$1($.CTC83.toString$0()));
                                                                                                                                                    } else {
                                                                                                                                                      if ('LightSlateGray' === value) {
                                                                                                                                                        return $.SolidColorBrush$1($.Color$hex$1($.CTC84.toString$0()));
                                                                                                                                                      } else {
                                                                                                                                                        if ('LightSteelBlue' === value) {
                                                                                                                                                          return $.SolidColorBrush$1($.Color$hex$1($.CTC85.toString$0()));
                                                                                                                                                        } else {
                                                                                                                                                          if ('LightYellow' === value) {
                                                                                                                                                            return $.SolidColorBrush$1($.Color$hex$1($.CTC86.toString$0()));
                                                                                                                                                          } else {
                                                                                                                                                            if ('Lime' === value) {
                                                                                                                                                              return $.SolidColorBrush$1($.Color$hex$1($.CTC87.toString$0()));
                                                                                                                                                            } else {
                                                                                                                                                              if ('LimeGreen' === value) {
                                                                                                                                                                return $.SolidColorBrush$1($.Color$hex$1($.CTC88.toString$0()));
                                                                                                                                                              } else {
                                                                                                                                                                if ('Linen' === value) {
                                                                                                                                                                  return $.SolidColorBrush$1($.Color$hex$1($.CTC89.toString$0()));
                                                                                                                                                                } else {
                                                                                                                                                                  if ('Magenta' === value) {
                                                                                                                                                                    return $.SolidColorBrush$1($.Color$hex$1($.CTC90.toString$0()));
                                                                                                                                                                  } else {
                                                                                                                                                                    if ('Maroon' === value) {
                                                                                                                                                                      return $.SolidColorBrush$1($.Color$hex$1($.CTC91.toString$0()));
                                                                                                                                                                    } else {
                                                                                                                                                                      if ('MediumAquamarine' === value) {
                                                                                                                                                                        return $.SolidColorBrush$1($.Color$hex$1($.CTC92.toString$0()));
                                                                                                                                                                      } else {
                                                                                                                                                                        if ('MediumBlue' === value) {
                                                                                                                                                                          return $.SolidColorBrush$1($.Color$hex$1($.CTC93.toString$0()));
                                                                                                                                                                        } else {
                                                                                                                                                                          if ('MediumOrchid' === value) {
                                                                                                                                                                            return $.SolidColorBrush$1($.Color$hex$1($.CTC94.toString$0()));
                                                                                                                                                                          } else {
                                                                                                                                                                            if ('MediumPurple' === value) {
                                                                                                                                                                              return $.SolidColorBrush$1($.Color$hex$1($.CTC95.toString$0()));
                                                                                                                                                                            } else {
                                                                                                                                                                              if ('MediumSeaGreen' === value) {
                                                                                                                                                                                return $.SolidColorBrush$1($.Color$hex$1($.CTC96.toString$0()));
                                                                                                                                                                              } else {
                                                                                                                                                                                if ('MediumSlateBlue' === value) {
                                                                                                                                                                                  return $.SolidColorBrush$1($.Color$hex$1($.CTC97.toString$0()));
                                                                                                                                                                                } else {
                                                                                                                                                                                  if ('MediumSpringGreen' === value) {
                                                                                                                                                                                    return $.SolidColorBrush$1($.Color$hex$1($.CTC98.toString$0()));
                                                                                                                                                                                  } else {
                                                                                                                                                                                    if ('MediumTurquoise' === value) {
                                                                                                                                                                                      return $.SolidColorBrush$1($.Color$hex$1($.CTC99.toString$0()));
                                                                                                                                                                                    } else {
                                                                                                                                                                                      if ('MediumVioletRed' === value) {
                                                                                                                                                                                        return $.SolidColorBrush$1($.Color$hex$1($.CTC100.toString$0()));
                                                                                                                                                                                      } else {
                                                                                                                                                                                        if ('MidnightBlue' === value) {
                                                                                                                                                                                          return $.SolidColorBrush$1($.Color$hex$1($.CTC101.toString$0()));
                                                                                                                                                                                        } else {
                                                                                                                                                                                          if ('MintCream' === value) {
                                                                                                                                                                                            return $.SolidColorBrush$1($.Color$hex$1($.CTC102.toString$0()));
                                                                                                                                                                                          } else {
                                                                                                                                                                                            if ('MistyRose' === value) {
                                                                                                                                                                                              return $.SolidColorBrush$1($.Color$hex$1($.CTC103.toString$0()));
                                                                                                                                                                                            } else {
                                                                                                                                                                                              if ('Moccasin' === value) {
                                                                                                                                                                                                return $.SolidColorBrush$1($.Color$hex$1($.CTC104.toString$0()));
                                                                                                                                                                                              } else {
                                                                                                                                                                                                if ('NavajoWhite' === value) {
                                                                                                                                                                                                  return $.SolidColorBrush$1($.Color$hex$1($.CTC105.toString$0()));
                                                                                                                                                                                                } else {
                                                                                                                                                                                                  if ('Navy' === value) {
                                                                                                                                                                                                    return $.SolidColorBrush$1($.Color$hex$1($.CTC106.toString$0()));
                                                                                                                                                                                                  } else {
                                                                                                                                                                                                    if ('OldLace' === value) {
                                                                                                                                                                                                      return $.SolidColorBrush$1($.Color$hex$1($.CTC107.toString$0()));
                                                                                                                                                                                                    } else {
                                                                                                                                                                                                      if ('Olive' === value) {
                                                                                                                                                                                                        return $.SolidColorBrush$1($.Color$hex$1($.CTC108.toString$0()));
                                                                                                                                                                                                      } else {
                                                                                                                                                                                                        if ('OliveDrab' === value) {
                                                                                                                                                                                                          return $.SolidColorBrush$1($.Color$hex$1($.CTC109.toString$0()));
                                                                                                                                                                                                        } else {
                                                                                                                                                                                                          if ('Orange' === value) {
                                                                                                                                                                                                            return $.SolidColorBrush$1($.Color$hex$1($.CTC110.toString$0()));
                                                                                                                                                                                                          } else {
                                                                                                                                                                                                            if ('OrangeRed' === value) {
                                                                                                                                                                                                              return $.SolidColorBrush$1($.Color$hex$1($.CTC111.toString$0()));
                                                                                                                                                                                                            } else {
                                                                                                                                                                                                              if ('Orchid' === value) {
                                                                                                                                                                                                                return $.SolidColorBrush$1($.Color$hex$1($.CTC112.toString$0()));
                                                                                                                                                                                                              } else {
                                                                                                                                                                                                                if ('PaleGoldenrod' === value) {
                                                                                                                                                                                                                  return $.SolidColorBrush$1($.Color$hex$1($.CTC113.toString$0()));
                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                  if ('PaleGreen' === value) {
                                                                                                                                                                                                                    return $.SolidColorBrush$1($.Color$hex$1($.CTC114.toString$0()));
                                                                                                                                                                                                                  } else {
                                                                                                                                                                                                                    if ('PaleTurquoise' === value) {
                                                                                                                                                                                                                      return $.SolidColorBrush$1($.Color$hex$1($.CTC115.toString$0()));
                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                      if ('PaleVioletRed' === value) {
                                                                                                                                                                                                                        return $.SolidColorBrush$1($.Color$hex$1($.CTC116.toString$0()));
                                                                                                                                                                                                                      } else {
                                                                                                                                                                                                                        if ('PapayaWhip' === value) {
                                                                                                                                                                                                                          return $.SolidColorBrush$1($.Color$hex$1($.CTC117.toString$0()));
                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                          if ('PeachPuff' === value) {
                                                                                                                                                                                                                            return $.SolidColorBrush$1($.Color$hex$1($.CTC118.toString$0()));
                                                                                                                                                                                                                          } else {
                                                                                                                                                                                                                            if ('Peru' === value) {
                                                                                                                                                                                                                              return $.SolidColorBrush$1($.Color$hex$1($.CTC119.toString$0()));
                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                              if ('Pink' === value) {
                                                                                                                                                                                                                                return $.SolidColorBrush$1($.Color$hex$1($.CTC120.toString$0()));
                                                                                                                                                                                                                              } else {
                                                                                                                                                                                                                                if ('Plum' === value) {
                                                                                                                                                                                                                                  return $.SolidColorBrush$1($.Color$hex$1($.CTC121.toString$0()));
                                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                                  if ('PowderBlue' === value) {
                                                                                                                                                                                                                                    return $.SolidColorBrush$1($.Color$hex$1($.CTC122.toString$0()));
                                                                                                                                                                                                                                  } else {
                                                                                                                                                                                                                                    if ('Purple' === value) {
                                                                                                                                                                                                                                      return $.SolidColorBrush$1($.Color$hex$1($.CTC123.toString$0()));
                                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                                      if ('Red' === value) {
                                                                                                                                                                                                                                        return $.SolidColorBrush$1($.Color$hex$1($.CTC124.toString$0()));
                                                                                                                                                                                                                                      } else {
                                                                                                                                                                                                                                        if ('RosyBrown' === value) {
                                                                                                                                                                                                                                          return $.SolidColorBrush$1($.Color$hex$1($.CTC125.toString$0()));
                                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                                          if ('RoyalBlue' === value) {
                                                                                                                                                                                                                                            return $.SolidColorBrush$1($.Color$hex$1($.CTC126.toString$0()));
                                                                                                                                                                                                                                          } else {
                                                                                                                                                                                                                                            if ('SaddleBrown' === value) {
                                                                                                                                                                                                                                              return $.SolidColorBrush$1($.Color$hex$1($.CTC127.toString$0()));
                                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                                              if ('Salmon' === value) {
                                                                                                                                                                                                                                                return $.SolidColorBrush$1($.Color$hex$1($.CTC128.toString$0()));
                                                                                                                                                                                                                                              } else {
                                                                                                                                                                                                                                                if ('SandyBrown' === value) {
                                                                                                                                                                                                                                                  return $.SolidColorBrush$1($.Color$hex$1($.CTC129.toString$0()));
                                                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                                                  if ('SeaGreen' === value) {
                                                                                                                                                                                                                                                    return $.SolidColorBrush$1($.Color$hex$1($.CTC130.toString$0()));
                                                                                                                                                                                                                                                  } else {
                                                                                                                                                                                                                                                    if ('SeaShell' === value) {
                                                                                                                                                                                                                                                      return $.SolidColorBrush$1($.Color$hex$1($.CTC131.toString$0()));
                                                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                                                      if ('Sienna' === value) {
                                                                                                                                                                                                                                                        return $.SolidColorBrush$1($.Color$hex$1($.CTC132.toString$0()));
                                                                                                                                                                                                                                                      } else {
                                                                                                                                                                                                                                                        if ('Silver' === value) {
                                                                                                                                                                                                                                                          return $.SolidColorBrush$1($.Color$hex$1($.CTC133.toString$0()));
                                                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                                                          if ('SkyBlue' === value) {
                                                                                                                                                                                                                                                            return $.SolidColorBrush$1($.Color$hex$1($.CTC134.toString$0()));
                                                                                                                                                                                                                                                          } else {
                                                                                                                                                                                                                                                            if ('SlateBlue' === value) {
                                                                                                                                                                                                                                                              return $.SolidColorBrush$1($.Color$hex$1($.CTC135.toString$0()));
                                                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                                                              if ('SlateGray' === value) {
                                                                                                                                                                                                                                                                return $.SolidColorBrush$1($.Color$hex$1($.CTC136.toString$0()));
                                                                                                                                                                                                                                                              } else {
                                                                                                                                                                                                                                                                if ('Snow' === value) {
                                                                                                                                                                                                                                                                  return $.SolidColorBrush$1($.Color$hex$1($.CTC137.toString$0()));
                                                                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                                                                  if ('SpringGreen' === value) {
                                                                                                                                                                                                                                                                    return $.SolidColorBrush$1($.Color$hex$1($.CTC138.toString$0()));
                                                                                                                                                                                                                                                                  } else {
                                                                                                                                                                                                                                                                    if ('SteelBlue' === value) {
                                                                                                                                                                                                                                                                      return $.SolidColorBrush$1($.Color$hex$1($.CTC139.toString$0()));
                                                                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                                                                      if ('Tan' === value) {
                                                                                                                                                                                                                                                                        return $.SolidColorBrush$1($.Color$hex$1($.CTC140.toString$0()));
                                                                                                                                                                                                                                                                      } else {
                                                                                                                                                                                                                                                                        if ('Teal' === value) {
                                                                                                                                                                                                                                                                          return $.SolidColorBrush$1($.Color$hex$1($.CTC141.toString$0()));
                                                                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                                                                          if ('Thistle' === value) {
                                                                                                                                                                                                                                                                            return $.SolidColorBrush$1($.Color$hex$1($.CTC142.toString$0()));
                                                                                                                                                                                                                                                                          } else {
                                                                                                                                                                                                                                                                            if ('Tomato' === value) {
                                                                                                                                                                                                                                                                              return $.SolidColorBrush$1($.Color$hex$1($.CTC143.toString$0()));
                                                                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                                                                              if ('Turquoise' === value) {
                                                                                                                                                                                                                                                                                return $.SolidColorBrush$1($.Color$hex$1($.CTC144.toString$0()));
                                                                                                                                                                                                                                                                              } else {
                                                                                                                                                                                                                                                                                if ('Violet' === value) {
                                                                                                                                                                                                                                                                                  return $.SolidColorBrush$1($.Color$hex$1($.CTC145.toString$0()));
                                                                                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                                                                                  if ('Wheat' === value) {
                                                                                                                                                                                                                                                                                    return $.SolidColorBrush$1($.Color$hex$1($.CTC146.toString$0()));
                                                                                                                                                                                                                                                                                  } else {
                                                                                                                                                                                                                                                                                    if ('White' === value) {
                                                                                                                                                                                                                                                                                      return $.SolidColorBrush$1($.Color$hex$1($.CTC9.toString$0()));
                                                                                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                                                                                      if ('WhiteSmoke' === value) {
                                                                                                                                                                                                                                                                                        return $.SolidColorBrush$1($.Color$hex$1($.CTC147.toString$0()));
                                                                                                                                                                                                                                                                                      } else {
                                                                                                                                                                                                                                                                                        if ('Yellow' === value) {
                                                                                                                                                                                                                                                                                          return $.SolidColorBrush$1($.Color$hex$1($.CTC148.toString$0()));
                                                                                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                                                                                          if ('YellowGreen' === value) {
                                                                                                                                                                                                                                                                                            return $.SolidColorBrush$1($.Color$hex$1($.CTC149.toString$0()));
                                                                                                                                                                                                                                                                                          } else {
                                                                                                                                                                                                                                                                                            return $.SolidColorBrush$1($.Color$predefined$1($.CTC9));
                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }
                                                                                                                                                                                                        }
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                            }
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                      }
                                                                                                                                                                                    }
                                                                                                                                                                                  }
                                                                                                                                                                                }
                                                                                                                                                                              }
                                                                                                                                                                            }
                                                                                                                                                                          }
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
 },
 convert$1: function(value) {
  return this.convert$2(value,(void 0))
},
 is$IValueConverter: true,
});

Isolate.$defineClass("Closure250", "Closure330",
function Closure() {
}, {
 $call$1: function(_) {
 },
});

Isolate.$defineClass("Closure21", "Closure330",
function Closure(box_0) {
  this.box_0 = box_0;
}, {
 $call$2: function(key, value) {
  if (this.box_0.f_1.$call$1(key) === true) {
    $.add$1(this.box_0.result_2, key);
  }
 },
});

Isolate.$defineClass("Closure104", "Closure330",
function Closure(this_2) {
  this.this_2 = this_2;
}, {
 $call$2: function(_, args) {
  if ($.gtB($.get$length(args.get$oldItems()), 0)) {
    throw $.captureStackTrace($.CTC8);
  }
  $.forEach(args.get$newItems(), new $.Closure105(this.this_2));
 },
});

Isolate.$defineClass("Closure122", "Closure330",
function Closure(this_2) {
  this.this_2 = this_2;
}, {
 $call$1: function(p) {
  if ($.eqNullB(this.this_2.get$_lib2_presenter())) {
    return;
  }
  this.this_2.get$_lib2_presenter().set$presentationPanel(p);
 },
});

Isolate.$defineClass("Closure16", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$2: function(source, args) {
  var t0 = this.this_0.get$content();
  if (!((typeof t0 === 'object') && !!t0.is$Border)) {
    var t1 = '' + $.stringToString($.sub(args.get$newMeasurement().get$client().get$width(), $.add($.add($.add(this.this_0.get$content().get$margin().get$left(), this.this_0.get$content().get$margin().get$right()), this.this_0.get$padding().get$left()), this.this_0.get$padding().get$right()))) + 'px';
    this.this_0.get$content().get$rawElement().get$style().set$width(t1);
  } else {
    var t2 = '' + $.stringToString($.sub(args.get$newMeasurement().get$client().get$width(), $.add($.add($.add($.add($.add($.get$dynamic(this.this_0.get$content()).get$padding().get$left(), $.get$dynamic(this.this_0.get$content()).get$padding().get$right()), this.this_0.get$content().get$margin().get$left()), this.this_0.get$content().get$margin().get$right()), this.this_0.get$padding().get$left()), this.this_0.get$padding().get$right()))) + 'px';
    this.this_0.get$content().get$rawElement().get$style().set$width(t2);
  }
 },
});

Isolate.$defineClass("Closure187", "Closure330",
function Closure(this_4) {
  this.this_4 = this_4;
}, {
 $call$1: function(v) {
  if (!(typeof v === 'number')) {
    return;
  }
  $.indexSet(this.this_4.get$_lib2_svgWrapper().get$attributes(), 'height', v);
 },
});

Isolate.$defineClass("StringToLinearGradientDirectionConverter", "Object",
function StringToLinearGradientDirectionConverter() {
}, {
 convert$2: function(value, parameter) {
  if (!(typeof value === 'string')) {
    return value;
  }
  $0:{
    if ('vertical' === value) {
      return $.CTC242;
    } else {
      if ('horizontal' === value) {
        return $.CTC239;
      }
    }
  }
 },
 convert$1: function(value) {
  return this.convert$2(value,(void 0))
},
 is$IValueConverter: true,
});

Isolate.$defineClass("Closure121", "Closure330",
function Closure() {
}, {
 $call$1: function(_) {
 },
});

Isolate.$defineClass("NoMoreElementsException", "Object",
function NoMoreElementsException() {
}, {
 toString$0: function() {
  return 'NoMoreElementsException';
 },
 is$Exception: true,
});

Isolate.$defineClass("Closure246", "Closure330",
function Closure() {
}, {
 $call$1: function(v) {
 },
});

Isolate.$defineClass("Closure283", "Closure330",
function Closure(box_0) {
  this.box_0 = box_0;
}, {
 $call$1: function(el) {
  if (!($.isEmpty(this.box_0.list_2) === true)) {
    return;
  }
  if (typeof el === 'object' && !!el.is$XmlElement) {
    el._lib7_queryNodeTypeInternal$2(this.box_0.nodeType_1, this.box_0.list_2);
  } else {
    if ($.eqB(el.get$type(), this.box_0.nodeType_1)) {
      this.box_0.list_2._lib7_add$1(el);
      return;
    }
  }
 },
});

Isolate.$defineClass("Closure79", "Closure330",
function Closure(this_30) {
  this.this_30 = this_30;
}, {
 $call$1: function(value) {
  return this.this_30.calculateWidth$1(value);
 },
});

Isolate.$defineClass("Closure305", "Closure330",
function Closure() {
}, {
 $call$1: function(v) {
 },
});

Isolate.$defineClass("_FrameSetElementEventsImpl", "_ElementEventsImpl",
function _FrameSetElementEventsImpl(_EventsImpl__lib5_ptr) {
  this._lib5_ptr = _EventsImpl__lib5_ptr;
}, {
 get$resize: function() {
  return this._lib5_get$1('resize');
 },
 get$message: function() {
  return this._lib5_get$1('message');
 },
 get$focus: function() {
  return this._lib5_get$1('focus');
 },
 focus$0: function() { return this.get$focus().$call$0(); },
 get$blur: function() {
  return this._lib5_get$1('blur');
 },
});

Isolate.$defineClass("Closure126", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$1: function(value) {
  if (value === true) {
    if (this.this_0.get$_lib2_component().get$attributes().containsKey$1('disabled') === true) {
      this.this_0.get$_lib2_component().get$attributes().remove$1('disabled');
    }
  } else {
    $.indexSet(this.this_0.get$_lib2_component().get$attributes(), 'disabled', 'disabled');
  }
 },
});

Isolate.$defineClass("TextBox", "Control",
function TextBox(textChanged, placeholderProperty, inputTypeProperty, textProperty, Control__lib2_templateBindingsApplied, Control__lib2_templateApplied, Control__lib2_visualTemplateApplied, Control_template, Control_isEnabledProperty, FrameworkElement_mouseUp, FrameworkElement_mouseDown, FrameworkElement_mouseMove, FrameworkElement_click, FrameworkElement_mouseLeave, FrameworkElement_mouseEnter, FrameworkElement_lostFocus, FrameworkElement_gotFocus, FrameworkElement_actionsProperty, FrameworkElement_perspectiveProperty, FrameworkElement_transformOriginZProperty, FrameworkElement_transformOriginYProperty, FrameworkElement_transformOriginXProperty, FrameworkElement_rotateZProperty, FrameworkElement_rotateYProperty, FrameworkElement_rotateXProperty, FrameworkElement_scaleZProperty, FrameworkElement_scaleYProperty, FrameworkElement_scaleXProperty, FrameworkElement_translateZProperty, FrameworkElement_translateYProperty, FrameworkElement_translateXProperty, FrameworkElement_styleProperty, FrameworkElement_visibilityProperty, FrameworkElement_opacityProperty, FrameworkElement_actualHeightProperty, FrameworkElement_actualWidthProperty, FrameworkElement_zOrderProperty, FrameworkElement_verticalAlignmentProperty, FrameworkElement_horizontalAlignmentProperty, FrameworkElement_tagProperty, FrameworkElement_cursorProperty, FrameworkElement_minHeightProperty, FrameworkElement_maxHeightProperty, FrameworkElement_minWidthProperty, FrameworkElement_maxWidthProperty, FrameworkElement_htmlIDProperty, FrameworkElement_heightProperty, FrameworkElement_widthProperty, FrameworkElement_marginProperty, FrameworkElement__lib2_transitionProperties, FrameworkElement__lib2_templateBindings, FrameworkElement__lib2_style, FrameworkElement__lib2_containerParent, FrameworkObject_mostRecentMeasurement, FrameworkObject__lib2_dataContextUpdated, FrameworkObject_nameProperty, FrameworkObject_attachedPropertyChanged, FrameworkObject_measurementChanged, FrameworkObject_unloaded, FrameworkObject_loaded, FrameworkObject_lateBindings, FrameworkObject_dataContextProperty, FrameworkObject__lib2_isLoaded, FrameworkObject__lib2_parent, FrameworkObject__lib2_component, FrameworkObject__lib2_previousMeasurement, FrameworkObject__lib2_animationFrameID, FrameworkObject__lib2_watchingMeasurement, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this.textChanged = textChanged;
  this.placeholderProperty = placeholderProperty;
  this.inputTypeProperty = inputTypeProperty;
  this.textProperty = textProperty;
  this._lib2_templateBindingsApplied = Control__lib2_templateBindingsApplied;
  this._lib2_templateApplied = Control__lib2_templateApplied;
  this._lib2_visualTemplateApplied = Control__lib2_visualTemplateApplied;
  this.template = Control_template;
  this.isEnabledProperty = Control_isEnabledProperty;
  this.mouseUp = FrameworkElement_mouseUp;
  this.mouseDown = FrameworkElement_mouseDown;
  this.mouseMove = FrameworkElement_mouseMove;
  this.click = FrameworkElement_click;
  this.mouseLeave = FrameworkElement_mouseLeave;
  this.mouseEnter = FrameworkElement_mouseEnter;
  this.lostFocus = FrameworkElement_lostFocus;
  this.gotFocus = FrameworkElement_gotFocus;
  this.actionsProperty = FrameworkElement_actionsProperty;
  this.perspectiveProperty = FrameworkElement_perspectiveProperty;
  this.transformOriginZProperty = FrameworkElement_transformOriginZProperty;
  this.transformOriginYProperty = FrameworkElement_transformOriginYProperty;
  this.transformOriginXProperty = FrameworkElement_transformOriginXProperty;
  this.rotateZProperty = FrameworkElement_rotateZProperty;
  this.rotateYProperty = FrameworkElement_rotateYProperty;
  this.rotateXProperty = FrameworkElement_rotateXProperty;
  this.scaleZProperty = FrameworkElement_scaleZProperty;
  this.scaleYProperty = FrameworkElement_scaleYProperty;
  this.scaleXProperty = FrameworkElement_scaleXProperty;
  this.translateZProperty = FrameworkElement_translateZProperty;
  this.translateYProperty = FrameworkElement_translateYProperty;
  this.translateXProperty = FrameworkElement_translateXProperty;
  this.styleProperty = FrameworkElement_styleProperty;
  this.visibilityProperty = FrameworkElement_visibilityProperty;
  this.opacityProperty = FrameworkElement_opacityProperty;
  this.actualHeightProperty = FrameworkElement_actualHeightProperty;
  this.actualWidthProperty = FrameworkElement_actualWidthProperty;
  this.zOrderProperty = FrameworkElement_zOrderProperty;
  this.verticalAlignmentProperty = FrameworkElement_verticalAlignmentProperty;
  this.horizontalAlignmentProperty = FrameworkElement_horizontalAlignmentProperty;
  this.tagProperty = FrameworkElement_tagProperty;
  this.cursorProperty = FrameworkElement_cursorProperty;
  this.minHeightProperty = FrameworkElement_minHeightProperty;
  this.maxHeightProperty = FrameworkElement_maxHeightProperty;
  this.minWidthProperty = FrameworkElement_minWidthProperty;
  this.maxWidthProperty = FrameworkElement_maxWidthProperty;
  this.htmlIDProperty = FrameworkElement_htmlIDProperty;
  this.heightProperty = FrameworkElement_heightProperty;
  this.widthProperty = FrameworkElement_widthProperty;
  this.marginProperty = FrameworkElement_marginProperty;
  this._lib2_transitionProperties = FrameworkElement__lib2_transitionProperties;
  this._lib2_templateBindings = FrameworkElement__lib2_templateBindings;
  this._lib2_style = FrameworkElement__lib2_style;
  this._lib2_containerParent = FrameworkElement__lib2_containerParent;
  this.mostRecentMeasurement = FrameworkObject_mostRecentMeasurement;
  this._lib2_dataContextUpdated = FrameworkObject__lib2_dataContextUpdated;
  this.nameProperty = FrameworkObject_nameProperty;
  this.attachedPropertyChanged = FrameworkObject_attachedPropertyChanged;
  this.measurementChanged = FrameworkObject_measurementChanged;
  this.unloaded = FrameworkObject_unloaded;
  this.loaded = FrameworkObject_loaded;
  this.lateBindings = FrameworkObject_lateBindings;
  this.dataContextProperty = FrameworkObject_dataContextProperty;
  this._lib2_isLoaded = FrameworkObject__lib2_isLoaded;
  this._lib2_parent = FrameworkObject__lib2_parent;
  this._lib2_component = FrameworkObject__lib2_component;
  this._lib2_previousMeasurement = FrameworkObject__lib2_previousMeasurement;
  this._lib2_animationFrameID = FrameworkObject__lib2_animationFrameID;
  this._lib2_watchingMeasurement = FrameworkObject__lib2_watchingMeasurement;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$type: function() {
  return 'TextBox';
 },
 CreateElement$0: function() {
  this.set$_lib2_component($.createByTag('input'));
  $.indexSet(this.get$_lib2_component().get$attributes(), 'type', 'text');
 },
 set$text: function(value) {
  return $.setValue(this.get$textProperty(), value);
 },
 get$text: function() {
  return $.getValue(this.get$textProperty());
 },
 _lib2_initEvents$0: function() {
  $.add$1(this.get$_lib2_component().get$on().get$keyUp(), new $.Closure149(this));
  $.add$1(this.get$_lib2_component().get$on().get$change(), new $.Closure150(this));
 },
 _lib2_initTextBoxProperties$0: function() {
  this.set$placeholderProperty($.FrameworkProperty$5(this, 'placeholder', new $.Closure151(this), (void 0), (void 0)));
  this.set$textProperty($.FrameworkProperty$5(this, 'text', new $.Closure152(this), '', (void 0)));
  this.set$inputTypeProperty($.FrameworkProperty$5(this, 'inputType', new $.Closure153(this), $.CTC193, $.CTC194));
 },
 makeMe$0: function() {
  return $.TextBox$0();
 },
 get$textChanged: function() { return this.textChanged; },
 set$placeholderProperty: function(v) { this.placeholderProperty = v; },
 set$inputTypeProperty: function(v) { this.inputTypeProperty = v; },
 set$textProperty: function(v) { this.textProperty = v; },
 get$textProperty: function() { return this.textProperty; },
 TextBox$0: function() {
  $.appendBuckshotClass(this.get$_lib2_component(), 'textbox');
  this._lib2_initTextBoxProperties$0();
  $.indexSet(this.get$_lib2_stateBag(), 'CONTAINER_CONTEXT', this.get$textProperty());
  this._lib2_initEvents$0();
 },
});

Isolate.$defineClass("Closure200", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$1: function(list) {
  this.this_0._lib2_updateColumnLayout$1(this.this_0.get$actualWidth());
 },
});

Isolate.$defineClass("Cursors", "Object",
function Cursors(_lib2_str) {
  this._lib2_str = _lib2_str;
}, {
 toString$0: function() {
  return this.get$_lib2_str();
 },
 get$_lib2_str: function() { return this._lib2_str; },
});

Isolate.$defineClass("Closure63", "Closure330",
function Closure(this_10, doTransform_9) {
  this.this_10 = this_10;
  this.doTransform_9 = doTransform_9;
}, {
 $call$1: function(value) {
  this.doTransform_9.$call$1(this.this_10);
 },
});

Isolate.$defineClass("_AbstractWorkerEventsImpl", "_EventsImpl",
function _AbstractWorkerEventsImpl(_EventsImpl__lib5_ptr) {
  this._lib5_ptr = _EventsImpl__lib5_ptr;
}, {
});

Isolate.$defineClass("ExceptionBase", "Object",
function ExceptionBase() {
}, {
 get$type: function() {
  return 'ExceptionBase';
 },
 is$Exception: true,
});

Isolate.$defineClass("XmlProcessingInstruction", "XmlNode",
function XmlProcessingInstruction(text, XmlNode_parent, XmlNode_type) {
  this.text = text;
  this.parent = XmlNode_parent;
  this.type = XmlNode_type;
}, {
 toString$0: function() {
  return '<?\r' + $.stringToString(this.get$text()) + '\r?>';
 },
 get$text: function() { return this.text; },
});

Isolate.$defineClass("FrameworkPropertyBase", "HashableObject",
function FrameworkPropertyBase() {
}, {
 get$type: function() {
  return 'FrameworkPropertyBase';
 },
 get$stringToValueConverter: function() { return this.stringToValueConverter; },
 get$propertyChanging: function() { return this.propertyChanging; },
 get$propertyName: function() { return this.propertyName; },
 get$propertyChangedCallback: function() { return this.propertyChangedCallback; },
 get$sourceObject: function() { return this.sourceObject; },
 FrameworkPropertyBase$4: function(sourceObject, propertyName, propertyChangedCallback, stringToValueConverter) {
 },
});

Isolate.$defineClass("Closure156", "Closure330",
function Closure(this_2, box_0) {
  this.this_2 = this_2;
  this.box_0 = box_0;
}, {
 $call$1: function(child) {
  return this.this_2._lib2_getAllTemplateBindings$2(this.box_0.list_1, child);
 },
});

Isolate.$defineClass("Closure215", "Closure330",
function Closure(box_0) {
  this.box_0 = box_0;
}, {
 $call$1: function(item) {
  var total = $.add(this.box_0.total_1, item.get$_lib2_adjustedLength());
  this.box_0.total_1 = total;
 },
});

Isolate.$defineClass("HashSetIterator", "Object",
function HashSetIterator(_lib3_nextValidIndex, _lib3_entries) {
  this._lib3_nextValidIndex = _lib3_nextValidIndex;
  this._lib3_entries = _lib3_entries;
}, {
 set$_lib3_nextValidIndex: function(v) { this._lib3_nextValidIndex = v; },
 get$_lib3_nextValidIndex: function() { return this._lib3_nextValidIndex; },
 get$_lib3_entries: function() { return this._lib3_entries; },
 _lib3_advance$0: function() {
  var length$ = $.get$length(this.get$_lib3_entries());
  if (typeof length$ !== 'number') return this._lib3_advance$0$bailout(1, length$);
  var entry = (void 0);
  do {
    var t0 = $.add(this.get$_lib3_nextValidIndex(), 1);
    this.set$_lib3_nextValidIndex(t0);
    if ($.geB(t0, length$)) {
      break;
    }
    entry = $.index(this.get$_lib3_entries(), this.get$_lib3_nextValidIndex());
  } while (entry === (void 0) || entry === $.CTC2);
 },
 _lib3_advance$0$bailout: function(state, env0) {
  switch (state) {
    case 1:
      length$ = env0;
      break;
  }
  switch (state) {
    case 0:
      var length$ = $.get$length(this.get$_lib3_entries());
    case 1:
      state = 0;
      var entry = (void 0);
      L0: while (true) {
        var t0 = $.add(this.get$_lib3_nextValidIndex(), 1);
        this.set$_lib3_nextValidIndex(t0);
        if ($.geB(t0, length$)) {
          break;
        }
        entry = $.index(this.get$_lib3_entries(), this.get$_lib3_nextValidIndex());
        if (!(entry === (void 0) || entry === $.CTC2)) break L0;
      }
  }
 },
 next$0: function() {
  if (!(this.hasNext$0() === true)) {
    throw $.captureStackTrace($.CTC3);
  }
  var res = $.index(this.get$_lib3_entries(), this.get$_lib3_nextValidIndex());
  this._lib3_advance$0();
  return res;
 },
 hasNext$0: function() {
  if ($.geB(this.get$_lib3_nextValidIndex(), $.get$length(this.get$_lib3_entries()))) {
    return false;
  }
  if ($.index(this.get$_lib3_entries(), this.get$_lib3_nextValidIndex()) === $.CTC2) {
    this._lib3_advance$0();
  }
  return $.lt(this.get$_lib3_nextValidIndex(), $.get$length(this.get$_lib3_entries()));
 },
 HashSetIterator$1: function(set_) {
  this._lib3_advance$0();
 },
});

Isolate.$defineClass("Closure93", "Closure330",
function Closure(this_2, box_0) {
  this.this_2 = this_2;
  this.box_0 = box_0;
}, {
 $call$2: function(_, s) {
  this.this_2._lib2_bindSetterToElement$2(s, this.box_0.element_1);
 },
});

Isolate.$defineClass("IllegalArgumentException", "Object",
function IllegalArgumentException(_lib4_arg) {
  this._lib4_arg = _lib4_arg;
}, {
 get$_lib4_arg: function() { return this._lib4_arg; },
 toString$0: function() {
  return 'Illegal argument(s): ' + $.stringToString(this.get$_lib4_arg());
 },
 is$Exception: true,
});

Isolate.$defineClass("Closure132", "Closure330",
function Closure(this_4, doNotify_3) {
  this.this_4 = this_4;
  this.doNotify_3 = doNotify_3;
}, {
 $call$2: function(_, __) {
  this.this_4._lib2_updateDDL$0();
  this.doNotify_3.$call$0();
 },
});

Isolate.$defineClass("Closure241", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$1: function(value) {
  $.indexSet(this.this_0.get$_lib2_component().get$attributes(), 'src', $.toString(value));
 },
});

Isolate.$defineClass("_MediaElementEventsImpl", "_ElementEventsImpl",
function _MediaElementEventsImpl(_EventsImpl__lib5_ptr) {
  this._lib5_ptr = _EventsImpl__lib5_ptr;
}, {
});

Isolate.$defineClass("Closure310", "Closure330",
function Closure(this_2, box_0) {
  this.this_2 = this_2;
  this.box_0 = box_0;
}, {
 $call$1: function(stop$) {
  var colorString = $.add(this.box_0.colorString_1, $.toString(stop$.get$color()));
  this.box_0.colorString_1 = colorString;
  if (!$.eqB(stop$.get$percent(), -1)) {
    var colorString0 = $.add(this.box_0.colorString_1, ' ' + $.stringToString(stop$.get$percent()) + '%');
    this.box_0.colorString_1 = colorString0;
  }
  if (!$.eqB(stop$, $.last(this.this_2.get$stops()))) {
    var colorString1 = $.add(this.box_0.colorString_1, ', ');
    this.box_0.colorString_1 = colorString1;
  }
 },
});

Isolate.$defineClass("_IDBTransactionEventsImpl", "_EventsImpl",
function _IDBTransactionEventsImpl(_EventsImpl__lib5_ptr) {
  this._lib5_ptr = _EventsImpl__lib5_ptr;
}, {
 get$complete: function() {
  return this._lib5_get$1('complete');
 },
 complete$1: function(arg0) { return this.get$complete().$call$1(arg0); },
});

Isolate.$defineClass("Closure58", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$1: function(e) {
  $.setXPCSS(e.get$_lib2_component(), 'transform', 'translateX(' + $.stringToString($.getValue(this.this_0.get$translateXProperty())) + 'px) translateY(' + $.stringToString($.getValue(this.this_0.get$translateYProperty())) + 'px) translateZ(' + $.stringToString($.getValue(this.this_0.get$translateZProperty())) + 'px)\r\n           scaleX(' + $.stringToString($.getValue(this.this_0.get$scaleXProperty())) + ') scaleY(' + $.stringToString($.getValue(this.this_0.get$scaleYProperty())) + ') scaleZ(' + $.stringToString($.getValue(this.this_0.get$scaleZProperty())) + ') \r\n           rotateX(' + $.stringToString($.getValue(this.this_0.get$rotateXProperty())) + 'deg) rotateY(' + $.stringToString($.getValue(this.this_0.get$rotateYProperty())) + 'deg) rotateZ(' + $.stringToString($.getValue(this.this_0.get$rotateZProperty())) + 'deg)\r\n        ');
 },
});

Isolate.$defineClass("_BodyElementEventsImpl", "_ElementEventsImpl",
function _BodyElementEventsImpl(_EventsImpl__lib5_ptr) {
  this._lib5_ptr = _EventsImpl__lib5_ptr;
}, {
 get$resize: function() {
  return this._lib5_get$1('resize');
 },
 get$message: function() {
  return this._lib5_get$1('message');
 },
 get$focus: function() {
  return this._lib5_get$1('focus');
 },
 focus$0: function() { return this.get$focus().$call$0(); },
 get$blur: function() {
  return this._lib5_get$1('blur');
 },
});

Isolate.$defineClass("_AllMatchesIterator", "Object",
function _AllMatchesIterator(_lib3_done, _lib3_next, _lib3_str, _lib3_re) {
  this._lib3_done = _lib3_done;
  this._lib3_next = _lib3_next;
  this._lib3_str = _lib3_str;
  this._lib3_re = _lib3_re;
}, {
 hasNext$0: function() {
  if (this.get$_lib3_done() === true) {
    return false;
  } else {
    if (!$.eqNullB(this.get$_lib3_next())) {
      return true;
    }
  }
  this.set$_lib3_next(this.get$_lib3_re().firstMatch$1(this.get$_lib3_str()));
  if ($.eqNullB(this.get$_lib3_next())) {
    this.set$_lib3_done(true);
    return false;
  } else {
    return true;
  }
 },
 next$0: function() {
  if (!(this.hasNext$0() === true)) {
    throw $.captureStackTrace($.CTC3);
  }
  var next = this.get$_lib3_next();
  this.set$_lib3_next((void 0));
  return next;
 },
 set$_lib3_done: function(v) { this._lib3_done = v; },
 get$_lib3_done: function() { return this._lib3_done; },
 set$_lib3_next: function(v) { this._lib3_next = v; },
 get$_lib3_next: function() { return this._lib3_next; },
 get$_lib3_str: function() { return this._lib3_str; },
 get$_lib3_re: function() { return this._lib3_re; },
});

Isolate.$defineClass("_CssAnimationObject", "Object",
function _CssAnimationObject(concreteElement, standardPropertyCarryOver, css) {
  this.concreteElement = concreteElement;
  this.standardPropertyCarryOver = standardPropertyCarryOver;
  this.css = css;
}, {
 set$concreteElement: function(v) { this.concreteElement = v; },
 get$concreteElement: function() { return this.concreteElement; },
 get$standardPropertyCarryOver: function() { return this.standardPropertyCarryOver; },
 get$css: function() { return this.css; },
});

Isolate.$defineClass("Control", "FrameworkElement",
function Control() {
}, {
 get$type: function() {
  return 'Control';
 },
 get$templateName: function() {
  return 'template_' + $.stringToString(this.get$type());
 },
 _lib2_getAllTemplateBindings$2: function(list, element) {
  var t0 = ({});
  t0.list_1 = list;
  $.forEach(element.get$_lib2_templateBindings(), new $.Closure155(t0));
  if (!((typeof element === 'object') && !!element.is$IFrameworkContainer)) {
    return;
  }
  var t1 = $.get$dynamic(element).get$content();
  if (typeof t1 === 'object' && (t1.constructor === Array || t1.is$List2())) {
    $.forEach($.get$dynamic(element).get$content(), new $.Closure156(this, t0));
  } else {
    var t2 = $.get$dynamic(element).get$content();
    if (typeof t2 === 'object' && !!t2.is$FrameworkElement) {
      this._lib2_getAllTemplateBindings$2(t0.list_1, $.get$dynamic(element).get$content());
    }
  }
 },
 _lib2_bindTemplateBindings$0: function() {
  var tb = $.HashMapImplementation$0();
  this._lib2_getAllTemplateBindings$2(tb, this.get$template());
  tb.forEach$1(new $.Closure154(this));
 },
 onLoaded$0: function() {
  if (this.get$_lib2_templateBindingsApplied() === true || !(this.get$_lib2_templateApplied() === true)) {
    return;
  }
  this.set$_lib2_templateBindingsApplied(true);
  this._lib2_bindTemplateBindings$0();
 },
 applyVisualTemplate$0: function() {
  if (this.get$_lib2_visualTemplateApplied() === true) {
    throw $.captureStackTrace($.CTC8);
  }
  this.set$_lib2_visualTemplateApplied(true);
  if (!($.isEmpty(this.get$defaultControlTemplate()) === true)) {
    $.buckshot().get$defaultPresentationProvider().deserialize$1(this.get$defaultControlTemplate());
  }
  var t = $.buckshot().retrieveResource$1(this.get$templateName());
  if ($.eqNullB(t)) {
    this.set$template(this);
    $.FrameworkObject.prototype.applyVisualTemplate$0.call(this);
    return;
  }
  this.set$_lib2_templateApplied(true);
  this.set$template(t.get$template());
  this.get$template().set$parent(this);
  this.set$_lib2_component(this.get$template().get$_lib2_component());
 },
 _lib2_initControlProperties$0: function() {
  this.set$isEnabledProperty($.FrameworkProperty$5(this, 'isEnabled', new $.Closure126(this), true, $.CTC7));
 },
 set$_lib2_templateBindingsApplied: function(v) { this._lib2_templateBindingsApplied = v; },
 get$_lib2_templateBindingsApplied: function() { return this._lib2_templateBindingsApplied; },
 set$_lib2_templateApplied: function(v) { this._lib2_templateApplied = v; },
 get$_lib2_templateApplied: function() { return this._lib2_templateApplied; },
 set$_lib2_visualTemplateApplied: function(v) { this._lib2_visualTemplateApplied = v; },
 get$_lib2_visualTemplateApplied: function() { return this._lib2_visualTemplateApplied; },
 get$defaultControlTemplate: function() {
  return '';
 },
 set$template: function(v) { this.template = v; },
 get$template: function() { return this.template; },
 set$isEnabledProperty: function(v) { this.isEnabledProperty = v; },
 Control$0: function() {
  $.appendBuckshotClass(this.get$_lib2_component(), 'control');
  this._lib2_initControlProperties$0();
 },
});

Isolate.$defineClass("Closure78", "Closure330",
function Closure() {
}, {
 $call$1: function(_) {
 },
});

Isolate.$defineClass("StringToBooleanConverter", "Object",
function StringToBooleanConverter() {
}, {
 convert$2: function(value, parameter) {
  if (!(typeof value === 'string')) {
    return value;
  }
  if ($.eqB($.toLowerCase(value), 'false')) {
    return false;
  } else {
    if ($.eqB($.toLowerCase(value), 'true')) {
      return true;
    } else {
      throw $.captureStackTrace($.BuckshotException$1('Invalid string passed to boolean converter: \'' + $.stringToString(value) + '\'.'));
    }
  }
 },
 convert$1: function(value) {
  return this.convert$2(value,(void 0))
},
 is$IValueConverter: true,
});

Isolate.$defineClass("FutureImpl", "Object",
function FutureImpl(_lib3_exceptionHandlers, _lib3_listeners, _lib3_exceptionHandled, _lib3_exception, _lib3_value, _lib3_isComplete) {
  this._lib3_exceptionHandlers = _lib3_exceptionHandlers;
  this._lib3_listeners = _lib3_listeners;
  this._lib3_exceptionHandled = _lib3_exceptionHandled;
  this._lib3_exception = _lib3_exception;
  this._lib3_value = _lib3_value;
  this._lib3_isComplete = _lib3_isComplete;
}, {
 _lib3_setException$1: function(exception) {
  if (exception === (void 0)) {
    throw $.captureStackTrace($.IllegalArgumentException$1((void 0)));
  }
  if (this.get$_lib3_isComplete() === true) {
    throw $.captureStackTrace($.FutureAlreadyCompleteException$0());
  }
  this.set$_lib3_exception(exception);
  this._lib3_complete$0();
 },
 _lib3_setValue$1: function(value) {
  if (this.get$_lib3_isComplete() === true) {
    throw $.captureStackTrace($.FutureAlreadyCompleteException$0());
  }
  this.set$_lib3_value(value);
  this._lib3_complete$0();
 },
 _lib3_complete$0: function() {
  this.set$_lib3_isComplete(true);
  if (!(this.get$_lib3_exception() === (void 0))) {
    for (var t0 = $.iterator(this.get$_lib3_exceptionHandlers()); t0.hasNext$0() === true; ) {
      if ($.eqB(t0.next$0().$call$1(this.get$_lib3_exception()), true)) {
        this.set$_lib3_exceptionHandled(true);
        break;
      }
    }
  }
  if (this.get$hasValue() === true) {
    for (var t1 = $.iterator(this.get$_lib3_listeners()); t1.hasNext$0() === true; ) {
      t1.next$0().$call$1(this.get$value());
    }
  } else {
    if (!(this.get$_lib3_exceptionHandled() === true) && $.gtB($.get$length(this.get$_lib3_listeners()), 0)) {
      throw $.captureStackTrace(this.get$_lib3_exception());
    }
  }
 },
 then$1: function(onComplete) {
  if (this.get$hasValue() === true) {
    onComplete.$call$1(this.get$value());
  } else {
    if (!(this.get$isComplete() === true)) {
      $.add$1(this.get$_lib3_listeners(), onComplete);
    } else {
      if (!(this.get$_lib3_exceptionHandled() === true)) {
        throw $.captureStackTrace(this.get$_lib3_exception());
      }
    }
  }
 },
 get$hasValue: function() {
  return this.get$isComplete() === true && this.get$_lib3_exception() === (void 0);
 },
 get$isComplete: function() {
  return this.get$_lib3_isComplete();
 },
 get$exception: function() {
  if (!(this.get$isComplete() === true)) {
    throw $.captureStackTrace($.FutureNotCompleteException$0());
  }
  return this.get$_lib3_exception();
 },
 get$value: function() {
  if (!(this.get$isComplete() === true)) {
    throw $.captureStackTrace($.FutureNotCompleteException$0());
  }
  if (!(this.get$_lib3_exception() === (void 0))) {
    throw $.captureStackTrace(this.get$_lib3_exception());
  }
  return this.get$_lib3_value();
 },
 get$_lib3_exceptionHandlers: function() { return this._lib3_exceptionHandlers; },
 get$_lib3_listeners: function() { return this._lib3_listeners; },
 set$_lib3_exceptionHandled: function(v) { this._lib3_exceptionHandled = v; },
 get$_lib3_exceptionHandled: function() { return this._lib3_exceptionHandled; },
 set$_lib3_exception: function(v) { this._lib3_exception = v; },
 get$_lib3_exception: function() { return this._lib3_exception; },
 set$_lib3_value: function(v) { this._lib3_value = v; },
 get$_lib3_value: function() { return this._lib3_value; },
 set$_lib3_isComplete: function(v) { this._lib3_isComplete = v; },
 get$_lib3_isComplete: function() { return this._lib3_isComplete; },
});

Isolate.$defineClass("Closure330", "Object",
function Closure() {
}, {
 toString$0: function() {
  return 'Closure';
 },
});

Isolate.$defineClass("Closure111", "Closure330",
function Closure(this_4, box_0) {
  this.this_4 = this_4;
  this.box_0 = box_0;
}, {
 $call$2: function(_, __) {
  return this.this_4.onItemMouseLeave$1(this.box_0.item_1);
 },
});

Isolate.$defineClass("XmlElement", "XmlNode",
function XmlElement(_lib7_namespaces, _lib7_attributes, _lib7_children, name, XmlNode_parent, XmlNode_type) {
  this._lib7_namespaces = _lib7_namespaces;
  this._lib7_attributes = _lib7_attributes;
  this._lib7_children = _lib7_children;
  this.name = name;
  this.parent = XmlNode_parent;
  this.type = XmlNode_type;
}, {
 _lib7_queryNameInternal$2: function(tagName, list) {
  var t0 = ({});
  t0.tagName_1 = tagName;
  t0.list_2 = list;
  if ($.eqB(this.get$name(), t0.tagName_1)) {
    t0.list_2._lib7_add$1(this);
    return;
  } else {
    if (this.get$hasChildren() === true) {
      $.forEach($.filter(this.get$children(), new $.Closure286()), new $.Closure287(t0));
    }
  }
 },
 _lib7_queryNodeTypeInternal$2: function(nodeType, list) {
  var t0 = ({});
  t0.nodeType_1 = nodeType;
  t0.list_2 = list;
  if ($.eqB(this.get$type(), t0.nodeType_1)) {
    t0.list_2._lib7_add$1(this);
    return;
  } else {
    if (this.get$hasChildren() === true) {
      $.forEach(this.get$children(), new $.Closure283(t0));
    }
  }
 },
 _lib7_queryAttributeInternal$2: function(aMap, list) {
  var t0 = ({});
  t0.list_4 = list;
  t0.aMap_3 = aMap;
  if (new $.Closure277(this, t0).$call$0() === true) {
    t0.list_4._lib7_add$1(this);
    return;
  } else {
    if (this.get$hasChildren() === true) {
      $.forEach($.filter(this.get$children(), new $.Closure278()), new $.Closure279(t0));
    }
  }
 },
 query$1: function(queryOn) {
  var list = $.XmlCollection$_internal$0();
  if (typeof queryOn === 'string') {
    this._lib7_queryNameInternal$2(queryOn, list);
  } else {
    if (typeof queryOn === 'object' && !!queryOn.is$XmlNodeType) {
      this._lib7_queryNodeTypeInternal$2(queryOn, list);
    } else {
      if (typeof queryOn === 'object' && queryOn.is$Map()) {
        this._lib7_queryAttributeInternal$2(queryOn, list);
      }
    }
  }
  return list;
 },
 addChildren$1: function(elements) {
  if (!($.isEmpty(elements) === true)) {
    $.forEach(elements, new $.Closure288(this));
  }
 },
 addChild$1: function(element) {
  if (typeof element === 'object' && !!element.is$XmlAttribute) {
    $.indexSet(this.get$attributes(), $.get$dynamic(element).get$name(), $.get$dynamic(element).get$value());
    return;
  }
  if (typeof element === 'object' && !!element.is$XmlNamespace) {
    $.indexSet(this.get$namespaces(), $.get$dynamic(element).get$name(), $.get$dynamic(element).get$uri());
    return;
  }
  element.set$parent(this);
  this.get$_lib7_children()._lib7_add$1(element);
 },
 get$hasChildren: function() {
  return !($.isEmpty(this.get$_lib7_children()) === true);
 },
 isNamespaceInScope$1: function(namespace) {
  var t0 = ({});
  t0.namespace_1 = namespace;
  return $.some(this.get$namespacesInScope(), new $.Closure269(t0));
 },
 get$namespacesInScope: function() {
  var t0 = ({});
  t0.l_1 = [];
  $.forEach(this.get$_lib7_namespaces(), new $.Closure270(t0));
  var t1 = !$.eqNullB(this.get$parent());
  var t2 = t1;
  if (t1) {
    var t3 = this.get$parent();
    t2 = typeof t3 === 'object' && !!t3.is$XmlElement;
  }
  if (t2) {
    $.addAll(t0.l_1, this.get$parent().get$namespacesInScope());
  }
  return t0.l_1;
 },
 get$children: function() {
  return this.get$_lib7_children();
 },
 get$attributes: function() {
  return this.get$_lib7_attributes();
 },
 get$namespaces: function() {
  return this.get$_lib7_namespaces();
 },
 get$text: function() {
  var t0 = ({});
  var tNodes = $.filter(this.get$_lib7_children(), new $.Closure289());
  if ($.isEmpty(tNodes) === true) {
    return '';
  }
  t0.s_1 = $.StringBufferImpl$1('');
  $.forEach(tNodes, new $.Closure290(t0));
  return $.toString(t0.s_1);
 },
 get$_lib7_namespaces: function() { return this._lib7_namespaces; },
 get$_lib7_attributes: function() { return this._lib7_attributes; },
 get$_lib7_children: function() { return this._lib7_children; },
 get$name: function() { return this.name; },
 XmlElement$2: function(name$, elements) {
  this.addChildren$1(elements);
 },
 is$XmlElement: true,
});

Isolate.$defineClass("GridLayoutDefinition", "BuckshotObject",
function GridLayoutDefinition(minLength, maxLength, _lib2_adjustedOffset, _lib2_value, _lib2_htmlNode, _lib2_adjustedLengthInternal, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this.minLength = minLength;
  this.maxLength = maxLength;
  this._lib2_adjustedOffset = _lib2_adjustedOffset;
  this._lib2_value = _lib2_value;
  this._lib2_htmlNode = _lib2_htmlNode;
  this._lib2_adjustedLengthInternal = _lib2_adjustedLengthInternal;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 makeMe$0: function() {
  return $.GridLayoutDefinition$0();
 },
 get$minLength: function() { return this.minLength; },
 get$maxLength: function() { return this.maxLength; },
 get$_lib2_adjustedLength: function() {
  return this.get$_lib2_adjustedLengthInternal();
 },
 set$_lib2_adjustedLength: function(value) {
  var value0 = value;
  if ($.ltB(value, this.get$minLength())) {
    value0 = this.get$minLength();
  }
  var value1 = value0;
  if ($.gtB(value0, this.get$maxLength())) {
    value1 = this.get$maxLength();
  }
  this.set$_lib2_adjustedLengthInternal(value1);
 },
 set$_lib2_adjustedOffset: function(v) { this._lib2_adjustedOffset = v; },
 get$_lib2_adjustedOffset: function() { return this._lib2_adjustedOffset; },
 set$_lib2_value: function(v) { this._lib2_value = v; },
 set$_lib2_adjustedLengthInternal: function(v) { this._lib2_adjustedLengthInternal = v; },
 get$_lib2_adjustedLengthInternal: function() { return this._lib2_adjustedLengthInternal; },
});

Isolate.$defineClass("Closure220", "Closure330",
function Closure(this_13, box_3) {
  this.this_13 = this_13;
  this.box_3 = box_3;
}, {
 $call$1: function(c) {
  if ($.eqB(c.get$width().get$gridUnitType(), $.CTC211)) {
    if (c === this.box_3.lastStar_7) {
      c.set$_lib2_adjustedLength($.sub(this.box_3.availColWidth_8, this.box_3.totalStarLength_10));
    } else {
      c.set$_lib2_adjustedLength($.round($.mul(this.box_3.availColWidth_8, $.div(c.get$width().get$value(), this.box_3.totalStarValue_6))));
      var totalStarLength = $.add(this.box_3.totalStarLength_10, c.get$_lib2_adjustedLength());
      this.box_3.totalStarLength_10 = totalStarLength;
    }
  }
  var id = $.sub(this.box_3.ii_9, 1);
  if ($.eqB(this.box_3.ii_9, 0)) {
    var t0 = 0;
  } else {
    t0 = $.add($.index(this.this_13.get$columnDefinitions(), id).get$_lib2_adjustedOffset(), $.index(this.this_13.get$columnDefinitions(), id).get$_lib2_adjustedLength());
  }
  c.set$_lib2_adjustedOffset(t0);
  var ii = $.add(this.box_3.ii_9, 1);
  this.box_3.ii_9 = ii;
 },
});

Isolate.$defineClass("Closure41", "Closure330",
function Closure(this_28, gotFocusHandler_27) {
  this.this_28 = this_28;
  this.gotFocusHandler_27 = gotFocusHandler_27;
}, {
 $call$0: function() {
  return this.this_28.get$_lib2_component().get$on().get$focus().remove$1(this.gotFocusHandler_27);
 },
});

Isolate.$defineClass("Polygon", "Shape",
function Polygon(Shape__lib2_shProperty, Shape__lib2_swProperty, Shape_strokeWidthProperty, Shape_strokeProperty, Shape_fillProperty, Shape__lib2_svgWrapper, Shape_shapeElement, FrameworkElement_mouseUp, FrameworkElement_mouseDown, FrameworkElement_mouseMove, FrameworkElement_click, FrameworkElement_mouseLeave, FrameworkElement_mouseEnter, FrameworkElement_lostFocus, FrameworkElement_gotFocus, FrameworkElement_actionsProperty, FrameworkElement_perspectiveProperty, FrameworkElement_transformOriginZProperty, FrameworkElement_transformOriginYProperty, FrameworkElement_transformOriginXProperty, FrameworkElement_rotateZProperty, FrameworkElement_rotateYProperty, FrameworkElement_rotateXProperty, FrameworkElement_scaleZProperty, FrameworkElement_scaleYProperty, FrameworkElement_scaleXProperty, FrameworkElement_translateZProperty, FrameworkElement_translateYProperty, FrameworkElement_translateXProperty, FrameworkElement_styleProperty, FrameworkElement_visibilityProperty, FrameworkElement_opacityProperty, FrameworkElement_actualHeightProperty, FrameworkElement_actualWidthProperty, FrameworkElement_zOrderProperty, FrameworkElement_verticalAlignmentProperty, FrameworkElement_horizontalAlignmentProperty, FrameworkElement_tagProperty, FrameworkElement_cursorProperty, FrameworkElement_minHeightProperty, FrameworkElement_maxHeightProperty, FrameworkElement_minWidthProperty, FrameworkElement_maxWidthProperty, FrameworkElement_htmlIDProperty, FrameworkElement_heightProperty, FrameworkElement_widthProperty, FrameworkElement_marginProperty, FrameworkElement__lib2_transitionProperties, FrameworkElement__lib2_templateBindings, FrameworkElement__lib2_style, FrameworkElement__lib2_containerParent, FrameworkObject_mostRecentMeasurement, FrameworkObject__lib2_dataContextUpdated, FrameworkObject_nameProperty, FrameworkObject_attachedPropertyChanged, FrameworkObject_measurementChanged, FrameworkObject_unloaded, FrameworkObject_loaded, FrameworkObject_lateBindings, FrameworkObject_dataContextProperty, FrameworkObject__lib2_isLoaded, FrameworkObject__lib2_parent, FrameworkObject__lib2_component, FrameworkObject__lib2_previousMeasurement, FrameworkObject__lib2_animationFrameID, FrameworkObject__lib2_watchingMeasurement, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this._lib2_shProperty = Shape__lib2_shProperty;
  this._lib2_swProperty = Shape__lib2_swProperty;
  this.strokeWidthProperty = Shape_strokeWidthProperty;
  this.strokeProperty = Shape_strokeProperty;
  this.fillProperty = Shape_fillProperty;
  this._lib2_svgWrapper = Shape__lib2_svgWrapper;
  this.shapeElement = Shape_shapeElement;
  this.mouseUp = FrameworkElement_mouseUp;
  this.mouseDown = FrameworkElement_mouseDown;
  this.mouseMove = FrameworkElement_mouseMove;
  this.click = FrameworkElement_click;
  this.mouseLeave = FrameworkElement_mouseLeave;
  this.mouseEnter = FrameworkElement_mouseEnter;
  this.lostFocus = FrameworkElement_lostFocus;
  this.gotFocus = FrameworkElement_gotFocus;
  this.actionsProperty = FrameworkElement_actionsProperty;
  this.perspectiveProperty = FrameworkElement_perspectiveProperty;
  this.transformOriginZProperty = FrameworkElement_transformOriginZProperty;
  this.transformOriginYProperty = FrameworkElement_transformOriginYProperty;
  this.transformOriginXProperty = FrameworkElement_transformOriginXProperty;
  this.rotateZProperty = FrameworkElement_rotateZProperty;
  this.rotateYProperty = FrameworkElement_rotateYProperty;
  this.rotateXProperty = FrameworkElement_rotateXProperty;
  this.scaleZProperty = FrameworkElement_scaleZProperty;
  this.scaleYProperty = FrameworkElement_scaleYProperty;
  this.scaleXProperty = FrameworkElement_scaleXProperty;
  this.translateZProperty = FrameworkElement_translateZProperty;
  this.translateYProperty = FrameworkElement_translateYProperty;
  this.translateXProperty = FrameworkElement_translateXProperty;
  this.styleProperty = FrameworkElement_styleProperty;
  this.visibilityProperty = FrameworkElement_visibilityProperty;
  this.opacityProperty = FrameworkElement_opacityProperty;
  this.actualHeightProperty = FrameworkElement_actualHeightProperty;
  this.actualWidthProperty = FrameworkElement_actualWidthProperty;
  this.zOrderProperty = FrameworkElement_zOrderProperty;
  this.verticalAlignmentProperty = FrameworkElement_verticalAlignmentProperty;
  this.horizontalAlignmentProperty = FrameworkElement_horizontalAlignmentProperty;
  this.tagProperty = FrameworkElement_tagProperty;
  this.cursorProperty = FrameworkElement_cursorProperty;
  this.minHeightProperty = FrameworkElement_minHeightProperty;
  this.maxHeightProperty = FrameworkElement_maxHeightProperty;
  this.minWidthProperty = FrameworkElement_minWidthProperty;
  this.maxWidthProperty = FrameworkElement_maxWidthProperty;
  this.htmlIDProperty = FrameworkElement_htmlIDProperty;
  this.heightProperty = FrameworkElement_heightProperty;
  this.widthProperty = FrameworkElement_widthProperty;
  this.marginProperty = FrameworkElement_marginProperty;
  this._lib2_transitionProperties = FrameworkElement__lib2_transitionProperties;
  this._lib2_templateBindings = FrameworkElement__lib2_templateBindings;
  this._lib2_style = FrameworkElement__lib2_style;
  this._lib2_containerParent = FrameworkElement__lib2_containerParent;
  this.mostRecentMeasurement = FrameworkObject_mostRecentMeasurement;
  this._lib2_dataContextUpdated = FrameworkObject__lib2_dataContextUpdated;
  this.nameProperty = FrameworkObject_nameProperty;
  this.attachedPropertyChanged = FrameworkObject_attachedPropertyChanged;
  this.measurementChanged = FrameworkObject_measurementChanged;
  this.unloaded = FrameworkObject_unloaded;
  this.loaded = FrameworkObject_loaded;
  this.lateBindings = FrameworkObject_lateBindings;
  this.dataContextProperty = FrameworkObject_dataContextProperty;
  this._lib2_isLoaded = FrameworkObject__lib2_isLoaded;
  this._lib2_parent = FrameworkObject__lib2_parent;
  this._lib2_component = FrameworkObject__lib2_component;
  this._lib2_previousMeasurement = FrameworkObject__lib2_previousMeasurement;
  this._lib2_animationFrameID = FrameworkObject__lib2_animationFrameID;
  this._lib2_watchingMeasurement = FrameworkObject__lib2_watchingMeasurement;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$shapeTag: function() {
  return 'polygon';
 },
 _lib2_initPolygonProperties$0: function() {
 },
 makeMe$0: function() {
  return $.Polygon$0();
 },
 Polygon$0: function() {
  $.appendBuckshotClass(this.get$_lib2_component(), 'polygone');
  this._lib2_initPolygonProperties$0();
 },
});

Isolate.$defineClass("Closure214", "Closure330",
function Closure(this_14) {
  this.this_14 = this_14;
}, {
 $call$1: function(child) {
  var rowIndex = $.getRow(child.get$content());
  var childRowSpan = $.getRowSpan(child.get$content());
  child.set$margin($.Thickness$specified$4($.index(this.this_14.get$rowDefinitions(), rowIndex).get$_lib2_adjustedOffset(), 0, 0, child.get$margin().get$left()));
  if ($.gtB(childRowSpan, 1)) {
    var childRowSpan0 = childRowSpan;
    if ($.gtB(childRowSpan, $.sub($.get$length(this.this_14.get$rowDefinitions()), rowIndex))) {
      childRowSpan0 = $.sub($.get$length(this.this_14.get$rowDefinitions()), rowIndex);
    }
    var t0 = '' + $.stringToString(this.this_14._lib2_totalLengthOf$1($.getRange(this.this_14.get$rowDefinitions(), rowIndex, childRowSpan0))) + 'px';
    child.get$_lib2_component().get$style().set$height(t0);
  } else {
    var t1 = '' + $.stringToString($.index(this.this_14.get$rowDefinitions(), rowIndex).get$_lib2_adjustedLength()) + 'px';
    child.get$_lib2_component().get$style().set$height(t1);
  }
  child.updateLayout$0();
 },
});

Isolate.$defineClass("Closure181", "Closure330",
function Closure(this_2) {
  this.this_2 = this_2;
}, {
 $call$1: function(v) {
  $.indexSet(this.this_2.get$shapeElement().get$attributes(), 'rx', '' + $.stringToString($.sub(v, $.div($.getValue(this.this_2.get$strokeWidthProperty()), 2))));
 },
});

Isolate.$defineClass("ResourceCollection", "FrameworkResource",
function ResourceCollection(resources, FrameworkResource_rawData, FrameworkResource_keyProperty, FrameworkObject_mostRecentMeasurement, FrameworkObject__lib2_dataContextUpdated, FrameworkObject_nameProperty, FrameworkObject_attachedPropertyChanged, FrameworkObject_measurementChanged, FrameworkObject_unloaded, FrameworkObject_loaded, FrameworkObject_lateBindings, FrameworkObject_dataContextProperty, FrameworkObject__lib2_isLoaded, FrameworkObject__lib2_parent, FrameworkObject__lib2_component, FrameworkObject__lib2_previousMeasurement, FrameworkObject__lib2_animationFrameID, FrameworkObject__lib2_watchingMeasurement, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this.resources = resources;
  this.rawData = FrameworkResource_rawData;
  this.keyProperty = FrameworkResource_keyProperty;
  this.mostRecentMeasurement = FrameworkObject_mostRecentMeasurement;
  this._lib2_dataContextUpdated = FrameworkObject__lib2_dataContextUpdated;
  this.nameProperty = FrameworkObject_nameProperty;
  this.attachedPropertyChanged = FrameworkObject_attachedPropertyChanged;
  this.measurementChanged = FrameworkObject_measurementChanged;
  this.unloaded = FrameworkObject_unloaded;
  this.loaded = FrameworkObject_loaded;
  this.lateBindings = FrameworkObject_lateBindings;
  this.dataContextProperty = FrameworkObject_dataContextProperty;
  this._lib2_isLoaded = FrameworkObject__lib2_isLoaded;
  this._lib2_parent = FrameworkObject__lib2_parent;
  this._lib2_component = FrameworkObject__lib2_component;
  this._lib2_previousMeasurement = FrameworkObject__lib2_previousMeasurement;
  this._lib2_animationFrameID = FrameworkObject__lib2_animationFrameID;
  this._lib2_watchingMeasurement = FrameworkObject__lib2_watchingMeasurement;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$type: function() {
  return 'ResourceCollection';
 },
 _lib2_onListChanging$2: function(_, args) {
  if (!($.isEmpty(args.get$newItems()) === true)) {
    $.forEach(args.get$newItems(), new $.Closure297());
  }
 },
 get$_lib2_onListChanging: function() { return new $.Closure339(this); },
 makeMe$0: function() {
  return $.ResourceCollection$0();
 },
 get$resources: function() { return this.resources; },
 ResourceCollection$0: function() {
  $.indexSet(this.get$_lib2_stateBag(), 'CONTAINER_CONTEXT', this.get$resources());
  $.add(this.get$resources().get$listChanged(), this.get$_lib2_onListChanging());
 },
 is$ResourceCollection: true,
});

Isolate.$defineClass("Closure176", "Closure330",
function Closure(animHash_12) {
  this.animHash_12 = animHash_12;
}, {
 $call$1: function(s) {
  var ao = $.index(this.animHash_12, s.get$target());
  var prop = ao.get$concreteElement()._lib2_getPropertyByName$1(s.get$property());
  if ($.eqNullB(prop)) {
    throw $.captureStackTrace($.AnimationException$1('Unable to find specified property: ' + $.stringToString(s.get$property())));
  }
  if (!((typeof prop === 'object') && !!prop.is$AnimatingFrameworkProperty)) {
    throw $.captureStackTrace($.AnimationException$1('Attempted to animate property ' + $.stringToString(s.get$property()) + ' that is not type AnimatingFrameworkProperty.'));
  }
  if ($.eqB(prop.get$propertyName(), 'fill')) {
    $.db('' + $.stringToString(prop.get$propertyName()) + ' ... ' + $.stringToString(s.get$value()), (void 0));
  }
  $.setValue(prop, s.get$value());
  $.indexSet(ao.get$standardPropertyCarryOver(), prop.get$cssPropertyPeer(), $.getXPCSS(ao.get$concreteElement().get$_lib2_component(), prop.get$cssPropertyPeer()));
 },
});

Isolate.$defineClass("Colors", "Object",
function Colors(_lib2_name, _lib2_hex) {
  this._lib2_name = _lib2_name;
  this._lib2_hex = _lib2_hex;
}, {
 get$name: function() {
  return this.get$_lib2_name();
 },
 toString$0: function() {
  return this.get$_lib2_hex();
 },
 get$_lib2_name: function() { return this._lib2_name; },
 get$_lib2_hex: function() { return this._lib2_hex; },
});

Isolate.$defineClass("_AllMatchesIterable", "Object",
function _AllMatchesIterable(_lib3_str, _lib3_re) {
  this._lib3_str = _lib3_str;
  this._lib3_re = _lib3_re;
}, {
 iterator$0: function() {
  return $._lib3_AllMatchesIterator$2(this.get$_lib3_re(), this.get$_lib3_str());
 },
 get$_lib3_str: function() { return this._lib3_str; },
 get$_lib3_re: function() { return this._lib3_re; },
});

Isolate.$defineClass("Closure11", "Closure330",
function Closure() {
}, {
 $call$1: function(v) {
 },
});

Isolate.$defineClass("Closure162", "Closure330",
function Closure() {
}, {
 $call$2: function(e, value) {
 },
});

Isolate.$defineClass("Closure67", "Closure330",
function Closure(this_18, doTransform_17) {
  this.this_18 = this_18;
  this.doTransform_17 = doTransform_17;
}, {
 $call$1: function(value) {
  this.doTransform_17.$call$1(this.this_18);
 },
});

Isolate.$defineClass("Closure112", "Closure330",
function Closure(this_5, box_0) {
  this.this_5 = this_5;
  this.box_0 = box_0;
}, {
 $call$2: function(_, __) {
  return this.this_5.onItemMouseDown$1(this.box_0.item_1);
 },
});

Isolate.$defineClass("Closure137", "Closure330",
function Closure(this_1) {
  this.this_1 = this_1;
}, {
 $call$1: function(i) {
  var option = $.createByTag('option');
  $.indexSet(option.get$attributes(), 'value', i.get$value());
  option.set$text(i.get$name());
  $.add$1(this.this_1.get$_lib2_component().get$elements(), option);
 },
});

Isolate.$defineClass("Shape", "FrameworkElement",
function Shape() {
}, {
 CreateElement$0: function() {
  this.set$_lib2_component($.createByTag2('div'));
  this.set$_lib2_svgWrapper($.SVGSVGElement());
  this.set$shapeElement($.SVGElement$tag(this.get$shapeTag()));
  $.add$1(this.get$_lib2_svgWrapper().get$elements(), this.get$shapeElement());
  $.add$1(this.get$_lib2_component().get$elements(), this.get$_lib2_svgWrapper());
 },
 get$type: function() {
  return 'Shape';
 },
 _lib2_initShapeProperties$0: function() {
  this.set$strokeWidthProperty($.AnimatingFrameworkProperty$6(this, 'strokeWidth', new $.Closure183(this), 'stroke-width', 0, $.CTC6));
  this.set$strokeProperty($.AnimatingFrameworkProperty$6(this, 'stroke', new $.Closure184(this), 'stroke', (void 0), $.CTC4));
  this.set$fillProperty($.AnimatingFrameworkProperty$6(this, 'fill', new $.Closure185(this), 'fill', (void 0), $.CTC4));
  this.set$_lib2_swProperty($.FrameworkProperty$5(this, '_sw', new $.Closure186(this), (void 0), (void 0)));
  this.set$_lib2_shProperty($.FrameworkProperty$5(this, '_sh', new $.Closure187(this), (void 0), (void 0)));
  $._lib2_BindingImplementation$4(this.get$widthProperty(), this.get$_lib2_swProperty(), $.CTC159, $.CTC160);
  $._lib2_BindingImplementation$4(this.get$heightProperty(), this.get$_lib2_shProperty(), $.CTC159, $.CTC160);
 },
 set$_lib2_shProperty: function(v) { this._lib2_shProperty = v; },
 get$_lib2_shProperty: function() { return this._lib2_shProperty; },
 set$_lib2_swProperty: function(v) { this._lib2_swProperty = v; },
 get$_lib2_swProperty: function() { return this._lib2_swProperty; },
 set$strokeWidthProperty: function(v) { this.strokeWidthProperty = v; },
 get$strokeWidthProperty: function() { return this.strokeWidthProperty; },
 set$strokeProperty: function(v) { this.strokeProperty = v; },
 get$strokeProperty: function() { return this.strokeProperty; },
 set$fillProperty: function(v) { this.fillProperty = v; },
 set$_lib2_svgWrapper: function(v) { this._lib2_svgWrapper = v; },
 get$_lib2_svgWrapper: function() { return this._lib2_svgWrapper; },
 set$shapeElement: function(v) { this.shapeElement = v; },
 get$shapeElement: function() { return this.shapeElement; },
 Shape$0: function() {
  $.appendBuckshotClass(this.get$_lib2_component(), 'shape');
  this._lib2_initShapeProperties$0();
 },
});

Isolate.$defineClass("ListIterator", "Object",
function ListIterator(list, i) {
  this.list = list;
  this.i = i;
}, {
 next$0: function() {
  if (!(this.hasNext$0() === true)) {
    throw $.captureStackTrace($.NoMoreElementsException$0());
  }
  var value = (this.get$list()[this.get$i()]);
  this.set$i($.add(this.get$i(), 1));
  return value;
 },
 hasNext$0: function() {
  return $.lt(this.get$i(), (this.get$list().length));
 },
 get$list: function() { return this.list; },
 set$i: function(v) { this.i = v; },
 get$i: function() { return this.i; },
});

Isolate.$defineClass("ViewModel", "ViewModelBase",
function ViewModel(titleProperty, FrameworkObject_mostRecentMeasurement, FrameworkObject__lib2_dataContextUpdated, FrameworkObject_nameProperty, FrameworkObject_attachedPropertyChanged, FrameworkObject_measurementChanged, FrameworkObject_unloaded, FrameworkObject_loaded, FrameworkObject_lateBindings, FrameworkObject_dataContextProperty, FrameworkObject__lib2_isLoaded, FrameworkObject__lib2_parent, FrameworkObject__lib2_component, FrameworkObject__lib2_previousMeasurement, FrameworkObject__lib2_animationFrameID, FrameworkObject__lib2_watchingMeasurement, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this.titleProperty = titleProperty;
  this.mostRecentMeasurement = FrameworkObject_mostRecentMeasurement;
  this._lib2_dataContextUpdated = FrameworkObject__lib2_dataContextUpdated;
  this.nameProperty = FrameworkObject_nameProperty;
  this.attachedPropertyChanged = FrameworkObject_attachedPropertyChanged;
  this.measurementChanged = FrameworkObject_measurementChanged;
  this.unloaded = FrameworkObject_unloaded;
  this.loaded = FrameworkObject_loaded;
  this.lateBindings = FrameworkObject_lateBindings;
  this.dataContextProperty = FrameworkObject_dataContextProperty;
  this._lib2_isLoaded = FrameworkObject__lib2_isLoaded;
  this._lib2_parent = FrameworkObject__lib2_parent;
  this._lib2_component = FrameworkObject__lib2_component;
  this._lib2_previousMeasurement = FrameworkObject__lib2_previousMeasurement;
  this._lib2_animationFrameID = FrameworkObject__lib2_animationFrameID;
  this._lib2_watchingMeasurement = FrameworkObject__lib2_watchingMeasurement;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 set$title: function(value) {
  return $.setValue(this.get$titleProperty(), value);
 },
 set$titleProperty: function(v) { this.titleProperty = v; },
 get$titleProperty: function() { return this.titleProperty; },
 ViewModel$0: function() {
  this.set$titleProperty($.FrameworkProperty$5(this, 'title', new $.Closure329(), (void 0), (void 0)));
 },
});

Isolate.$defineClass("Closure281", "Closure330",
function Closure(box_0, box_2) {
  this.box_0 = box_0;
  this.box_2 = box_2;
}, {
 $call$2: function(k, v) {
  if (this.box_0.succeed_1 === true && this.box_2.n_5.get$attributes().containsKey$1(k) === true) {
    if (!$.eqB($.index(this.box_2.n_5.get$attributes(), k), v)) {
      this.box_0.succeed_1 = false;
    }
  } else {
    this.box_0.succeed_1 = false;
  }
 },
});

Isolate.$defineClass("FrameworkResource", "FrameworkObject",
function FrameworkResource() {
}, {
 get$type: function() {
  return 'FrameworkResource';
 },
 get$key: function() {
  return $.getValue(this.get$keyProperty());
 },
 set$rawData: function(v) { this.rawData = v; },
 _lib2_initFrameworkResourceProperties$0: function() {
  this.set$keyProperty($.FrameworkProperty$5(this, 'key', new $.Closure14(), '', (void 0)));
 },
 set$keyProperty: function(v) { this.keyProperty = v; },
 get$keyProperty: function() { return this.keyProperty; },
 FrameworkResource$0: function() {
  this._lib2_initFrameworkResourceProperties$0();
 },
 is$FrameworkResource: true,
});

Isolate.$defineClass("Closure295", "Closure330",
function Closure(this_4) {
  this.this_4 = this_4;
}, {
 $call$1: function(from) {
  if (typeof from !== 'number') return this.$call$1$bailout(from,  0);
  for (var from0 = from; $.isWhitespace($.charCodeAt(this.this_4.get$_lib7_xml(), from0)) === true; ) {
    from0 = from0 + 1;
  }
  return from0;
 },
 $call$1$bailout: function(from, state, env0) {
  switch (state) {
    case 1:
      t0 = env0;
      break;
  }
  switch (state) {
    case 0:
    case 1:
      state = 0;
      var from0 = from;
      L0: while (true) {
        if (!($.isWhitespace($.charCodeAt(this.this_4.get$_lib7_xml(), from0)) === true)) break L0;
        from0 = $.add(from0, 1);
      }
      return from0;
  }
 },
});

Isolate.$defineClass("Closure324", "Closure330",
function Closure(this_2, watchIt_1) {
  this.this_2 = this_2;
  this.watchIt_1 = watchIt_1;
}, {
 $call$1: function(m) {
  this.this_2.set$mostRecentMeasurement(m);
  if ($.eqNullB(this.this_2.get$_lib2_previousMeasurement())) {
    this.this_2.get$measurementChanged().invoke$2(this.this_2, $.MeasurementChangedEventArgs$2(m, m));
  } else {
    var t0 = $.eqB(this.this_2.get$_lib2_previousMeasurement().get$bounding().get$left(), m.get$bounding().get$left());
    var t1 = !t0;
    if (t0) {
      t1 = !$.eqB(this.this_2.get$_lib2_previousMeasurement().get$bounding().get$top(), m.get$bounding().get$top());
    }
    if (t1 || !$.eqB(this.this_2.get$_lib2_previousMeasurement().get$bounding().get$width(), m.get$bounding().get$width()) || !$.eqB(this.this_2.get$_lib2_previousMeasurement().get$bounding().get$height(), m.get$bounding().get$height()) || !$.eqB(this.this_2.get$_lib2_previousMeasurement().get$client().get$left(), m.get$client().get$left()) || !$.eqB(this.this_2.get$_lib2_previousMeasurement().get$client().get$top(), m.get$client().get$top()) || !$.eqB(this.this_2.get$_lib2_previousMeasurement().get$client().get$width(), m.get$client().get$width()) || !$.eqB(this.this_2.get$_lib2_previousMeasurement().get$client().get$height(), m.get$client().get$height()) || !$.eqB(this.this_2.get$_lib2_previousMeasurement().get$offset().get$left(), m.get$offset().get$left()) || !$.eqB(this.this_2.get$_lib2_previousMeasurement().get$offset().get$top(), m.get$offset().get$top()) || !$.eqB(this.this_2.get$_lib2_previousMeasurement().get$offset().get$width(), m.get$offset().get$width()) || !$.eqB(this.this_2.get$_lib2_previousMeasurement().get$offset().get$height(), m.get$offset().get$height()) || !$.eqB(this.this_2.get$_lib2_previousMeasurement().get$scroll().get$left(), m.get$scroll().get$left()) || !$.eqB(this.this_2.get$_lib2_previousMeasurement().get$scroll().get$top(), m.get$scroll().get$top()) || !$.eqB(this.this_2.get$_lib2_previousMeasurement().get$scroll().get$width(), m.get$scroll().get$width()) || !$.eqB(this.this_2.get$_lib2_previousMeasurement().get$scroll().get$height(), m.get$scroll().get$height())) {
      this.this_2.get$measurementChanged().invoke$2(this.this_2, $.MeasurementChangedEventArgs$2(this.this_2.get$_lib2_previousMeasurement(), m));
    }
  }
  this.this_2.set$_lib2_previousMeasurement(m);
  var t2 = $.window().requestAnimationFrame$1(this.watchIt_1);
  this.this_2.set$_lib2_animationFrameID(t2);
 },
});

Isolate.$defineClass("Closure86", "Closure330",
function Closure() {
}, {
 $call$1: function(value) {
 },
});

Isolate.$defineClass("Closure300", "Closure330",
function Closure() {
}, {
 $call$1: function(v) {
 },
});

Isolate.$defineClass("GradientStop", "BuckshotObject",
function GradientStop(percentProperty, colorProperty, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this.percentProperty = percentProperty;
  this.colorProperty = colorProperty;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$type: function() {
  return 'GradientStop';
 },
 _lib2_initGradientStopProperties$0: function() {
  this.set$colorProperty($.FrameworkProperty$5(this, 'color', new $.Closure301(), (void 0), $.CTC241));
  this.set$percentProperty($.FrameworkProperty$5(this, 'percent', new $.Closure302(), -1, $.CTC6));
 },
 get$percent: function() {
  return $.getValue(this.get$percentProperty());
 },
 get$color: function() {
  return $.getValue(this.get$colorProperty());
 },
 set$color: function(value) {
  return $.setValue(this.get$colorProperty(), value);
 },
 makeMe$0: function() {
  return $.GradientStop$0();
 },
 set$percentProperty: function(v) { this.percentProperty = v; },
 get$percentProperty: function() { return this.percentProperty; },
 set$colorProperty: function(v) { this.colorProperty = v; },
 get$colorProperty: function() { return this.colorProperty; },
 GradientStop$0: function() {
  this._lib2_initGradientStopProperties$0();
 },
});

Isolate.$defineClass("Closure72", "Closure330",
function Closure(this_25) {
  this.this_25 = this_25;
}, {
 $call$1: function(value) {
  $.setXPCSS(this.this_25.get$_lib2_component(), 'transform-origin', '' + $.stringToString($.getValue(this.this_25.get$transformOriginXProperty())) + '% ' + $.stringToString($.getValue(this.this_25.get$transformOriginYProperty())) + '% ' + $.stringToString($.getValue(this.this_25.get$transformOriginZProperty())) + 'px');
 },
});

Isolate.$defineClass("Closure168", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$1: function(_) {
  this.this_0._lib2_invalidate$0();
 },
});

Isolate.$defineClass("Closure204", "Closure330",
function Closure(this_4) {
  this.this_4 = this_4;
}, {
 $call$2: function(_, args) {
  $.window().requestAnimationFrame$1(new $.Closure210(this.this_4));
 },
});

Isolate.$defineClass("Closure312", "Closure330",
function Closure() {
}, {
 $call$1: function(child) {
  child.get$content().updateMeasurement$0();
 },
});

Isolate.$defineClass("FutureAlreadyCompleteException", "Object",
function FutureAlreadyCompleteException() {
}, {
 toString$0: function() {
  return 'Exception: future already completed';
 },
 FutureAlreadyCompleteException$0: function() {
 },
 is$Exception: true,
});

Isolate.$defineClass("_WorkerEventsImpl", "_AbstractWorkerEventsImpl",
function _WorkerEventsImpl(_EventsImpl__lib5_ptr) {
  this._lib5_ptr = _EventsImpl__lib5_ptr;
}, {
 get$message: function() {
  return this._lib5_get$1('message');
 },
});

Isolate.$defineClass("Closure164", "Closure330",
function Closure() {
}, {
 $call$1: function(_) {
 },
});

Isolate.$defineClass("StringToColorConverter", "Object",
function StringToColorConverter() {
}, {
 convert$2: function(value, parameter) {
  if ($.startsWith(value, '#') === true) {
    return $.Color$hex$1(value);
  } else {
    $0:{
      if ('AliceBlue' === value) {
        return $.Color$hex$1($.CTC11.toString$0());
      } else {
        if ('AntiqueWhite' === value) {
          return $.Color$hex$1($.CTC12.toString$0());
        } else {
          if ('Aqua' === value) {
            return $.Color$hex$1($.CTC13.toString$0());
          } else {
            if ('Aquamarine' === value) {
              return $.Color$hex$1($.CTC14.toString$0());
            } else {
              if ('Azure' === value) {
                return $.Color$hex$1($.CTC15.toString$0());
              } else {
                if ('Beige' === value) {
                  return $.Color$hex$1($.CTC16.toString$0());
                } else {
                  if ('Bisque' === value) {
                    return $.Color$hex$1($.CTC17.toString$0());
                  } else {
                    if ('Black' === value) {
                      return $.Color$hex$1($.CTC18.toString$0());
                    } else {
                      if ('BlanchedAlmond' === value) {
                        return $.Color$hex$1($.CTC19.toString$0());
                      } else {
                        if ('Blue' === value) {
                          return $.Color$hex$1($.CTC20.toString$0());
                        } else {
                          if ('BlueViolet' === value) {
                            return $.Color$hex$1($.CTC21.toString$0());
                          } else {
                            if ('Brown' === value) {
                              return $.Color$hex$1($.CTC22.toString$0());
                            } else {
                              if ('BurlyWood' === value) {
                                return $.Color$hex$1($.CTC23.toString$0());
                              } else {
                                if ('CadetBlue' === value) {
                                  return $.Color$hex$1($.CTC24.toString$0());
                                } else {
                                  if ('Chartreuse' === value) {
                                    return $.Color$hex$1($.CTC25.toString$0());
                                  } else {
                                    if ('Chocolate' === value) {
                                      return $.Color$hex$1($.CTC26.toString$0());
                                    } else {
                                      if ('Coral' === value) {
                                        return $.Color$hex$1($.CTC27.toString$0());
                                      } else {
                                        if ('ConflowerBlue' === value) {
                                          return $.Color$hex$1($.CTC28.toString$0());
                                        } else {
                                          if ('Cornsilk' === value) {
                                            return $.Color$hex$1($.CTC29.toString$0());
                                          } else {
                                            if ('Crimson' === value) {
                                              return $.Color$hex$1($.CTC30.toString$0());
                                            } else {
                                              if ('Cyan' === value) {
                                                return $.Color$hex$1($.CTC31.toString$0());
                                              } else {
                                                if ('DarkBlue' === value) {
                                                  return $.Color$hex$1($.CTC32.toString$0());
                                                } else {
                                                  if ('DarkCyan' === value) {
                                                    return $.Color$hex$1($.CTC33.toString$0());
                                                  } else {
                                                    if ('DarkGoldenrod' === value) {
                                                      return $.Color$hex$1($.CTC34.toString$0());
                                                    } else {
                                                      if ('DarkGray' === value) {
                                                        return $.Color$hex$1($.CTC35.toString$0());
                                                      } else {
                                                        if ('DarkGreen' === value) {
                                                          return $.Color$hex$1($.CTC36.toString$0());
                                                        } else {
                                                          if ('DarkKhaki' === value) {
                                                            return $.Color$hex$1($.CTC37.toString$0());
                                                          } else {
                                                            if ('DarkMagenta' === value) {
                                                              return $.Color$hex$1($.CTC38.toString$0());
                                                            } else {
                                                              if ('DarkOliveGreen' === value) {
                                                                return $.Color$hex$1($.CTC39.toString$0());
                                                              } else {
                                                                if ('DarkOrange' === value) {
                                                                  return $.Color$hex$1($.CTC40.toString$0());
                                                                } else {
                                                                  if ('DarkOrchid' === value) {
                                                                    return $.Color$hex$1($.CTC41.toString$0());
                                                                  } else {
                                                                    if ('DarkRed' === value) {
                                                                      return $.Color$hex$1($.CTC42.toString$0());
                                                                    } else {
                                                                      if ('DarkSalmon' === value) {
                                                                        return $.Color$hex$1($.CTC43.toString$0());
                                                                      } else {
                                                                        if ('DarkSeaGreen' === value) {
                                                                          return $.Color$hex$1($.CTC44.toString$0());
                                                                        } else {
                                                                          if ('DarkSlateBlue' === value) {
                                                                            return $.Color$hex$1($.CTC45.toString$0());
                                                                          } else {
                                                                            if ('DarkSlateGray' === value) {
                                                                              return $.Color$hex$1($.CTC46.toString$0());
                                                                            } else {
                                                                              if ('DarkTurquoise' === value) {
                                                                                return $.Color$hex$1($.CTC47.toString$0());
                                                                              } else {
                                                                                if ('DarkViolet' === value) {
                                                                                  return $.Color$hex$1($.CTC48.toString$0());
                                                                                } else {
                                                                                  if ('DeepPink' === value) {
                                                                                    return $.Color$hex$1($.CTC49.toString$0());
                                                                                  } else {
                                                                                    if ('DeepSkyBlue' === value) {
                                                                                      return $.Color$hex$1($.CTC50.toString$0());
                                                                                    } else {
                                                                                      if ('DimGray' === value) {
                                                                                        return $.Color$hex$1($.CTC51.toString$0());
                                                                                      } else {
                                                                                        if ('DodgerBlue' === value) {
                                                                                          return $.Color$hex$1($.CTC52.toString$0());
                                                                                        } else {
                                                                                          if ('Firebrick' === value) {
                                                                                            return $.Color$hex$1($.CTC53.toString$0());
                                                                                          } else {
                                                                                            if ('FloralWhite' === value) {
                                                                                              return $.Color$hex$1($.CTC54.toString$0());
                                                                                            } else {
                                                                                              if ('ForestGreen' === value) {
                                                                                                return $.Color$hex$1($.CTC55.toString$0());
                                                                                              } else {
                                                                                                if ('Fuchsia' === value) {
                                                                                                  return $.Color$hex$1($.CTC56.toString$0());
                                                                                                } else {
                                                                                                  if ('Gainsboro' === value) {
                                                                                                    return $.Color$hex$1($.CTC57.toString$0());
                                                                                                  } else {
                                                                                                    if ('GhostWhite' === value) {
                                                                                                      return $.Color$hex$1($.CTC58.toString$0());
                                                                                                    } else {
                                                                                                      if ('Gold' === value) {
                                                                                                        return $.Color$hex$1($.CTC59.toString$0());
                                                                                                      } else {
                                                                                                        if ('Goldenrod' === value) {
                                                                                                          return $.Color$hex$1($.CTC60.toString$0());
                                                                                                        } else {
                                                                                                          if ('Gray' === value) {
                                                                                                            return $.Color$hex$1($.CTC61.toString$0());
                                                                                                          } else {
                                                                                                            if ('Green' === value) {
                                                                                                              return $.Color$hex$1($.CTC62.toString$0());
                                                                                                            } else {
                                                                                                              if ('GreenYellow' === value) {
                                                                                                                return $.Color$hex$1($.CTC63.toString$0());
                                                                                                              } else {
                                                                                                                if ('Honeydew' === value) {
                                                                                                                  return $.Color$hex$1($.CTC64.toString$0());
                                                                                                                } else {
                                                                                                                  if ('HotPink' === value) {
                                                                                                                    return $.Color$hex$1($.CTC65.toString$0());
                                                                                                                  } else {
                                                                                                                    if ('IndianRed' === value) {
                                                                                                                      return $.Color$hex$1($.CTC66.toString$0());
                                                                                                                    } else {
                                                                                                                      if ('Indigo' === value) {
                                                                                                                        return $.Color$hex$1($.CTC67.toString$0());
                                                                                                                      } else {
                                                                                                                        if ('Ivory' === value) {
                                                                                                                          return $.Color$hex$1($.CTC68.toString$0());
                                                                                                                        } else {
                                                                                                                          if ('Khaki' === value) {
                                                                                                                            return $.Color$hex$1($.CTC69.toString$0());
                                                                                                                          } else {
                                                                                                                            if ('Lavender' === value) {
                                                                                                                              return $.Color$hex$1($.CTC70.toString$0());
                                                                                                                            } else {
                                                                                                                              if ('LavenderBlush' === value) {
                                                                                                                                return $.Color$hex$1($.CTC71.toString$0());
                                                                                                                              } else {
                                                                                                                                if ('LawnGreen' === value) {
                                                                                                                                  return $.Color$hex$1($.CTC72.toString$0());
                                                                                                                                } else {
                                                                                                                                  if ('LemonChiffon' === value) {
                                                                                                                                    return $.Color$hex$1($.CTC73.toString$0());
                                                                                                                                  } else {
                                                                                                                                    if ('LightBlue' === value) {
                                                                                                                                      return $.Color$hex$1($.CTC74.toString$0());
                                                                                                                                    } else {
                                                                                                                                      if ('LightCoral' === value) {
                                                                                                                                        return $.Color$hex$1($.CTC75.toString$0());
                                                                                                                                      } else {
                                                                                                                                        if ('LightCyan' === value) {
                                                                                                                                          return $.Color$hex$1($.CTC76.toString$0());
                                                                                                                                        } else {
                                                                                                                                          if ('LightGoldenrod' === value) {
                                                                                                                                            return $.Color$hex$1($.CTC77.toString$0());
                                                                                                                                          } else {
                                                                                                                                            if ('LightGray' === value) {
                                                                                                                                              return $.Color$hex$1($.CTC78.toString$0());
                                                                                                                                            } else {
                                                                                                                                              if ('LightGreen' === value) {
                                                                                                                                                return $.Color$hex$1($.CTC79.toString$0());
                                                                                                                                              } else {
                                                                                                                                                if ('LightPink' === value) {
                                                                                                                                                  return $.Color$hex$1($.CTC80.toString$0());
                                                                                                                                                } else {
                                                                                                                                                  if ('LightSalmon' === value) {
                                                                                                                                                    return $.Color$hex$1($.CTC81.toString$0());
                                                                                                                                                  } else {
                                                                                                                                                    if ('LightSeaGreen' === value) {
                                                                                                                                                      return $.Color$hex$1($.CTC82.toString$0());
                                                                                                                                                    } else {
                                                                                                                                                      if ('LightSkyBlue' === value) {
                                                                                                                                                        return $.Color$hex$1($.CTC83.toString$0());
                                                                                                                                                      } else {
                                                                                                                                                        if ('LightSlateGray' === value) {
                                                                                                                                                          return $.Color$hex$1($.CTC84.toString$0());
                                                                                                                                                        } else {
                                                                                                                                                          if ('LightSteelBlue' === value) {
                                                                                                                                                            return $.Color$hex$1($.CTC85.toString$0());
                                                                                                                                                          } else {
                                                                                                                                                            if ('LightYellow' === value) {
                                                                                                                                                              return $.Color$hex$1($.CTC86.toString$0());
                                                                                                                                                            } else {
                                                                                                                                                              if ('Lime' === value) {
                                                                                                                                                                return $.Color$hex$1($.CTC87.toString$0());
                                                                                                                                                              } else {
                                                                                                                                                                if ('LimeGreen' === value) {
                                                                                                                                                                  return $.Color$hex$1($.CTC88.toString$0());
                                                                                                                                                                } else {
                                                                                                                                                                  if ('Linen' === value) {
                                                                                                                                                                    return $.Color$hex$1($.CTC89.toString$0());
                                                                                                                                                                  } else {
                                                                                                                                                                    if ('Magenta' === value) {
                                                                                                                                                                      return $.Color$hex$1($.CTC90.toString$0());
                                                                                                                                                                    } else {
                                                                                                                                                                      if ('Maroon' === value) {
                                                                                                                                                                        return $.Color$hex$1($.CTC91.toString$0());
                                                                                                                                                                      } else {
                                                                                                                                                                        if ('MediumAquamarine' === value) {
                                                                                                                                                                          return $.Color$hex$1($.CTC92.toString$0());
                                                                                                                                                                        } else {
                                                                                                                                                                          if ('MediumBlue' === value) {
                                                                                                                                                                            return $.Color$hex$1($.CTC93.toString$0());
                                                                                                                                                                          } else {
                                                                                                                                                                            if ('MediumOrchid' === value) {
                                                                                                                                                                              return $.Color$hex$1($.CTC94.toString$0());
                                                                                                                                                                            } else {
                                                                                                                                                                              if ('MediumPurple' === value) {
                                                                                                                                                                                return $.Color$hex$1($.CTC95.toString$0());
                                                                                                                                                                              } else {
                                                                                                                                                                                if ('MediumSeaGreen' === value) {
                                                                                                                                                                                  return $.Color$hex$1($.CTC96.toString$0());
                                                                                                                                                                                } else {
                                                                                                                                                                                  if ('MediumSlateBlue' === value) {
                                                                                                                                                                                    return $.Color$hex$1($.CTC97.toString$0());
                                                                                                                                                                                  } else {
                                                                                                                                                                                    if ('MediumSpringGreen' === value) {
                                                                                                                                                                                      return $.Color$hex$1($.CTC98.toString$0());
                                                                                                                                                                                    } else {
                                                                                                                                                                                      if ('MediumTurquoise' === value) {
                                                                                                                                                                                        return $.Color$hex$1($.CTC99.toString$0());
                                                                                                                                                                                      } else {
                                                                                                                                                                                        if ('MediumVioletRed' === value) {
                                                                                                                                                                                          return $.Color$hex$1($.CTC100.toString$0());
                                                                                                                                                                                        } else {
                                                                                                                                                                                          if ('MidnightBlue' === value) {
                                                                                                                                                                                            return $.Color$hex$1($.CTC101.toString$0());
                                                                                                                                                                                          } else {
                                                                                                                                                                                            if ('MintCream' === value) {
                                                                                                                                                                                              return $.Color$hex$1($.CTC102.toString$0());
                                                                                                                                                                                            } else {
                                                                                                                                                                                              if ('MistyRose' === value) {
                                                                                                                                                                                                return $.Color$hex$1($.CTC103.toString$0());
                                                                                                                                                                                              } else {
                                                                                                                                                                                                if ('Moccasin' === value) {
                                                                                                                                                                                                  return $.Color$hex$1($.CTC104.toString$0());
                                                                                                                                                                                                } else {
                                                                                                                                                                                                  if ('NavajoWhite' === value) {
                                                                                                                                                                                                    return $.Color$hex$1($.CTC105.toString$0());
                                                                                                                                                                                                  } else {
                                                                                                                                                                                                    if ('Navy' === value) {
                                                                                                                                                                                                      return $.Color$hex$1($.CTC106.toString$0());
                                                                                                                                                                                                    } else {
                                                                                                                                                                                                      if ('OldLace' === value) {
                                                                                                                                                                                                        return $.Color$hex$1($.CTC107.toString$0());
                                                                                                                                                                                                      } else {
                                                                                                                                                                                                        if ('Olive' === value) {
                                                                                                                                                                                                          return $.Color$hex$1($.CTC108.toString$0());
                                                                                                                                                                                                        } else {
                                                                                                                                                                                                          if ('OliveDrab' === value) {
                                                                                                                                                                                                            return $.Color$hex$1($.CTC109.toString$0());
                                                                                                                                                                                                          } else {
                                                                                                                                                                                                            if ('Orange' === value) {
                                                                                                                                                                                                              return $.Color$hex$1($.CTC110.toString$0());
                                                                                                                                                                                                            } else {
                                                                                                                                                                                                              if ('OrangeRed' === value) {
                                                                                                                                                                                                                return $.Color$hex$1($.CTC111.toString$0());
                                                                                                                                                                                                              } else {
                                                                                                                                                                                                                if ('Orchid' === value) {
                                                                                                                                                                                                                  return $.Color$hex$1($.CTC112.toString$0());
                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                  if ('PaleGoldenrod' === value) {
                                                                                                                                                                                                                    return $.Color$hex$1($.CTC113.toString$0());
                                                                                                                                                                                                                  } else {
                                                                                                                                                                                                                    if ('PaleGreen' === value) {
                                                                                                                                                                                                                      return $.Color$hex$1($.CTC114.toString$0());
                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                      if ('PaleTurquoise' === value) {
                                                                                                                                                                                                                        return $.Color$hex$1($.CTC115.toString$0());
                                                                                                                                                                                                                      } else {
                                                                                                                                                                                                                        if ('PaleVioletRed' === value) {
                                                                                                                                                                                                                          return $.Color$hex$1($.CTC116.toString$0());
                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                          if ('PapayaWhip' === value) {
                                                                                                                                                                                                                            return $.Color$hex$1($.CTC117.toString$0());
                                                                                                                                                                                                                          } else {
                                                                                                                                                                                                                            if ('PeachPuff' === value) {
                                                                                                                                                                                                                              return $.Color$hex$1($.CTC118.toString$0());
                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                              if ('Peru' === value) {
                                                                                                                                                                                                                                return $.Color$hex$1($.CTC119.toString$0());
                                                                                                                                                                                                                              } else {
                                                                                                                                                                                                                                if ('Pink' === value) {
                                                                                                                                                                                                                                  return $.Color$hex$1($.CTC120.toString$0());
                                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                                  if ('Plum' === value) {
                                                                                                                                                                                                                                    return $.Color$hex$1($.CTC121.toString$0());
                                                                                                                                                                                                                                  } else {
                                                                                                                                                                                                                                    if ('PowderBlue' === value) {
                                                                                                                                                                                                                                      return $.Color$hex$1($.CTC122.toString$0());
                                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                                      if ('Purple' === value) {
                                                                                                                                                                                                                                        return $.Color$hex$1($.CTC123.toString$0());
                                                                                                                                                                                                                                      } else {
                                                                                                                                                                                                                                        if ('Red' === value) {
                                                                                                                                                                                                                                          return $.Color$hex$1($.CTC124.toString$0());
                                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                                          if ('RosyBrown' === value) {
                                                                                                                                                                                                                                            return $.Color$hex$1($.CTC125.toString$0());
                                                                                                                                                                                                                                          } else {
                                                                                                                                                                                                                                            if ('RoyalBlue' === value) {
                                                                                                                                                                                                                                              return $.Color$hex$1($.CTC126.toString$0());
                                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                                              if ('SaddleBrown' === value) {
                                                                                                                                                                                                                                                return $.Color$hex$1($.CTC127.toString$0());
                                                                                                                                                                                                                                              } else {
                                                                                                                                                                                                                                                if ('Salmon' === value) {
                                                                                                                                                                                                                                                  return $.Color$hex$1($.CTC128.toString$0());
                                                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                                                  if ('SandyBrown' === value) {
                                                                                                                                                                                                                                                    return $.Color$hex$1($.CTC129.toString$0());
                                                                                                                                                                                                                                                  } else {
                                                                                                                                                                                                                                                    if ('SeaGreen' === value) {
                                                                                                                                                                                                                                                      return $.Color$hex$1($.CTC130.toString$0());
                                                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                                                      if ('SeaShell' === value) {
                                                                                                                                                                                                                                                        return $.Color$hex$1($.CTC131.toString$0());
                                                                                                                                                                                                                                                      } else {
                                                                                                                                                                                                                                                        if ('Sienna' === value) {
                                                                                                                                                                                                                                                          return $.Color$hex$1($.CTC132.toString$0());
                                                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                                                          if ('Silver' === value) {
                                                                                                                                                                                                                                                            return $.Color$hex$1($.CTC133.toString$0());
                                                                                                                                                                                                                                                          } else {
                                                                                                                                                                                                                                                            if ('SkyBlue' === value) {
                                                                                                                                                                                                                                                              return $.Color$hex$1($.CTC134.toString$0());
                                                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                                                              if ('SlateBlue' === value) {
                                                                                                                                                                                                                                                                return $.Color$hex$1($.CTC135.toString$0());
                                                                                                                                                                                                                                                              } else {
                                                                                                                                                                                                                                                                if ('SlateGray' === value) {
                                                                                                                                                                                                                                                                  return $.Color$hex$1($.CTC136.toString$0());
                                                                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                                                                  if ('Snow' === value) {
                                                                                                                                                                                                                                                                    return $.Color$hex$1($.CTC137.toString$0());
                                                                                                                                                                                                                                                                  } else {
                                                                                                                                                                                                                                                                    if ('SpringGreen' === value) {
                                                                                                                                                                                                                                                                      return $.Color$hex$1($.CTC138.toString$0());
                                                                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                                                                      if ('SteelBlue' === value) {
                                                                                                                                                                                                                                                                        return $.Color$hex$1($.CTC139.toString$0());
                                                                                                                                                                                                                                                                      } else {
                                                                                                                                                                                                                                                                        if ('Tan' === value) {
                                                                                                                                                                                                                                                                          return $.Color$hex$1($.CTC140.toString$0());
                                                                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                                                                          if ('Teal' === value) {
                                                                                                                                                                                                                                                                            return $.Color$hex$1($.CTC141.toString$0());
                                                                                                                                                                                                                                                                          } else {
                                                                                                                                                                                                                                                                            if ('Thistle' === value) {
                                                                                                                                                                                                                                                                              return $.Color$hex$1($.CTC142.toString$0());
                                                                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                                                                              if ('Tomato' === value) {
                                                                                                                                                                                                                                                                                return $.Color$hex$1($.CTC143.toString$0());
                                                                                                                                                                                                                                                                              } else {
                                                                                                                                                                                                                                                                                if ('Turquoise' === value) {
                                                                                                                                                                                                                                                                                  return $.Color$hex$1($.CTC144.toString$0());
                                                                                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                                                                                  if ('Violet' === value) {
                                                                                                                                                                                                                                                                                    return $.Color$hex$1($.CTC145.toString$0());
                                                                                                                                                                                                                                                                                  } else {
                                                                                                                                                                                                                                                                                    if ('Wheat' === value) {
                                                                                                                                                                                                                                                                                      return $.Color$hex$1($.CTC146.toString$0());
                                                                                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                                                                                      if ('White' === value) {
                                                                                                                                                                                                                                                                                        return $.Color$hex$1($.CTC9.toString$0());
                                                                                                                                                                                                                                                                                      } else {
                                                                                                                                                                                                                                                                                        if ('WhiteSmoke' === value) {
                                                                                                                                                                                                                                                                                          return $.Color$hex$1($.CTC147.toString$0());
                                                                                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                                                                                          if ('Yellow' === value) {
                                                                                                                                                                                                                                                                                            return $.Color$hex$1($.CTC148.toString$0());
                                                                                                                                                                                                                                                                                          } else {
                                                                                                                                                                                                                                                                                            if ('YellowGreen' === value) {
                                                                                                                                                                                                                                                                                              return $.Color$hex$1($.CTC149.toString$0());
                                                                                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                                                                                              return value;
                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }
                                                                                                                                                                                                        }
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                            }
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                      }
                                                                                                                                                                                    }
                                                                                                                                                                                  }
                                                                                                                                                                                }
                                                                                                                                                                              }
                                                                                                                                                                            }
                                                                                                                                                                          }
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
 },
 convert$1: function(value) {
  return this.convert$2(value,(void 0))
},
 is$IValueConverter: true,
});

Isolate.$defineClass("Closure190", "Closure330",
function Closure(this_2) {
  this.this_2 = this_2;
}, {
 $call$1: function(value) {
  value.renderBrush$1(this.this_2.get$_lib2_component());
 },
});

Isolate.$defineClass("Closure201", "Closure330",
function Closure(this_1) {
  this.this_1 = this_1;
}, {
 $call$1: function(list) {
  this.this_1._lib2_updateRowLayout$1(this.this_1.get$actualHeight());
 },
});

Isolate.$defineClass("FilteredElementList", "Object",
function FilteredElementList(_lib5_childNodes, _lib5_node) {
  this._lib5_childNodes = _lib5_childNodes;
  this._lib5_node = _lib5_node;
}, {
 last$0: function() {
  return $.last(this.get$_lib5_filtered());
 },
 indexOf$2: function(element, start) {
  return $.indexOf$2(this.get$_lib5_filtered(), element, start);
 },
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 getRange$2: function(start, rangeLength) {
  return $.getRange(this.get$_lib5_filtered(), start, rangeLength);
 },
 iterator$0: function() {
  return $.iterator(this.get$_lib5_filtered());
 },
 operator$index$1: function(index) {
  return $.index(this.get$_lib5_filtered(), index);
 },
 get$length: function() {
  return $.get$length(this.get$_lib5_filtered());
 },
 isEmpty$0: function() {
  return $.isEmpty(this.get$_lib5_filtered());
 },
 some$1: function(f) {
  return $.some(this.get$_lib5_filtered(), f);
 },
 every$1: function(f) {
  return $.every(this.get$_lib5_filtered(), f);
 },
 filter$1: function(f) {
  return $.filter(this.get$_lib5_filtered(), f);
 },
 removeLast$0: function() {
  var result = this.last$0();
  if (!$.eqNullB(result)) {
    result.remove$0();
  }
  return result;
 },
 clear$0: function() {
  $.clear(this.get$_lib5_childNodes());
 },
 removeRange$2: function(start, rangeLength) {
  $.forEach($.getRange(this.get$_lib5_filtered(), start, rangeLength), new $.Closure24());
 },
 sort$1: function(compare) {
  throw $.captureStackTrace($.CTC207);
 },
 addLast$1: function(value) {
  this.add$1(value);
 },
 addAll$1: function(collection) {
  $.forEach(collection, this.get$add());
 },
 add$1: function(value) {
  $.add$1(this.get$_lib5_childNodes(), value);
 },
 get$add: function() { return new $.Closure340(this); },
 set$length: function(newLength) {
  var len = $.get$length(this);
  if ($.geB(newLength, len)) {
    return;
  } else {
    if ($.ltB(newLength, 0)) {
      throw $.captureStackTrace($.CTC165);
    }
  }
  this.removeRange$2($.sub(newLength, 1), $.sub(len, newLength));
 },
 operator$indexSet$2: function(index, value) {
  this.operator$index$1(index).replaceWith$1(value);
 },
 forEach$1: function(f) {
  $.forEach(this.get$_lib5_filtered(), f);
 },
 get$first: function() {
  for (var t0 = $.iterator(this.get$_lib5_childNodes()); t0.hasNext$0() === true; ) {
    var t1 = t0.next$0();
    if (typeof t1 === 'object' && t1.is$Element()) {
      return t1;
    }
  }
  return;
 },
 first$0: function() { return this.get$first().$call$0(); },
 get$_lib5_filtered: function() {
  return $.List$from($.filter(this.get$_lib5_childNodes(), new $.Closure23()));
 },
 get$_lib5_childNodes: function() { return this._lib5_childNodes; },
 is$List2: function() { return true; },
 is$Collection: function() { return true; },
});

Isolate.$defineClass("Closure9", "Closure330",
function Closure(this_6) {
  this.this_6 = this_6;
}, {
 $call$1: function(value) {
  this.this_6._lib2_assignOverflowX$1(value);
 },
});

Isolate.$defineClass("Closure189", "Closure330",
function Closure(this_1) {
  this.this_1 = this_1;
}, {
 $call$1: function(value) {
  var t0 = $.toString(value.get$color());
  this.this_1.get$shapeElement().get$style().set$borderColor(t0);
 },
});

Isolate.$defineClass("Closure85", "Closure330",
function Closure(this_36) {
  this.this_36 = this_36;
}, {
 $call$1: function(value) {
  var t0 = value.get$_lib2_str();
  this.this_36.get$_lib2_component().get$style().set$cursor(t0);
 },
});

Isolate.$defineClass("Closure289", "Closure330",
function Closure() {
}, {
 $call$1: function(el) {
  return typeof el === 'object' && !!el.is$XmlText;
 },
});

Isolate.$defineClass("_FixedSizeListIterator", "_VariableSizeListIterator",
function _FixedSizeListIterator(_lib5_length, _VariableSizeListIterator__lib5_pos, _VariableSizeListIterator__lib5_array) {
  this._lib5_length = _lib5_length;
  this._lib5_pos = _VariableSizeListIterator__lib5_pos;
  this._lib5_array = _VariableSizeListIterator__lib5_array;
}, {
 get$_lib5_length: function() { return this._lib5_length; },
 hasNext$0: function() {
  return $.gt(this.get$_lib5_length(), this.get$_lib5_pos());
 },
});

Isolate.$defineClass("Closure50", "Closure330",
function Closure(this_44, mouseLeaveHandler_43) {
  this.this_44 = this_44;
  this.mouseLeaveHandler_43 = mouseLeaveHandler_43;
}, {
 $call$0: function() {
  return this.this_44.get$_lib2_component().get$on().get$mouseOut().remove$1(this.mouseLeaveHandler_43);
 },
});

Isolate.$defineClass("Closure27", "Closure330",
function Closure(this_4) {
  this.this_4 = this_4;
}, {
 $call$1: function(e) {
  if (!(this.this_4.get$mouseUp().get$hasHandlers() === true)) {
    return;
  }
  e.stopPropagation$0();
  var p = $.document().get$window().webkitConvertPointFromPageToNode$2(this.this_4.get$_lib2_component(), $.Point(e.get$pageX(), e.get$pageY()));
  this.this_4.get$mouseUp().invoke$2(this.this_4, $.MouseEventArgs$4(p.get$x(), p.get$y(), e.get$pageX(), e.get$pageY()));
 },
});

Isolate.$defineClass("Closure221", "Closure330",
function Closure(this_14) {
  this.this_14 = this_14;
}, {
 $call$1: function(child) {
  var colIndex = $.getColumn(child.get$content());
  var childColumnSpan = $.getColumnSpan(child.get$content());
  child.set$margin($.Thickness$specified$4(child.get$margin().get$top(), 0, 0, $.index(this.this_14.get$columnDefinitions(), colIndex).get$_lib2_adjustedOffset()));
  if ($.gtB(childColumnSpan, 1)) {
    var childColumnSpan0 = childColumnSpan;
    if ($.gtB(childColumnSpan, $.sub($.get$length(this.this_14.get$columnDefinitions()), colIndex))) {
      childColumnSpan0 = $.sub($.get$length(this.this_14.get$columnDefinitions()), colIndex);
    }
    var t0 = '' + $.stringToString(this.this_14._lib2_totalLengthOf$1($.getRange(this.this_14.get$columnDefinitions(), colIndex, childColumnSpan0))) + 'px';
    child.get$_lib2_component().get$style().set$width(t0);
  } else {
    var t1 = '' + $.stringToString($.index(this.this_14.get$columnDefinitions(), colIndex).get$_lib2_adjustedLength()) + 'px';
    child.get$_lib2_component().get$style().set$width(t1);
  }
  child.updateLayout$0();
 },
});

Isolate.$defineClass("Closure288", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$1: function(e) {
  return this.this_0.addChild$1(e);
 },
});

Isolate.$defineClass("Closure191", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$1: function(value) {
  $.setFlexBoxOrientation(this.this_0, value);
  if ($.eqB(value, $.CTC209)) {
    $.setXPCSS(this.this_0.get$_lib2_component(), 'flex-direction', 'column');
  } else {
    $.setXPCSS(this.this_0.get$_lib2_component(), 'flex-direction', 'row');
  }
 },
});

Isolate.$defineClass("_InputElementEventsImpl", "_ElementEventsImpl",
function _InputElementEventsImpl(_EventsImpl__lib5_ptr) {
  this._lib5_ptr = _EventsImpl__lib5_ptr;
}, {
});

Isolate.$defineClass("Closure258", "Closure330",
function Closure() {
}, {
 $call$1: function(_) {
 },
});

Isolate.$defineClass("Debug", "Object",
function Debug(_lib_vm) {
  this._lib_vm = _lib_vm;
}, {
 run$0: function() {
  if ($.eqNullB(this.get$_lib_vm())) {
    $.br('is null');
  }
  this.get$_lib_vm().set$title('Demo Title');
  var t0 = $.GridDemoView$with$1(this.get$_lib_vm());
  $.buckshot().set$rootView(t0);
 },
 get$_lib_vm: function() { return this._lib_vm; },
 Debug$0: function() {
 },
});

Isolate.$defineClass("Button", "Control",
function Button(contentProperty, _lib2_content, Control__lib2_templateBindingsApplied, Control__lib2_templateApplied, Control__lib2_visualTemplateApplied, Control_template, Control_isEnabledProperty, FrameworkElement_mouseUp, FrameworkElement_mouseDown, FrameworkElement_mouseMove, FrameworkElement_click, FrameworkElement_mouseLeave, FrameworkElement_mouseEnter, FrameworkElement_lostFocus, FrameworkElement_gotFocus, FrameworkElement_actionsProperty, FrameworkElement_perspectiveProperty, FrameworkElement_transformOriginZProperty, FrameworkElement_transformOriginYProperty, FrameworkElement_transformOriginXProperty, FrameworkElement_rotateZProperty, FrameworkElement_rotateYProperty, FrameworkElement_rotateXProperty, FrameworkElement_scaleZProperty, FrameworkElement_scaleYProperty, FrameworkElement_scaleXProperty, FrameworkElement_translateZProperty, FrameworkElement_translateYProperty, FrameworkElement_translateXProperty, FrameworkElement_styleProperty, FrameworkElement_visibilityProperty, FrameworkElement_opacityProperty, FrameworkElement_actualHeightProperty, FrameworkElement_actualWidthProperty, FrameworkElement_zOrderProperty, FrameworkElement_verticalAlignmentProperty, FrameworkElement_horizontalAlignmentProperty, FrameworkElement_tagProperty, FrameworkElement_cursorProperty, FrameworkElement_minHeightProperty, FrameworkElement_maxHeightProperty, FrameworkElement_minWidthProperty, FrameworkElement_maxWidthProperty, FrameworkElement_htmlIDProperty, FrameworkElement_heightProperty, FrameworkElement_widthProperty, FrameworkElement_marginProperty, FrameworkElement__lib2_transitionProperties, FrameworkElement__lib2_templateBindings, FrameworkElement__lib2_style, FrameworkElement__lib2_containerParent, FrameworkObject_mostRecentMeasurement, FrameworkObject__lib2_dataContextUpdated, FrameworkObject_nameProperty, FrameworkObject_attachedPropertyChanged, FrameworkObject_measurementChanged, FrameworkObject_unloaded, FrameworkObject_loaded, FrameworkObject_lateBindings, FrameworkObject_dataContextProperty, FrameworkObject__lib2_isLoaded, FrameworkObject__lib2_parent, FrameworkObject__lib2_component, FrameworkObject__lib2_previousMeasurement, FrameworkObject__lib2_animationFrameID, FrameworkObject__lib2_watchingMeasurement, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this.contentProperty = contentProperty;
  this._lib2_content = _lib2_content;
  this._lib2_templateBindingsApplied = Control__lib2_templateBindingsApplied;
  this._lib2_templateApplied = Control__lib2_templateApplied;
  this._lib2_visualTemplateApplied = Control__lib2_visualTemplateApplied;
  this.template = Control_template;
  this.isEnabledProperty = Control_isEnabledProperty;
  this.mouseUp = FrameworkElement_mouseUp;
  this.mouseDown = FrameworkElement_mouseDown;
  this.mouseMove = FrameworkElement_mouseMove;
  this.click = FrameworkElement_click;
  this.mouseLeave = FrameworkElement_mouseLeave;
  this.mouseEnter = FrameworkElement_mouseEnter;
  this.lostFocus = FrameworkElement_lostFocus;
  this.gotFocus = FrameworkElement_gotFocus;
  this.actionsProperty = FrameworkElement_actionsProperty;
  this.perspectiveProperty = FrameworkElement_perspectiveProperty;
  this.transformOriginZProperty = FrameworkElement_transformOriginZProperty;
  this.transformOriginYProperty = FrameworkElement_transformOriginYProperty;
  this.transformOriginXProperty = FrameworkElement_transformOriginXProperty;
  this.rotateZProperty = FrameworkElement_rotateZProperty;
  this.rotateYProperty = FrameworkElement_rotateYProperty;
  this.rotateXProperty = FrameworkElement_rotateXProperty;
  this.scaleZProperty = FrameworkElement_scaleZProperty;
  this.scaleYProperty = FrameworkElement_scaleYProperty;
  this.scaleXProperty = FrameworkElement_scaleXProperty;
  this.translateZProperty = FrameworkElement_translateZProperty;
  this.translateYProperty = FrameworkElement_translateYProperty;
  this.translateXProperty = FrameworkElement_translateXProperty;
  this.styleProperty = FrameworkElement_styleProperty;
  this.visibilityProperty = FrameworkElement_visibilityProperty;
  this.opacityProperty = FrameworkElement_opacityProperty;
  this.actualHeightProperty = FrameworkElement_actualHeightProperty;
  this.actualWidthProperty = FrameworkElement_actualWidthProperty;
  this.zOrderProperty = FrameworkElement_zOrderProperty;
  this.verticalAlignmentProperty = FrameworkElement_verticalAlignmentProperty;
  this.horizontalAlignmentProperty = FrameworkElement_horizontalAlignmentProperty;
  this.tagProperty = FrameworkElement_tagProperty;
  this.cursorProperty = FrameworkElement_cursorProperty;
  this.minHeightProperty = FrameworkElement_minHeightProperty;
  this.maxHeightProperty = FrameworkElement_maxHeightProperty;
  this.minWidthProperty = FrameworkElement_minWidthProperty;
  this.maxWidthProperty = FrameworkElement_maxWidthProperty;
  this.htmlIDProperty = FrameworkElement_htmlIDProperty;
  this.heightProperty = FrameworkElement_heightProperty;
  this.widthProperty = FrameworkElement_widthProperty;
  this.marginProperty = FrameworkElement_marginProperty;
  this._lib2_transitionProperties = FrameworkElement__lib2_transitionProperties;
  this._lib2_templateBindings = FrameworkElement__lib2_templateBindings;
  this._lib2_style = FrameworkElement__lib2_style;
  this._lib2_containerParent = FrameworkElement__lib2_containerParent;
  this.mostRecentMeasurement = FrameworkObject_mostRecentMeasurement;
  this._lib2_dataContextUpdated = FrameworkObject__lib2_dataContextUpdated;
  this.nameProperty = FrameworkObject_nameProperty;
  this.attachedPropertyChanged = FrameworkObject_attachedPropertyChanged;
  this.measurementChanged = FrameworkObject_measurementChanged;
  this.unloaded = FrameworkObject_unloaded;
  this.loaded = FrameworkObject_loaded;
  this.lateBindings = FrameworkObject_lateBindings;
  this.dataContextProperty = FrameworkObject_dataContextProperty;
  this._lib2_isLoaded = FrameworkObject__lib2_isLoaded;
  this._lib2_parent = FrameworkObject__lib2_parent;
  this._lib2_component = FrameworkObject__lib2_component;
  this._lib2_previousMeasurement = FrameworkObject__lib2_previousMeasurement;
  this._lib2_animationFrameID = FrameworkObject__lib2_animationFrameID;
  this._lib2_watchingMeasurement = FrameworkObject__lib2_watchingMeasurement;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$type: function() {
  return 'Button';
 },
 CreateElement$0: function() {
  this.set$_lib2_component($.createByTag('button'));
  this.get$_lib2_component().get$style().set$display('block');
 },
 set$content: function(value) {
  return $.setValue(this.get$contentProperty(), value);
 },
 get$content: function() {
  return $.getValue(this.get$contentProperty());
 },
 makeMe$0: function() {
  return $.Button$0();
 },
 set$contentProperty: function(v) { this.contentProperty = v; },
 get$contentProperty: function() { return this.contentProperty; },
 set$_lib2_content: function(v) { this._lib2_content = v; },
 get$_lib2_content: function() { return this._lib2_content; },
 Button$0: function() {
  $.appendBuckshotClass(this.get$_lib2_component(), 'button');
  this.set$contentProperty($.FrameworkProperty$5(this, 'content', new $.Closure138(this), (void 0), (void 0)));
  $.indexSet(this.get$_lib2_stateBag(), 'CONTAINER_CONTEXT', this.get$contentProperty());
 },
 is$IFrameworkContainer: true,
});

Isolate.$defineClass("Closure285", "Closure330",
function Closure(box_0) {
  this.box_0 = box_0;
}, {
 $call$1: function(el) {
  if (!($.isEmpty(this.box_0.list_2) === true)) {
    return;
  }
  el._lib7_queryNameInternal$2(this.box_0.tagName_1, this.box_0.list_2);
 },
});

Isolate.$defineClass("PolyLine", "Shape",
function PolyLine(Shape__lib2_shProperty, Shape__lib2_swProperty, Shape_strokeWidthProperty, Shape_strokeProperty, Shape_fillProperty, Shape__lib2_svgWrapper, Shape_shapeElement, FrameworkElement_mouseUp, FrameworkElement_mouseDown, FrameworkElement_mouseMove, FrameworkElement_click, FrameworkElement_mouseLeave, FrameworkElement_mouseEnter, FrameworkElement_lostFocus, FrameworkElement_gotFocus, FrameworkElement_actionsProperty, FrameworkElement_perspectiveProperty, FrameworkElement_transformOriginZProperty, FrameworkElement_transformOriginYProperty, FrameworkElement_transformOriginXProperty, FrameworkElement_rotateZProperty, FrameworkElement_rotateYProperty, FrameworkElement_rotateXProperty, FrameworkElement_scaleZProperty, FrameworkElement_scaleYProperty, FrameworkElement_scaleXProperty, FrameworkElement_translateZProperty, FrameworkElement_translateYProperty, FrameworkElement_translateXProperty, FrameworkElement_styleProperty, FrameworkElement_visibilityProperty, FrameworkElement_opacityProperty, FrameworkElement_actualHeightProperty, FrameworkElement_actualWidthProperty, FrameworkElement_zOrderProperty, FrameworkElement_verticalAlignmentProperty, FrameworkElement_horizontalAlignmentProperty, FrameworkElement_tagProperty, FrameworkElement_cursorProperty, FrameworkElement_minHeightProperty, FrameworkElement_maxHeightProperty, FrameworkElement_minWidthProperty, FrameworkElement_maxWidthProperty, FrameworkElement_htmlIDProperty, FrameworkElement_heightProperty, FrameworkElement_widthProperty, FrameworkElement_marginProperty, FrameworkElement__lib2_transitionProperties, FrameworkElement__lib2_templateBindings, FrameworkElement__lib2_style, FrameworkElement__lib2_containerParent, FrameworkObject_mostRecentMeasurement, FrameworkObject__lib2_dataContextUpdated, FrameworkObject_nameProperty, FrameworkObject_attachedPropertyChanged, FrameworkObject_measurementChanged, FrameworkObject_unloaded, FrameworkObject_loaded, FrameworkObject_lateBindings, FrameworkObject_dataContextProperty, FrameworkObject__lib2_isLoaded, FrameworkObject__lib2_parent, FrameworkObject__lib2_component, FrameworkObject__lib2_previousMeasurement, FrameworkObject__lib2_animationFrameID, FrameworkObject__lib2_watchingMeasurement, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this._lib2_shProperty = Shape__lib2_shProperty;
  this._lib2_swProperty = Shape__lib2_swProperty;
  this.strokeWidthProperty = Shape_strokeWidthProperty;
  this.strokeProperty = Shape_strokeProperty;
  this.fillProperty = Shape_fillProperty;
  this._lib2_svgWrapper = Shape__lib2_svgWrapper;
  this.shapeElement = Shape_shapeElement;
  this.mouseUp = FrameworkElement_mouseUp;
  this.mouseDown = FrameworkElement_mouseDown;
  this.mouseMove = FrameworkElement_mouseMove;
  this.click = FrameworkElement_click;
  this.mouseLeave = FrameworkElement_mouseLeave;
  this.mouseEnter = FrameworkElement_mouseEnter;
  this.lostFocus = FrameworkElement_lostFocus;
  this.gotFocus = FrameworkElement_gotFocus;
  this.actionsProperty = FrameworkElement_actionsProperty;
  this.perspectiveProperty = FrameworkElement_perspectiveProperty;
  this.transformOriginZProperty = FrameworkElement_transformOriginZProperty;
  this.transformOriginYProperty = FrameworkElement_transformOriginYProperty;
  this.transformOriginXProperty = FrameworkElement_transformOriginXProperty;
  this.rotateZProperty = FrameworkElement_rotateZProperty;
  this.rotateYProperty = FrameworkElement_rotateYProperty;
  this.rotateXProperty = FrameworkElement_rotateXProperty;
  this.scaleZProperty = FrameworkElement_scaleZProperty;
  this.scaleYProperty = FrameworkElement_scaleYProperty;
  this.scaleXProperty = FrameworkElement_scaleXProperty;
  this.translateZProperty = FrameworkElement_translateZProperty;
  this.translateYProperty = FrameworkElement_translateYProperty;
  this.translateXProperty = FrameworkElement_translateXProperty;
  this.styleProperty = FrameworkElement_styleProperty;
  this.visibilityProperty = FrameworkElement_visibilityProperty;
  this.opacityProperty = FrameworkElement_opacityProperty;
  this.actualHeightProperty = FrameworkElement_actualHeightProperty;
  this.actualWidthProperty = FrameworkElement_actualWidthProperty;
  this.zOrderProperty = FrameworkElement_zOrderProperty;
  this.verticalAlignmentProperty = FrameworkElement_verticalAlignmentProperty;
  this.horizontalAlignmentProperty = FrameworkElement_horizontalAlignmentProperty;
  this.tagProperty = FrameworkElement_tagProperty;
  this.cursorProperty = FrameworkElement_cursorProperty;
  this.minHeightProperty = FrameworkElement_minHeightProperty;
  this.maxHeightProperty = FrameworkElement_maxHeightProperty;
  this.minWidthProperty = FrameworkElement_minWidthProperty;
  this.maxWidthProperty = FrameworkElement_maxWidthProperty;
  this.htmlIDProperty = FrameworkElement_htmlIDProperty;
  this.heightProperty = FrameworkElement_heightProperty;
  this.widthProperty = FrameworkElement_widthProperty;
  this.marginProperty = FrameworkElement_marginProperty;
  this._lib2_transitionProperties = FrameworkElement__lib2_transitionProperties;
  this._lib2_templateBindings = FrameworkElement__lib2_templateBindings;
  this._lib2_style = FrameworkElement__lib2_style;
  this._lib2_containerParent = FrameworkElement__lib2_containerParent;
  this.mostRecentMeasurement = FrameworkObject_mostRecentMeasurement;
  this._lib2_dataContextUpdated = FrameworkObject__lib2_dataContextUpdated;
  this.nameProperty = FrameworkObject_nameProperty;
  this.attachedPropertyChanged = FrameworkObject_attachedPropertyChanged;
  this.measurementChanged = FrameworkObject_measurementChanged;
  this.unloaded = FrameworkObject_unloaded;
  this.loaded = FrameworkObject_loaded;
  this.lateBindings = FrameworkObject_lateBindings;
  this.dataContextProperty = FrameworkObject_dataContextProperty;
  this._lib2_isLoaded = FrameworkObject__lib2_isLoaded;
  this._lib2_parent = FrameworkObject__lib2_parent;
  this._lib2_component = FrameworkObject__lib2_component;
  this._lib2_previousMeasurement = FrameworkObject__lib2_previousMeasurement;
  this._lib2_animationFrameID = FrameworkObject__lib2_animationFrameID;
  this._lib2_watchingMeasurement = FrameworkObject__lib2_watchingMeasurement;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$shapeTag: function() {
  return 'polyline';
 },
 _lib2_initPolyLineProperties$0: function() {
 },
 makeMe$0: function() {
  return $.PolyLine$0();
 },
 PolyLine$0: function() {
  $.appendBuckshotClass(this.get$_lib2_component(), 'polyline');
  this._lib2_initPolyLineProperties$0();
 },
});

Isolate.$defineClass("_DoubleLinkedQueueIterator", "Object",
function _DoubleLinkedQueueIterator(_lib3_currentEntry, _lib3_sentinel) {
  this._lib3_currentEntry = _lib3_currentEntry;
  this._lib3_sentinel = _lib3_sentinel;
}, {
 next$0: function() {
  if (!(this.hasNext$0() === true)) {
    throw $.captureStackTrace($.CTC3);
  }
  this.set$_lib3_currentEntry(this.get$_lib3_currentEntry().get$_lib3_next());
  return this.get$_lib3_currentEntry().get$element();
 },
 hasNext$0: function() {
  return !(this.get$_lib3_currentEntry().get$_lib3_next() === this.get$_lib3_sentinel());
 },
 set$_lib3_currentEntry: function(v) { this._lib3_currentEntry = v; },
 get$_lib3_currentEntry: function() { return this._lib3_currentEntry; },
 get$_lib3_sentinel: function() { return this._lib3_sentinel; },
 _lib3_DoubleLinkedQueueIterator$1: function(_sentinel) {
  this.set$_lib3_currentEntry(this.get$_lib3_sentinel());
 },
});

Isolate.$defineClass("_TextTrackListEventsImpl", "_EventsImpl",
function _TextTrackListEventsImpl(_EventsImpl__lib5_ptr) {
  this._lib5_ptr = _EventsImpl__lib5_ptr;
}, {
});

Isolate.$defineClass("Closure140", "Closure330",
function Closure(this_1) {
  this.this_1 = this_1;
}, {
 $call$1: function(value) {
  var t0 = $.toString(value.get$color());
  this.this_1.get$_lib2_component().get$style().set$color(t0);
 },
});

Isolate.$defineClass("Closure263", "Closure330",
function Closure(box_0) {
  this.box_0 = box_0;
}, {
 $call$2: function(k, v) {
  return $.add$1(this.box_0.b_1, $.XmlAttribute$2(k, v).toString$0());
 },
});

Isolate.$defineClass("LinkedHashMapImplementation", "Object",
function LinkedHashMapImplementation(_lib3_map, _lib3_list) {
  this._lib3_map = _lib3_map;
  this._lib3_list = _lib3_list;
}, {
 toString$0: function() {
  return $.mapToString(this);
 },
 clear$0: function() {
  $.clear(this.get$_lib3_map());
  $.clear(this.get$_lib3_list());
 },
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
 },
 get$length: function() {
  return $.get$length(this.get$_lib3_map());
 },
 containsKey$1: function(key) {
  return this.get$_lib3_map().containsKey$1(key);
 },
 forEach$1: function(f) {
  var t0 = ({});
  t0.f_1 = f;
  $.forEach(this.get$_lib3_list(), new $.Closure273(t0));
 },
 getKeys$0: function() {
  var t0 = ({});
  var list = $.List($.get$length(this));
  $.setRuntimeTypeInfo(list, ({E: 'K'}));
  t0.list_1 = list;
  t0.index_2 = 0;
  $.forEach(this.get$_lib3_list(), new $.Closure272(t0));
  $.assert($.eq(t0.index_2, $.get$length(this)));
  return t0.list_1;
 },
 remove$1: function(key) {
  var entry = this.get$_lib3_map().remove$1(key);
  if (entry === (void 0)) {
    return;
  }
  entry.remove$0();
  return entry.get$element().get$value();
 },
 operator$index$1: function(key) {
  var entry = $.index(this.get$_lib3_map(), key);
  if (entry === (void 0)) {
    return;
  }
  return entry.get$element().get$value();
 },
 operator$indexSet$2: function(key, value) {
  if (this.get$_lib3_map().containsKey$1(key) === true) {
    $.index(this.get$_lib3_map(), key).get$element().set$value(value);
  } else {
    $.addLast(this.get$_lib3_list(), $.KeyValuePair$2(key, value));
    $.indexSet(this.get$_lib3_map(), key, this.get$_lib3_list().lastEntry$0());
  }
 },
 set$_lib3_map: function(v) { this._lib3_map = v; },
 get$_lib3_map: function() { return this._lib3_map; },
 set$_lib3_list: function(v) { this._lib3_list = v; },
 get$_lib3_list: function() { return this._lib3_list; },
 LinkedHashMapImplementation$0: function() {
  this.set$_lib3_map($.HashMapImplementation$0());
  var t0 = $.DoubleLinkedQueue$0();
  $.setRuntimeTypeInfo(t0, ({E: 'KeyValuePair<K, V>'}));
  this.set$_lib3_list(t0);
 },
 is$Map: function() { return true; },
});

Isolate.$defineClass("_DeprecatedPeerConnectionEventsImpl", "_EventsImpl",
function _DeprecatedPeerConnectionEventsImpl(_EventsImpl__lib5_ptr) {
  this._lib5_ptr = _EventsImpl__lib5_ptr;
}, {
 get$message: function() {
  return this._lib5_get$1('message');
 },
});

Isolate.$defineClass("Closure24", "Closure330",
function Closure() {
}, {
 $call$1: function(el) {
  return el.remove$0();
 },
});

Isolate.$defineClass("Closure116", "Closure330",
function Closure(box_0) {
  this.box_0 = box_0;
}, {
 $call$2: function(key, value) {
  var t0 = this.box_0.list_1;
  var t1 = this.box_0.i_2;
  var i = $.add(t1, 1);
  this.box_0.i_2 = i;
  $.indexSet(t0, t1, key);
 },
});

Isolate.$defineClass("RadialGradientBrush", "Brush",
function RadialGradientBrush(fallbackColorProperty, drawModeProperty, stopsProperty, FrameworkResource_rawData, FrameworkResource_keyProperty, FrameworkObject_mostRecentMeasurement, FrameworkObject__lib2_dataContextUpdated, FrameworkObject_nameProperty, FrameworkObject_attachedPropertyChanged, FrameworkObject_measurementChanged, FrameworkObject_unloaded, FrameworkObject_loaded, FrameworkObject_lateBindings, FrameworkObject_dataContextProperty, FrameworkObject__lib2_isLoaded, FrameworkObject__lib2_parent, FrameworkObject__lib2_component, FrameworkObject__lib2_previousMeasurement, FrameworkObject__lib2_animationFrameID, FrameworkObject__lib2_watchingMeasurement, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this.fallbackColorProperty = fallbackColorProperty;
  this.drawModeProperty = drawModeProperty;
  this.stopsProperty = stopsProperty;
  this.rawData = FrameworkResource_rawData;
  this.keyProperty = FrameworkResource_keyProperty;
  this.mostRecentMeasurement = FrameworkObject_mostRecentMeasurement;
  this._lib2_dataContextUpdated = FrameworkObject__lib2_dataContextUpdated;
  this.nameProperty = FrameworkObject_nameProperty;
  this.attachedPropertyChanged = FrameworkObject_attachedPropertyChanged;
  this.measurementChanged = FrameworkObject_measurementChanged;
  this.unloaded = FrameworkObject_unloaded;
  this.loaded = FrameworkObject_loaded;
  this.lateBindings = FrameworkObject_lateBindings;
  this.dataContextProperty = FrameworkObject_dataContextProperty;
  this._lib2_isLoaded = FrameworkObject__lib2_isLoaded;
  this._lib2_parent = FrameworkObject__lib2_parent;
  this._lib2_component = FrameworkObject__lib2_component;
  this._lib2_previousMeasurement = FrameworkObject__lib2_previousMeasurement;
  this._lib2_animationFrameID = FrameworkObject__lib2_animationFrameID;
  this._lib2_watchingMeasurement = FrameworkObject__lib2_watchingMeasurement;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$type: function() {
  return 'RadialGradientBrush';
 },
 renderBrush$1: function(element) {
  var t0 = ({});
  var t1 = $.toString(this.get$fallbackColor());
  element.get$style().set$background(t1);
  t0.colorString_1 = '';
  $.forEach(this.get$stops(), new $.Closure309(this, t0));
  var t2 = '-webkit-radial-gradient(50% 50%, ' + $.stringToString($.toString(this.get$drawMode())) + ', ' + $.stringToString(t0.colorString_1) + ')';
  element.get$style().set$background(t2);
  var t3 = '-moz-radial-gradient(50% 50%, ' + $.stringToString($.toString(this.get$drawMode())) + ', ' + $.stringToString(t0.colorString_1) + ')';
  element.get$style().set$background(t3);
  var t4 = '-ms-radial-gradient(50% 50%, ' + $.stringToString($.toString(this.get$drawMode())) + ', ' + $.stringToString(t0.colorString_1) + ')';
  element.get$style().set$background(t4);
  var t5 = '-o-radial-gradient(50% 50%, ' + $.stringToString($.toString(this.get$drawMode())) + ', ' + $.stringToString(t0.colorString_1) + ')';
  element.get$style().set$background(t5);
  var t6 = 'radial-gradient(50% 50%, ' + $.stringToString($.toString(this.get$drawMode())) + ', ' + $.stringToString(t0.colorString_1) + ')';
  element.get$style().set$background(t6);
 },
 _lib2_initRadialGradientProperties$0: function() {
  var t0 = new $.Closure303();
  var t1 = $.List((void 0));
  $.setRuntimeTypeInfo(t1, ({E: 'GradientStop'}));
  this.set$stopsProperty($.FrameworkProperty$5(this, 'stops', t0, t1, (void 0)));
  this.set$drawModeProperty($.FrameworkProperty$5(this, 'drawMode', new $.Closure304(), $.CTC243, $.CTC244));
  this.set$fallbackColorProperty($.FrameworkProperty$5(this, 'fallbackColor', new $.Closure305(), $.Color$predefined$1($.CTC9), (void 0)));
 },
 get$fallbackColor: function() {
  return $.getValue(this.get$fallbackColorProperty());
 },
 set$fallbackColor: function(value) {
  return $.setValue(this.get$fallbackColorProperty(), value);
 },
 get$drawMode: function() {
  return $.getValue(this.get$drawModeProperty());
 },
 set$drawMode: function(value) {
  return $.setValue(this.get$drawModeProperty(), value);
 },
 get$stops: function() {
  return $.getValue(this.get$stopsProperty());
 },
 makeMe$0: function() {
  return $.RadialGradientBrush$2((void 0), (void 0));
 },
 set$fallbackColorProperty: function(v) { this.fallbackColorProperty = v; },
 get$fallbackColorProperty: function() { return this.fallbackColorProperty; },
 set$drawModeProperty: function(v) { this.drawModeProperty = v; },
 get$drawModeProperty: function() { return this.drawModeProperty; },
 set$stopsProperty: function(v) { this.stopsProperty = v; },
 get$stopsProperty: function() { return this.stopsProperty; },
 RadialGradientBrush$2: function(mode, fallback) {
  this._lib2_initRadialGradientProperties$0();
  if (!$.eqNullB(fallback)) {
    this.set$fallbackColor(fallback);
  }
  if (!$.eqNullB(mode)) {
    this.set$drawMode(mode);
  }
 },
});

Isolate.$defineClass("CompleterImpl", "Object",
function CompleterImpl(_lib3_futureImpl) {
  this._lib3_futureImpl = _lib3_futureImpl;
}, {
 completeException$1: function(exception) {
  this.get$_lib3_futureImpl()._lib3_setException$1(exception);
 },
 complete$1: function(value) {
  this.get$_lib3_futureImpl()._lib3_setValue$1(value);
 },
 get$future: function() {
  return this.get$_lib3_futureImpl();
 },
 get$_lib3_futureImpl: function() { return this._lib3_futureImpl; },
 CompleterImpl$0: function() {
 },
});

Isolate.$defineClass("Closure284", "Closure330",
function Closure() {
}, {
 $call$1: function(el) {
  return typeof el === 'object' && !!el.is$XmlElement;
 },
});

Isolate.$defineClass("Closure99", "Closure330",
function Closure(this_38) {
  this.this_38 = this_38;
}, {
 $call$1: function(_) {
  if (!$.eqNullB(this.this_38.get$parent())) {
    this.this_38.get$parent().updateLayout$0();
  }
 },
});

Isolate.$defineClass("Closure299", "Closure330",
function Closure() {
}, {
 $call$1: function(v) {
 },
});

Isolate.$defineClass("_EventListenerListImpl", "Object",
function _EventListenerListImpl(_lib5_type, _lib5_ptr) {
  this._lib5_type = _lib5_type;
  this._lib5_ptr = _lib5_ptr;
}, {
 _lib5_remove$2: function(listener, useCapture) {
  this.get$_lib5_ptr().$dom_removeEventListener$3(this.get$_lib5_type(), listener, useCapture);
 },
 _lib5_add$2: function(listener, useCapture) {
  this.get$_lib5_ptr().$dom_addEventListener$3(this.get$_lib5_type(), listener, useCapture);
 },
 remove$2: function(listener, useCapture) {
  this._lib5_remove$2(listener, useCapture);
  return this;
 },
 remove$1: function(listener) {
  return this.remove$2(listener,false)
},
 add$2: function(listener, useCapture) {
  this._lib5_add$2(listener, useCapture);
  return this;
 },
 add$1: function(listener) {
  return this.add$2(listener,false)
},
 get$_lib5_type: function() { return this._lib5_type; },
 get$_lib5_ptr: function() { return this._lib5_ptr; },
});

Isolate.$defineClass("Closure28", "Closure330",
function Closure(this_6, mouseUpHandler_5) {
  this.this_6 = this_6;
  this.mouseUpHandler_5 = mouseUpHandler_5;
}, {
 $call$0: function() {
  return $.add$1(this.this_6.get$_lib2_component().get$on().get$mouseUp(), this.mouseUpHandler_5);
 },
});

Isolate.$defineClass("Closure15", "Closure330",
function Closure() {
}, {
 $call$1: function(c) {
 },
});

Isolate.$defineClass("Closure51", "Closure330",
function Closure(box_0) {
  this.box_0 = box_0;
}, {
 $call$0: function() {
  return this.box_0.closure_1.$call$0();
 },
});

Isolate.$defineClass("_WindowEventsImpl", "_EventsImpl",
function _WindowEventsImpl(_EventsImpl__lib5_ptr) {
  this._lib5_ptr = _EventsImpl__lib5_ptr;
}, {
 get$scroll: function() {
  return this._lib5_get$1('scroll');
 },
 get$resize: function() {
  return this._lib5_get$1('resize');
 },
 get$mouseUp: function() {
  return this._lib5_get$1('mouseup');
 },
 get$mouseOver: function() {
  return this._lib5_get$1('mouseover');
 },
 get$mouseOut: function() {
  return this._lib5_get$1('mouseout');
 },
 get$mouseMove: function() {
  return this._lib5_get$1('mousemove');
 },
 get$mouseDown: function() {
  return this._lib5_get$1('mousedown');
 },
 get$message: function() {
  return this._lib5_get$1('message');
 },
 get$keyUp: function() {
  return this._lib5_get$1('keyup');
 },
 get$focus: function() {
  return this._lib5_get$1('focus');
 },
 focus$0: function() { return this.get$focus().$call$0(); },
 get$click: function() {
  return this._lib5_get$1('click');
 },
 get$change: function() {
  return this._lib5_get$1('change');
 },
 get$blur: function() {
  return this._lib5_get$1('blur');
 },
});

Isolate.$defineClass("DoubleLinkedQueue", "Object",
function DoubleLinkedQueue(_lib3_sentinel) {
  this._lib3_sentinel = _lib3_sentinel;
}, {
 toString$0: function() {
  return $.collectionToString(this);
 },
 iterator$0: function() {
  var t0 = $._lib3_DoubleLinkedQueueIterator$1(this.get$_lib3_sentinel());
  $.setRuntimeTypeInfo(t0, ({E: 'E'}));
  return t0;
 },
 filter$1: function(f) {
  var other = $.DoubleLinkedQueue$0();
  $.setRuntimeTypeInfo(other, ({E: 'E'}));
  for (var entry = this.get$_lib3_sentinel().get$_lib3_next(); !(entry === this.get$_lib3_sentinel()); ) {
    var nextEntry = entry.get$_lib3_next();
    if (f.$call$1(entry.get$_lib3_element()) === true) {
      other.addLast$1(entry.get$_lib3_element());
    }
    entry = nextEntry;
  }
  return other;
 },
 some$1: function(f) {
  for (var entry = this.get$_lib3_sentinel().get$_lib3_next(); !(entry === this.get$_lib3_sentinel()); ) {
    var nextEntry = entry.get$_lib3_next();
    if (f.$call$1(entry.get$_lib3_element()) === true) {
      return true;
    }
    entry = nextEntry;
  }
  return false;
 },
 every$1: function(f) {
  for (var entry = this.get$_lib3_sentinel().get$_lib3_next(); !(entry === this.get$_lib3_sentinel()); ) {
    var nextEntry = entry.get$_lib3_next();
    if (!(f.$call$1(entry.get$_lib3_element()) === true)) {
      return false;
    }
    entry = nextEntry;
  }
  return true;
 },
 forEach$1: function(f) {
  for (var entry = this.get$_lib3_sentinel().get$_lib3_next(); !(entry === this.get$_lib3_sentinel()); ) {
    var nextEntry = entry.get$_lib3_next();
    f.$call$1(entry.get$_lib3_element());
    entry = nextEntry;
  }
 },
 clear$0: function() {
  var t0 = this.get$_lib3_sentinel();
  this.get$_lib3_sentinel().set$_lib3_next(t0);
  var t1 = this.get$_lib3_sentinel();
  this.get$_lib3_sentinel().set$_lib3_previous(t1);
 },
 isEmpty$0: function() {
  return this.get$_lib3_sentinel().get$_lib3_next() === this.get$_lib3_sentinel();
 },
 get$length: function() {
  var t0 = ({});
  t0.counter_1 = 0;
  this.forEach$1(new $.Closure271(t0));
  return t0.counter_1;
 },
 lastEntry$0: function() {
  return this.get$_lib3_sentinel().previousEntry$0();
 },
 last$0: function() {
  return this.get$_lib3_sentinel().get$_lib3_previous().get$element();
 },
 first$0: function() {
  return this.get$_lib3_sentinel().get$_lib3_next().get$element();
 },
 get$first: function() { return new $.Closure341(this); },
 removeFirst$0: function() {
  return this.get$_lib3_sentinel().get$_lib3_next().remove$0();
 },
 removeLast$0: function() {
  return this.get$_lib3_sentinel().get$_lib3_previous().remove$0();
 },
 addAll$1: function(collection) {
  for (var t0 = $.iterator(collection); t0.hasNext$0() === true; ) {
    this.add$1(t0.next$0());
  }
 },
 add$1: function(value) {
  this.addLast$1(value);
 },
 addFirst$1: function(value) {
  this.get$_lib3_sentinel().append$1(value);
 },
 addLast$1: function(value) {
  this.get$_lib3_sentinel().prepend$1(value);
 },
 set$_lib3_sentinel: function(v) { this._lib3_sentinel = v; },
 get$_lib3_sentinel: function() { return this._lib3_sentinel; },
 DoubleLinkedQueue$0: function() {
  var t0 = $._lib3_DoubleLinkedQueueEntrySentinel$0();
  $.setRuntimeTypeInfo(t0, ({E: 'E'}));
  this.set$_lib3_sentinel(t0);
 },
 is$Collection: function() { return true; },
});

Isolate.$defineClass("Closure206", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$1: function(item) {
  var newGC = $._lib2_GridCell$0();
  newGC.set$content(item);
  $.add$1(this.this_0.get$_lib2_internalChildren(), newGC);
  newGC.addToLayoutTree$1(this.this_0);
 },
});

Isolate.$defineClass("Closure149", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$1: function(e) {
  if ($.eqB(this.this_0.get$text(), $.get$dynamic(this.this_0.get$_lib2_component()).get$value())) {
    return;
  }
  var oldValue = this.this_0.get$text();
  var t0 = $.get$dynamic(this.this_0.get$_lib2_component()).get$value();
  this.this_0.set$text(t0);
  if (!(this.this_0.get$textChanged().get$hasHandlers() === true)) {
    return;
  }
  this.this_0.get$textChanged().invoke$2(this.this_0, $.TextChangedEventArgs$with$2(oldValue, this.this_0.get$text()));
  if (e.get$cancelable() === true) {
    e.set$cancelBubble(true);
  }
 },
});

Isolate.$defineClass("DropDownList", "Control",
function DropDownList(selectionChanged, selectedIndexProperty, selectedItemProperty, itemsSourceProperty, itemsProperty, Control__lib2_templateBindingsApplied, Control__lib2_templateApplied, Control__lib2_visualTemplateApplied, Control_template, Control_isEnabledProperty, FrameworkElement_mouseUp, FrameworkElement_mouseDown, FrameworkElement_mouseMove, FrameworkElement_click, FrameworkElement_mouseLeave, FrameworkElement_mouseEnter, FrameworkElement_lostFocus, FrameworkElement_gotFocus, FrameworkElement_actionsProperty, FrameworkElement_perspectiveProperty, FrameworkElement_transformOriginZProperty, FrameworkElement_transformOriginYProperty, FrameworkElement_transformOriginXProperty, FrameworkElement_rotateZProperty, FrameworkElement_rotateYProperty, FrameworkElement_rotateXProperty, FrameworkElement_scaleZProperty, FrameworkElement_scaleYProperty, FrameworkElement_scaleXProperty, FrameworkElement_translateZProperty, FrameworkElement_translateYProperty, FrameworkElement_translateXProperty, FrameworkElement_styleProperty, FrameworkElement_visibilityProperty, FrameworkElement_opacityProperty, FrameworkElement_actualHeightProperty, FrameworkElement_actualWidthProperty, FrameworkElement_zOrderProperty, FrameworkElement_verticalAlignmentProperty, FrameworkElement_horizontalAlignmentProperty, FrameworkElement_tagProperty, FrameworkElement_cursorProperty, FrameworkElement_minHeightProperty, FrameworkElement_maxHeightProperty, FrameworkElement_minWidthProperty, FrameworkElement_maxWidthProperty, FrameworkElement_htmlIDProperty, FrameworkElement_heightProperty, FrameworkElement_widthProperty, FrameworkElement_marginProperty, FrameworkElement__lib2_transitionProperties, FrameworkElement__lib2_templateBindings, FrameworkElement__lib2_style, FrameworkElement__lib2_containerParent, FrameworkObject_mostRecentMeasurement, FrameworkObject__lib2_dataContextUpdated, FrameworkObject_nameProperty, FrameworkObject_attachedPropertyChanged, FrameworkObject_measurementChanged, FrameworkObject_unloaded, FrameworkObject_loaded, FrameworkObject_lateBindings, FrameworkObject_dataContextProperty, FrameworkObject__lib2_isLoaded, FrameworkObject__lib2_parent, FrameworkObject__lib2_component, FrameworkObject__lib2_previousMeasurement, FrameworkObject__lib2_animationFrameID, FrameworkObject__lib2_watchingMeasurement, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this.selectionChanged = selectionChanged;
  this.selectedIndexProperty = selectedIndexProperty;
  this.selectedItemProperty = selectedItemProperty;
  this.itemsSourceProperty = itemsSourceProperty;
  this.itemsProperty = itemsProperty;
  this._lib2_templateBindingsApplied = Control__lib2_templateBindingsApplied;
  this._lib2_templateApplied = Control__lib2_templateApplied;
  this._lib2_visualTemplateApplied = Control__lib2_visualTemplateApplied;
  this.template = Control_template;
  this.isEnabledProperty = Control_isEnabledProperty;
  this.mouseUp = FrameworkElement_mouseUp;
  this.mouseDown = FrameworkElement_mouseDown;
  this.mouseMove = FrameworkElement_mouseMove;
  this.click = FrameworkElement_click;
  this.mouseLeave = FrameworkElement_mouseLeave;
  this.mouseEnter = FrameworkElement_mouseEnter;
  this.lostFocus = FrameworkElement_lostFocus;
  this.gotFocus = FrameworkElement_gotFocus;
  this.actionsProperty = FrameworkElement_actionsProperty;
  this.perspectiveProperty = FrameworkElement_perspectiveProperty;
  this.transformOriginZProperty = FrameworkElement_transformOriginZProperty;
  this.transformOriginYProperty = FrameworkElement_transformOriginYProperty;
  this.transformOriginXProperty = FrameworkElement_transformOriginXProperty;
  this.rotateZProperty = FrameworkElement_rotateZProperty;
  this.rotateYProperty = FrameworkElement_rotateYProperty;
  this.rotateXProperty = FrameworkElement_rotateXProperty;
  this.scaleZProperty = FrameworkElement_scaleZProperty;
  this.scaleYProperty = FrameworkElement_scaleYProperty;
  this.scaleXProperty = FrameworkElement_scaleXProperty;
  this.translateZProperty = FrameworkElement_translateZProperty;
  this.translateYProperty = FrameworkElement_translateYProperty;
  this.translateXProperty = FrameworkElement_translateXProperty;
  this.styleProperty = FrameworkElement_styleProperty;
  this.visibilityProperty = FrameworkElement_visibilityProperty;
  this.opacityProperty = FrameworkElement_opacityProperty;
  this.actualHeightProperty = FrameworkElement_actualHeightProperty;
  this.actualWidthProperty = FrameworkElement_actualWidthProperty;
  this.zOrderProperty = FrameworkElement_zOrderProperty;
  this.verticalAlignmentProperty = FrameworkElement_verticalAlignmentProperty;
  this.horizontalAlignmentProperty = FrameworkElement_horizontalAlignmentProperty;
  this.tagProperty = FrameworkElement_tagProperty;
  this.cursorProperty = FrameworkElement_cursorProperty;
  this.minHeightProperty = FrameworkElement_minHeightProperty;
  this.maxHeightProperty = FrameworkElement_maxHeightProperty;
  this.minWidthProperty = FrameworkElement_minWidthProperty;
  this.maxWidthProperty = FrameworkElement_maxWidthProperty;
  this.htmlIDProperty = FrameworkElement_htmlIDProperty;
  this.heightProperty = FrameworkElement_heightProperty;
  this.widthProperty = FrameworkElement_widthProperty;
  this.marginProperty = FrameworkElement_marginProperty;
  this._lib2_transitionProperties = FrameworkElement__lib2_transitionProperties;
  this._lib2_templateBindings = FrameworkElement__lib2_templateBindings;
  this._lib2_style = FrameworkElement__lib2_style;
  this._lib2_containerParent = FrameworkElement__lib2_containerParent;
  this.mostRecentMeasurement = FrameworkObject_mostRecentMeasurement;
  this._lib2_dataContextUpdated = FrameworkObject__lib2_dataContextUpdated;
  this.nameProperty = FrameworkObject_nameProperty;
  this.attachedPropertyChanged = FrameworkObject_attachedPropertyChanged;
  this.measurementChanged = FrameworkObject_measurementChanged;
  this.unloaded = FrameworkObject_unloaded;
  this.loaded = FrameworkObject_loaded;
  this.lateBindings = FrameworkObject_lateBindings;
  this.dataContextProperty = FrameworkObject_dataContextProperty;
  this._lib2_isLoaded = FrameworkObject__lib2_isLoaded;
  this._lib2_parent = FrameworkObject__lib2_parent;
  this._lib2_component = FrameworkObject__lib2_component;
  this._lib2_previousMeasurement = FrameworkObject__lib2_previousMeasurement;
  this._lib2_animationFrameID = FrameworkObject__lib2_animationFrameID;
  this._lib2_watchingMeasurement = FrameworkObject__lib2_watchingMeasurement;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$type: function() {
  return 'DropDownList';
 },
 CreateElement$0: function() {
  this.set$_lib2_component($.createByTag('select'));
 },
 makeMe$0: function() {
  return $.DropDownList$0();
 },
 get$items: function() {
  return $.getValue(this.get$itemsProperty());
 },
 get$itemsSource: function() {
  return $.getValue(this.get$itemsSourceProperty());
 },
 _lib2_updateDDL$0: function() {
  $.clear(this.get$_lib2_component().get$elements());
  if (!$.eqNullB(this.get$itemsSource())) {
    $.forEach(this.get$itemsSource(), new $.Closure136(this));
  } else {
    $.forEach(this.get$items(), new $.Closure137(this));
  }
 },
 _lib2_initDropDownListProperties$0: function() {
  var t0 = new $.Closure127();
  var t1 = $.ObservableList$0();
  $.setRuntimeTypeInfo(t1, ({T: 'DropDownListItem'}));
  this.set$itemsProperty($.FrameworkProperty$5(this, 'items', t0, t1, (void 0)));
  this.set$itemsSourceProperty($.FrameworkProperty$5(this, 'itemsSource', new $.Closure128(this), (void 0), (void 0)));
  this.set$selectedItemProperty($.FrameworkProperty$5(this, 'selectedItem', new $.Closure129(), $.DropDownListItem$0(), (void 0)));
  $.add(this.get$items().get$listChanged(), new $.Closure130(this));
  var t2 = new $.Closure131(this);
  $.add(this.get$loaded(), new $.Closure132(this, t2));
  $.add$1(this.get$_lib2_component().get$on().get$change(), new $.Closure133(t2));
 },
 get$selectionChanged: function() { return this.selectionChanged; },
 set$selectedItemProperty: function(v) { this.selectedItemProperty = v; },
 get$selectedItemProperty: function() { return this.selectedItemProperty; },
 set$itemsSourceProperty: function(v) { this.itemsSourceProperty = v; },
 get$itemsSourceProperty: function() { return this.itemsSourceProperty; },
 set$itemsProperty: function(v) { this.itemsProperty = v; },
 get$itemsProperty: function() { return this.itemsProperty; },
 DropDownList$0: function() {
  $.appendBuckshotClass(this.get$_lib2_component(), 'dropdownlist');
  this._lib2_initDropDownListProperties$0();
 },
});

Isolate.$defineClass("Closure150", "Closure330",
function Closure(this_1) {
  this.this_1 = this_1;
}, {
 $call$1: function(e) {
  if ($.eqB(this.this_1.get$text(), $.get$dynamic(this.this_1.get$_lib2_component()).get$value())) {
    return;
  }
  var oldValue = this.this_1.get$text();
  var t0 = $.get$dynamic(this.this_1.get$_lib2_component()).get$value();
  this.this_1.set$text(t0);
  if (!(this.this_1.get$textChanged().get$hasHandlers() === true)) {
    return;
  }
  this.this_1.get$textChanged().invoke$2(this.this_1, $.TextChangedEventArgs$with$2(oldValue, this.this_1.get$text()));
  if (e.get$cancelable() === true) {
    e.set$cancelBubble(true);
  }
 },
});

Isolate.$defineClass("_DoubleLinkedQueueEntrySentinel", "DoubleLinkedQueueEntry",
function _DoubleLinkedQueueEntrySentinel(DoubleLinkedQueueEntry__lib3_element, DoubleLinkedQueueEntry__lib3_next, DoubleLinkedQueueEntry__lib3_previous) {
  this._lib3_element = DoubleLinkedQueueEntry__lib3_element;
  this._lib3_next = DoubleLinkedQueueEntry__lib3_next;
  this._lib3_previous = DoubleLinkedQueueEntry__lib3_previous;
}, {
 get$element: function() {
  throw $.captureStackTrace($.CTC228);
 },
 _lib3_asNonSentinelEntry$0: function() {
  return;
 },
 remove$0: function() {
  throw $.captureStackTrace($.CTC228);
 },
 _lib3_DoubleLinkedQueueEntrySentinel$0: function() {
  this._lib3_link$2(this, this);
 },
});

Isolate.$defineClass("Closure159", "Closure330",
function Closure() {
}, {
 $call$2: function(e, value) {
 },
});

Isolate.$defineClass("Closure193", "Closure330",
function Closure(this_1) {
  this.this_1 = this_1;
}, {
 $call$2: function(_, args) {
  return this.this_1.onChildrenChanging$1(args);
 },
});

Isolate.$defineClass("StackPanel", "Panel",
function StackPanel(orientationProperty, Panel_backgroundProperty, Panel_children, FrameworkElement_mouseUp, FrameworkElement_mouseDown, FrameworkElement_mouseMove, FrameworkElement_click, FrameworkElement_mouseLeave, FrameworkElement_mouseEnter, FrameworkElement_lostFocus, FrameworkElement_gotFocus, FrameworkElement_actionsProperty, FrameworkElement_perspectiveProperty, FrameworkElement_transformOriginZProperty, FrameworkElement_transformOriginYProperty, FrameworkElement_transformOriginXProperty, FrameworkElement_rotateZProperty, FrameworkElement_rotateYProperty, FrameworkElement_rotateXProperty, FrameworkElement_scaleZProperty, FrameworkElement_scaleYProperty, FrameworkElement_scaleXProperty, FrameworkElement_translateZProperty, FrameworkElement_translateYProperty, FrameworkElement_translateXProperty, FrameworkElement_styleProperty, FrameworkElement_visibilityProperty, FrameworkElement_opacityProperty, FrameworkElement_actualHeightProperty, FrameworkElement_actualWidthProperty, FrameworkElement_zOrderProperty, FrameworkElement_verticalAlignmentProperty, FrameworkElement_horizontalAlignmentProperty, FrameworkElement_tagProperty, FrameworkElement_cursorProperty, FrameworkElement_minHeightProperty, FrameworkElement_maxHeightProperty, FrameworkElement_minWidthProperty, FrameworkElement_maxWidthProperty, FrameworkElement_htmlIDProperty, FrameworkElement_heightProperty, FrameworkElement_widthProperty, FrameworkElement_marginProperty, FrameworkElement__lib2_transitionProperties, FrameworkElement__lib2_templateBindings, FrameworkElement__lib2_style, FrameworkElement__lib2_containerParent, FrameworkObject_mostRecentMeasurement, FrameworkObject__lib2_dataContextUpdated, FrameworkObject_nameProperty, FrameworkObject_attachedPropertyChanged, FrameworkObject_measurementChanged, FrameworkObject_unloaded, FrameworkObject_loaded, FrameworkObject_lateBindings, FrameworkObject_dataContextProperty, FrameworkObject__lib2_isLoaded, FrameworkObject__lib2_parent, FrameworkObject__lib2_component, FrameworkObject__lib2_previousMeasurement, FrameworkObject__lib2_animationFrameID, FrameworkObject__lib2_watchingMeasurement, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this.orientationProperty = orientationProperty;
  this.backgroundProperty = Panel_backgroundProperty;
  this.children = Panel_children;
  this.mouseUp = FrameworkElement_mouseUp;
  this.mouseDown = FrameworkElement_mouseDown;
  this.mouseMove = FrameworkElement_mouseMove;
  this.click = FrameworkElement_click;
  this.mouseLeave = FrameworkElement_mouseLeave;
  this.mouseEnter = FrameworkElement_mouseEnter;
  this.lostFocus = FrameworkElement_lostFocus;
  this.gotFocus = FrameworkElement_gotFocus;
  this.actionsProperty = FrameworkElement_actionsProperty;
  this.perspectiveProperty = FrameworkElement_perspectiveProperty;
  this.transformOriginZProperty = FrameworkElement_transformOriginZProperty;
  this.transformOriginYProperty = FrameworkElement_transformOriginYProperty;
  this.transformOriginXProperty = FrameworkElement_transformOriginXProperty;
  this.rotateZProperty = FrameworkElement_rotateZProperty;
  this.rotateYProperty = FrameworkElement_rotateYProperty;
  this.rotateXProperty = FrameworkElement_rotateXProperty;
  this.scaleZProperty = FrameworkElement_scaleZProperty;
  this.scaleYProperty = FrameworkElement_scaleYProperty;
  this.scaleXProperty = FrameworkElement_scaleXProperty;
  this.translateZProperty = FrameworkElement_translateZProperty;
  this.translateYProperty = FrameworkElement_translateYProperty;
  this.translateXProperty = FrameworkElement_translateXProperty;
  this.styleProperty = FrameworkElement_styleProperty;
  this.visibilityProperty = FrameworkElement_visibilityProperty;
  this.opacityProperty = FrameworkElement_opacityProperty;
  this.actualHeightProperty = FrameworkElement_actualHeightProperty;
  this.actualWidthProperty = FrameworkElement_actualWidthProperty;
  this.zOrderProperty = FrameworkElement_zOrderProperty;
  this.verticalAlignmentProperty = FrameworkElement_verticalAlignmentProperty;
  this.horizontalAlignmentProperty = FrameworkElement_horizontalAlignmentProperty;
  this.tagProperty = FrameworkElement_tagProperty;
  this.cursorProperty = FrameworkElement_cursorProperty;
  this.minHeightProperty = FrameworkElement_minHeightProperty;
  this.maxHeightProperty = FrameworkElement_maxHeightProperty;
  this.minWidthProperty = FrameworkElement_minWidthProperty;
  this.maxWidthProperty = FrameworkElement_maxWidthProperty;
  this.htmlIDProperty = FrameworkElement_htmlIDProperty;
  this.heightProperty = FrameworkElement_heightProperty;
  this.widthProperty = FrameworkElement_widthProperty;
  this.marginProperty = FrameworkElement_marginProperty;
  this._lib2_transitionProperties = FrameworkElement__lib2_transitionProperties;
  this._lib2_templateBindings = FrameworkElement__lib2_templateBindings;
  this._lib2_style = FrameworkElement__lib2_style;
  this._lib2_containerParent = FrameworkElement__lib2_containerParent;
  this.mostRecentMeasurement = FrameworkObject_mostRecentMeasurement;
  this._lib2_dataContextUpdated = FrameworkObject__lib2_dataContextUpdated;
  this.nameProperty = FrameworkObject_nameProperty;
  this.attachedPropertyChanged = FrameworkObject_attachedPropertyChanged;
  this.measurementChanged = FrameworkObject_measurementChanged;
  this.unloaded = FrameworkObject_unloaded;
  this.loaded = FrameworkObject_loaded;
  this.lateBindings = FrameworkObject_lateBindings;
  this.dataContextProperty = FrameworkObject_dataContextProperty;
  this._lib2_isLoaded = FrameworkObject__lib2_isLoaded;
  this._lib2_parent = FrameworkObject__lib2_parent;
  this._lib2_component = FrameworkObject__lib2_component;
  this._lib2_previousMeasurement = FrameworkObject__lib2_previousMeasurement;
  this._lib2_animationFrameID = FrameworkObject__lib2_animationFrameID;
  this._lib2_watchingMeasurement = FrameworkObject__lib2_watchingMeasurement;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$type: function() {
  return 'StackPanel';
 },
 updateLayout$0: function() {
  if ($.eqB(this.get$orientation(), $.CTC209)) {
    $.forEach(this.get$children(), new $.Closure315());
  } else {
    $.forEach(this.get$children(), new $.Closure316());
  }
 },
 CreateElement$0: function() {
  this.set$_lib2_component($.createByTag('div'));
  $.makeFlexBox(this);
  this.get$_lib2_component().get$style().set$flexFlow('column');
  this.get$_lib2_component().get$style().set$overflow('hidden');
 },
 get$orientation: function() {
  return $.getValue(this.get$orientationProperty());
 },
 onChildrenChanging$1: function(args) {
  $.Panel.prototype.onChildrenChanging$1.call(this, args);
  if (!($.isEmpty(args.get$oldItems()) === true)) {
    $.forEach(args.get$oldItems(), new $.Closure194());
  }
  if (!($.isEmpty(args.get$newItems()) === true)) {
    $.forEach(args.get$newItems(), new $.Closure195(this));
  }
 },
 makeMe$0: function() {
  return $.StackPanel$0();
 },
 set$orientationProperty: function(v) { this.orientationProperty = v; },
 get$orientationProperty: function() { return this.orientationProperty; },
 StackPanel$0: function() {
  $.appendBuckshotClass(this.get$_lib2_component(), 'stackpanel');
  this.set$orientationProperty($.FrameworkProperty$5(this, 'orientation', new $.Closure191(this), $.CTC209, $.StringToOrientationConverter$0()));
 },
});

Isolate.$defineClass("Closure251", "Closure330",
function Closure(this_1) {
  this.this_1 = this_1;
}, {
 $call$2: function(_, __) {
  return this.this_1._lib2_updateCollection$0();
 },
});

Isolate.$defineClass("_ElementAttributeMap", "Object",
function _ElementAttributeMap(_lib5_element) {
  this._lib5_element = _lib5_element;
}, {
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
 },
 get$length: function() {
  return $.get$length(this.get$_lib5_element().get$$dom_attributes());
 },
 getKeys$0: function() {
  var attributes = this.get$_lib5_element().get$$dom_attributes();
  if (typeof attributes !== 'string' && (typeof attributes !== 'object'||attributes.constructor !== Array)) return this.getKeys$0$bailout(1, attributes);
  var keys = $.List(attributes.length);
  $.setRuntimeTypeInfo(keys, ({E: 'String'}));
  for (var len = attributes.length, i = 0; i < len; i = i + 1) {
    var t0 = attributes.length;
    if (i < 0 || i >= t0) throw $.ioore(i);
    var t1 = attributes[i].get$name();
    var t2 = keys.length;
    if (i < 0 || i >= t2) throw $.ioore(i);
    keys[i] = t1;
  }
  return keys;
 },
 getKeys$0$bailout: function(state, env0) {
  switch (state) {
    case 1:
      attributes = env0;
      break;
  }
  switch (state) {
    case 0:
      var attributes = this.get$_lib5_element().get$$dom_attributes();
    case 1:
      state = 0;
      var keys = $.List($.get$length(attributes));
      $.setRuntimeTypeInfo(keys, ({E: 'String'}));
      var len = $.get$length(attributes);
      var i = 0;
      L0: while (true) {
        if (!$.ltB(i, len)) break L0;
        var t0 = $.index(attributes, i).get$name();
        var t1 = keys.length;
        if (i < 0 || i >= t1) throw $.ioore(i);
        keys[i] = t0;
        i = i + 1;
      }
      return keys;
  }
 },
 forEach$1: function(f) {
  var attributes = this.get$_lib5_element().get$$dom_attributes();
  if (typeof attributes !== 'string' && (typeof attributes !== 'object'||attributes.constructor !== Array)) return this.forEach$1$bailout(f, 1, attributes);
  for (var len = attributes.length, i = 0; i < len; i = i + 1) {
    var t0 = attributes.length;
    if (i < 0 || i >= t0) throw $.ioore(i);
    var t1 = attributes[i];
    f.$call$2(t1.get$name(), t1.get$value());
  }
 },
 forEach$1$bailout: function(f, state, env0) {
  switch (state) {
    case 1:
      attributes = env0;
      break;
  }
  switch (state) {
    case 0:
      var attributes = this.get$_lib5_element().get$$dom_attributes();
    case 1:
      state = 0;
      var len = $.get$length(attributes);
      var i = 0;
      L0: while (true) {
        if (!$.ltB(i, len)) break L0;
        var item = $.index(attributes, i);
        f.$call$2(item.get$name(), item.get$value());
        i = i + 1;
      }
  }
 },
 clear$0: function() {
  var attributes = this.get$_lib5_element().get$$dom_attributes();
  if (typeof attributes !== 'string' && (typeof attributes !== 'object'||attributes.constructor !== Array)) return this.clear$0$bailout(1, attributes);
  for (var i = attributes.length - 1; i >= 0; i = i - 1) {
    var t0 = attributes.length;
    if (i < 0 || i >= t0) throw $.ioore(i);
    this.remove$1(attributes[i].get$name());
  }
 },
 clear$0$bailout: function(state, env0) {
  switch (state) {
    case 1:
      attributes = env0;
      break;
  }
  switch (state) {
    case 0:
      var attributes = this.get$_lib5_element().get$$dom_attributes();
    case 1:
      state = 0;
      var i = $.sub($.get$length(attributes), 1);
      L0: while (true) {
        if (!$.geB(i, 0)) break L0;
        this.remove$1($.index(attributes, i).get$name());
        i = $.sub(i, 1);
      }
  }
 },
 remove$1: function(key) {
  var value = this.get$_lib5_element().$dom_getAttribute$1(key);
  this.get$_lib5_element().$dom_removeAttribute$1(key);
  return value;
 },
 operator$indexSet$2: function(key, value) {
  this.get$_lib5_element().$dom_setAttribute$2(key, '' + $.stringToString(value));
 },
 operator$index$1: function(key) {
  return this.get$_lib5_element().$dom_getAttribute$1(key);
 },
 containsKey$1: function(key) {
  return this.get$_lib5_element().$dom_hasAttribute$1(key);
 },
 get$_lib5_element: function() { return this._lib5_element; },
 is$Map: function() { return true; },
});

Isolate.$defineClass("Closure110", "Closure330",
function Closure(this_3, box_0) {
  this.this_3 = this_3;
  this.box_0 = box_0;
}, {
 $call$2: function(_, __) {
  return this.this_3.onItemMouseEnter$1(this.box_0.item_1);
 },
});

Isolate.$defineClass("Closure97", "Closure330",
function Closure(this_40) {
  this.this_40 = this_40;
}, {
 $call$1: function(_) {
  if (!$.eqNullB(this.this_40.get$parent())) {
    this.this_40.get$parent().updateLayout$0();
  }
 },
});

Isolate.$defineClass("Closure139", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$1: function(value) {
  if ($.eqNullB(value)) {
    this.this_0.get$_lib2_component().get$style().set$background('None');
    return;
  }
  value.renderBrush$1(this.this_0.get$_lib2_component());
 },
});

Isolate.$defineClass("StringToVisibilityConverter", "Object",
function StringToVisibilityConverter() {
}, {
 convert$2: function(value, parameter) {
  if (!(typeof value === 'string')) {
    return value;
  }
  $0:{
    if ('visible' === value) {
      return $.CTC191;
    } else {
      if ('collapsed' === value) {
        return $.CTC192;
      } else {
        return value;
      }
    }
  }
 },
 convert$1: function(value) {
  return this.convert$2(value,(void 0))
},
 is$IValueConverter: true,
});

Isolate.$defineClass("Closure262", "Closure330",
function Closure(box_0) {
  this.box_0 = box_0;
}, {
 $call$2: function(k, v) {
  return $.add$1(this.box_0.b_1, $.XmlNamespace$2(k, v).toString$0());
 },
});

Isolate.$defineClass("Closure194", "Closure330",
function Closure() {
}, {
 $call$1: function(element) {
  element.removeFromLayoutTree$0();
  element.set$_lib2_containerParent((void 0));
 },
});

Isolate.$defineClass("Closure40", "Closure330",
function Closure(this_26, gotFocusHandler_25) {
  this.this_26 = this_26;
  this.gotFocusHandler_25 = gotFocusHandler_25;
}, {
 $call$0: function() {
  return $.add$1(this.this_26.get$_lib2_component().get$on().get$focus(), this.gotFocusHandler_25);
 },
});

Isolate.$defineClass("Closure32", "Closure330",
function Closure(this_13, mouseDownHandler_12) {
  this.this_13 = this_13;
  this.mouseDownHandler_12 = mouseDownHandler_12;
}, {
 $call$0: function() {
  return this.this_13.get$_lib2_component().get$on().get$mouseDown().remove$1(this.mouseDownHandler_12);
 },
});

Isolate.$defineClass("Closure216", "Closure330",
function Closure(this_12, box_0) {
  this.this_12 = this_12;
  this.box_0 = box_0;
}, {
 $call$1: function(child) {
  return $.eqB($.getRow(child.get$content()), $.indexOf$2(this.this_12.get$rowDefinitions(), this.box_0.c_1, 0)) && $.ltB($.getRowSpan(child.get$content()), 2);
 },
});

Isolate.$defineClass("_ListWrapper", "Object",
function _ListWrapper() {
}, {
 get$first: function() {
  return $.index(this.get$_lib5_list(), 0);
 },
 first$0: function() { return this.get$first().$call$0(); },
 removeRange$2: function(start, rangeLength) {
  return $.removeRange(this.get$_lib5_list(), start, rangeLength);
 },
 getRange$2: function(start, rangeLength) {
  return $.getRange(this.get$_lib5_list(), start, rangeLength);
 },
 last$0: function() {
  return $.last(this.get$_lib5_list());
 },
 removeLast$0: function() {
  return $.removeLast(this.get$_lib5_list());
 },
 clear$0: function() {
  return $.clear(this.get$_lib5_list());
 },
 indexOf$2: function(element, start) {
  return $.indexOf$2(this.get$_lib5_list(), element, start);
 },
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 sort$1: function(compare) {
  return $.sort(this.get$_lib5_list(), compare);
 },
 addAll$1: function(collection) {
  return $.addAll(this.get$_lib5_list(), collection);
 },
 addLast$1: function(value) {
  return $.addLast(this.get$_lib5_list(), value);
 },
 add$1: function(value) {
  return $.add$1(this.get$_lib5_list(), value);
 },
 set$length: function(newLength) {
  $.set$length(this.get$_lib5_list(), newLength);
 },
 operator$indexSet$2: function(index, value) {
  $.indexSet(this.get$_lib5_list(), index, value);
 },
 operator$index$1: function(index) {
  return $.index(this.get$_lib5_list(), index);
 },
 get$length: function() {
  return $.get$length(this.get$_lib5_list());
 },
 isEmpty$0: function() {
  return $.isEmpty(this.get$_lib5_list());
 },
 some$1: function(f) {
  return $.some(this.get$_lib5_list(), f);
 },
 every$1: function(f) {
  return $.every(this.get$_lib5_list(), f);
 },
 filter$1: function(f) {
  return $.filter(this.get$_lib5_list(), f);
 },
 forEach$1: function(f) {
  return $.forEach(this.get$_lib5_list(), f);
 },
 iterator$0: function() {
  return $.iterator(this.get$_lib5_list());
 },
 get$_lib5_list: function() { return this._lib5_list; },
 is$List2: function() { return true; },
 is$Collection: function() { return true; },
});

Isolate.$defineClass("Thickness", "Object",
function Thickness(bottom, right, top, left) {
  this.bottom = bottom;
  this.right = right;
  this.top = top;
  this.left = left;
}, {
 toString$0: function() {
  return '' + $.stringToString(this.get$top()) + ' ' + $.stringToString(this.get$right()) + ' ' + $.stringToString(this.get$bottom()) + ' ' + $.stringToString(this.get$left());
 },
 get$bottom: function() { return this.bottom; },
 get$right: function() { return this.right; },
 get$top: function() { return this.top; },
 get$left: function() { return this.left; },
 Thickness$widthheight$2: function(width, height) {
 },
 Thickness$specified$4: function(top$, right, bottom, left) {
 },
 Thickness$1: function(uniformThickness) {
 },
});

Isolate.$defineClass("RadioButton", "Control",
function RadioButton(selectionChanged, groupNameProperty, valueProperty, Control__lib2_templateBindingsApplied, Control__lib2_templateApplied, Control__lib2_visualTemplateApplied, Control_template, Control_isEnabledProperty, FrameworkElement_mouseUp, FrameworkElement_mouseDown, FrameworkElement_mouseMove, FrameworkElement_click, FrameworkElement_mouseLeave, FrameworkElement_mouseEnter, FrameworkElement_lostFocus, FrameworkElement_gotFocus, FrameworkElement_actionsProperty, FrameworkElement_perspectiveProperty, FrameworkElement_transformOriginZProperty, FrameworkElement_transformOriginYProperty, FrameworkElement_transformOriginXProperty, FrameworkElement_rotateZProperty, FrameworkElement_rotateYProperty, FrameworkElement_rotateXProperty, FrameworkElement_scaleZProperty, FrameworkElement_scaleYProperty, FrameworkElement_scaleXProperty, FrameworkElement_translateZProperty, FrameworkElement_translateYProperty, FrameworkElement_translateXProperty, FrameworkElement_styleProperty, FrameworkElement_visibilityProperty, FrameworkElement_opacityProperty, FrameworkElement_actualHeightProperty, FrameworkElement_actualWidthProperty, FrameworkElement_zOrderProperty, FrameworkElement_verticalAlignmentProperty, FrameworkElement_horizontalAlignmentProperty, FrameworkElement_tagProperty, FrameworkElement_cursorProperty, FrameworkElement_minHeightProperty, FrameworkElement_maxHeightProperty, FrameworkElement_minWidthProperty, FrameworkElement_maxWidthProperty, FrameworkElement_htmlIDProperty, FrameworkElement_heightProperty, FrameworkElement_widthProperty, FrameworkElement_marginProperty, FrameworkElement__lib2_transitionProperties, FrameworkElement__lib2_templateBindings, FrameworkElement__lib2_style, FrameworkElement__lib2_containerParent, FrameworkObject_mostRecentMeasurement, FrameworkObject__lib2_dataContextUpdated, FrameworkObject_nameProperty, FrameworkObject_attachedPropertyChanged, FrameworkObject_measurementChanged, FrameworkObject_unloaded, FrameworkObject_loaded, FrameworkObject_lateBindings, FrameworkObject_dataContextProperty, FrameworkObject__lib2_isLoaded, FrameworkObject__lib2_parent, FrameworkObject__lib2_component, FrameworkObject__lib2_previousMeasurement, FrameworkObject__lib2_animationFrameID, FrameworkObject__lib2_watchingMeasurement, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this.selectionChanged = selectionChanged;
  this.groupNameProperty = groupNameProperty;
  this.valueProperty = valueProperty;
  this._lib2_templateBindingsApplied = Control__lib2_templateBindingsApplied;
  this._lib2_templateApplied = Control__lib2_templateApplied;
  this._lib2_visualTemplateApplied = Control__lib2_visualTemplateApplied;
  this.template = Control_template;
  this.isEnabledProperty = Control_isEnabledProperty;
  this.mouseUp = FrameworkElement_mouseUp;
  this.mouseDown = FrameworkElement_mouseDown;
  this.mouseMove = FrameworkElement_mouseMove;
  this.click = FrameworkElement_click;
  this.mouseLeave = FrameworkElement_mouseLeave;
  this.mouseEnter = FrameworkElement_mouseEnter;
  this.lostFocus = FrameworkElement_lostFocus;
  this.gotFocus = FrameworkElement_gotFocus;
  this.actionsProperty = FrameworkElement_actionsProperty;
  this.perspectiveProperty = FrameworkElement_perspectiveProperty;
  this.transformOriginZProperty = FrameworkElement_transformOriginZProperty;
  this.transformOriginYProperty = FrameworkElement_transformOriginYProperty;
  this.transformOriginXProperty = FrameworkElement_transformOriginXProperty;
  this.rotateZProperty = FrameworkElement_rotateZProperty;
  this.rotateYProperty = FrameworkElement_rotateYProperty;
  this.rotateXProperty = FrameworkElement_rotateXProperty;
  this.scaleZProperty = FrameworkElement_scaleZProperty;
  this.scaleYProperty = FrameworkElement_scaleYProperty;
  this.scaleXProperty = FrameworkElement_scaleXProperty;
  this.translateZProperty = FrameworkElement_translateZProperty;
  this.translateYProperty = FrameworkElement_translateYProperty;
  this.translateXProperty = FrameworkElement_translateXProperty;
  this.styleProperty = FrameworkElement_styleProperty;
  this.visibilityProperty = FrameworkElement_visibilityProperty;
  this.opacityProperty = FrameworkElement_opacityProperty;
  this.actualHeightProperty = FrameworkElement_actualHeightProperty;
  this.actualWidthProperty = FrameworkElement_actualWidthProperty;
  this.zOrderProperty = FrameworkElement_zOrderProperty;
  this.verticalAlignmentProperty = FrameworkElement_verticalAlignmentProperty;
  this.horizontalAlignmentProperty = FrameworkElement_horizontalAlignmentProperty;
  this.tagProperty = FrameworkElement_tagProperty;
  this.cursorProperty = FrameworkElement_cursorProperty;
  this.minHeightProperty = FrameworkElement_minHeightProperty;
  this.maxHeightProperty = FrameworkElement_maxHeightProperty;
  this.minWidthProperty = FrameworkElement_minWidthProperty;
  this.maxWidthProperty = FrameworkElement_maxWidthProperty;
  this.htmlIDProperty = FrameworkElement_htmlIDProperty;
  this.heightProperty = FrameworkElement_heightProperty;
  this.widthProperty = FrameworkElement_widthProperty;
  this.marginProperty = FrameworkElement_marginProperty;
  this._lib2_transitionProperties = FrameworkElement__lib2_transitionProperties;
  this._lib2_templateBindings = FrameworkElement__lib2_templateBindings;
  this._lib2_style = FrameworkElement__lib2_style;
  this._lib2_containerParent = FrameworkElement__lib2_containerParent;
  this.mostRecentMeasurement = FrameworkObject_mostRecentMeasurement;
  this._lib2_dataContextUpdated = FrameworkObject__lib2_dataContextUpdated;
  this.nameProperty = FrameworkObject_nameProperty;
  this.attachedPropertyChanged = FrameworkObject_attachedPropertyChanged;
  this.measurementChanged = FrameworkObject_measurementChanged;
  this.unloaded = FrameworkObject_unloaded;
  this.loaded = FrameworkObject_loaded;
  this.lateBindings = FrameworkObject_lateBindings;
  this.dataContextProperty = FrameworkObject_dataContextProperty;
  this._lib2_isLoaded = FrameworkObject__lib2_isLoaded;
  this._lib2_parent = FrameworkObject__lib2_parent;
  this._lib2_component = FrameworkObject__lib2_component;
  this._lib2_previousMeasurement = FrameworkObject__lib2_previousMeasurement;
  this._lib2_animationFrameID = FrameworkObject__lib2_animationFrameID;
  this._lib2_watchingMeasurement = FrameworkObject__lib2_watchingMeasurement;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$type: function() {
  return 'RadioButton';
 },
 CreateElement$0: function() {
  this.set$_lib2_component($.createByTag('input'));
  $.indexSet(this.get$_lib2_component().get$attributes(), 'type', 'radio');
 },
 set$value: function(v) {
  return $.setValue(this.get$valueProperty(), v);
 },
 get$value: function() {
  return $.getValue(this.get$valueProperty());
 },
 _lib2_initEvents$0: function() {
  $.add(this.get$click(), new $.Closure232(this));
 },
 _lib2_initProperties$0: function() {
  this.set$valueProperty($.FrameworkProperty$5(this, 'value', new $.Closure233(this), (void 0), (void 0)));
  this.set$groupNameProperty($.FrameworkProperty$5(this, 'groupName', new $.Closure234(this), 'default', (void 0)));
 },
 makeMe$0: function() {
  return $.RadioButton$0();
 },
 get$selectionChanged: function() { return this.selectionChanged; },
 set$groupNameProperty: function(v) { this.groupNameProperty = v; },
 set$valueProperty: function(v) { this.valueProperty = v; },
 get$valueProperty: function() { return this.valueProperty; },
 RadioButton$0: function() {
  $.appendBuckshotClass(this.get$_lib2_component(), 'radiobutton');
  this._lib2_initProperties$0();
  this._lib2_initEvents$0();
 },
});

Isolate.$defineClass("FrameworkProperty", "FrameworkPropertyBase",
function FrameworkProperty(readOnly, _lib2_previousValue, _lib2_value, FrameworkPropertyBase_stringToValueConverter, FrameworkPropertyBase_propertyChanging, FrameworkPropertyBase_propertyName, FrameworkPropertyBase_propertyChangedCallback, FrameworkPropertyBase_sourceObject, HashableObject__lib2_assignedHash) {
  this.readOnly = readOnly;
  this._lib2_previousValue = _lib2_previousValue;
  this._lib2_value = _lib2_value;
  this.stringToValueConverter = FrameworkPropertyBase_stringToValueConverter;
  this.propertyChanging = FrameworkPropertyBase_propertyChanging;
  this.propertyName = FrameworkPropertyBase_propertyName;
  this.propertyChangedCallback = FrameworkPropertyBase_propertyChangedCallback;
  this.sourceObject = FrameworkPropertyBase_sourceObject;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$type: function() {
  return 'FrameworkProperty';
 },
 set$readOnly: function(v) { this.readOnly = v; },
 get$readOnly: function() { return this.readOnly; },
 set$_lib2_previousValue: function(v) { this._lib2_previousValue = v; },
 get$_lib2_previousValue: function() { return this._lib2_previousValue; },
 get$previousValue: function() {
  return this.get$_lib2_previousValue();
 },
 set$value: function(v) {
  if (this.get$readOnly() === true) {
    throw $.captureStackTrace($.CTC8);
  }
  this.set$_lib2_value(v);
 },
 get$value: function() {
  return this.get$_lib2_value();
 },
 set$_lib2_value: function(v) { this._lib2_value = v; },
 get$_lib2_value: function() { return this._lib2_value; },
 FrameworkProperty$5: function(sourceObject, propertyName, propertyChangedCallback, defaultValue, converter) {
  if (!$.eqNullB(this.get$sourceObject())) {
    $.add$1(this.get$sourceObject().get$_lib2_frameworkProperties(), this);
  }
  var propertyChangedCallback0 = propertyChangedCallback;
  if ($.eqNullB(propertyChangedCallback)) {
    propertyChangedCallback0 = new $.Closure11();
  }
  if (!(defaultValue === (void 0))) {
    this.set$value(defaultValue);
    propertyChangedCallback0.$call$1(this.get$value());
    this.get$propertyChanging().invoke$2(this, $.PropertyChangingEventArgs$2((void 0), this.get$value()));
  }
 },
 is$FrameworkProperty: true,
});

Isolate.$defineClass("Closure301", "Closure330",
function Closure() {
}, {
 $call$1: function(v) {
 },
});

Isolate.$defineClass("Closure130", "Closure330",
function Closure(this_1) {
  this.this_1 = this_1;
}, {
 $call$2: function(_, __) {
  if (!(this.this_1.get$_lib2_isLoaded() === true)) {
    return;
  }
  this.this_1._lib2_updateDDL$0();
 },
});

Isolate.$defineClass("Closure307", "Closure330",
function Closure() {
}, {
 $call$1: function(_) {
 },
});

Isolate.$defineClass("Closure64", "Closure330",
function Closure(this_12, doTransform_11) {
  this.this_12 = this_12;
  this.doTransform_11 = doTransform_11;
}, {
 $call$1: function(value) {
  this.doTransform_11.$call$1(this.this_12);
 },
});

Isolate.$defineClass("TextChangedEventArgs", "EventArgs",
function TextChangedEventArgs(oldText, newText, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this.oldText = oldText;
  this.newText = newText;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 makeMe$0: function() {
  return;
 },
});

Isolate.$defineClass("Closure261", "Closure330",
function Closure(this_2, box_0) {
  this.this_2 = this_2;
  this.box_0 = box_0;
}, {
 $call$0: function() {
  if (!($.isEmpty($.toString(this.box_0.s_1)) === true)) {
    this.this_2._lib7_peek$0().addChild$1($.XmlText$1($.toString(this.box_0.s_1)));
  }
 },
});

Isolate.$defineClass("Closure109", "Closure330",
function Closure(this_2, box_0) {
  this.this_2 = this_2;
  this.box_0 = box_0;
}, {
 $call$2: function(_, __) {
  var t0 = $.indexOf$1(this.this_2.get$_lib2_presenter().get$presentationPanel().get$children(), this.box_0.item_1);
  this.this_2.set$_lib2_selectedIndex(t0);
  $.setValue(this.this_2.get$selectedItemProperty(), $.index(this.box_0.item_1.get$_lib2_stateBag(), '__CollectionPresenterData__'));
  this.this_2.get$selectionChanged().invoke$2(this.this_2, $.SelectedItemChangedEventArgs$1($.index(this.box_0.item_1.get$_lib2_stateBag(), '__CollectionPresenterData__')));
 },
});

Isolate.$defineClass("CheckBox", "Control",
function CheckBox(selectionChanged, groupNameProperty, valueProperty, Control__lib2_templateBindingsApplied, Control__lib2_templateApplied, Control__lib2_visualTemplateApplied, Control_template, Control_isEnabledProperty, FrameworkElement_mouseUp, FrameworkElement_mouseDown, FrameworkElement_mouseMove, FrameworkElement_click, FrameworkElement_mouseLeave, FrameworkElement_mouseEnter, FrameworkElement_lostFocus, FrameworkElement_gotFocus, FrameworkElement_actionsProperty, FrameworkElement_perspectiveProperty, FrameworkElement_transformOriginZProperty, FrameworkElement_transformOriginYProperty, FrameworkElement_transformOriginXProperty, FrameworkElement_rotateZProperty, FrameworkElement_rotateYProperty, FrameworkElement_rotateXProperty, FrameworkElement_scaleZProperty, FrameworkElement_scaleYProperty, FrameworkElement_scaleXProperty, FrameworkElement_translateZProperty, FrameworkElement_translateYProperty, FrameworkElement_translateXProperty, FrameworkElement_styleProperty, FrameworkElement_visibilityProperty, FrameworkElement_opacityProperty, FrameworkElement_actualHeightProperty, FrameworkElement_actualWidthProperty, FrameworkElement_zOrderProperty, FrameworkElement_verticalAlignmentProperty, FrameworkElement_horizontalAlignmentProperty, FrameworkElement_tagProperty, FrameworkElement_cursorProperty, FrameworkElement_minHeightProperty, FrameworkElement_maxHeightProperty, FrameworkElement_minWidthProperty, FrameworkElement_maxWidthProperty, FrameworkElement_htmlIDProperty, FrameworkElement_heightProperty, FrameworkElement_widthProperty, FrameworkElement_marginProperty, FrameworkElement__lib2_transitionProperties, FrameworkElement__lib2_templateBindings, FrameworkElement__lib2_style, FrameworkElement__lib2_containerParent, FrameworkObject_mostRecentMeasurement, FrameworkObject__lib2_dataContextUpdated, FrameworkObject_nameProperty, FrameworkObject_attachedPropertyChanged, FrameworkObject_measurementChanged, FrameworkObject_unloaded, FrameworkObject_loaded, FrameworkObject_lateBindings, FrameworkObject_dataContextProperty, FrameworkObject__lib2_isLoaded, FrameworkObject__lib2_parent, FrameworkObject__lib2_component, FrameworkObject__lib2_previousMeasurement, FrameworkObject__lib2_animationFrameID, FrameworkObject__lib2_watchingMeasurement, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this.selectionChanged = selectionChanged;
  this.groupNameProperty = groupNameProperty;
  this.valueProperty = valueProperty;
  this._lib2_templateBindingsApplied = Control__lib2_templateBindingsApplied;
  this._lib2_templateApplied = Control__lib2_templateApplied;
  this._lib2_visualTemplateApplied = Control__lib2_visualTemplateApplied;
  this.template = Control_template;
  this.isEnabledProperty = Control_isEnabledProperty;
  this.mouseUp = FrameworkElement_mouseUp;
  this.mouseDown = FrameworkElement_mouseDown;
  this.mouseMove = FrameworkElement_mouseMove;
  this.click = FrameworkElement_click;
  this.mouseLeave = FrameworkElement_mouseLeave;
  this.mouseEnter = FrameworkElement_mouseEnter;
  this.lostFocus = FrameworkElement_lostFocus;
  this.gotFocus = FrameworkElement_gotFocus;
  this.actionsProperty = FrameworkElement_actionsProperty;
  this.perspectiveProperty = FrameworkElement_perspectiveProperty;
  this.transformOriginZProperty = FrameworkElement_transformOriginZProperty;
  this.transformOriginYProperty = FrameworkElement_transformOriginYProperty;
  this.transformOriginXProperty = FrameworkElement_transformOriginXProperty;
  this.rotateZProperty = FrameworkElement_rotateZProperty;
  this.rotateYProperty = FrameworkElement_rotateYProperty;
  this.rotateXProperty = FrameworkElement_rotateXProperty;
  this.scaleZProperty = FrameworkElement_scaleZProperty;
  this.scaleYProperty = FrameworkElement_scaleYProperty;
  this.scaleXProperty = FrameworkElement_scaleXProperty;
  this.translateZProperty = FrameworkElement_translateZProperty;
  this.translateYProperty = FrameworkElement_translateYProperty;
  this.translateXProperty = FrameworkElement_translateXProperty;
  this.styleProperty = FrameworkElement_styleProperty;
  this.visibilityProperty = FrameworkElement_visibilityProperty;
  this.opacityProperty = FrameworkElement_opacityProperty;
  this.actualHeightProperty = FrameworkElement_actualHeightProperty;
  this.actualWidthProperty = FrameworkElement_actualWidthProperty;
  this.zOrderProperty = FrameworkElement_zOrderProperty;
  this.verticalAlignmentProperty = FrameworkElement_verticalAlignmentProperty;
  this.horizontalAlignmentProperty = FrameworkElement_horizontalAlignmentProperty;
  this.tagProperty = FrameworkElement_tagProperty;
  this.cursorProperty = FrameworkElement_cursorProperty;
  this.minHeightProperty = FrameworkElement_minHeightProperty;
  this.maxHeightProperty = FrameworkElement_maxHeightProperty;
  this.minWidthProperty = FrameworkElement_minWidthProperty;
  this.maxWidthProperty = FrameworkElement_maxWidthProperty;
  this.htmlIDProperty = FrameworkElement_htmlIDProperty;
  this.heightProperty = FrameworkElement_heightProperty;
  this.widthProperty = FrameworkElement_widthProperty;
  this.marginProperty = FrameworkElement_marginProperty;
  this._lib2_transitionProperties = FrameworkElement__lib2_transitionProperties;
  this._lib2_templateBindings = FrameworkElement__lib2_templateBindings;
  this._lib2_style = FrameworkElement__lib2_style;
  this._lib2_containerParent = FrameworkElement__lib2_containerParent;
  this.mostRecentMeasurement = FrameworkObject_mostRecentMeasurement;
  this._lib2_dataContextUpdated = FrameworkObject__lib2_dataContextUpdated;
  this.nameProperty = FrameworkObject_nameProperty;
  this.attachedPropertyChanged = FrameworkObject_attachedPropertyChanged;
  this.measurementChanged = FrameworkObject_measurementChanged;
  this.unloaded = FrameworkObject_unloaded;
  this.loaded = FrameworkObject_loaded;
  this.lateBindings = FrameworkObject_lateBindings;
  this.dataContextProperty = FrameworkObject_dataContextProperty;
  this._lib2_isLoaded = FrameworkObject__lib2_isLoaded;
  this._lib2_parent = FrameworkObject__lib2_parent;
  this._lib2_component = FrameworkObject__lib2_component;
  this._lib2_previousMeasurement = FrameworkObject__lib2_previousMeasurement;
  this._lib2_animationFrameID = FrameworkObject__lib2_animationFrameID;
  this._lib2_watchingMeasurement = FrameworkObject__lib2_watchingMeasurement;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$type: function() {
  return 'CheckBox';
 },
 CreateElement$0: function() {
  this.set$_lib2_component($.createByTag('input'));
  $.indexSet(this.get$_lib2_component().get$attributes(), 'type', 'checkbox');
 },
 set$value: function(v) {
  return $.setValue(this.get$valueProperty(), v);
 },
 get$value: function() {
  return $.getValue(this.get$valueProperty());
 },
 _lib2_initEvents$0: function() {
  $.add(this.get$click(), new $.Closure229(this));
 },
 _lib2_initProperties$0: function() {
  this.set$valueProperty($.FrameworkProperty$5(this, 'value', new $.Closure230(this), (void 0), (void 0)));
  this.set$groupNameProperty($.FrameworkProperty$5(this, 'groupName', new $.Closure231(this), 'default', (void 0)));
 },
 makeMe$0: function() {
  return $.CheckBox$0();
 },
 get$selectionChanged: function() { return this.selectionChanged; },
 set$groupNameProperty: function(v) { this.groupNameProperty = v; },
 set$valueProperty: function(v) { this.valueProperty = v; },
 get$valueProperty: function() { return this.valueProperty; },
 CheckBox$0: function() {
  $.appendBuckshotClass(this.get$_lib2_component(), 'checkbox');
  this._lib2_initProperties$0();
  this._lib2_initEvents$0();
 },
});

Isolate.$defineClass("Closure163", "Closure330",
function Closure() {
}, {
 $call$1: function(_) {
 },
});

Isolate.$defineClass("Closure245", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$1: function(v) {
  if ($.ltB(v.get$value(), this.this_0.get$minLength())) {
    v.set$value(this.this_0.get$minLength());
  }
  if ($.gtB(v.get$value(), this.this_0.get$maxLength())) {
    v.set$value(this.this_0.get$maxLength());
  }
  this.this_0.set$_lib2_value(v);
  this.this_0.get$_lib2_columnDefinitionChanged().invoke$2(this.this_0, $.EventArgs$0());
 },
});

Isolate.$defineClass("Closure23", "Closure330",
function Closure() {
}, {
 $call$1: function(n) {
  return typeof n === 'object' && n.is$Element();
 },
});

Isolate.$defineClass("Closure290", "Closure330",
function Closure(box_0) {
  this.box_0 = box_0;
}, {
 $call$1: function(n) {
  return $.add$1(this.box_0.s_1, n.get$text());
 },
});

Isolate.$defineClass("Closure287", "Closure330",
function Closure(box_0) {
  this.box_0 = box_0;
}, {
 $call$1: function(el) {
  if (!($.isEmpty(this.box_0.list_2) === true)) {
    return;
  }
  el._lib7_queryNameInternal$2(this.box_0.tagName_1, this.box_0.list_2);
 },
});

Isolate.$defineClass("Closure208", "Closure330",
function Closure(this_1) {
  this.this_1 = this_1;
}, {
 $call$1: function(value) {
  var t0 = '' + $.stringToString(value.get$top()) + 'px ' + $.stringToString(value.get$right()) + 'px ' + $.stringToString(value.get$bottom()) + 'px ' + $.stringToString(value.get$left()) + 'px';
  this.this_1.get$_lib2_component().get$style().set$margin(t0);
 },
});

Isolate.$defineClass("Closure26", "Closure330",
function Closure(this_2, box_0) {
  this.this_2 = this_2;
  this.box_0 = box_0;
}, {
 $call$1: function(key) {
  return this.box_0.f_1.$call$2(key, $.index(this.this_2, key));
 },
});

Isolate.$defineClass("Closure18", "Closure330",
function Closure() {
}, {
 $call$1: function(child) {
  return child._lib2_onAddedToDOM$0();
 },
});

Isolate.$defineClass("Closure25", "Closure330",
function Closure() {
}, {
 $call$1: function(child) {
  return child._lib2_onRemoveFromDOM$0();
 },
});

Isolate.$defineClass("Closure248", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$1: function(v) {
  if ($.ltB(v.get$value(), this.this_0.get$minLength())) {
    v.set$value(this.this_0.get$minLength());
  }
  if ($.gtB(v.get$value(), this.this_0.get$maxLength())) {
    v.set$value(this.this_0.get$maxLength());
  }
  this.this_0.set$_lib2_value(v);
  this.this_0.get$_lib2_rowDefinitionChanged().invoke$2(this.this_0, $.EventArgs$0());
 },
});

Isolate.$defineClass("GridDemoView", "Object",
function GridDemoView(_lib_vm, _lib_rootElement) {
  this._lib_vm = _lib_vm;
  this._lib_rootElement = _lib_rootElement;
}, {
 get$rootVisual: function() {
  return this.get$_lib_rootElement();
 },
 get$_lib_vm: function() { return this._lib_vm; },
 get$_lib_rootElement: function() { return this._lib_rootElement; },
 GridDemoView$with$1: function(_vm) {
  $._lib2_BindingImplementation$4($.buckshot().get$windowWidthProperty(), $.buckshot().get$domRoot().get$widthProperty(), $.CTC159, $.CTC160);
  $._lib2_BindingImplementation$4($.buckshot().get$windowHeightProperty(), $.buckshot().get$domRoot().get$heightProperty(), $.CTC159, $.CTC160);
  var t0 = this.get$_lib_vm();
  this.get$_lib_rootElement().set$dataContext(t0);
  $.add(this.get$_lib_rootElement().get$measurementChanged(), new $.Closure328(this));
 },
});

Isolate.$defineClass("IndexOutOfRangeException", "Object",
function IndexOutOfRangeException(_lib4_index) {
  this._lib4_index = _lib4_index;
}, {
 get$_lib4_index: function() { return this._lib4_index; },
 toString$0: function() {
  return 'IndexOutOfRangeException: ' + $.stringToString(this.get$_lib4_index());
 },
 is$Exception: true,
});

Isolate.$defineClass("Closure74", "Closure330",
function Closure(this_27) {
  this.this_27 = this_27;
}, {
 $call$1: function(value) {
  if ($.eqB(value, $.CTC191)) {
    var t0 = '' + $.stringToString(value);
    this.this_27.get$_lib2_component().get$style().set$visibility(t0);
    if ($.eqNullB($.index(this.this_27.get$_lib2_stateBag(), 'display'))) {
      var t1 = 'inherit';
    } else {
      t1 = $.index(this.this_27.get$_lib2_stateBag(), 'display');
    }
    this.this_27.get$_lib2_component().get$style().set$display(t1);
    this.this_27.get$_lib2_stateBag().remove$1('display');
  } else {
    $.indexSet(this.this_27.get$_lib2_stateBag(), 'display', this.this_27.get$_lib2_component().get$style().get$display());
    $.db('' + $.stringToString(value), (void 0));
    var t2 = '' + $.stringToString(value);
    this.this_27.get$_lib2_component().get$style().set$visibility(t2);
    this.this_27.get$_lib2_component().get$style().set$display('none');
  }
 },
});

Isolate.$defineClass("_TextTrackEventsImpl", "_EventsImpl",
function _TextTrackEventsImpl(_EventsImpl__lib5_ptr) {
  this._lib5_ptr = _EventsImpl__lib5_ptr;
}, {
});

Isolate.$defineClass("EventHandlerReference", "HashableObject",
function EventHandlerReference(handler, HashableObject__lib2_assignedHash) {
  this.handler = handler;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$type: function() {
  return 'EventHandlerReference';
 },
 handler$2: function(arg0, arg1) { return this.handler.$call$2(arg0, arg1); },
});

Isolate.$defineClass("_BatteryManagerEventsImpl", "_EventsImpl",
function _BatteryManagerEventsImpl(_EventsImpl__lib5_ptr) {
  this._lib5_ptr = _EventsImpl__lib5_ptr;
}, {
});

Isolate.$defineClass("_ElementRectImpl", "Object",
function _ElementRectImpl(_lib5_clientRects, _lib5_boundingClientRect, scroll, offset, client) {
  this._lib5_clientRects = _lib5_clientRects;
  this._lib5_boundingClientRect = _lib5_boundingClientRect;
  this.scroll = scroll;
  this.offset = offset;
  this.client = client;
}, {
 get$bounding: function() {
  return this.get$_lib5_boundingClientRect();
 },
 get$_lib5_boundingClientRect: function() { return this._lib5_boundingClientRect; },
 get$scroll: function() { return this.scroll; },
 get$offset: function() { return this.offset; },
 get$client: function() { return this.client; },
});

Isolate.$defineClass("Closure247", "Closure330",
function Closure() {
}, {
 $call$1: function(v) {
 },
});

Isolate.$defineClass("Closure268", "Closure330",
function Closure(this_6, box_0, setNamespace_5) {
  this.this_6 = this_6;
  this.box_0 = box_0;
  this.setNamespace_5 = setNamespace_5;
}, {
 $call$0: function() {
  this.this_6._lib7_assertKind$3(this.box_0.next_3, 9, 'Quotes are required around attribute values.');
  var s = $.StringBufferImpl$1('');
  var qkind = this.box_0.next_3.get$quoteKind();
  if (typeof qkind !== 'number') return this.$call$0$bailout(1, s, qkind);
  var qkind0 = qkind;
  do {
    var qkind1 = qkind0;
    var next = this.box_0.t_1.next$0();
    this.box_0.next_3 = next;
    if ($.eqNullB(this.box_0.next_3)) {
      throw $.captureStackTrace($.CTC219);
    }
    if (!$.eqB(this.box_0.next_3.get$kind(), 9)) {
      s.add$1(this.box_0.next_3.toStringLiteral$0());
      qkind1 = qkind0;
    } else {
      if (!$.eqB(this.box_0.next_3.get$quoteKind(), qkind0)) {
        s.add$1(this.box_0.next_3.toStringLiteral$0());
        qkind1 = qkind0;
      } else {
        qkind1 = -1;
      }
    }
  } while (qkind0 = qkind1, !(qkind1 === -1));
  this.setNamespace_5.$call$2(this.box_0.name_4, s.toString$0());
 },
 $call$0$bailout: function(state, env0, env1) {
  switch (state) {
    case 1:
      s = env0;
      qkind = env1;
      break;
  }
  switch (state) {
    case 0:
      this.this_6._lib7_assertKind$3(this.box_0.next_3, 9, 'Quotes are required around attribute values.');
      var s = $.StringBufferImpl$1('');
      var qkind = this.box_0.next_3.get$quoteKind();
    case 1:
      state = 0;
      var qkind0 = qkind;
      L0: while (true) {
        var qkind1 = qkind0;
        var next = this.box_0.t_1.next$0();
        this.box_0.next_3 = next;
        if ($.eqNullB(this.box_0.next_3)) {
          throw $.captureStackTrace($.CTC219);
        }
        if (!$.eqB(this.box_0.next_3.get$kind(), 9)) {
          s.add$1(this.box_0.next_3.toStringLiteral$0());
          qkind1 = qkind0;
        } else {
          if (!$.eqB(this.box_0.next_3.get$quoteKind(), qkind0)) {
            s.add$1(this.box_0.next_3.toStringLiteral$0());
            qkind1 = qkind0;
          } else {
            qkind1 = -1;
          }
        }
        qkind0 = qkind1;
        if (!!$.eqB(qkind1, -1)) break L0;
      }
      this.setNamespace_5.$call$2(this.box_0.name_4, s.toString$0());
  }
 },
});

Isolate.$defineClass("Closure177", "Closure330",
function Closure() {
}, {
 $call$2: function(t, ah) {
  var t0 = ({});
  t0.ah_1 = ah;
  if ($.gtB($.get$length(t0.ah_1.get$standardPropertyCarryOver()), 0)) {
    $.forEach(t0.ah_1.get$standardPropertyCarryOver(), new $.Closure178(t0));
  }
  $.add$1(t0.ah_1.get$css(), '}');
 },
});

Isolate.$defineClass("Closure274", "Closure330",
function Closure(box_2) {
  this.box_2 = box_2;
}, {
 $call$0: function() {
  var t0 = ({});
  t0.succeed_1 = true;
  $.forEach(this.box_2.aMap_3, new $.Closure281(t0, this.box_2));
  return t0.succeed_1;
 },
});

Isolate.$defineClass("MeasurementChangedEventArgs", "EventArgs",
function MeasurementChangedEventArgs(newMeasurement, oldMeasurement, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this.newMeasurement = newMeasurement;
  this.oldMeasurement = oldMeasurement;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$type: function() {
  return 'MeasurementChangedEventArgs';
 },
 makeMe$0: function() {
  return;
 },
 get$newMeasurement: function() { return this.newMeasurement; },
});

Isolate.$defineClass("Closure54", "Closure330",
function Closure(this_40, box_0, box_2) {
  this.this_40 = this_40;
  this.box_0 = box_0;
  this.box_2 = box_2;
}, {
 $call$1: function(r) {
  var p = $.document().get$window().webkitConvertPointFromPageToNode$2(this.this_40.get$_lib2_component(), $.Point(this.box_0.e_1.get$pageX(), this.box_0.e_1.get$pageY()));
  if ($.gtB(p.get$x(), -1) && $.gtB(p.get$y(), -1) && $.ltB(p.get$x(), r.get$bounding().get$width()) && $.ltB(p.get$y(), r.get$bounding().get$height())) {
    this.box_2.isMouseReallyOut_3 = false;
    return;
  }
  this.box_2.isMouseReallyOut_3 = true;
  this.this_40.get$mouseLeave().invoke$2(this.this_40, $.EventArgs$0());
 },
});

Isolate.$defineClass("Closure49", "Closure330",
function Closure(this_42, mouseLeaveHandler_41) {
  this.this_42 = this_42;
  this.mouseLeaveHandler_41 = mouseLeaveHandler_41;
}, {
 $call$0: function() {
  return $.add$1(this.this_42.get$_lib2_component().get$on().get$mouseOut(), this.mouseLeaveHandler_41);
 },
});

Isolate.$defineClass("Closure65", "Closure330",
function Closure(this_14, doTransform_13) {
  this.this_14 = this_14;
  this.doTransform_13 = doTransform_13;
}, {
 $call$1: function(value) {
  this.doTransform_13.$call$1(this.this_14);
 },
});

Isolate.$defineClass("Closure238", "Closure330",
function Closure(this_3) {
  this.this_3 = this_3;
}, {
 $call$1: function(value) {
  var t0 = $.toString(value.get$color());
  this.this_3.get$_lib2_component().get$style().set$color(t0);
 },
});

Isolate.$defineClass("_WebSocketEventsImpl", "_EventsImpl",
function _WebSocketEventsImpl(_EventsImpl__lib5_ptr) {
  this._lib5_ptr = _EventsImpl__lib5_ptr;
}, {
 get$message: function() {
  return this._lib5_get$1('message');
 },
});

Isolate.$defineClass("KeyValuePair", "Object",
function KeyValuePair(value, key) {
  this.value = value;
  this.key = key;
}, {
 set$value: function(v) { this.value = v; },
 get$value: function() { return this.value; },
 get$key: function() { return this.key; },
 KeyValuePair$2: function(key, value) {
 },
});

Isolate.$defineClass("_VariableSizeListIterator", "Object",
function _VariableSizeListIterator() {
}, {
 set$_lib5_pos: function(v) { this._lib5_pos = v; },
 get$_lib5_pos: function() { return this._lib5_pos; },
 get$_lib5_array: function() { return this._lib5_array; },
 next$0: function() {
  if (!(this.hasNext$0() === true)) {
    throw $.captureStackTrace($.CTC3);
  }
  var t0 = this.get$_lib5_array();
  var t1 = this.get$_lib5_pos();
  this.set$_lib5_pos($.add(t1, 1));
  return $.index(t0, t1);
 },
 hasNext$0: function() {
  return $.gt($.get$length(this.get$_lib5_array()), this.get$_lib5_pos());
 },
});

Isolate.$defineClass("Closure81", "Closure330",
function Closure(this_32) {
  this.this_32 = this_32;
}, {
 $call$1: function(value) {
  var t0 = '' + $.stringToString(value) + 'px';
  this.this_32.get$_lib2_component().get$style().set$minHeight(t0);
 },
});

Isolate.$defineClass("MetaInfo", "Object",
function MetaInfo(set, tags, tag) {
  this.set = set;
  this.tags = tags;
  this.tag = tag;
}, {
 get$set: function() { return this.set; },
 get$tag: function() { return this.tag; },
});

Isolate.$defineClass("Closure236", "Closure330",
function Closure(this_1) {
  this.this_1 = this_1;
}, {
 $call$1: function(value) {
  $.indexSet(this.this_1.get$_lib2_component().get$attributes(), 'target', $.toString(value));
 },
});

Isolate.$defineClass("Closure209", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$2: function(source, args) {
  var t0 = this.this_0.get$content();
  if (!((typeof t0 === 'object') && !!t0.is$Border)) {
    var t1 = '' + $.stringToString($.sub(args.get$newMeasurement().get$client().get$width(), $.add(this.this_0.get$content().get$margin().get$left(), this.this_0.get$content().get$margin().get$right()))) + 'px';
    this.this_0.get$content().get$rawElement().get$style().set$width(t1);
  } else {
    var t2 = '' + $.stringToString($.sub(args.get$newMeasurement().get$client().get$width(), $.add($.add($.add($.get$dynamic(this.this_0.get$content()).get$padding().get$left(), $.get$dynamic(this.this_0.get$content()).get$padding().get$right()), this.this_0.get$content().get$margin().get$left()), this.this_0.get$content().get$margin().get$right()))) + 'px';
    this.this_0.get$content().get$rawElement().get$style().set$width(t2);
  }
 },
});

Isolate.$defineClass("Closure328", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$2: function(_, args) {
  var t0 = 'Grid: (' + $.stringToString(args.get$newMeasurement().get$bounding().get$left()) + ', ' + $.stringToString(args.get$newMeasurement().get$bounding().get$top()) + '), (' + $.stringToString(args.get$newMeasurement().get$bounding().get$width()) + ', ' + $.stringToString(args.get$newMeasurement().get$bounding().get$height()) + ')';
  this.this_0.get$_lib_vm().set$title(t0);
 },
});

Isolate.$defineClass("Closure174", "Closure330",
function Closure(box_7, animHash_11) {
  this.box_7 = box_7;
  this.animHash_11 = animHash_11;
}, {
 $call$1: function(s) {
  if (!(this.animHash_11.containsKey$1(s.get$target()) === true)) {
    $.indexSet(this.animHash_11, s.get$target(), $._lib2_CssAnimationObject$0());
    var t0 = $.index($.buckshot().get$namedElements(), s.get$target()).makeMe$0();
    $.index(this.animHash_11, s.get$target()).set$concreteElement(t0);
    $.add$1($.index(this.animHash_11, s.get$target()).get$css(), '@keyframes ' + $.stringToString(this.box_7.anim_8.get$key()) + $.stringToString(s.get$target()) + ' { ');
    if ($.eqNullB($.index(this.animHash_11, s.get$target()).get$concreteElement())) {
      throw $.captureStackTrace($.CTC206);
    }
  }
 },
});

Isolate.$defineClass("_MediaStreamEventsImpl", "_EventsImpl",
function _MediaStreamEventsImpl(_EventsImpl__lib5_ptr) {
  this._lib5_ptr = _EventsImpl__lib5_ptr;
}, {
});

Isolate.$defineClass("BuckshotException", "ExceptionBase",
function BuckshotException() {
}, {
 get$type: function() {
  return 'FrameworkException';
 },
});

Isolate.$defineClass("Closure325", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$1: function(value) {
  if (!$.eqNullB(this.this_0.get$nameProperty().get$previousValue())) {
    throw $.captureStackTrace($.BuckshotException$1('Attempted to assign name "' + $.stringToString(value) + '" to element that already has a name "' + $.stringToString(this.this_0.get$nameProperty().get$previousValue()) + '" assigned.'));
  }
  if (!$.eqNullB(value)) {
    $.indexSet($.buckshot().get$namedElements(), value, this.this_0);
    if (!$.eqNullB(this.this_0.get$_lib2_component())) {
      $.indexSet(this.this_0.get$_lib2_component().get$attributes(), 'ID', value);
    }
  }
 },
});

Isolate.$defineClass("DropDownListItem", "BuckshotObject",
function DropDownListItem(valueProperty, nameProperty, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this.valueProperty = valueProperty;
  this.nameProperty = nameProperty;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$type: function() {
  return 'DropDownListItem';
 },
 set$value: function(v) {
  return $.setValue(this.get$valueProperty(), v);
 },
 get$value: function() {
  return $.getValue(this.get$valueProperty());
 },
 set$name: function(v) {
  return $.setValue(this.get$nameProperty(), v);
 },
 get$name: function() {
  return $.getValue(this.get$nameProperty());
 },
 _lib2_initDropDownListItemProperties$0: function() {
  this.set$nameProperty($.FrameworkProperty$5(this, 'name', new $.Closure134(), '', (void 0)));
  this.set$valueProperty($.FrameworkProperty$5(this, 'value', new $.Closure135(), (void 0), (void 0)));
 },
 makeMe$0: function() {
  return $.DropDownListItem$0();
 },
 set$valueProperty: function(v) { this.valueProperty = v; },
 get$valueProperty: function() { return this.valueProperty; },
 set$nameProperty: function(v) { this.nameProperty = v; },
 get$nameProperty: function() { return this.nameProperty; },
 DropDownListItem$0: function() {
  this._lib2_initDropDownListItemProperties$0();
 },
});

Isolate.$defineClass("Closure151", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$1: function(value) {
  $.indexSet(this.this_0.get$_lib2_component().get$attributes(), 'placeholder', value);
 },
});

Isolate.$defineClass("Closure20", "Closure330",
function Closure(box_0) {
  this.box_0 = box_0;
}, {
 $call$1: function(p) {
  return $.eq($.toLowerCase(p.get$propertyName()), $.toLowerCase(this.box_0.propertyName_1));
 },
});

Isolate.$defineClass("Closure2", "Closure330",
function Closure(box_0) {
  this.box_0 = box_0;
}, {
 $call$2: function(key, value) {
  this.box_0.f_1.$call$1(key);
 },
});

Isolate.$defineClass("Closure13", "Closure330",
function Closure() {
}, {
 $call$1: function(c) {
  var t0 = $.startsWith(c, '#') === true;
  var t1 = !t0;
  if (t0) {
    t1 = !$.eqB($.get$length(c), 7);
  }
  if (t1) {
    $.db(c, (void 0));
    throw $.captureStackTrace($.CTC8);
  }
 },
});

Isolate.$defineClass("Closure184", "Closure330",
function Closure(this_1) {
  this.this_1 = this_1;
}, {
 $call$1: function(value) {
  this.this_1.get$shapeElement().get$style().setProperty$2('stroke', $.toString(value.get$color()));
 },
});

Isolate.$defineClass("Closure211", "Closure330",
function Closure(box_3) {
  this.box_3 = box_3;
}, {
 $call$1: function(child) {
  child.set$margin($.Thickness$specified$4(0, 0, 0, child.get$margin().get$left()));
  var t0 = '' + $.stringToString(this.box_3.gridHeight_4) + 'px';
  child.get$rawElement().get$style().set$height(t0);
 },
});

Isolate.$defineClass("Closure213", "Closure330",
function Closure(this_13, box_3) {
  this.this_13 = this_13;
  this.box_3 = box_3;
}, {
 $call$1: function(c) {
  if ($.eqB(c.get$height().get$gridUnitType(), $.CTC211)) {
    if (c === this.box_3.lastStar_7) {
      c.set$_lib2_adjustedLength($.sub(this.box_3.availRowHeight_8, this.box_3.totalStarLength_10));
    } else {
      c.set$_lib2_adjustedLength($.round($.mul(this.box_3.availRowHeight_8, $.div(c.get$height().get$value(), this.box_3.totalStarValue_6))));
      var totalStarLength = $.add(this.box_3.totalStarLength_10, c.get$_lib2_adjustedLength());
      this.box_3.totalStarLength_10 = totalStarLength;
    }
  }
  var id = $.sub(this.box_3.ii_9, 1);
  if ($.eqB(this.box_3.ii_9, 0)) {
    var t0 = 0;
  } else {
    t0 = $.add($.index(this.this_13.get$rowDefinitions(), id).get$_lib2_adjustedOffset(), $.index(this.this_13.get$rowDefinitions(), id).get$_lib2_adjustedLength());
  }
  c.set$_lib2_adjustedOffset(t0);
  var ii = $.add(this.box_3.ii_9, 1);
  this.box_3.ii_9 = ii;
 },
});

Isolate.$defineClass("Closure143", "Closure330",
function Closure(this_4) {
  this.this_4 = this_4;
}, {
 $call$1: function(value) {
  var t0 = $.toString(value);
  this.this_4.get$_lib2_component().get$style().set$fontFamily(t0);
 },
});

Isolate.$defineClass("Closure154", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$2: function(k, v) {
  var prop = this.this_0._lib2_getPropertyByName$1(v);
  if ($.eqNullB(prop)) {
    throw $.captureStackTrace($.CTC8);
  }
  $._lib2_BindingImplementation$4(prop, k, $.CTC159, $.CTC160);
 },
});

Isolate.$defineClass("Closure172", "Closure330",
function Closure(box_4) {
  this.box_4 = box_4;
}, {
 $call$1: function(p) {
  var temp = $.replaceAll($.replaceAll($.toString(this.box_4.ah_5.get$css()), '@keyframes', '@' + $.stringToString(p) + 'keyframes'), 'transform', '' + $.stringToString(p) + 'transform');
  $.add$1(this.box_4.sb_6, temp);
 },
});

Isolate.$defineClass("AnimationResource", "FrameworkResource",
function AnimationResource(keyFramesProperty, _lib2_cachedAnimation, FrameworkResource_rawData, FrameworkResource_keyProperty, FrameworkObject_mostRecentMeasurement, FrameworkObject__lib2_dataContextUpdated, FrameworkObject_nameProperty, FrameworkObject_attachedPropertyChanged, FrameworkObject_measurementChanged, FrameworkObject_unloaded, FrameworkObject_loaded, FrameworkObject_lateBindings, FrameworkObject_dataContextProperty, FrameworkObject__lib2_isLoaded, FrameworkObject__lib2_parent, FrameworkObject__lib2_component, FrameworkObject__lib2_previousMeasurement, FrameworkObject__lib2_animationFrameID, FrameworkObject__lib2_watchingMeasurement, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this.keyFramesProperty = keyFramesProperty;
  this._lib2_cachedAnimation = _lib2_cachedAnimation;
  this.rawData = FrameworkResource_rawData;
  this.keyProperty = FrameworkResource_keyProperty;
  this.mostRecentMeasurement = FrameworkObject_mostRecentMeasurement;
  this._lib2_dataContextUpdated = FrameworkObject__lib2_dataContextUpdated;
  this.nameProperty = FrameworkObject_nameProperty;
  this.attachedPropertyChanged = FrameworkObject_attachedPropertyChanged;
  this.measurementChanged = FrameworkObject_measurementChanged;
  this.unloaded = FrameworkObject_unloaded;
  this.loaded = FrameworkObject_loaded;
  this.lateBindings = FrameworkObject_lateBindings;
  this.dataContextProperty = FrameworkObject_dataContextProperty;
  this._lib2_isLoaded = FrameworkObject__lib2_isLoaded;
  this._lib2_parent = FrameworkObject__lib2_parent;
  this._lib2_component = FrameworkObject__lib2_component;
  this._lib2_previousMeasurement = FrameworkObject__lib2_previousMeasurement;
  this._lib2_animationFrameID = FrameworkObject__lib2_animationFrameID;
  this._lib2_watchingMeasurement = FrameworkObject__lib2_watchingMeasurement;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$type: function() {
  return 'AnimationResource';
 },
 get$keyFrames: function() {
  return $.getValue(this.get$keyFramesProperty());
 },
 _lib2_invalidate$0: function() {
  this.set$_lib2_cachedAnimation((void 0));
  $.compileAnimation(this);
 },
 _lib2_initAnimationResourceProperties$0: function() {
  var t0 = new $.Closure168(this);
  var t1 = $.List((void 0));
  $.setRuntimeTypeInfo(t1, ({E: 'AnimationKeyFrame'}));
  this.set$keyFramesProperty($.FrameworkProperty$5(this, 'keyFrames', t0, t1, (void 0)));
 },
 makeMe$0: function() {
  return $.AnimationResource$0();
 },
 set$keyFramesProperty: function(v) { this.keyFramesProperty = v; },
 get$keyFramesProperty: function() { return this.keyFramesProperty; },
 set$_lib2_cachedAnimation: function(v) { this._lib2_cachedAnimation = v; },
 get$_lib2_cachedAnimation: function() { return this._lib2_cachedAnimation; },
 AnimationResource$0: function() {
  this._lib2_initAnimationResourceProperties$0();
  $.indexSet(this.get$_lib2_stateBag(), 'CONTAINER_CONTEXT', this.get$keyFramesProperty());
 },
});

Isolate.$defineClass("Slider", "Control",
function Slider(valueProperty, stepProperty, maxProperty, minProperty, Control__lib2_templateBindingsApplied, Control__lib2_templateApplied, Control__lib2_visualTemplateApplied, Control_template, Control_isEnabledProperty, FrameworkElement_mouseUp, FrameworkElement_mouseDown, FrameworkElement_mouseMove, FrameworkElement_click, FrameworkElement_mouseLeave, FrameworkElement_mouseEnter, FrameworkElement_lostFocus, FrameworkElement_gotFocus, FrameworkElement_actionsProperty, FrameworkElement_perspectiveProperty, FrameworkElement_transformOriginZProperty, FrameworkElement_transformOriginYProperty, FrameworkElement_transformOriginXProperty, FrameworkElement_rotateZProperty, FrameworkElement_rotateYProperty, FrameworkElement_rotateXProperty, FrameworkElement_scaleZProperty, FrameworkElement_scaleYProperty, FrameworkElement_scaleXProperty, FrameworkElement_translateZProperty, FrameworkElement_translateYProperty, FrameworkElement_translateXProperty, FrameworkElement_styleProperty, FrameworkElement_visibilityProperty, FrameworkElement_opacityProperty, FrameworkElement_actualHeightProperty, FrameworkElement_actualWidthProperty, FrameworkElement_zOrderProperty, FrameworkElement_verticalAlignmentProperty, FrameworkElement_horizontalAlignmentProperty, FrameworkElement_tagProperty, FrameworkElement_cursorProperty, FrameworkElement_minHeightProperty, FrameworkElement_maxHeightProperty, FrameworkElement_minWidthProperty, FrameworkElement_maxWidthProperty, FrameworkElement_htmlIDProperty, FrameworkElement_heightProperty, FrameworkElement_widthProperty, FrameworkElement_marginProperty, FrameworkElement__lib2_transitionProperties, FrameworkElement__lib2_templateBindings, FrameworkElement__lib2_style, FrameworkElement__lib2_containerParent, FrameworkObject_mostRecentMeasurement, FrameworkObject__lib2_dataContextUpdated, FrameworkObject_nameProperty, FrameworkObject_attachedPropertyChanged, FrameworkObject_measurementChanged, FrameworkObject_unloaded, FrameworkObject_loaded, FrameworkObject_lateBindings, FrameworkObject_dataContextProperty, FrameworkObject__lib2_isLoaded, FrameworkObject__lib2_parent, FrameworkObject__lib2_component, FrameworkObject__lib2_previousMeasurement, FrameworkObject__lib2_animationFrameID, FrameworkObject__lib2_watchingMeasurement, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this.valueProperty = valueProperty;
  this.stepProperty = stepProperty;
  this.maxProperty = maxProperty;
  this.minProperty = minProperty;
  this._lib2_templateBindingsApplied = Control__lib2_templateBindingsApplied;
  this._lib2_templateApplied = Control__lib2_templateApplied;
  this._lib2_visualTemplateApplied = Control__lib2_visualTemplateApplied;
  this.template = Control_template;
  this.isEnabledProperty = Control_isEnabledProperty;
  this.mouseUp = FrameworkElement_mouseUp;
  this.mouseDown = FrameworkElement_mouseDown;
  this.mouseMove = FrameworkElement_mouseMove;
  this.click = FrameworkElement_click;
  this.mouseLeave = FrameworkElement_mouseLeave;
  this.mouseEnter = FrameworkElement_mouseEnter;
  this.lostFocus = FrameworkElement_lostFocus;
  this.gotFocus = FrameworkElement_gotFocus;
  this.actionsProperty = FrameworkElement_actionsProperty;
  this.perspectiveProperty = FrameworkElement_perspectiveProperty;
  this.transformOriginZProperty = FrameworkElement_transformOriginZProperty;
  this.transformOriginYProperty = FrameworkElement_transformOriginYProperty;
  this.transformOriginXProperty = FrameworkElement_transformOriginXProperty;
  this.rotateZProperty = FrameworkElement_rotateZProperty;
  this.rotateYProperty = FrameworkElement_rotateYProperty;
  this.rotateXProperty = FrameworkElement_rotateXProperty;
  this.scaleZProperty = FrameworkElement_scaleZProperty;
  this.scaleYProperty = FrameworkElement_scaleYProperty;
  this.scaleXProperty = FrameworkElement_scaleXProperty;
  this.translateZProperty = FrameworkElement_translateZProperty;
  this.translateYProperty = FrameworkElement_translateYProperty;
  this.translateXProperty = FrameworkElement_translateXProperty;
  this.styleProperty = FrameworkElement_styleProperty;
  this.visibilityProperty = FrameworkElement_visibilityProperty;
  this.opacityProperty = FrameworkElement_opacityProperty;
  this.actualHeightProperty = FrameworkElement_actualHeightProperty;
  this.actualWidthProperty = FrameworkElement_actualWidthProperty;
  this.zOrderProperty = FrameworkElement_zOrderProperty;
  this.verticalAlignmentProperty = FrameworkElement_verticalAlignmentProperty;
  this.horizontalAlignmentProperty = FrameworkElement_horizontalAlignmentProperty;
  this.tagProperty = FrameworkElement_tagProperty;
  this.cursorProperty = FrameworkElement_cursorProperty;
  this.minHeightProperty = FrameworkElement_minHeightProperty;
  this.maxHeightProperty = FrameworkElement_maxHeightProperty;
  this.minWidthProperty = FrameworkElement_minWidthProperty;
  this.maxWidthProperty = FrameworkElement_maxWidthProperty;
  this.htmlIDProperty = FrameworkElement_htmlIDProperty;
  this.heightProperty = FrameworkElement_heightProperty;
  this.widthProperty = FrameworkElement_widthProperty;
  this.marginProperty = FrameworkElement_marginProperty;
  this._lib2_transitionProperties = FrameworkElement__lib2_transitionProperties;
  this._lib2_templateBindings = FrameworkElement__lib2_templateBindings;
  this._lib2_style = FrameworkElement__lib2_style;
  this._lib2_containerParent = FrameworkElement__lib2_containerParent;
  this.mostRecentMeasurement = FrameworkObject_mostRecentMeasurement;
  this._lib2_dataContextUpdated = FrameworkObject__lib2_dataContextUpdated;
  this.nameProperty = FrameworkObject_nameProperty;
  this.attachedPropertyChanged = FrameworkObject_attachedPropertyChanged;
  this.measurementChanged = FrameworkObject_measurementChanged;
  this.unloaded = FrameworkObject_unloaded;
  this.loaded = FrameworkObject_loaded;
  this.lateBindings = FrameworkObject_lateBindings;
  this.dataContextProperty = FrameworkObject_dataContextProperty;
  this._lib2_isLoaded = FrameworkObject__lib2_isLoaded;
  this._lib2_parent = FrameworkObject__lib2_parent;
  this._lib2_component = FrameworkObject__lib2_component;
  this._lib2_previousMeasurement = FrameworkObject__lib2_previousMeasurement;
  this._lib2_animationFrameID = FrameworkObject__lib2_animationFrameID;
  this._lib2_watchingMeasurement = FrameworkObject__lib2_watchingMeasurement;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$type: function() {
  return 'Slider';
 },
 CreateElement$0: function() {
  this.set$_lib2_component($.createByTag('input'));
  $.indexSet(this.get$_lib2_component().get$attributes(), 'type', 'range');
 },
 set$value: function(v) {
  return $.setValue(this.get$valueProperty(), v);
 },
 get$value: function() {
  return $.getValue(this.get$valueProperty());
 },
 _lib2_initSliderProperties$0: function() {
  this.set$minProperty($.FrameworkProperty$5(this, 'min', new $.Closure145(this), 0, $.CTC6));
  this.set$maxProperty($.FrameworkProperty$5(this, 'max', new $.Closure146(this), 100, $.CTC6));
  this.set$stepProperty($.FrameworkProperty$5(this, 'step', new $.Closure147(this), (void 0), $.CTC6));
  this.set$valueProperty($.FrameworkProperty$5(this, 'value', new $.Closure148(this), (void 0), $.CTC6));
 },
 _lib2_initSliderEvents$0: function() {
  $.add$1(this.get$_lib2_component().get$on().get$change(), new $.Closure144(this));
 },
 makeMe$0: function() {
  return $.Slider$0();
 },
 set$valueProperty: function(v) { this.valueProperty = v; },
 get$valueProperty: function() { return this.valueProperty; },
 set$stepProperty: function(v) { this.stepProperty = v; },
 set$maxProperty: function(v) { this.maxProperty = v; },
 set$minProperty: function(v) { this.minProperty = v; },
 Slider$0: function() {
  $.appendBuckshotClass(this.get$_lib2_component(), 'slider');
  this._lib2_initSliderProperties$0();
  this._lib2_initSliderEvents$0();
 },
});

Isolate.$defineClass("Closure7", "Closure330",
function Closure(this_4) {
  this.this_4 = this_4;
}, {
 $call$1: function(value) {
  var t0 = $.toString(value.get$color());
  this.this_4.get$_lib2_component().get$style().set$borderColor(t0);
 },
});

Isolate.$defineClass("Closure47", "Closure330",
function Closure(this_38, mouseEnterHandler_37) {
  this.this_38 = this_38;
  this.mouseEnterHandler_37 = mouseEnterHandler_37;
}, {
 $call$0: function() {
  return this.this_38.get$_lib2_component().get$on().get$mouseOver().remove$1(this.mouseEnterHandler_37);
 },
});

Isolate.$defineClass("Closure178", "Closure330",
function Closure(box_0) {
  this.box_0 = box_0;
}, {
 $call$2: function(kk, v) {
  $.add$1(this.box_0.ah_1.get$css(), '' + $.stringToString(kk) + ': ' + $.stringToString(v) + ';');
 },
});

Isolate.$defineClass("TextBlock", "FrameworkElement",
function TextBlock(fontFamilyProperty, fontSizeProperty, textProperty, paddingProperty, foregroundProperty, backgroundProperty, FrameworkElement_mouseUp, FrameworkElement_mouseDown, FrameworkElement_mouseMove, FrameworkElement_click, FrameworkElement_mouseLeave, FrameworkElement_mouseEnter, FrameworkElement_lostFocus, FrameworkElement_gotFocus, FrameworkElement_actionsProperty, FrameworkElement_perspectiveProperty, FrameworkElement_transformOriginZProperty, FrameworkElement_transformOriginYProperty, FrameworkElement_transformOriginXProperty, FrameworkElement_rotateZProperty, FrameworkElement_rotateYProperty, FrameworkElement_rotateXProperty, FrameworkElement_scaleZProperty, FrameworkElement_scaleYProperty, FrameworkElement_scaleXProperty, FrameworkElement_translateZProperty, FrameworkElement_translateYProperty, FrameworkElement_translateXProperty, FrameworkElement_styleProperty, FrameworkElement_visibilityProperty, FrameworkElement_opacityProperty, FrameworkElement_actualHeightProperty, FrameworkElement_actualWidthProperty, FrameworkElement_zOrderProperty, FrameworkElement_verticalAlignmentProperty, FrameworkElement_horizontalAlignmentProperty, FrameworkElement_tagProperty, FrameworkElement_cursorProperty, FrameworkElement_minHeightProperty, FrameworkElement_maxHeightProperty, FrameworkElement_minWidthProperty, FrameworkElement_maxWidthProperty, FrameworkElement_htmlIDProperty, FrameworkElement_heightProperty, FrameworkElement_widthProperty, FrameworkElement_marginProperty, FrameworkElement__lib2_transitionProperties, FrameworkElement__lib2_templateBindings, FrameworkElement__lib2_style, FrameworkElement__lib2_containerParent, FrameworkObject_mostRecentMeasurement, FrameworkObject__lib2_dataContextUpdated, FrameworkObject_nameProperty, FrameworkObject_attachedPropertyChanged, FrameworkObject_measurementChanged, FrameworkObject_unloaded, FrameworkObject_loaded, FrameworkObject_lateBindings, FrameworkObject_dataContextProperty, FrameworkObject__lib2_isLoaded, FrameworkObject__lib2_parent, FrameworkObject__lib2_component, FrameworkObject__lib2_previousMeasurement, FrameworkObject__lib2_animationFrameID, FrameworkObject__lib2_watchingMeasurement, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this.fontFamilyProperty = fontFamilyProperty;
  this.fontSizeProperty = fontSizeProperty;
  this.textProperty = textProperty;
  this.paddingProperty = paddingProperty;
  this.foregroundProperty = foregroundProperty;
  this.backgroundProperty = backgroundProperty;
  this.mouseUp = FrameworkElement_mouseUp;
  this.mouseDown = FrameworkElement_mouseDown;
  this.mouseMove = FrameworkElement_mouseMove;
  this.click = FrameworkElement_click;
  this.mouseLeave = FrameworkElement_mouseLeave;
  this.mouseEnter = FrameworkElement_mouseEnter;
  this.lostFocus = FrameworkElement_lostFocus;
  this.gotFocus = FrameworkElement_gotFocus;
  this.actionsProperty = FrameworkElement_actionsProperty;
  this.perspectiveProperty = FrameworkElement_perspectiveProperty;
  this.transformOriginZProperty = FrameworkElement_transformOriginZProperty;
  this.transformOriginYProperty = FrameworkElement_transformOriginYProperty;
  this.transformOriginXProperty = FrameworkElement_transformOriginXProperty;
  this.rotateZProperty = FrameworkElement_rotateZProperty;
  this.rotateYProperty = FrameworkElement_rotateYProperty;
  this.rotateXProperty = FrameworkElement_rotateXProperty;
  this.scaleZProperty = FrameworkElement_scaleZProperty;
  this.scaleYProperty = FrameworkElement_scaleYProperty;
  this.scaleXProperty = FrameworkElement_scaleXProperty;
  this.translateZProperty = FrameworkElement_translateZProperty;
  this.translateYProperty = FrameworkElement_translateYProperty;
  this.translateXProperty = FrameworkElement_translateXProperty;
  this.styleProperty = FrameworkElement_styleProperty;
  this.visibilityProperty = FrameworkElement_visibilityProperty;
  this.opacityProperty = FrameworkElement_opacityProperty;
  this.actualHeightProperty = FrameworkElement_actualHeightProperty;
  this.actualWidthProperty = FrameworkElement_actualWidthProperty;
  this.zOrderProperty = FrameworkElement_zOrderProperty;
  this.verticalAlignmentProperty = FrameworkElement_verticalAlignmentProperty;
  this.horizontalAlignmentProperty = FrameworkElement_horizontalAlignmentProperty;
  this.tagProperty = FrameworkElement_tagProperty;
  this.cursorProperty = FrameworkElement_cursorProperty;
  this.minHeightProperty = FrameworkElement_minHeightProperty;
  this.maxHeightProperty = FrameworkElement_maxHeightProperty;
  this.minWidthProperty = FrameworkElement_minWidthProperty;
  this.maxWidthProperty = FrameworkElement_maxWidthProperty;
  this.htmlIDProperty = FrameworkElement_htmlIDProperty;
  this.heightProperty = FrameworkElement_heightProperty;
  this.widthProperty = FrameworkElement_widthProperty;
  this.marginProperty = FrameworkElement_marginProperty;
  this._lib2_transitionProperties = FrameworkElement__lib2_transitionProperties;
  this._lib2_templateBindings = FrameworkElement__lib2_templateBindings;
  this._lib2_style = FrameworkElement__lib2_style;
  this._lib2_containerParent = FrameworkElement__lib2_containerParent;
  this.mostRecentMeasurement = FrameworkObject_mostRecentMeasurement;
  this._lib2_dataContextUpdated = FrameworkObject__lib2_dataContextUpdated;
  this.nameProperty = FrameworkObject_nameProperty;
  this.attachedPropertyChanged = FrameworkObject_attachedPropertyChanged;
  this.measurementChanged = FrameworkObject_measurementChanged;
  this.unloaded = FrameworkObject_unloaded;
  this.loaded = FrameworkObject_loaded;
  this.lateBindings = FrameworkObject_lateBindings;
  this.dataContextProperty = FrameworkObject_dataContextProperty;
  this._lib2_isLoaded = FrameworkObject__lib2_isLoaded;
  this._lib2_parent = FrameworkObject__lib2_parent;
  this._lib2_component = FrameworkObject__lib2_component;
  this._lib2_previousMeasurement = FrameworkObject__lib2_previousMeasurement;
  this._lib2_animationFrameID = FrameworkObject__lib2_animationFrameID;
  this._lib2_watchingMeasurement = FrameworkObject__lib2_watchingMeasurement;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$type: function() {
  return 'TextBlock';
 },
 updateLayout$0: function() {
 },
 CreateElement$0: function() {
  this.set$_lib2_component($.createByTag('p'));
 },
 get$text: function() {
  return $.getValue(this.get$textProperty());
 },
 set$text: function(value) {
  return $.setValue(this.get$textProperty(), value);
 },
 get$background: function() {
  return $.getValue(this.get$backgroundProperty());
 },
 set$background: function(value) {
  return $.setValue(this.get$backgroundProperty(), value);
 },
 set$fontSize: function(value) {
  return $.setValue(this.get$fontSizeProperty(), value);
 },
 set$fontFamily: function(value) {
  return $.setValue(this.get$fontFamilyProperty(), value);
 },
 _lib2_initTextBlockProperties$0: function() {
  this.set$backgroundProperty($.FrameworkProperty$5(this, 'background', new $.Closure139(this), (void 0), $.CTC4));
  this.set$foregroundProperty($.FrameworkProperty$5(this, 'foreground', new $.Closure140(this), $.SolidColorBrush$1($.Color$predefined$1($.CTC18)), $.CTC4));
  this.set$textProperty($.FrameworkProperty$5(this, 'text', new $.Closure141(this), (void 0), (void 0)));
  this.set$fontSizeProperty($.FrameworkProperty$5(this, 'fontSize', new $.Closure142(this), (void 0), (void 0)));
  this.set$fontFamilyProperty($.FrameworkProperty$5(this, 'fontFamily', new $.Closure143(this), (void 0), (void 0)));
 },
 makeMe$0: function() {
  return $.TextBlock$0();
 },
 set$fontFamilyProperty: function(v) { this.fontFamilyProperty = v; },
 get$fontFamilyProperty: function() { return this.fontFamilyProperty; },
 set$fontSizeProperty: function(v) { this.fontSizeProperty = v; },
 get$fontSizeProperty: function() { return this.fontSizeProperty; },
 set$textProperty: function(v) { this.textProperty = v; },
 get$textProperty: function() { return this.textProperty; },
 set$foregroundProperty: function(v) { this.foregroundProperty = v; },
 set$backgroundProperty: function(v) { this.backgroundProperty = v; },
 get$backgroundProperty: function() { return this.backgroundProperty; },
 TextBlock$0: function() {
  $.appendBuckshotClass(this.get$_lib2_component(), 'textblock');
  this._lib2_initTextBlockProperties$0();
  $.indexSet(this.get$_lib2_stateBag(), 'CONTAINER_CONTEXT', this.get$textProperty());
 },
 is$TextBlock: true,
});

Isolate.$defineClass("HashableObject", "Object",
function HashableObject() {
}, {
 toString$0: function() {
  return this.get$type();
 },
 hashCode$0: function() {
  return this.get$_lib2_assignedHash();
 },
 get$_lib2_assignedHash: function() { return this._lib2_assignedHash; },
 HashableObject$0: function() {
 },
});

Isolate.$defineClass("Closure292", "Closure330",
function Closure(this_1) {
  this.this_1 = this_1;
}, {
 $call$0: function() {
  if ($.isEmpty(this.this_1.get$_lib7_tq()) === true) {
    var t0 = (void 0);
  } else {
    t0 = this.this_1.get$_lib7_tq().removeFirst$0();
  }
  return t0;
 },
});

Isolate.$defineClass("Closure256", "Closure330",
function Closure() {
}, {
 $call$1: function(n) {
  return typeof n === 'object' && !!n.is$XmlText;
 },
});

Isolate.$defineClass("_ChildrenElementList", "Object",
function _ChildrenElementList(_lib5_childElements, _lib5_element) {
  this._lib5_childElements = _lib5_childElements;
  this._lib5_element = _lib5_element;
}, {
 last$0: function() {
  return this.get$_lib5_element().get$$dom_lastElementChild();
 },
 removeLast$0: function() {
  var result = this.last$0();
  if (!$.eqNullB(result)) {
    this.get$_lib5_element().$dom_removeChild$1(result);
  }
  return result;
 },
 clear$0: function() {
  this.get$_lib5_element().set$text('');
 },
 indexOf$2: function(element, start) {
  return $.indexOf2(this, element, start, $.get$length(this));
 },
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 getRange$2: function(start, rangeLength) {
  return $._lib5_FrozenElementList$_wrap$1($.getRange2(this, start, rangeLength, []));
 },
 removeRange$2: function(start, rangeLength) {
  throw $.captureStackTrace($.CTC164);
 },
 sort$1: function(compare) {
  throw $.captureStackTrace($.CTC207);
 },
 addAll$1: function(collection) {
  for (var t0 = $.iterator(collection); t0.hasNext$0() === true; ) {
    var t1 = t0.next$0();
    this.get$_lib5_element().$dom_appendChild$1(t1);
  }
 },
 iterator$0: function() {
  return $.iterator(this._lib5_toList$0());
 },
 addLast$1: function(value) {
  return this.add$1(value);
 },
 add$1: function(value) {
  this.get$_lib5_element().$dom_appendChild$1(value);
  return value;
 },
 set$length: function(newLength) {
  throw $.captureStackTrace($.CTC163);
 },
 operator$indexSet$2: function(index, value) {
  this.get$_lib5_element().$dom_replaceChild$2(value, $.index(this.get$_lib5_childElements(), index));
 },
 operator$index$1: function(index) {
  return $.index(this.get$_lib5_childElements(), index);
 },
 get$length: function() {
  return $.get$length(this.get$_lib5_childElements());
 },
 isEmpty$0: function() {
  return $.eqNull(this.get$_lib5_element().get$$dom_firstElementChild());
 },
 some$1: function(f) {
  for (var t0 = this.iterator$0(); t0.hasNext$0() === true; ) {
    if (f.$call$1(t0.next$0()) === true) {
      return true;
    }
  }
  return false;
 },
 every$1: function(f) {
  for (var t0 = this.iterator$0(); t0.hasNext$0() === true; ) {
    if (!(f.$call$1(t0.next$0()) === true)) {
      return false;
    }
  }
  return true;
 },
 filter$1: function(f) {
  var t0 = ({});
  t0.f_1 = f;
  var output = [];
  this.forEach$1(new $.Closure22(t0, output));
  return $._lib5_FrozenElementList$_wrap$1(output);
 },
 forEach$1: function(f) {
  for (var t0 = $.iterator(this.get$_lib5_childElements()); t0.hasNext$0() === true; ) {
    f.$call$1(t0.next$0());
  }
 },
 get$first: function() {
  return this.get$_lib5_element().get$$dom_firstElementChild();
 },
 first$0: function() { return this.get$first().$call$0(); },
 _lib5_toList$0: function() {
  var output = $.List($.get$length(this.get$_lib5_childElements()));
  var len = $.get$length(this.get$_lib5_childElements());
  if (typeof len !== 'number') return this._lib5_toList$0$bailout(1, output, len);
  var i = 0;
  for (; i < len; i = i + 1) {
    var t0 = $.index(this.get$_lib5_childElements(), i);
    var t1 = output.length;
    if (i < 0 || i >= t1) throw $.ioore(i);
    output[i] = t0;
  }
  return output;
 },
 _lib5_toList$0$bailout: function(state, env0, env1) {
  switch (state) {
    case 1:
      output = env0;
      len = env1;
      break;
  }
  switch (state) {
    case 0:
      var output = $.List($.get$length(this.get$_lib5_childElements()));
      var len = $.get$length(this.get$_lib5_childElements());
    case 1:
      state = 0;
      var i = 0;
      L0: while (true) {
        if (!$.ltB(i, len)) break L0;
        var t0 = $.index(this.get$_lib5_childElements(), i);
        var t1 = output.length;
        if (i < 0 || i >= t1) throw $.ioore(i);
        output[i] = t0;
        i = i + 1;
      }
      return output;
  }
 },
 get$_lib5_childElements: function() { return this._lib5_childElements; },
 get$_lib5_element: function() { return this._lib5_element; },
 is$List2: function() { return true; },
 is$Collection: function() { return true; },
});

Isolate.$defineClass("Closure260", "Closure330",
function Closure(box_0) {
  this.box_0 = box_0;
}, {
 $call$2: function(_, __) {
  if (!$.eqNullB(this.box_0.b_7)) {
    this.box_0.b_7.unregister$0();
  }
  var b = $._lib2_BindingImplementation$4($.index($.buckshot().get$namedElements(), this.box_0.ne_5).resolveProperty$1(this.box_0.prop_6), this.box_0.p_1, this.box_0.mode_3, $.CTC160);
  this.box_0.b_7 = b;
 },
});

Isolate.$defineClass("Closure210", "Closure330",
function Closure(this_5) {
  this.this_5 = this_5;
}, {
 $call$1: function(__) {
  return this.this_5.updateLayout$0();
 },
});

Isolate.$defineClass("Closure161", "Closure330",
function Closure() {
}, {
 $call$2: function(e, value) {
 },
});

Isolate.$defineClass("RoutedEventArgs", "EventArgs",
function RoutedEventArgs() {
}, {
 set$cancelBubble: function(v) { this.cancelBubble = v; },
});

Isolate.$defineClass("Closure157", "Closure330",
function Closure() {
}, {
 $call$2: function(e, v) {
  e.set$margin($.Thickness$specified$4($.getTop(e), 0, 0, v));
 },
});

Isolate.$defineClass("Closure318", "Closure330",
function Closure() {
}, {
 $call$1: function(_) {
 },
});

Isolate.$defineClass("BindingData", "Object",
function BindingData(bindingMode, converter, dataContextPath) {
  this.bindingMode = bindingMode;
  this.converter = converter;
  this.dataContextPath = dataContextPath;
}, {
 get$bindingMode: function() { return this.bindingMode; },
 get$converter: function() { return this.converter; },
 get$dataContextPath: function() { return this.dataContextPath; },
});

Isolate.$defineClass("Closure146", "Closure330",
function Closure(this_1) {
  this.this_1 = this_1;
}, {
 $call$1: function(v) {
  $.indexSet(this.this_1.get$_lib2_component().get$attributes(), 'max', $.toString($.toInt(v)));
 },
});

Isolate.$defineClass("Closure235", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$1: function(value) {
  var t0 = this.this_0.get$_lib2_content();
  if (typeof t0 === 'object' && !!t0.is$TextBlock && typeof value === 'string') {
    this.this_0.get$_lib2_content().set$text(value);
    return;
  }
  this.this_0.get$_lib2_component().get$style().set$textDecoration('none');
  var value0 = value;
  if (typeof value === 'string') {
    this.this_0.get$_lib2_component().get$style().set$textDecoration('underline');
    var value1 = $.TextBlock$0();
    value1.set$text(value);
    value0 = value1;
  }
  if (!$.eqNullB(this.this_0.get$_lib2_content())) {
    this.this_0.get$_lib2_content().get$_lib2_component().remove$0();
    this.this_0.get$_lib2_content().set$parent((void 0));
  }
  if (!$.eqNullB(value0)) {
    this.this_0.set$_lib2_content(value0);
    var t1 = this.this_0;
    this.this_0.get$_lib2_content().set$parent(t1);
    $.add$1(this.this_0.get$_lib2_component().get$nodes(), this.this_0.get$_lib2_content().get$_lib2_component());
  } else {
    this.this_0.set$_lib2_content((void 0));
  }
 },
});

Isolate.$defineClass("Closure76", "Closure330",
function Closure(this_29) {
  this.this_29 = this_29;
}, {
 $call$1: function(value) {
  var t0 = '' + $.stringToString(value.get$top()) + 'px ' + $.stringToString(value.get$right()) + 'px ' + $.stringToString(value.get$bottom()) + 'px ' + $.stringToString(value.get$left()) + 'px';
  this.this_29.get$_lib2_component().get$style().set$margin(t0);
  if (!$.eqNullB(this.this_29.get$parent())) {
    this.this_29.get$parent().updateLayout$0();
  }
 },
});

Isolate.$defineClass("Closure277", "Closure330",
function Closure(this_5, box_2) {
  this.this_5 = this_5;
  this.box_2 = box_2;
}, {
 $call$0: function() {
  var t0 = ({});
  t0.succeed_1 = true;
  $.forEach(this.box_2.aMap_3, new $.Closure280(this.this_5, t0));
  return t0.succeed_1;
 },
});

Isolate.$defineClass("Closure60", "Closure330",
function Closure(this_4) {
  this.this_4 = this_4;
}, {
 $call$1: function(value) {
  $.setXPCSS(this.this_4.get$_lib2_component(), 'perspective', '' + $.stringToString(value));
 },
});

Isolate.$defineClass("Closure264", "Closure330",
function Closure(box_0) {
  this.box_0 = box_0;
}, {
 $call$1: function(e) {
  return $._stringifyInternal(this.box_0.b_1, e, $.add(this.box_0.indent_2, 3));
 },
});

Isolate.$defineClass("StringToGridLengthConverter", "Object",
function StringToGridLengthConverter() {
}, {
 convert$2: function(value, parameter) {
  var t0 = value;
  if (!(typeof t0 === 'string')) {
    return value;
  }
  if ($.eqB(value, 'auto')) {
    return $.GridLength$auto$0();
  }
  if ($.contains$1(value, '*') === true) {
    var stripped = $.replaceAll(value, '*', '');
    if ($.eqB(stripped, '')) {
      return $.GridLength$star$1(1);
    }
    try {
      var val = $.parseDouble(stripped);
      return $.GridLength$star$1(val);
    }catch (t1) {
      var t2 = $.unwrapException(t1);
      if (t2 === (void 0) || typeof t2 === 'object' && !!t2.is$BadNumberFormatException) {
        throw $.captureStackTrace($.CTC8);
      } else {
        throw t1;
      }
    }
  }
  try {
    var val = $.parseInt(value);
    return $.GridLength$pixel$1(val);
  }catch (t3) {
    var t4 = $.unwrapException(t3);
    if (t4 === (void 0) || typeof t4 === 'object' && !!t4.is$BadNumberFormatException) {
      throw $.captureStackTrace($.CTC8);
    } else {
      throw t3;
    }
  }
 },
 convert$1: function(value) {
  return this.convert$2(value,(void 0))
},
 is$IValueConverter: true,
});

Isolate.$defineClass("Closure205", "Closure330",
function Closure() {
}, {
 $call$1: function(item) {
  var p = item.get$parent();
  if ($.eqNullB(p) || !((typeof p === 'object') && !!p.is$_GridCell)) {
    throw $.captureStackTrace($.BuckshotException$1('Deleted element not found in internal Grid collection.'));
  }
  item.removeFromLayoutTree$0();
  p.get$_lib2_component().remove$0();
 },
});

Isolate.$defineClass("AttachedFrameworkProperty", "FrameworkPropertyBase",
function AttachedFrameworkProperty(FrameworkPropertyBase_stringToValueConverter, FrameworkPropertyBase_propertyChanging, FrameworkPropertyBase_propertyName, FrameworkPropertyBase_propertyChangedCallback, FrameworkPropertyBase_sourceObject, HashableObject__lib2_assignedHash) {
  this.stringToValueConverter = FrameworkPropertyBase_stringToValueConverter;
  this.propertyChanging = FrameworkPropertyBase_propertyChanging;
  this.propertyName = FrameworkPropertyBase_propertyName;
  this.propertyChangedCallback = FrameworkPropertyBase_propertyChangedCallback;
  this.sourceObject = FrameworkPropertyBase_sourceObject;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 AttachedFrameworkProperty$2: function(propertyName, propertyChangedCallback) {
  $.indexSet($.buckshot().get$_lib2_attachedProperties(), this, $.HashMapImplementation$0());
 },
});

Isolate.$defineClass("Closure153", "Closure330",
function Closure(this_2) {
  this.this_2 = this_2;
}, {
 $call$1: function(value) {
  if ($._isValidInputType(value) === true) {
    $.indexSet(this.this_2.get$_lib2_component().get$attributes(), 'type', $.toString(value));
  } else {
    throw $.captureStackTrace($.BuckshotException$1('Invalid input \'' + $.stringToString(value) + '\' type passed to TextBox.inputType. Use InputTypes.{type} for safe assignment.'));
  }
 },
});

Isolate.$defineClass("Closure80", "Closure330",
function Closure(this_31) {
  this.this_31 = this_31;
}, {
 $call$1: function(value) {
  return this.this_31.calculateHeight$1(value);
 },
});

Isolate.$defineClass("Closure127", "Closure330",
function Closure() {
}, {
 $call$1: function(v) {
 },
});

Isolate.$defineClass("Closure136", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$1: function(i) {
  var option = $.createByTag('option');
  $.indexSet(option.get$attributes(), 'value', '' + $.stringToString(i));
  option.set$text('' + $.stringToString(i));
  $.add$1(this.this_0.get$_lib2_component().get$elements(), option);
 },
});

Isolate.$defineClass("Closure135", "Closure330",
function Closure() {
}, {
 $call$1: function(v) {
 },
});

Isolate.$defineClass("XmlException", "Object",
function XmlException(errorLocation, debugXml, msg) {
  this.errorLocation = errorLocation;
  this.debugXml = debugXml;
  this.msg = msg;
}, {
 toString$0: function() {
  if ($.eqB(this.get$debugXml(), '')) {
    return 'Xml Exception: ' + $.stringToString(this.get$msg());
  }
  var s = $.StringBufferImpl$1('');
  s.add$1('Xml Exception: ' + $.stringToString(this.get$msg()));
  s.add$1('\r');
  if ($.ltB(this.get$errorLocation(), 41)) {
    var bLoc = 0;
  } else {
    bLoc = $.sub(this.get$errorLocation(), 40);
  }
  if ($.gtB(this.get$errorLocation(), $.sub($.get$length(this.get$debugXml()), 41))) {
    var aLoc = $.sub($.get$length(this.get$debugXml()), 1);
  } else {
    aLoc = $.add(this.get$errorLocation(), 40);
  }
  s.add$1($.substring$2(this.get$debugXml(), bLoc, aLoc));
  return s.toString$0();
 },
 get$errorLocation: function() { return this.errorLocation; },
 get$debugXml: function() { return this.debugXml; },
 get$msg: function() { return this.msg; },
 is$Exception: true,
});

Isolate.$defineClass("Closure68", "Closure330",
function Closure(this_20, doTransform_19) {
  this.this_20 = this_20;
  this.doTransform_19 = doTransform_19;
}, {
 $call$1: function(value) {
  this.doTransform_19.$call$1(this.this_20);
 },
});

Isolate.$defineClass("Closure296", "Closure330",
function Closure(this_5) {
  this.this_5 = this_5;
}, {
 $call$1: function(from) {
  if (typeof from !== 'number') return this.$call$1$bailout(from,  0);
  for (var from0 = from; !($.isWhitespace($.charCodeAt(this.this_5.get$_lib7_xml(), from0)) === true); ) {
    from0 = from0 + 1;
  }
  return from0;
 },
 $call$1$bailout: function(from, state, env0) {
  switch (state) {
    case 1:
      t0 = env0;
      break;
  }
  switch (state) {
    case 0:
    case 1:
      state = 0;
      var from0 = from;
      L0: while (true) {
        if (!!($.isWhitespace($.charCodeAt(this.this_5.get$_lib7_xml(), from0)) === true)) break L0;
        from0 = $.add(from0, 1);
      }
      return from0;
  }
 },
});

Isolate.$defineClass("Closure39", "Closure330",
function Closure(this_24) {
  this.this_24 = this_24;
}, {
 $call$1: function(e) {
  if (!(this.this_24.get$gotFocus().get$hasHandlers() === true)) {
    return;
  }
  e.stopPropagation$0();
  this.this_24.get$gotFocus().invoke$2(this.this_24, $.EventArgs$0());
 },
});

Isolate.$defineClass("BuckshotObject", "HashableObject",
function BuckshotObject() {
}, {
 get$type: function() {
  return 'BuckshotObject';
 },
 resolveFirstProperty$1: function(propertyNameChain) {
  return $._resolvePropertyInternal(this, [$.index($.split($.trim(propertyNameChain), '.'), 0)]);
 },
 resolveProperty$1: function(propertyNameChain) {
  return $._resolvePropertyInternal(this, $.split($.trim(propertyNameChain), '.'));
 },
 _lib2_getPropertyByName$1: function(propertyName) {
  var t0 = ({});
  t0.propertyName_1 = propertyName;
  var result = $.filter(this.get$_lib2_frameworkProperties(), new $.Closure20(t0));
  if ($.eqB($.get$length(result), 0)) {
    return;
  }
  return $.iterator(result).next$0();
 },
 hasProperty$1: function(propertyName) {
  var t0 = ({});
  t0.propertyName_1 = propertyName;
  return $.some(this.get$_lib2_frameworkProperties(), new $.Closure114(t0));
 },
 get$isContainer: function() {
  return !!this.is$IFrameworkContainer;
 },
 get$_lib2_frameworkProperties: function() { return this._lib2_frameworkProperties; },
 get$_lib2_bindings: function() { return this._lib2_bindings; },
 get$_lib2_stateBag: function() { return this._lib2_stateBag; },
 is$BuckshotObject: true,
});

Isolate.$defineClass("Closure257", "Closure330",
function Closure(this_2, box_0) {
  this.this_2 = this_2;
  this.box_0 = box_0;
}, {
 $call$2: function(k, v) {
  if ($.contains$1(k, '.') === true) {
    var prop = $.toLowerCase(k);
    if ($.buckshot().get$_lib2_objectRegistry().containsKey$1(prop) === true) {
      $.index($.buckshot().get$_lib2_objectRegistry(), prop).$call$2(this.box_0.element_1, $.parseInt(v));
    }
  } else {
    var p = this.box_0.element_1.resolveProperty$1(k);
    if ($.eqNullB(p)) {
      return;
    }
    if ($.startsWith($.trim(v), '{') === true) {
      this.this_2._lib2_resolveBinding$2(p, $.trim(v));
    } else {
      $.setValue(p, v);
    }
  }
 },
});

Isolate.$defineClass("_MessagePortEventsImpl", "_EventsImpl",
function _MessagePortEventsImpl(_EventsImpl__lib5_ptr) {
  this._lib5_ptr = _EventsImpl__lib5_ptr;
}, {
 get$message: function() {
  return this._lib5_get$1('message');
 },
});

Isolate.$defineClass("Closure100", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$1: function(_) {
  var t0 = this.this_0;
  if (typeof t0 === 'object' && !!t0.is$IFrameworkContainer) {
    this.this_0.updateLayout$0();
  } else {
    if (!$.eqNullB(this.this_0.get$parent())) {
      this.this_0.get$parent().updateLayout$0();
    }
  }
 },
});

Isolate.$defineClass("GridUnitType", "Object",
function GridUnitType(_lib2_val) {
  this._lib2_val = _lib2_val;
}, {
 toString$0: function() {
  $0:{
    var t0 = this.get$_lib2_val();
    if (1 === t0) {
      return 'star';
    } else {
      if (2 === t0) {
        return 'pixel';
      } else {
        if (3 === t0) {
          return 'auto';
        } else {
          throw $.captureStackTrace($.CTC8);
        }
      }
    }
  }
 },
 get$_lib2_val: function() { return this._lib2_val; },
});

Isolate.$defineClass("Closure278", "Closure330",
function Closure() {
}, {
 $call$1: function(el) {
  return typeof el === 'object' && !!el.is$XmlElement;
 },
});

Isolate.$defineClass("Closure44", "Closure330",
function Closure(this_33, lostFocusHandler_32) {
  this.this_33 = this_33;
  this.lostFocusHandler_32 = lostFocusHandler_32;
}, {
 $call$0: function() {
  return this.this_33.get$_lib2_component().get$on().get$blur().remove$1(this.lostFocusHandler_32);
 },
});

Isolate.$defineClass("ConstantMap", "Object",
function ConstantMap(_lib6_keys, _lib6_jsObject, length) {
  this._lib6_keys = _lib6_keys;
  this._lib6_jsObject = _lib6_jsObject;
  this.length = length;
}, {
 clear$0: function() {
  return this._lib6_throwImmutable$0();
 },
 remove$1: function(key) {
  return this._lib6_throwImmutable$0();
 },
 operator$indexSet$2: function(key, val) {
  return this._lib6_throwImmutable$0();
 },
 _lib6_throwImmutable$0: function() {
  throw $.captureStackTrace($.CTC167);
 },
 toString$0: function() {
  return $.mapToString(this);
 },
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
 },
 getKeys$0: function() {
  return this.get$_lib6_keys();
 },
 forEach$1: function(f) {
  var t0 = ({});
  t0.f_1 = f;
  $.forEach(this.get$_lib6_keys(), new $.Closure26(this, t0));
 },
 operator$index$1: function(key) {
  if (!(this.containsKey$1(key) === true)) {
    return;
  }
  return $.jsPropertyAccess(this.get$_lib6_jsObject(), key);
 },
 containsKey$1: function(key) {
  if ($.eqB(key, '__proto__')) {
    return false;
  }
  return $.jsHasOwnProperty(this.get$_lib6_jsObject(), key);
 },
 get$_lib6_keys: function() { return this._lib6_keys; },
 get$_lib6_jsObject: function() { return this._lib6_jsObject; },
 get$length: function() { return this.length; },
 is$Map: function() { return true; },
});

Isolate.$defineClass("XmlNodeType", "Object",
function XmlNodeType(_lib7_type) {
  this._lib7_type = _lib7_type;
}, {
 toString$0: function() {
  return this.get$_lib7_type();
 },
 get$_lib7_type: function() { return this._lib7_type; },
 is$XmlNodeType: true,
});

Isolate.$defineClass("Closure35", "Closure330",
function Closure(mouseMoveHandler_18, this_17) {
  this.mouseMoveHandler_18 = mouseMoveHandler_18;
  this.this_17 = this_17;
}, {
 $call$0: function() {
  return this.this_17.get$_lib2_component().get$on().get$mouseMove().remove$1(this.mouseMoveHandler_18);
 },
});

Isolate.$defineClass("_ElementEventsImpl", "_EventsImpl",
function _ElementEventsImpl(_EventsImpl__lib5_ptr) {
  this._lib5_ptr = _EventsImpl__lib5_ptr;
}, {
 get$scroll: function() {
  return this._lib5_get$1('scroll');
 },
 get$mouseUp: function() {
  return this._lib5_get$1('mouseup');
 },
 get$mouseOver: function() {
  return this._lib5_get$1('mouseover');
 },
 get$mouseOut: function() {
  return this._lib5_get$1('mouseout');
 },
 get$mouseMove: function() {
  return this._lib5_get$1('mousemove');
 },
 get$mouseDown: function() {
  return this._lib5_get$1('mousedown');
 },
 get$keyUp: function() {
  return this._lib5_get$1('keyup');
 },
 get$focus: function() {
  return this._lib5_get$1('focus');
 },
 focus$0: function() { return this.get$focus().$call$0(); },
 get$click: function() {
  return this._lib5_get$1('click');
 },
 get$change: function() {
  return this._lib5_get$1('change');
 },
 get$blur: function() {
  return this._lib5_get$1('blur');
 },
});

Isolate.$defineClass("RawHtml", "FrameworkElement",
function RawHtml(htmlStringProperty, FrameworkElement_mouseUp, FrameworkElement_mouseDown, FrameworkElement_mouseMove, FrameworkElement_click, FrameworkElement_mouseLeave, FrameworkElement_mouseEnter, FrameworkElement_lostFocus, FrameworkElement_gotFocus, FrameworkElement_actionsProperty, FrameworkElement_perspectiveProperty, FrameworkElement_transformOriginZProperty, FrameworkElement_transformOriginYProperty, FrameworkElement_transformOriginXProperty, FrameworkElement_rotateZProperty, FrameworkElement_rotateYProperty, FrameworkElement_rotateXProperty, FrameworkElement_scaleZProperty, FrameworkElement_scaleYProperty, FrameworkElement_scaleXProperty, FrameworkElement_translateZProperty, FrameworkElement_translateYProperty, FrameworkElement_translateXProperty, FrameworkElement_styleProperty, FrameworkElement_visibilityProperty, FrameworkElement_opacityProperty, FrameworkElement_actualHeightProperty, FrameworkElement_actualWidthProperty, FrameworkElement_zOrderProperty, FrameworkElement_verticalAlignmentProperty, FrameworkElement_horizontalAlignmentProperty, FrameworkElement_tagProperty, FrameworkElement_cursorProperty, FrameworkElement_minHeightProperty, FrameworkElement_maxHeightProperty, FrameworkElement_minWidthProperty, FrameworkElement_maxWidthProperty, FrameworkElement_htmlIDProperty, FrameworkElement_heightProperty, FrameworkElement_widthProperty, FrameworkElement_marginProperty, FrameworkElement__lib2_transitionProperties, FrameworkElement__lib2_templateBindings, FrameworkElement__lib2_style, FrameworkElement__lib2_containerParent, FrameworkObject_mostRecentMeasurement, FrameworkObject__lib2_dataContextUpdated, FrameworkObject_nameProperty, FrameworkObject_attachedPropertyChanged, FrameworkObject_measurementChanged, FrameworkObject_unloaded, FrameworkObject_loaded, FrameworkObject_lateBindings, FrameworkObject_dataContextProperty, FrameworkObject__lib2_isLoaded, FrameworkObject__lib2_parent, FrameworkObject__lib2_component, FrameworkObject__lib2_previousMeasurement, FrameworkObject__lib2_animationFrameID, FrameworkObject__lib2_watchingMeasurement, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this.htmlStringProperty = htmlStringProperty;
  this.mouseUp = FrameworkElement_mouseUp;
  this.mouseDown = FrameworkElement_mouseDown;
  this.mouseMove = FrameworkElement_mouseMove;
  this.click = FrameworkElement_click;
  this.mouseLeave = FrameworkElement_mouseLeave;
  this.mouseEnter = FrameworkElement_mouseEnter;
  this.lostFocus = FrameworkElement_lostFocus;
  this.gotFocus = FrameworkElement_gotFocus;
  this.actionsProperty = FrameworkElement_actionsProperty;
  this.perspectiveProperty = FrameworkElement_perspectiveProperty;
  this.transformOriginZProperty = FrameworkElement_transformOriginZProperty;
  this.transformOriginYProperty = FrameworkElement_transformOriginYProperty;
  this.transformOriginXProperty = FrameworkElement_transformOriginXProperty;
  this.rotateZProperty = FrameworkElement_rotateZProperty;
  this.rotateYProperty = FrameworkElement_rotateYProperty;
  this.rotateXProperty = FrameworkElement_rotateXProperty;
  this.scaleZProperty = FrameworkElement_scaleZProperty;
  this.scaleYProperty = FrameworkElement_scaleYProperty;
  this.scaleXProperty = FrameworkElement_scaleXProperty;
  this.translateZProperty = FrameworkElement_translateZProperty;
  this.translateYProperty = FrameworkElement_translateYProperty;
  this.translateXProperty = FrameworkElement_translateXProperty;
  this.styleProperty = FrameworkElement_styleProperty;
  this.visibilityProperty = FrameworkElement_visibilityProperty;
  this.opacityProperty = FrameworkElement_opacityProperty;
  this.actualHeightProperty = FrameworkElement_actualHeightProperty;
  this.actualWidthProperty = FrameworkElement_actualWidthProperty;
  this.zOrderProperty = FrameworkElement_zOrderProperty;
  this.verticalAlignmentProperty = FrameworkElement_verticalAlignmentProperty;
  this.horizontalAlignmentProperty = FrameworkElement_horizontalAlignmentProperty;
  this.tagProperty = FrameworkElement_tagProperty;
  this.cursorProperty = FrameworkElement_cursorProperty;
  this.minHeightProperty = FrameworkElement_minHeightProperty;
  this.maxHeightProperty = FrameworkElement_maxHeightProperty;
  this.minWidthProperty = FrameworkElement_minWidthProperty;
  this.maxWidthProperty = FrameworkElement_maxWidthProperty;
  this.htmlIDProperty = FrameworkElement_htmlIDProperty;
  this.heightProperty = FrameworkElement_heightProperty;
  this.widthProperty = FrameworkElement_widthProperty;
  this.marginProperty = FrameworkElement_marginProperty;
  this._lib2_transitionProperties = FrameworkElement__lib2_transitionProperties;
  this._lib2_templateBindings = FrameworkElement__lib2_templateBindings;
  this._lib2_style = FrameworkElement__lib2_style;
  this._lib2_containerParent = FrameworkElement__lib2_containerParent;
  this.mostRecentMeasurement = FrameworkObject_mostRecentMeasurement;
  this._lib2_dataContextUpdated = FrameworkObject__lib2_dataContextUpdated;
  this.nameProperty = FrameworkObject_nameProperty;
  this.attachedPropertyChanged = FrameworkObject_attachedPropertyChanged;
  this.measurementChanged = FrameworkObject_measurementChanged;
  this.unloaded = FrameworkObject_unloaded;
  this.loaded = FrameworkObject_loaded;
  this.lateBindings = FrameworkObject_lateBindings;
  this.dataContextProperty = FrameworkObject_dataContextProperty;
  this._lib2_isLoaded = FrameworkObject__lib2_isLoaded;
  this._lib2_parent = FrameworkObject__lib2_parent;
  this._lib2_component = FrameworkObject__lib2_component;
  this._lib2_previousMeasurement = FrameworkObject__lib2_previousMeasurement;
  this._lib2_animationFrameID = FrameworkObject__lib2_animationFrameID;
  this._lib2_watchingMeasurement = FrameworkObject__lib2_watchingMeasurement;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$type: function() {
  return 'RawHtml';
 },
 updateLayout$0: function() {
 },
 CreateElement$0: function() {
  this.set$_lib2_component($.createByTag('div'));
 },
 _lib2_initRawHtmlProperties$0: function() {
  this.set$htmlStringProperty($.FrameworkProperty$5(this, 'htmlString', new $.Closure243(this), (void 0), (void 0)));
 },
 makeMe$0: function() {
  return $.RawHtml$0();
 },
 set$htmlStringProperty: function(v) { this.htmlStringProperty = v; },
 RawHtml$0: function() {
  $.appendBuckshotClass(this.get$_lib2_component(), 'rawhtml');
  this._lib2_initRawHtmlProperties$0();
 },
});

Isolate.$defineClass("Closure321", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$0: function() {
  return this.this_0._lib2_startWatchMeasurement$0();
 },
});

Isolate.$defineClass("Closure17", "Closure330",
function Closure(box_0) {
  this.box_0 = box_0;
}, {
 $call$1: function(p) {
  var pre = '' + $.stringToString(p) + $.stringToString(this.box_0.property_2);
  this.box_0.e_1.get$style().setProperty$2(pre, this.box_0.value_3);
 },
});

Isolate.$defineClass("Closure228", "Closure330",
function Closure(this_2) {
  this.this_2 = this_2;
}, {
 $call$1: function(value) {
  $.indexSet(this.this_2.get$_lib2_component().get$attributes(), 'spellcheck', $.toString(value));
 },
});

Isolate.$defineClass("XmlCDATA", "XmlNode",
function XmlCDATA(text, XmlNode_parent, XmlNode_type) {
  this.text = text;
  this.parent = XmlNode_parent;
  this.type = XmlNode_type;
}, {
 toString$0: function() {
  return '<![CDATA[\r' + $.stringToString(this.get$text()) + '\r]]>';
 },
 get$text: function() { return this.text; },
});

Isolate.$defineClass("MouseEventArgs", "RoutedEventArgs",
function MouseEventArgs(windowY, windowX, mouseY, mouseX, RoutedEventArgs_cancelBubble, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this.windowY = windowY;
  this.windowX = windowX;
  this.mouseY = mouseY;
  this.mouseX = mouseX;
  this.cancelBubble = RoutedEventArgs_cancelBubble;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$type: function() {
  return 'MouseEventArgs';
 },
});

Isolate.$defineClass("Closure217", "Closure330",
function Closure(box_0) {
  this.box_0 = box_0;
}, {
 $call$1: function(child) {
  var childHeight = child.get$content().get$mostRecentMeasurement().get$bounding().get$height();
  if ($.gtB(childHeight, this.box_0.widestAuto_2)) {
    this.box_0.widestAuto_2 = childHeight;
  }
 },
});

Isolate.$defineClass("Closure98", "Closure330",
function Closure(this_2, box_0) {
  this.this_2 = this_2;
  this.box_0 = box_0;
}, {
 $call$1: function(r) {
  $.setValue(this.this_2.get$actualWidthProperty(), r.get$bounding().get$width());
  $.setValue(this.this_2.get$actualHeightProperty(), r.get$bounding().get$height());
  this.this_2.set$mostRecentMeasurement(r);
  this.box_0.c_1.complete$1(r);
 },
});

Isolate.$defineClass("Closure183", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$1: function(value) {
  this.this_0.get$shapeElement().get$style().setProperty$2('stroke-width', '' + $.stringToString(value));
 },
});

Isolate.$defineClass("Closure94", "Closure330",
function Closure(box_0) {
  this.box_0 = box_0;
}, {
 $call$1: function(p) {
  return $.eq(p.get$propertyName(), this.box_0.setter_1.get$property());
 },
});

Isolate.$defineClass("Closure95", "Closure330",
function Closure(this_2, box_0) {
  this.this_2 = this_2;
  this.box_0 = box_0;
}, {
 $call$1: function(p) {
  var b = $._lib2_BindingImplementation$4(this.box_0.setter_1.get$valueProperty(), p, $.CTC159, $.CTC160);
  $.indexSet(p.get$sourceObject().get$_lib2_stateBag(), '' + $.stringToString(this.this_2.get$stateBagPrefix()) + $.stringToString(this.box_0.setter_1.get$property()) + '__', b);
 },
});

Isolate.$defineClass("_XMLHttpRequestUploadEventsImpl", "_EventsImpl",
function _XMLHttpRequestUploadEventsImpl(_EventsImpl__lib5_ptr) {
  this._lib5_ptr = _EventsImpl__lib5_ptr;
}, {
});

Isolate.$defineClass("StringToVerticalAlignmentConverter", "Object",
function StringToVerticalAlignmentConverter() {
}, {
 convert$2: function(value, parameter) {
  if (!(typeof value === 'string')) {
    return value;
  }
  $0:{
    if ('center' === value) {
      return $.CTC153;
    } else {
      if ('stretch' === value) {
        return $.CTC154;
      } else {
        if ('top' === value) {
          return $.CTC151;
        } else {
          if ('bottom' === value) {
            return $.CTC152;
          } else {
            throw $.captureStackTrace($.BuckshotException$1('Invalid verticalAlignment value "' + $.stringToString(value) + '".'));
          }
        }
      }
    }
  }
 },
 convert$1: function(value) {
  return this.convert$2(value,(void 0))
},
 is$IValueConverter: true,
});

Isolate.$defineClass("Closure34", "Closure330",
function Closure(mouseMoveHandler_16, this_15) {
  this.mouseMoveHandler_16 = mouseMoveHandler_16;
  this.this_15 = this_15;
}, {
 $call$0: function() {
  return $.add$1(this.this_15.get$_lib2_component().get$on().get$mouseMove(), this.mouseMoveHandler_16);
 },
});

Isolate.$defineClass("Closure198", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$1: function(element) {
  element.set$margin($.index(element.get$_lib2_stateBag(), 'margin'));
  element.get$_lib2_stateBag().remove$1('margin');
  element.get$_lib2_component().get$style().set$position('inherit');
  $.sub(element.get$attachedPropertyChanged(), this.this_0.get$_lib2_onAttachedPropertyChanging());
 },
});

Isolate.$defineClass("Closure6", "Closure330",
function Closure(this_3) {
  this.this_3 = this_3;
}, {
 $call$1: function(value) {
  var value0 = value;
  if ($.eqNullB(value) || $.ltB(value, 0)) {
    value0 = 0;
  }
  var t0 = '' + $.stringToString(value0) + 'px';
  this.this_3.get$_lib2_component().get$style().set$borderRadius(t0);
 },
});

Isolate.$defineClass("RadialGradientDrawMode", "Object",
function RadialGradientDrawMode(_lib2_str) {
  this._lib2_str = _lib2_str;
}, {
 toString$0: function() {
  return this.get$_lib2_str();
 },
 get$_lib2_str: function() { return this._lib2_str; },
});

Isolate.$defineClass("Closure31", "Closure330",
function Closure(this_11, mouseDownHandler_10) {
  this.this_11 = this_11;
  this.mouseDownHandler_10 = mouseDownHandler_10;
}, {
 $call$0: function() {
  return $.add$1(this.this_11.get$_lib2_component().get$on().get$mouseDown(), this.mouseDownHandler_10);
 },
});

Isolate.$defineClass("PresentationProviderException", "ExceptionBase",
function PresentationProviderException() {
}, {
 get$type: function() {
  return 'PresentationProviderException';
 },
});

Isolate.$defineClass("Closure42", "Closure330",
function Closure(this_29) {
  this.this_29 = this_29;
}, {
 $call$1: function(e) {
  if (!(this.this_29.get$lostFocus().get$hasHandlers() === true)) {
    return;
  }
  e.stopPropagation$0();
  this.this_29.get$lostFocus().invoke$2(this.this_29, $.EventArgs$0());
 },
});

Isolate.$defineClass("StackOverflowException", "Object",
function StackOverflowException() {
}, {
 toString$0: function() {
  return 'Stack Overflow';
 },
 is$Exception: true,
});

Isolate.$defineClass("StringBufferImpl", "Object",
function StringBufferImpl(_lib3_length, _lib3_buffer) {
  this._lib3_length = _lib3_length;
  this._lib3_buffer = _lib3_buffer;
}, {
 set$_lib3_length: function(v) { this._lib3_length = v; },
 get$_lib3_length: function() { return this._lib3_length; },
 set$_lib3_buffer: function(v) { this._lib3_buffer = v; },
 get$_lib3_buffer: function() { return this._lib3_buffer; },
 toString$0: function() {
  if ($.get$length(this.get$_lib3_buffer()) === 0) {
    return '';
  }
  if ($.get$length(this.get$_lib3_buffer()) === 1) {
    return $.index(this.get$_lib3_buffer(), 0);
  }
  var result = $.concatAll(this.get$_lib3_buffer());
  $.clear(this.get$_lib3_buffer());
  $.add$1(this.get$_lib3_buffer(), result);
  return result;
 },
 clear$0: function() {
  var t0 = $.List((void 0));
  $.setRuntimeTypeInfo(t0, ({E: 'String'}));
  this.set$_lib3_buffer(t0);
  this.set$_lib3_length(0);
  return this;
 },
 addAll$1: function(objects) {
  for (var t0 = $.iterator(objects); t0.hasNext$0() === true; ) {
    this.add$1(t0.next$0());
  }
  return this;
 },
 add$1: function(obj) {
  var str = $.toString(obj);
  if (str === (void 0) || $.isEmpty(str) === true) {
    return this;
  }
  $.add$1(this.get$_lib3_buffer(), str);
  this.set$_lib3_length($.add(this.get$_lib3_length(), $.get$length(str)));
  return this;
 },
 isEmpty$0: function() {
  return this.get$_lib3_length() === 0;
 },
 get$length: function() {
  return this.get$_lib3_length();
 },
 StringBufferImpl$1: function(content$) {
  this.clear$0();
  this.add$1(content$);
 },
});

Isolate.$defineClass("Closure286", "Closure330",
function Closure() {
}, {
 $call$1: function(el) {
  return typeof el === 'object' && !!el.is$XmlElement;
 },
});

Isolate.$defineClass("HashMapImplementation", "Object",
function HashMapImplementation(_lib3_numberOfDeleted, _lib3_numberOfEntries, _lib3_loadLimit, _lib3_values, _lib3_keys) {
  this._lib3_numberOfDeleted = _lib3_numberOfDeleted;
  this._lib3_numberOfEntries = _lib3_numberOfEntries;
  this._lib3_loadLimit = _lib3_loadLimit;
  this._lib3_values = _lib3_values;
  this._lib3_keys = _lib3_keys;
}, {
 toString$0: function() {
  return $.mapToString(this);
 },
 containsKey$1: function(key) {
  return !$.eqB(this._lib3_probeForLookup$1(key), -1);
 },
 getKeys$0: function() {
  var t0 = ({});
  var list = $.List($.get$length(this));
  $.setRuntimeTypeInfo(list, ({E: 'K'}));
  t0.list_1 = list;
  t0.i_2 = 0;
  this.forEach$1(new $.Closure116(t0));
  return t0.list_1;
 },
 forEach$1: function(f) {
  var length$ = $.get$length(this.get$_lib3_keys());
  if (typeof length$ !== 'number') return this.forEach$1$bailout(f, 1, length$);
  for (var i = 0; i < length$; i = i + 1) {
    var key = $.index(this.get$_lib3_keys(), i);
    if (!(key === (void 0)) && !(key === $.CTC2)) {
      f.$call$2(key, $.index(this.get$_lib3_values(), i));
    }
  }
 },
 forEach$1$bailout: function(f, state, env0) {
  switch (state) {
    case 1:
      length$ = env0;
      break;
  }
  switch (state) {
    case 0:
      var length$ = $.get$length(this.get$_lib3_keys());
    case 1:
      state = 0;
      var i = 0;
      L0: while (true) {
        if (!$.ltB(i, length$)) break L0;
        var key = $.index(this.get$_lib3_keys(), i);
        if (!(key === (void 0)) && !(key === $.CTC2)) {
          f.$call$2(key, $.index(this.get$_lib3_values(), i));
        }
        i = i + 1;
      }
  }
 },
 get$length: function() {
  return this.get$_lib3_numberOfEntries();
 },
 isEmpty$0: function() {
  return $.eq(this.get$_lib3_numberOfEntries(), 0);
 },
 remove$1: function(key) {
  var index = this._lib3_probeForLookup$1(key);
  if ($.geB(index, 0)) {
    this.set$_lib3_numberOfEntries($.sub(this.get$_lib3_numberOfEntries(), 1));
    var value = $.index(this.get$_lib3_values(), index);
    $.indexSet(this.get$_lib3_values(), index, (void 0));
    $.indexSet(this.get$_lib3_keys(), index, $.CTC2);
    this.set$_lib3_numberOfDeleted($.add(this.get$_lib3_numberOfDeleted(), 1));
    return value;
  }
  return;
 },
 operator$index$1: function(key) {
  var index = this._lib3_probeForLookup$1(key);
  if ($.ltB(index, 0)) {
    return;
  }
  return $.index(this.get$_lib3_values(), index);
 },
 operator$indexSet$2: function(key, value) {
  this._lib3_ensureCapacity$0();
  var index = this._lib3_probeForAdding$1(key);
  if ($.index(this.get$_lib3_keys(), index) === (void 0) || $.index(this.get$_lib3_keys(), index) === $.CTC2) {
    this.set$_lib3_numberOfEntries($.add(this.get$_lib3_numberOfEntries(), 1));
  }
  $.indexSet(this.get$_lib3_keys(), index, key);
  $.indexSet(this.get$_lib3_values(), index, value);
 },
 clear$0: function() {
  this.set$_lib3_numberOfEntries(0);
  this.set$_lib3_numberOfDeleted(0);
  var length$ = $.get$length(this.get$_lib3_keys());
  if (typeof length$ !== 'number') return this.clear$0$bailout(1, length$);
  for (var i = 0; i < length$; i = i + 1) {
    $.indexSet(this.get$_lib3_keys(), i, (void 0));
    $.indexSet(this.get$_lib3_values(), i, (void 0));
  }
 },
 clear$0$bailout: function(state, env0) {
  switch (state) {
    case 1:
      length$ = env0;
      break;
  }
  switch (state) {
    case 0:
      this.set$_lib3_numberOfEntries(0);
      this.set$_lib3_numberOfDeleted(0);
      var length$ = $.get$length(this.get$_lib3_keys());
    case 1:
      state = 0;
      var i = 0;
      L0: while (true) {
        if (!$.ltB(i, length$)) break L0;
        $.indexSet(this.get$_lib3_keys(), i, (void 0));
        $.indexSet(this.get$_lib3_values(), i, (void 0));
        i = i + 1;
      }
  }
 },
 _lib3_grow$1: function(newCapacity) {
  $.assert($._isPowerOfTwo(newCapacity));
  var capacity = $.get$length(this.get$_lib3_keys());
  if (typeof capacity !== 'number') return this._lib3_grow$1$bailout(newCapacity, 1, capacity);
  this.set$_lib3_loadLimit($._computeLoadLimit(newCapacity));
  var oldKeys = this.get$_lib3_keys();
  if (typeof oldKeys !== 'string' && (typeof oldKeys !== 'object'||oldKeys.constructor !== Array)) return this._lib3_grow$1$bailout(newCapacity, 2, capacity, oldKeys);
  var oldValues = this.get$_lib3_values();
  if (typeof oldValues !== 'string' && (typeof oldValues !== 'object'||oldValues.constructor !== Array)) return this._lib3_grow$1$bailout(newCapacity, 3, capacity, oldKeys, oldValues);
  this.set$_lib3_keys($.List(newCapacity));
  var t0 = $.List(newCapacity);
  $.setRuntimeTypeInfo(t0, ({E: 'V'}));
  this.set$_lib3_values(t0);
  for (var i = 0; i < capacity; i = i + 1) {
    var t1 = oldKeys.length;
    if (i < 0 || i >= t1) throw $.ioore(i);
    var t2 = oldKeys[i];
    if (t2 === (void 0) || t2 === $.CTC2) {
      continue;
    }
    var t3 = oldValues.length;
    if (i < 0 || i >= t3) throw $.ioore(i);
    var t4 = oldValues[i];
    var newIndex = this._lib3_probeForAdding$1(t2);
    $.indexSet(this.get$_lib3_keys(), newIndex, t2);
    $.indexSet(this.get$_lib3_values(), newIndex, t4);
  }
  this.set$_lib3_numberOfDeleted(0);
 },
 _lib3_grow$1$bailout: function(newCapacity, state, env0, env1, env2) {
  switch (state) {
    case 1:
      capacity = env0;
      break;
    case 2:
      capacity = env0;
      oldKeys = env1;
      break;
    case 3:
      capacity = env0;
      oldKeys = env1;
      oldValues = env2;
      break;
  }
  switch (state) {
    case 0:
      $.assert($._isPowerOfTwo(newCapacity));
      var capacity = $.get$length(this.get$_lib3_keys());
    case 1:
      state = 0;
      this.set$_lib3_loadLimit($._computeLoadLimit(newCapacity));
      var oldKeys = this.get$_lib3_keys();
    case 2:
      state = 0;
      var oldValues = this.get$_lib3_values();
    case 3:
      state = 0;
      this.set$_lib3_keys($.List(newCapacity));
      var t0 = $.List(newCapacity);
      $.setRuntimeTypeInfo(t0, ({E: 'V'}));
      this.set$_lib3_values(t0);
      var i = 0;
      L0: while (true) {
        if (!$.ltB(i, capacity)) break L0;
        c$0:{
          var key = $.index(oldKeys, i);
          if (key === (void 0) || key === $.CTC2) {
            break c$0;
          }
          var value = $.index(oldValues, i);
          var newIndex = this._lib3_probeForAdding$1(key);
          $.indexSet(this.get$_lib3_keys(), newIndex, key);
          $.indexSet(this.get$_lib3_values(), newIndex, value);
        }
        i = i + 1;
      }
      this.set$_lib3_numberOfDeleted(0);
  }
 },
 _lib3_ensureCapacity$0: function() {
  var newNumberOfEntries = $.add(this.get$_lib3_numberOfEntries(), 1);
  if ($.geB(newNumberOfEntries, this.get$_lib3_loadLimit())) {
    this._lib3_grow$1($.mul($.get$length(this.get$_lib3_keys()), 2));
    return;
  }
  var numberOfFree = $.sub($.sub($.get$length(this.get$_lib3_keys()), newNumberOfEntries), this.get$_lib3_numberOfDeleted());
  if ($.gtB(this.get$_lib3_numberOfDeleted(), numberOfFree)) {
    this._lib3_grow$1($.get$length(this.get$_lib3_keys()));
  }
 },
 _lib3_probeForLookup$1: function(key) {
  for (var hash = $._firstProbe($.hashCode(key), $.get$length(this.get$_lib3_keys())), numberOfProbes = 1; true; ) {
    var existingKey = $.index(this.get$_lib3_keys(), hash);
    if (existingKey === (void 0)) {
      return -1;
    }
    if ($.eqB(existingKey, key)) {
      return hash;
    }
    var numberOfProbes0 = numberOfProbes + 1;
    var hash0 = $._nextProbe(hash, numberOfProbes, $.get$length(this.get$_lib3_keys()));
    hash = hash0;
    numberOfProbes = numberOfProbes0;
  }
 },
 _lib3_probeForAdding$1: function(key) {
  var hash = $._firstProbe($.hashCode(key), $.get$length(this.get$_lib3_keys()));
  if (hash !== (hash | 0)) return this._lib3_probeForAdding$1$bailout(key, 1, hash);
  for (var numberOfProbes = 1, hash0 = hash, insertionIndex = -1; true; ) {
    var existingKey = $.index(this.get$_lib3_keys(), hash0);
    if (existingKey === (void 0)) {
      if ($.ltB(insertionIndex, 0)) {
        return hash0;
      }
      return insertionIndex;
    } else {
      if ($.eqB(existingKey, key)) {
        return hash0;
      } else {
        if ($.ltB(insertionIndex, 0) && $.CTC2 === existingKey) {
          insertionIndex = hash0;
        }
        var numberOfProbes0 = numberOfProbes + 1;
      }
    }
    var hash1 = $._nextProbe(hash0, numberOfProbes, $.get$length(this.get$_lib3_keys()));
    numberOfProbes = numberOfProbes0;
    hash0 = hash1;
  }
 },
 _lib3_probeForAdding$1$bailout: function(key, state, env0) {
  switch (state) {
    case 1:
      hash = env0;
      break;
  }
  switch (state) {
    case 0:
      var hash = $._firstProbe($.hashCode(key), $.get$length(this.get$_lib3_keys()));
    case 1:
      state = 0;
      var numberOfProbes = 1;
      var hash0 = hash;
      var insertionIndex = -1;
      L0: while (true) {
        if (!true) break L0;
        var existingKey = $.index(this.get$_lib3_keys(), hash0);
        if (existingKey === (void 0)) {
          if ($.ltB(insertionIndex, 0)) {
            return hash0;
          }
          return insertionIndex;
        } else {
          if ($.eqB(existingKey, key)) {
            return hash0;
          } else {
            if ($.ltB(insertionIndex, 0) && $.CTC2 === existingKey) {
              insertionIndex = hash0;
            }
            var numberOfProbes0 = numberOfProbes + 1;
          }
        }
        var hash1 = $._nextProbe(hash0, numberOfProbes, $.get$length(this.get$_lib3_keys()));
        numberOfProbes = numberOfProbes0;
        hash0 = hash1;
      }
  }
 },
 set$_lib3_numberOfDeleted: function(v) { this._lib3_numberOfDeleted = v; },
 get$_lib3_numberOfDeleted: function() { return this._lib3_numberOfDeleted; },
 set$_lib3_numberOfEntries: function(v) { this._lib3_numberOfEntries = v; },
 get$_lib3_numberOfEntries: function() { return this._lib3_numberOfEntries; },
 set$_lib3_loadLimit: function(v) { this._lib3_loadLimit = v; },
 get$_lib3_loadLimit: function() { return this._lib3_loadLimit; },
 set$_lib3_values: function(v) { this._lib3_values = v; },
 get$_lib3_values: function() { return this._lib3_values; },
 set$_lib3_keys: function(v) { this._lib3_keys = v; },
 get$_lib3_keys: function() { return this._lib3_keys; },
 HashMapImplementation$0: function() {
  this.set$_lib3_numberOfEntries(0);
  this.set$_lib3_numberOfDeleted(0);
  this.set$_lib3_loadLimit($._computeLoadLimit(8));
  this.set$_lib3_keys($.List(8));
  var t0 = $.List(8);
  $.setRuntimeTypeInfo(t0, ({E: 'V'}));
  this.set$_lib3_values(t0);
 },
 is$Map: function() { return true; },
});

Isolate.$defineClass("Closure315", "Closure330",
function Closure() {
}, {
 $call$1: function(child) {
  $.setHorizontalItemFlexAlignment(child, child.get$horizontalAlignment());
 },
});

Isolate.$defineClass("Closure244", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$1: function(value) {
  this.this_0.add$1(value);
 },
});

Isolate.$defineClass("Hyperlink", "Control",
function Hyperlink(fontFamilyProperty, fontSizeProperty, foregroundProperty, navigateToProperty, targetNameProperty, contentProperty, _lib2_content, Control__lib2_templateBindingsApplied, Control__lib2_templateApplied, Control__lib2_visualTemplateApplied, Control_template, Control_isEnabledProperty, FrameworkElement_mouseUp, FrameworkElement_mouseDown, FrameworkElement_mouseMove, FrameworkElement_click, FrameworkElement_mouseLeave, FrameworkElement_mouseEnter, FrameworkElement_lostFocus, FrameworkElement_gotFocus, FrameworkElement_actionsProperty, FrameworkElement_perspectiveProperty, FrameworkElement_transformOriginZProperty, FrameworkElement_transformOriginYProperty, FrameworkElement_transformOriginXProperty, FrameworkElement_rotateZProperty, FrameworkElement_rotateYProperty, FrameworkElement_rotateXProperty, FrameworkElement_scaleZProperty, FrameworkElement_scaleYProperty, FrameworkElement_scaleXProperty, FrameworkElement_translateZProperty, FrameworkElement_translateYProperty, FrameworkElement_translateXProperty, FrameworkElement_styleProperty, FrameworkElement_visibilityProperty, FrameworkElement_opacityProperty, FrameworkElement_actualHeightProperty, FrameworkElement_actualWidthProperty, FrameworkElement_zOrderProperty, FrameworkElement_verticalAlignmentProperty, FrameworkElement_horizontalAlignmentProperty, FrameworkElement_tagProperty, FrameworkElement_cursorProperty, FrameworkElement_minHeightProperty, FrameworkElement_maxHeightProperty, FrameworkElement_minWidthProperty, FrameworkElement_maxWidthProperty, FrameworkElement_htmlIDProperty, FrameworkElement_heightProperty, FrameworkElement_widthProperty, FrameworkElement_marginProperty, FrameworkElement__lib2_transitionProperties, FrameworkElement__lib2_templateBindings, FrameworkElement__lib2_style, FrameworkElement__lib2_containerParent, FrameworkObject_mostRecentMeasurement, FrameworkObject__lib2_dataContextUpdated, FrameworkObject_nameProperty, FrameworkObject_attachedPropertyChanged, FrameworkObject_measurementChanged, FrameworkObject_unloaded, FrameworkObject_loaded, FrameworkObject_lateBindings, FrameworkObject_dataContextProperty, FrameworkObject__lib2_isLoaded, FrameworkObject__lib2_parent, FrameworkObject__lib2_component, FrameworkObject__lib2_previousMeasurement, FrameworkObject__lib2_animationFrameID, FrameworkObject__lib2_watchingMeasurement, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this.fontFamilyProperty = fontFamilyProperty;
  this.fontSizeProperty = fontSizeProperty;
  this.foregroundProperty = foregroundProperty;
  this.navigateToProperty = navigateToProperty;
  this.targetNameProperty = targetNameProperty;
  this.contentProperty = contentProperty;
  this._lib2_content = _lib2_content;
  this._lib2_templateBindingsApplied = Control__lib2_templateBindingsApplied;
  this._lib2_templateApplied = Control__lib2_templateApplied;
  this._lib2_visualTemplateApplied = Control__lib2_visualTemplateApplied;
  this.template = Control_template;
  this.isEnabledProperty = Control_isEnabledProperty;
  this.mouseUp = FrameworkElement_mouseUp;
  this.mouseDown = FrameworkElement_mouseDown;
  this.mouseMove = FrameworkElement_mouseMove;
  this.click = FrameworkElement_click;
  this.mouseLeave = FrameworkElement_mouseLeave;
  this.mouseEnter = FrameworkElement_mouseEnter;
  this.lostFocus = FrameworkElement_lostFocus;
  this.gotFocus = FrameworkElement_gotFocus;
  this.actionsProperty = FrameworkElement_actionsProperty;
  this.perspectiveProperty = FrameworkElement_perspectiveProperty;
  this.transformOriginZProperty = FrameworkElement_transformOriginZProperty;
  this.transformOriginYProperty = FrameworkElement_transformOriginYProperty;
  this.transformOriginXProperty = FrameworkElement_transformOriginXProperty;
  this.rotateZProperty = FrameworkElement_rotateZProperty;
  this.rotateYProperty = FrameworkElement_rotateYProperty;
  this.rotateXProperty = FrameworkElement_rotateXProperty;
  this.scaleZProperty = FrameworkElement_scaleZProperty;
  this.scaleYProperty = FrameworkElement_scaleYProperty;
  this.scaleXProperty = FrameworkElement_scaleXProperty;
  this.translateZProperty = FrameworkElement_translateZProperty;
  this.translateYProperty = FrameworkElement_translateYProperty;
  this.translateXProperty = FrameworkElement_translateXProperty;
  this.styleProperty = FrameworkElement_styleProperty;
  this.visibilityProperty = FrameworkElement_visibilityProperty;
  this.opacityProperty = FrameworkElement_opacityProperty;
  this.actualHeightProperty = FrameworkElement_actualHeightProperty;
  this.actualWidthProperty = FrameworkElement_actualWidthProperty;
  this.zOrderProperty = FrameworkElement_zOrderProperty;
  this.verticalAlignmentProperty = FrameworkElement_verticalAlignmentProperty;
  this.horizontalAlignmentProperty = FrameworkElement_horizontalAlignmentProperty;
  this.tagProperty = FrameworkElement_tagProperty;
  this.cursorProperty = FrameworkElement_cursorProperty;
  this.minHeightProperty = FrameworkElement_minHeightProperty;
  this.maxHeightProperty = FrameworkElement_maxHeightProperty;
  this.minWidthProperty = FrameworkElement_minWidthProperty;
  this.maxWidthProperty = FrameworkElement_maxWidthProperty;
  this.htmlIDProperty = FrameworkElement_htmlIDProperty;
  this.heightProperty = FrameworkElement_heightProperty;
  this.widthProperty = FrameworkElement_widthProperty;
  this.marginProperty = FrameworkElement_marginProperty;
  this._lib2_transitionProperties = FrameworkElement__lib2_transitionProperties;
  this._lib2_templateBindings = FrameworkElement__lib2_templateBindings;
  this._lib2_style = FrameworkElement__lib2_style;
  this._lib2_containerParent = FrameworkElement__lib2_containerParent;
  this.mostRecentMeasurement = FrameworkObject_mostRecentMeasurement;
  this._lib2_dataContextUpdated = FrameworkObject__lib2_dataContextUpdated;
  this.nameProperty = FrameworkObject_nameProperty;
  this.attachedPropertyChanged = FrameworkObject_attachedPropertyChanged;
  this.measurementChanged = FrameworkObject_measurementChanged;
  this.unloaded = FrameworkObject_unloaded;
  this.loaded = FrameworkObject_loaded;
  this.lateBindings = FrameworkObject_lateBindings;
  this.dataContextProperty = FrameworkObject_dataContextProperty;
  this._lib2_isLoaded = FrameworkObject__lib2_isLoaded;
  this._lib2_parent = FrameworkObject__lib2_parent;
  this._lib2_component = FrameworkObject__lib2_component;
  this._lib2_previousMeasurement = FrameworkObject__lib2_previousMeasurement;
  this._lib2_animationFrameID = FrameworkObject__lib2_animationFrameID;
  this._lib2_watchingMeasurement = FrameworkObject__lib2_watchingMeasurement;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$type: function() {
  return 'Hyperlink';
 },
 CreateElement$0: function() {
  this.set$_lib2_component($.createByTag('a'));
 },
 _lib2_initHyperlinkProperties$0: function() {
  this.set$contentProperty($.FrameworkProperty$5(this, 'content', new $.Closure235(this), (void 0), (void 0)));
  this.set$targetNameProperty($.FrameworkProperty$5(this, 'targetName', new $.Closure236(this), '_self', (void 0)));
  this.set$navigateToProperty($.FrameworkProperty$5(this, 'navigateTo', new $.Closure237(this), (void 0), (void 0)));
  this.set$foregroundProperty($.FrameworkProperty$5(this, 'foreground', new $.Closure238(this), $.SolidColorBrush$1($.Color$predefined$1($.CTC18)), $.CTC4));
  this.set$fontSizeProperty($.FrameworkProperty$5(this, 'fontSize', new $.Closure239(this), (void 0), (void 0)));
  this.set$fontFamilyProperty($.FrameworkProperty$5(this, 'fontFamily', new $.Closure240(this), (void 0), (void 0)));
 },
 set$fontSize: function(value) {
  return $.setValue(this.get$fontSizeProperty(), value);
 },
 set$fontFamily: function(value) {
  return $.setValue(this.get$fontFamilyProperty(), value);
 },
 set$content: function(value) {
  return $.setValue(this.get$contentProperty(), value);
 },
 get$content: function() {
  return $.getValue(this.get$contentProperty());
 },
 makeMe$0: function() {
  return $.Hyperlink$0();
 },
 set$fontFamilyProperty: function(v) { this.fontFamilyProperty = v; },
 get$fontFamilyProperty: function() { return this.fontFamilyProperty; },
 set$fontSizeProperty: function(v) { this.fontSizeProperty = v; },
 get$fontSizeProperty: function() { return this.fontSizeProperty; },
 set$foregroundProperty: function(v) { this.foregroundProperty = v; },
 set$navigateToProperty: function(v) { this.navigateToProperty = v; },
 set$targetNameProperty: function(v) { this.targetNameProperty = v; },
 set$contentProperty: function(v) { this.contentProperty = v; },
 get$contentProperty: function() { return this.contentProperty; },
 set$_lib2_content: function(v) { this._lib2_content = v; },
 get$_lib2_content: function() { return this._lib2_content; },
 Hyperlink$0: function() {
  $.appendBuckshotClass(this.get$_lib2_component(), 'hyperlink');
  this._lib2_initHyperlinkProperties$0();
  $.indexSet(this.get$_lib2_stateBag(), 'CONTAINER_CONTEXT', this.get$contentProperty());
 },
 is$IFrameworkContainer: true,
});

Isolate.$defineClass("CollectionPresenter", "FrameworkElement",
function CollectionPresenter(_lib2_pfp, itemCreated, itemsTemplateProperty, presentationPanelProperty, _lib2_eHandler, FrameworkElement_mouseUp, FrameworkElement_mouseDown, FrameworkElement_mouseMove, FrameworkElement_click, FrameworkElement_mouseLeave, FrameworkElement_mouseEnter, FrameworkElement_lostFocus, FrameworkElement_gotFocus, FrameworkElement_actionsProperty, FrameworkElement_perspectiveProperty, FrameworkElement_transformOriginZProperty, FrameworkElement_transformOriginYProperty, FrameworkElement_transformOriginXProperty, FrameworkElement_rotateZProperty, FrameworkElement_rotateYProperty, FrameworkElement_rotateXProperty, FrameworkElement_scaleZProperty, FrameworkElement_scaleYProperty, FrameworkElement_scaleXProperty, FrameworkElement_translateZProperty, FrameworkElement_translateYProperty, FrameworkElement_translateXProperty, FrameworkElement_styleProperty, FrameworkElement_visibilityProperty, FrameworkElement_opacityProperty, FrameworkElement_actualHeightProperty, FrameworkElement_actualWidthProperty, FrameworkElement_zOrderProperty, FrameworkElement_verticalAlignmentProperty, FrameworkElement_horizontalAlignmentProperty, FrameworkElement_tagProperty, FrameworkElement_cursorProperty, FrameworkElement_minHeightProperty, FrameworkElement_maxHeightProperty, FrameworkElement_minWidthProperty, FrameworkElement_maxWidthProperty, FrameworkElement_htmlIDProperty, FrameworkElement_heightProperty, FrameworkElement_widthProperty, FrameworkElement_marginProperty, FrameworkElement__lib2_transitionProperties, FrameworkElement__lib2_templateBindings, FrameworkElement__lib2_style, FrameworkElement__lib2_containerParent, FrameworkObject_mostRecentMeasurement, FrameworkObject__lib2_dataContextUpdated, FrameworkObject_nameProperty, FrameworkObject_attachedPropertyChanged, FrameworkObject_measurementChanged, FrameworkObject_unloaded, FrameworkObject_loaded, FrameworkObject_lateBindings, FrameworkObject_dataContextProperty, FrameworkObject__lib2_isLoaded, FrameworkObject__lib2_parent, FrameworkObject__lib2_component, FrameworkObject__lib2_previousMeasurement, FrameworkObject__lib2_animationFrameID, FrameworkObject__lib2_watchingMeasurement, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this._lib2_pfp = _lib2_pfp;
  this.itemCreated = itemCreated;
  this.itemsTemplateProperty = itemsTemplateProperty;
  this.presentationPanelProperty = presentationPanelProperty;
  this._lib2_eHandler = _lib2_eHandler;
  this.mouseUp = FrameworkElement_mouseUp;
  this.mouseDown = FrameworkElement_mouseDown;
  this.mouseMove = FrameworkElement_mouseMove;
  this.click = FrameworkElement_click;
  this.mouseLeave = FrameworkElement_mouseLeave;
  this.mouseEnter = FrameworkElement_mouseEnter;
  this.lostFocus = FrameworkElement_lostFocus;
  this.gotFocus = FrameworkElement_gotFocus;
  this.actionsProperty = FrameworkElement_actionsProperty;
  this.perspectiveProperty = FrameworkElement_perspectiveProperty;
  this.transformOriginZProperty = FrameworkElement_transformOriginZProperty;
  this.transformOriginYProperty = FrameworkElement_transformOriginYProperty;
  this.transformOriginXProperty = FrameworkElement_transformOriginXProperty;
  this.rotateZProperty = FrameworkElement_rotateZProperty;
  this.rotateYProperty = FrameworkElement_rotateYProperty;
  this.rotateXProperty = FrameworkElement_rotateXProperty;
  this.scaleZProperty = FrameworkElement_scaleZProperty;
  this.scaleYProperty = FrameworkElement_scaleYProperty;
  this.scaleXProperty = FrameworkElement_scaleXProperty;
  this.translateZProperty = FrameworkElement_translateZProperty;
  this.translateYProperty = FrameworkElement_translateYProperty;
  this.translateXProperty = FrameworkElement_translateXProperty;
  this.styleProperty = FrameworkElement_styleProperty;
  this.visibilityProperty = FrameworkElement_visibilityProperty;
  this.opacityProperty = FrameworkElement_opacityProperty;
  this.actualHeightProperty = FrameworkElement_actualHeightProperty;
  this.actualWidthProperty = FrameworkElement_actualWidthProperty;
  this.zOrderProperty = FrameworkElement_zOrderProperty;
  this.verticalAlignmentProperty = FrameworkElement_verticalAlignmentProperty;
  this.horizontalAlignmentProperty = FrameworkElement_horizontalAlignmentProperty;
  this.tagProperty = FrameworkElement_tagProperty;
  this.cursorProperty = FrameworkElement_cursorProperty;
  this.minHeightProperty = FrameworkElement_minHeightProperty;
  this.maxHeightProperty = FrameworkElement_maxHeightProperty;
  this.minWidthProperty = FrameworkElement_minWidthProperty;
  this.maxWidthProperty = FrameworkElement_maxWidthProperty;
  this.htmlIDProperty = FrameworkElement_htmlIDProperty;
  this.heightProperty = FrameworkElement_heightProperty;
  this.widthProperty = FrameworkElement_widthProperty;
  this.marginProperty = FrameworkElement_marginProperty;
  this._lib2_transitionProperties = FrameworkElement__lib2_transitionProperties;
  this._lib2_templateBindings = FrameworkElement__lib2_templateBindings;
  this._lib2_style = FrameworkElement__lib2_style;
  this._lib2_containerParent = FrameworkElement__lib2_containerParent;
  this.mostRecentMeasurement = FrameworkObject_mostRecentMeasurement;
  this._lib2_dataContextUpdated = FrameworkObject__lib2_dataContextUpdated;
  this.nameProperty = FrameworkObject_nameProperty;
  this.attachedPropertyChanged = FrameworkObject_attachedPropertyChanged;
  this.measurementChanged = FrameworkObject_measurementChanged;
  this.unloaded = FrameworkObject_unloaded;
  this.loaded = FrameworkObject_loaded;
  this.lateBindings = FrameworkObject_lateBindings;
  this.dataContextProperty = FrameworkObject_dataContextProperty;
  this._lib2_isLoaded = FrameworkObject__lib2_isLoaded;
  this._lib2_parent = FrameworkObject__lib2_parent;
  this._lib2_component = FrameworkObject__lib2_component;
  this._lib2_previousMeasurement = FrameworkObject__lib2_previousMeasurement;
  this._lib2_animationFrameID = FrameworkObject__lib2_animationFrameID;
  this._lib2_watchingMeasurement = FrameworkObject__lib2_watchingMeasurement;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$type: function() {
  return 'CollectionPresenter';
 },
 CreateElement$0: function() {
  this.set$_lib2_component($.createByTag('div'));
 },
 updateLayout$0: function() {
 },
 _lib2_updateCollection$0: function() {
  var dc = this.resolveDataContext$0();
  if ($.eqNullB(dc) && this.get$presentationPanel().get$_lib2_isLoaded() === true) {
    $.clear(this.get$presentationPanel().get$children());
    return;
  } else {
    if ($.eqNullB(dc)) {
      return;
    }
  }
  var values = $.getValue(dc);
  if (typeof values === 'object' && !!values.is$ObservableList && $.eqNullB(this.get$_lib2_eHandler())) {
    this.set$_lib2_eHandler($.add(values.get$listChanged(), new $.Closure252(this)));
  }
  if (!((typeof values === 'object') && (((values.constructor === Array) || values.is$Collection())))) {
    throw $.captureStackTrace($.CTC8);
  }
  $.clear(this.get$presentationPanel().get$_lib2_component().get$elements());
  if ($.eqNullB(this.get$itemsTemplate())) {
    $.forEach(values, new $.Closure253(this));
  } else {
    $.forEach(values, new $.Closure254(this));
  }
 },
 set$itemsTemplate: function(value) {
  return $.setValue(this.get$itemsTemplateProperty(), value);
 },
 get$itemsTemplate: function() {
  return $.getValue(this.get$itemsTemplateProperty());
 },
 get$content: function() {
  return this.get$presentationPanel();
 },
 set$presentationPanel: function(value) {
  return $.setValue(this.get$presentationPanelProperty(), value);
 },
 get$presentationPanel: function() {
  return $.getValue(this.get$presentationPanelProperty());
 },
 _lib2_initCollectionPresenterProperties$0: function() {
  this.set$presentationPanelProperty($.FrameworkProperty$5(this, 'presentationPanel', new $.Closure249(this), $.StackPanel$0(), (void 0)));
  this.set$itemsTemplateProperty($.FrameworkProperty$5(this, 'itemsTemplate', new $.Closure250(), (void 0), (void 0)));
 },
 makeMe$0: function() {
  return $.CollectionPresenter$0();
 },
 get$_lib2_pfp: function() { return this._lib2_pfp; },
 get$itemCreated: function() { return this.itemCreated; },
 set$itemsTemplateProperty: function(v) { this.itemsTemplateProperty = v; },
 get$itemsTemplateProperty: function() { return this.itemsTemplateProperty; },
 set$presentationPanelProperty: function(v) { this.presentationPanelProperty = v; },
 get$presentationPanelProperty: function() { return this.presentationPanelProperty; },
 set$_lib2_eHandler: function(v) { this._lib2_eHandler = v; },
 get$_lib2_eHandler: function() { return this._lib2_eHandler; },
 CollectionPresenter$0: function() {
  $.appendBuckshotClass(this.get$_lib2_component(), 'collectionpresenter');
  this._lib2_initCollectionPresenterProperties$0();
 },
 is$IFrameworkContainer: true,
});

Isolate.$defineClass("GridLength", "FrameworkObject",
function GridLength(valueProperty, gridUnitTypeProperty, FrameworkObject_mostRecentMeasurement, FrameworkObject__lib2_dataContextUpdated, FrameworkObject_nameProperty, FrameworkObject_attachedPropertyChanged, FrameworkObject_measurementChanged, FrameworkObject_unloaded, FrameworkObject_loaded, FrameworkObject_lateBindings, FrameworkObject_dataContextProperty, FrameworkObject__lib2_isLoaded, FrameworkObject__lib2_parent, FrameworkObject__lib2_component, FrameworkObject__lib2_previousMeasurement, FrameworkObject__lib2_animationFrameID, FrameworkObject__lib2_watchingMeasurement, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this.valueProperty = valueProperty;
  this.gridUnitTypeProperty = gridUnitTypeProperty;
  this.mostRecentMeasurement = FrameworkObject_mostRecentMeasurement;
  this._lib2_dataContextUpdated = FrameworkObject__lib2_dataContextUpdated;
  this.nameProperty = FrameworkObject_nameProperty;
  this.attachedPropertyChanged = FrameworkObject_attachedPropertyChanged;
  this.measurementChanged = FrameworkObject_measurementChanged;
  this.unloaded = FrameworkObject_unloaded;
  this.loaded = FrameworkObject_loaded;
  this.lateBindings = FrameworkObject_lateBindings;
  this.dataContextProperty = FrameworkObject_dataContextProperty;
  this._lib2_isLoaded = FrameworkObject__lib2_isLoaded;
  this._lib2_parent = FrameworkObject__lib2_parent;
  this._lib2_component = FrameworkObject__lib2_component;
  this._lib2_previousMeasurement = FrameworkObject__lib2_previousMeasurement;
  this._lib2_animationFrameID = FrameworkObject__lib2_animationFrameID;
  this._lib2_watchingMeasurement = FrameworkObject__lib2_watchingMeasurement;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$type: function() {
  return 'GridLength';
 },
 _lib2_initGridUnitTypeProperties$0: function() {
  this.set$gridUnitTypeProperty($.FrameworkProperty$5(this, 'gridUnitType', new $.Closure246(), $.CTC213, (void 0)));
  this.set$valueProperty($.FrameworkProperty$5(this, 'value', new $.Closure247(), -1, (void 0)));
 },
 set$value: function(v) {
  return $.setValue(this.get$valueProperty(), v);
 },
 get$value: function() {
  return $.getValue(this.get$valueProperty());
 },
 set$gridUnitType: function(v) {
  return $.setValue(this.get$gridUnitTypeProperty(), v);
 },
 get$gridUnitType: function() {
  return $.getValue(this.get$gridUnitTypeProperty());
 },
 set$valueProperty: function(v) { this.valueProperty = v; },
 get$valueProperty: function() { return this.valueProperty; },
 set$gridUnitTypeProperty: function(v) { this.gridUnitTypeProperty = v; },
 get$gridUnitTypeProperty: function() { return this.gridUnitTypeProperty; },
 GridLength$auto$0: function() {
  this._lib2_initGridUnitTypeProperties$0();
 },
 GridLength$star$1: function(v) {
  this._lib2_initGridUnitTypeProperties$0();
  this.set$gridUnitType($.CTC211);
  this.set$value(v);
 },
 GridLength$pixel$1: function(v) {
  this._lib2_initGridUnitTypeProperties$0();
  this.set$gridUnitType($.CTC212);
  this.set$value(v);
 },
 GridLength$0: function() {
  this._lib2_initGridUnitTypeProperties$0();
 },
});

Isolate.$defineClass("Closure240", "Closure330",
function Closure(this_5) {
  this.this_5 = this_5;
}, {
 $call$1: function(value) {
  var t0 = $.toString(value);
  this.this_5.get$_lib2_component().get$style().set$fontFamily(t0);
 },
});

Isolate.$defineClass("Line", "Shape",
function Line(Shape__lib2_shProperty, Shape__lib2_swProperty, Shape_strokeWidthProperty, Shape_strokeProperty, Shape_fillProperty, Shape__lib2_svgWrapper, Shape_shapeElement, FrameworkElement_mouseUp, FrameworkElement_mouseDown, FrameworkElement_mouseMove, FrameworkElement_click, FrameworkElement_mouseLeave, FrameworkElement_mouseEnter, FrameworkElement_lostFocus, FrameworkElement_gotFocus, FrameworkElement_actionsProperty, FrameworkElement_perspectiveProperty, FrameworkElement_transformOriginZProperty, FrameworkElement_transformOriginYProperty, FrameworkElement_transformOriginXProperty, FrameworkElement_rotateZProperty, FrameworkElement_rotateYProperty, FrameworkElement_rotateXProperty, FrameworkElement_scaleZProperty, FrameworkElement_scaleYProperty, FrameworkElement_scaleXProperty, FrameworkElement_translateZProperty, FrameworkElement_translateYProperty, FrameworkElement_translateXProperty, FrameworkElement_styleProperty, FrameworkElement_visibilityProperty, FrameworkElement_opacityProperty, FrameworkElement_actualHeightProperty, FrameworkElement_actualWidthProperty, FrameworkElement_zOrderProperty, FrameworkElement_verticalAlignmentProperty, FrameworkElement_horizontalAlignmentProperty, FrameworkElement_tagProperty, FrameworkElement_cursorProperty, FrameworkElement_minHeightProperty, FrameworkElement_maxHeightProperty, FrameworkElement_minWidthProperty, FrameworkElement_maxWidthProperty, FrameworkElement_htmlIDProperty, FrameworkElement_heightProperty, FrameworkElement_widthProperty, FrameworkElement_marginProperty, FrameworkElement__lib2_transitionProperties, FrameworkElement__lib2_templateBindings, FrameworkElement__lib2_style, FrameworkElement__lib2_containerParent, FrameworkObject_mostRecentMeasurement, FrameworkObject__lib2_dataContextUpdated, FrameworkObject_nameProperty, FrameworkObject_attachedPropertyChanged, FrameworkObject_measurementChanged, FrameworkObject_unloaded, FrameworkObject_loaded, FrameworkObject_lateBindings, FrameworkObject_dataContextProperty, FrameworkObject__lib2_isLoaded, FrameworkObject__lib2_parent, FrameworkObject__lib2_component, FrameworkObject__lib2_previousMeasurement, FrameworkObject__lib2_animationFrameID, FrameworkObject__lib2_watchingMeasurement, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this._lib2_shProperty = Shape__lib2_shProperty;
  this._lib2_swProperty = Shape__lib2_swProperty;
  this.strokeWidthProperty = Shape_strokeWidthProperty;
  this.strokeProperty = Shape_strokeProperty;
  this.fillProperty = Shape_fillProperty;
  this._lib2_svgWrapper = Shape__lib2_svgWrapper;
  this.shapeElement = Shape_shapeElement;
  this.mouseUp = FrameworkElement_mouseUp;
  this.mouseDown = FrameworkElement_mouseDown;
  this.mouseMove = FrameworkElement_mouseMove;
  this.click = FrameworkElement_click;
  this.mouseLeave = FrameworkElement_mouseLeave;
  this.mouseEnter = FrameworkElement_mouseEnter;
  this.lostFocus = FrameworkElement_lostFocus;
  this.gotFocus = FrameworkElement_gotFocus;
  this.actionsProperty = FrameworkElement_actionsProperty;
  this.perspectiveProperty = FrameworkElement_perspectiveProperty;
  this.transformOriginZProperty = FrameworkElement_transformOriginZProperty;
  this.transformOriginYProperty = FrameworkElement_transformOriginYProperty;
  this.transformOriginXProperty = FrameworkElement_transformOriginXProperty;
  this.rotateZProperty = FrameworkElement_rotateZProperty;
  this.rotateYProperty = FrameworkElement_rotateYProperty;
  this.rotateXProperty = FrameworkElement_rotateXProperty;
  this.scaleZProperty = FrameworkElement_scaleZProperty;
  this.scaleYProperty = FrameworkElement_scaleYProperty;
  this.scaleXProperty = FrameworkElement_scaleXProperty;
  this.translateZProperty = FrameworkElement_translateZProperty;
  this.translateYProperty = FrameworkElement_translateYProperty;
  this.translateXProperty = FrameworkElement_translateXProperty;
  this.styleProperty = FrameworkElement_styleProperty;
  this.visibilityProperty = FrameworkElement_visibilityProperty;
  this.opacityProperty = FrameworkElement_opacityProperty;
  this.actualHeightProperty = FrameworkElement_actualHeightProperty;
  this.actualWidthProperty = FrameworkElement_actualWidthProperty;
  this.zOrderProperty = FrameworkElement_zOrderProperty;
  this.verticalAlignmentProperty = FrameworkElement_verticalAlignmentProperty;
  this.horizontalAlignmentProperty = FrameworkElement_horizontalAlignmentProperty;
  this.tagProperty = FrameworkElement_tagProperty;
  this.cursorProperty = FrameworkElement_cursorProperty;
  this.minHeightProperty = FrameworkElement_minHeightProperty;
  this.maxHeightProperty = FrameworkElement_maxHeightProperty;
  this.minWidthProperty = FrameworkElement_minWidthProperty;
  this.maxWidthProperty = FrameworkElement_maxWidthProperty;
  this.htmlIDProperty = FrameworkElement_htmlIDProperty;
  this.heightProperty = FrameworkElement_heightProperty;
  this.widthProperty = FrameworkElement_widthProperty;
  this.marginProperty = FrameworkElement_marginProperty;
  this._lib2_transitionProperties = FrameworkElement__lib2_transitionProperties;
  this._lib2_templateBindings = FrameworkElement__lib2_templateBindings;
  this._lib2_style = FrameworkElement__lib2_style;
  this._lib2_containerParent = FrameworkElement__lib2_containerParent;
  this.mostRecentMeasurement = FrameworkObject_mostRecentMeasurement;
  this._lib2_dataContextUpdated = FrameworkObject__lib2_dataContextUpdated;
  this.nameProperty = FrameworkObject_nameProperty;
  this.attachedPropertyChanged = FrameworkObject_attachedPropertyChanged;
  this.measurementChanged = FrameworkObject_measurementChanged;
  this.unloaded = FrameworkObject_unloaded;
  this.loaded = FrameworkObject_loaded;
  this.lateBindings = FrameworkObject_lateBindings;
  this.dataContextProperty = FrameworkObject_dataContextProperty;
  this._lib2_isLoaded = FrameworkObject__lib2_isLoaded;
  this._lib2_parent = FrameworkObject__lib2_parent;
  this._lib2_component = FrameworkObject__lib2_component;
  this._lib2_previousMeasurement = FrameworkObject__lib2_previousMeasurement;
  this._lib2_animationFrameID = FrameworkObject__lib2_animationFrameID;
  this._lib2_watchingMeasurement = FrameworkObject__lib2_watchingMeasurement;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$shapeTag: function() {
  return 'line';
 },
 _lib2_initLineProperties$0: function() {
 },
 makeMe$0: function() {
  return $.Line$0();
 },
 Line$0: function() {
  $.appendBuckshotClass(this.get$_lib2_component(), 'line');
  this._lib2_initLineProperties$0();
 },
});

Isolate.$defineClass("FrameworkElement", "FrameworkObject",
function FrameworkElement(mouseUp, mouseDown, mouseMove, click, mouseLeave, mouseEnter, lostFocus, gotFocus, actionsProperty, perspectiveProperty, transformOriginZProperty, transformOriginYProperty, transformOriginXProperty, rotateZProperty, rotateYProperty, rotateXProperty, scaleZProperty, scaleYProperty, scaleXProperty, translateZProperty, translateYProperty, translateXProperty, styleProperty, visibilityProperty, opacityProperty, actualHeightProperty, actualWidthProperty, zOrderProperty, verticalAlignmentProperty, horizontalAlignmentProperty, tagProperty, cursorProperty, minHeightProperty, maxHeightProperty, minWidthProperty, maxWidthProperty, htmlIDProperty, heightProperty, widthProperty, marginProperty, _lib2_transitionProperties, _lib2_templateBindings, _lib2_style, _lib2_containerParent, FrameworkObject_mostRecentMeasurement, FrameworkObject__lib2_dataContextUpdated, FrameworkObject_nameProperty, FrameworkObject_attachedPropertyChanged, FrameworkObject_measurementChanged, FrameworkObject_unloaded, FrameworkObject_loaded, FrameworkObject_lateBindings, FrameworkObject_dataContextProperty, FrameworkObject__lib2_isLoaded, FrameworkObject__lib2_parent, FrameworkObject__lib2_component, FrameworkObject__lib2_previousMeasurement, FrameworkObject__lib2_animationFrameID, FrameworkObject__lib2_watchingMeasurement, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this.mouseUp = mouseUp;
  this.mouseDown = mouseDown;
  this.mouseMove = mouseMove;
  this.click = click;
  this.mouseLeave = mouseLeave;
  this.mouseEnter = mouseEnter;
  this.lostFocus = lostFocus;
  this.gotFocus = gotFocus;
  this.actionsProperty = actionsProperty;
  this.perspectiveProperty = perspectiveProperty;
  this.transformOriginZProperty = transformOriginZProperty;
  this.transformOriginYProperty = transformOriginYProperty;
  this.transformOriginXProperty = transformOriginXProperty;
  this.rotateZProperty = rotateZProperty;
  this.rotateYProperty = rotateYProperty;
  this.rotateXProperty = rotateXProperty;
  this.scaleZProperty = scaleZProperty;
  this.scaleYProperty = scaleYProperty;
  this.scaleXProperty = scaleXProperty;
  this.translateZProperty = translateZProperty;
  this.translateYProperty = translateYProperty;
  this.translateXProperty = translateXProperty;
  this.styleProperty = styleProperty;
  this.visibilityProperty = visibilityProperty;
  this.opacityProperty = opacityProperty;
  this.actualHeightProperty = actualHeightProperty;
  this.actualWidthProperty = actualWidthProperty;
  this.zOrderProperty = zOrderProperty;
  this.verticalAlignmentProperty = verticalAlignmentProperty;
  this.horizontalAlignmentProperty = horizontalAlignmentProperty;
  this.tagProperty = tagProperty;
  this.cursorProperty = cursorProperty;
  this.minHeightProperty = minHeightProperty;
  this.maxHeightProperty = maxHeightProperty;
  this.minWidthProperty = minWidthProperty;
  this.maxWidthProperty = maxWidthProperty;
  this.htmlIDProperty = htmlIDProperty;
  this.heightProperty = heightProperty;
  this.widthProperty = widthProperty;
  this.marginProperty = marginProperty;
  this._lib2_transitionProperties = _lib2_transitionProperties;
  this._lib2_templateBindings = _lib2_templateBindings;
  this._lib2_style = _lib2_style;
  this._lib2_containerParent = _lib2_containerParent;
  this.mostRecentMeasurement = FrameworkObject_mostRecentMeasurement;
  this._lib2_dataContextUpdated = FrameworkObject__lib2_dataContextUpdated;
  this.nameProperty = FrameworkObject_nameProperty;
  this.attachedPropertyChanged = FrameworkObject_attachedPropertyChanged;
  this.measurementChanged = FrameworkObject_measurementChanged;
  this.unloaded = FrameworkObject_unloaded;
  this.loaded = FrameworkObject_loaded;
  this.lateBindings = FrameworkObject_lateBindings;
  this.dataContextProperty = FrameworkObject_dataContextProperty;
  this._lib2_isLoaded = FrameworkObject__lib2_isLoaded;
  this._lib2_parent = FrameworkObject__lib2_parent;
  this._lib2_component = FrameworkObject__lib2_component;
  this._lib2_previousMeasurement = FrameworkObject__lib2_previousMeasurement;
  this._lib2_animationFrameID = FrameworkObject__lib2_animationFrameID;
  this._lib2_watchingMeasurement = FrameworkObject__lib2_watchingMeasurement;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$type: function() {
  return 'FrameworkElement';
 },
 updateLayout$0: function() {
 },
 CreateElement$0: function() {
  this.set$_lib2_component($.createByTag('div'));
 },
 _lib2_initFrameworkEvents$0: function() {
  var t0 = ({});
  var t1 = new $.Closure27(this);
  var t2 = $._lib2_FrameworkEventImplementation$_watchFirstAndLast$2(new $.Closure28(this, t1), new $.Closure29(this, t1));
  $.setRuntimeTypeInfo(t2, ({T: 'MouseEventArgs'}));
  this.set$mouseUp(t2);
  var t3 = new $.Closure30(this);
  var t4 = $._lib2_FrameworkEventImplementation$_watchFirstAndLast$2(new $.Closure31(this, t3), new $.Closure32(this, t3));
  $.setRuntimeTypeInfo(t4, ({T: 'MouseEventArgs'}));
  this.set$mouseDown(t4);
  var t5 = new $.Closure33(this);
  var t6 = $._lib2_FrameworkEventImplementation$_watchFirstAndLast$2(new $.Closure34(t5, this), new $.Closure35(t5, this));
  $.setRuntimeTypeInfo(t6, ({T: 'MouseEventArgs'}));
  this.set$mouseMove(t6);
  var t7 = new $.Closure36(this);
  var t8 = $._lib2_FrameworkEventImplementation$_watchFirstAndLast$2(new $.Closure37(this, t7), new $.Closure38(this, t7));
  $.setRuntimeTypeInfo(t8, ({T: 'MouseEventArgs'}));
  this.set$click(t8);
  var t9 = new $.Closure39(this);
  var t10 = $._lib2_FrameworkEventImplementation$_watchFirstAndLast$2(new $.Closure40(this, t9), new $.Closure41(this, t9));
  $.setRuntimeTypeInfo(t10, ({T: 'EventArgs'}));
  this.set$gotFocus(t10);
  var t11 = new $.Closure42(this);
  var t12 = $._lib2_FrameworkEventImplementation$_watchFirstAndLast$2(new $.Closure43(this, t11), new $.Closure44(this, t11));
  $.setRuntimeTypeInfo(t12, ({T: 'EventArgs'}));
  this.set$lostFocus(t12);
  t0.isMouseReallyOut_3 = true;
  var t13 = new $.Closure45(this, t0);
  var t14 = $._lib2_FrameworkEventImplementation$_watchFirstAndLast$2(new $.Closure46(this, t13), new $.Closure47(this, t13));
  $.setRuntimeTypeInfo(t14, ({T: 'EventArgs'}));
  this.set$mouseEnter(t14);
  var t15 = new $.Closure48(this, t0);
  var t16 = $._lib2_FrameworkEventImplementation$_watchFirstAndLast$2(new $.Closure49(this, t15), new $.Closure50(this, t15));
  $.setRuntimeTypeInfo(t16, ({T: 'EventArgs'}));
  this.set$mouseLeave(t16);
 },
 get$updateMeasurementAsync: function() {
  var t0 = ({});
  t0.c_1 = $.CompleterImpl$0();
  this.get$rawElement().get$rect().then$1(new $.Closure98(this, t0));
  return t0.c_1.get$future();
 },
 calculateHeight$1: function(value) {
  if ($.eqB(value, 'auto')) {
    this.get$_lib2_component().get$style().set$height('auto');
    this.get$updateMeasurementAsync().then$1(new $.Closure100(this));
    return;
  }
  if (!$.eqNullB(this.get$minHeight()) && $.ltB(value, this.get$minHeight())) {
    this.set$height(this.get$minHeight());
  }
  if (!$.eqNullB(this.get$maxHeight()) && $.gtB(value, this.get$maxHeight())) {
    this.set$height(this.get$maxHeight());
  }
  var t0 = '' + $.stringToString(value) + 'px';
  this.get$_lib2_component().get$style().set$height(t0);
  this.get$updateMeasurementAsync().then$1(new $.Closure101(this));
 },
 calculateWidth$1: function(value) {
  if ($.eqB(value, 'auto')) {
    this.get$_lib2_component().get$style().set$width('auto');
    this.get$updateMeasurementAsync().then$1(new $.Closure102(this));
    return;
  }
  if (!$.eqNullB(this.get$minWidth()) && $.ltB(value, this.get$minWidth())) {
    this.set$width(this.get$minWidth());
  }
  if (!$.eqNullB(this.get$maxWidth()) && $.gtB(value, this.get$maxWidth())) {
    this.set$width(this.get$maxWidth());
  }
  var t0 = '' + $.stringToString(value) + 'px';
  this.get$_lib2_component().get$style().set$width(t0);
  this.get$updateMeasurementAsync().then$1(new $.Closure103(this));
 },
 get$horizontalAlignment: function() {
  return $.getValue(this.get$horizontalAlignmentProperty());
 },
 get$verticalAlignment: function() {
  return $.getValue(this.get$verticalAlignmentProperty());
 },
 set$cursor: function(value) {
  return $.setValue(this.get$cursorProperty(), value);
 },
 get$maxHeight: function() {
  return $.getValue(this.get$maxHeightProperty());
 },
 set$maxHeight: function(value) {
  return $.setValue(this.get$maxHeightProperty(), value);
 },
 get$minHeight: function() {
  return $.getValue(this.get$minHeightProperty());
 },
 set$minHeight: function(value) {
  return $.setValue(this.get$minHeightProperty(), value);
 },
 get$maxWidth: function() {
  return $.getValue(this.get$maxWidthProperty());
 },
 set$maxWidth: function(value) {
  return $.setValue(this.get$maxWidthProperty(), value);
 },
 get$minWidth: function() {
  return $.getValue(this.get$minWidthProperty());
 },
 set$minWidth: function(value) {
  return $.setValue(this.get$minWidthProperty(), value);
 },
 get$height: function() {
  return $.getValue(this.get$heightProperty());
 },
 set$height: function(value) {
  return $.setValue(this.get$heightProperty(), value);
 },
 get$width: function() {
  return $.getValue(this.get$widthProperty());
 },
 set$width: function(value) {
  return $.setValue(this.get$widthProperty(), value);
 },
 get$margin: function() {
  return $.getValue(this.get$marginProperty());
 },
 set$margin: function(value) {
  return $.setValue(this.get$marginProperty(), value);
 },
 get$tag: function() {
  return $.getValue(this.get$tagProperty());
 },
 set$visibility: function(value) {
  return $.setValue(this.get$visibilityProperty(), value);
 },
 set$opacity: function(value) {
  return $.setValue(this.get$opacityProperty(), value);
 },
 get$actualHeight: function() {
  return $.getValue(this.get$actualHeightProperty());
 },
 get$actualWidth: function() {
  return $.getValue(this.get$actualWidthProperty());
 },
 get$style: function() {
  return $.getValue(this.get$styleProperty());
 },
 _lib2_initFrameworkProperties$0: function() {
  var t0 = new $.Closure58(this);
  var t1 = new $.Closure59(this);
  var t2 = $.ObservableList$0();
  $.setRuntimeTypeInfo(t2, ({T: 'ActionBase'}));
  this.set$actionsProperty($.FrameworkProperty$5(this, 'actions', t1, t2, (void 0)));
  this.set$perspectiveProperty($.FrameworkProperty$5(this, 'perspective', new $.Closure60(this), (void 0), $.CTC6));
  this.set$translateXProperty($.AnimatingFrameworkProperty$6(this, 'translateX', new $.Closure61(this, t0), 'transform', (void 0), $.CTC6));
  this.set$translateYProperty($.AnimatingFrameworkProperty$6(this, 'translateY', new $.Closure62(this, t0), 'transform', (void 0), $.CTC6));
  this.set$translateZProperty($.AnimatingFrameworkProperty$6(this, 'translateZ', new $.Closure63(this, t0), 'transform', (void 0), $.CTC6));
  this.set$scaleXProperty($.AnimatingFrameworkProperty$6(this, 'scaleX', new $.Closure64(this, t0), 'transform', (void 0), $.CTC6));
  this.set$scaleYProperty($.AnimatingFrameworkProperty$6(this, 'scaleY', new $.Closure65(this, t0), 'transform', (void 0), $.CTC6));
  this.set$scaleZProperty($.AnimatingFrameworkProperty$6(this, 'scaleZ', new $.Closure66(this, t0), 'transform', (void 0), $.CTC6));
  this.set$rotateXProperty($.AnimatingFrameworkProperty$6(this, 'rotateX', new $.Closure67(this, t0), 'transform', (void 0), $.CTC6));
  this.set$rotateYProperty($.AnimatingFrameworkProperty$6(this, 'rotateY', new $.Closure68(this, t0), 'transform', (void 0), $.CTC6));
  this.set$rotateZProperty($.AnimatingFrameworkProperty$6(this, 'rotateZ', new $.Closure69(this, t0), 'transform', (void 0), $.CTC6));
  this.set$transformOriginXProperty($.FrameworkProperty$5(this, 'transformOriginX', new $.Closure70(this), (void 0), $.CTC6));
  this.set$transformOriginYProperty($.FrameworkProperty$5(this, 'transformOriginY', new $.Closure71(this), (void 0), $.CTC6));
  this.set$transformOriginZProperty($.FrameworkProperty$5(this, 'transformOriginZ', new $.Closure72(this), (void 0), $.CTC6));
  this.set$opacityProperty($.AnimatingFrameworkProperty$6(this, 'opacity', new $.Closure73(this), 'opacity', (void 0), $.CTC6));
  this.set$visibilityProperty($.AnimatingFrameworkProperty$6(this, 'visibility', new $.Closure74(this), 'visibility', (void 0), $.CTC170));
  this.set$zOrderProperty($.FrameworkProperty$5(this, 'zOrder', new $.Closure75(this), (void 0), $.CTC6));
  this.set$marginProperty($.FrameworkProperty$5(this, 'margin', new $.Closure76(this), $.Thickness$1(0), $.CTC5));
  this.set$actualWidthProperty($.FrameworkProperty$5(this, 'actualWidth', new $.Closure77(), (void 0), (void 0)));
  this.set$actualHeightProperty($.FrameworkProperty$5(this, 'actualHeight', new $.Closure78(), (void 0), (void 0)));
  this.set$widthProperty($.FrameworkProperty$5(this, 'width', new $.Closure79(this), 'auto', $.CTC6));
  this.set$heightProperty($.FrameworkProperty$5(this, 'height', new $.Closure80(this), 'auto', $.CTC6));
  this.set$minHeightProperty($.FrameworkProperty$5(this, 'minHeight', new $.Closure81(this), (void 0), $.CTC6));
  this.set$maxHeightProperty($.FrameworkProperty$5(this, 'maxHeight', new $.Closure82(this), (void 0), $.CTC6));
  this.set$minWidthProperty($.FrameworkProperty$5(this, 'minWidth', new $.Closure83(this), (void 0), $.CTC6));
  this.set$maxWidthProperty($.FrameworkProperty$5(this, 'maxWidth', new $.Closure84(this), (void 0), $.CTC6));
  this.set$cursorProperty($.FrameworkProperty$5(this, 'cursor', new $.Closure85(this), (void 0), $.CTC171));
  this.set$tagProperty($.FrameworkProperty$5(this, 'tag', new $.Closure86(), (void 0), (void 0)));
  this.set$horizontalAlignmentProperty($.FrameworkProperty$5(this, 'horizontalAlignment', new $.Closure87(this), $.CTC155, $.CTC172));
  this.set$verticalAlignmentProperty($.FrameworkProperty$5(this, 'verticalAlignment', new $.Closure88(this), $.CTC151, $.CTC173));
  this.set$styleProperty($.FrameworkProperty$5(this, 'style', new $.Closure89(this), $._lib2_StyleTemplateImplementation$0(), (void 0)));
 },
 makeMe$0: function() {
  return $.FrameworkElement$0();
 },
 set$mouseUp: function(v) { this.mouseUp = v; },
 get$mouseUp: function() { return this.mouseUp; },
 set$mouseDown: function(v) { this.mouseDown = v; },
 get$mouseDown: function() { return this.mouseDown; },
 set$mouseMove: function(v) { this.mouseMove = v; },
 get$mouseMove: function() { return this.mouseMove; },
 set$click: function(v) { this.click = v; },
 get$click: function() { return this.click; },
 set$mouseLeave: function(v) { this.mouseLeave = v; },
 get$mouseLeave: function() { return this.mouseLeave; },
 set$mouseEnter: function(v) { this.mouseEnter = v; },
 get$mouseEnter: function() { return this.mouseEnter; },
 set$lostFocus: function(v) { this.lostFocus = v; },
 get$lostFocus: function() { return this.lostFocus; },
 set$gotFocus: function(v) { this.gotFocus = v; },
 get$gotFocus: function() { return this.gotFocus; },
 set$actionsProperty: function(v) { this.actionsProperty = v; },
 get$actionsProperty: function() { return this.actionsProperty; },
 set$perspectiveProperty: function(v) { this.perspectiveProperty = v; },
 set$transformOriginZProperty: function(v) { this.transformOriginZProperty = v; },
 get$transformOriginZProperty: function() { return this.transformOriginZProperty; },
 set$transformOriginYProperty: function(v) { this.transformOriginYProperty = v; },
 get$transformOriginYProperty: function() { return this.transformOriginYProperty; },
 set$transformOriginXProperty: function(v) { this.transformOriginXProperty = v; },
 get$transformOriginXProperty: function() { return this.transformOriginXProperty; },
 set$rotateZProperty: function(v) { this.rotateZProperty = v; },
 get$rotateZProperty: function() { return this.rotateZProperty; },
 set$rotateYProperty: function(v) { this.rotateYProperty = v; },
 get$rotateYProperty: function() { return this.rotateYProperty; },
 set$rotateXProperty: function(v) { this.rotateXProperty = v; },
 get$rotateXProperty: function() { return this.rotateXProperty; },
 set$scaleZProperty: function(v) { this.scaleZProperty = v; },
 get$scaleZProperty: function() { return this.scaleZProperty; },
 set$scaleYProperty: function(v) { this.scaleYProperty = v; },
 get$scaleYProperty: function() { return this.scaleYProperty; },
 set$scaleXProperty: function(v) { this.scaleXProperty = v; },
 get$scaleXProperty: function() { return this.scaleXProperty; },
 set$translateZProperty: function(v) { this.translateZProperty = v; },
 get$translateZProperty: function() { return this.translateZProperty; },
 set$translateYProperty: function(v) { this.translateYProperty = v; },
 get$translateYProperty: function() { return this.translateYProperty; },
 set$translateXProperty: function(v) { this.translateXProperty = v; },
 get$translateXProperty: function() { return this.translateXProperty; },
 set$styleProperty: function(v) { this.styleProperty = v; },
 get$styleProperty: function() { return this.styleProperty; },
 set$visibilityProperty: function(v) { this.visibilityProperty = v; },
 get$visibilityProperty: function() { return this.visibilityProperty; },
 set$opacityProperty: function(v) { this.opacityProperty = v; },
 get$opacityProperty: function() { return this.opacityProperty; },
 set$actualHeightProperty: function(v) { this.actualHeightProperty = v; },
 get$actualHeightProperty: function() { return this.actualHeightProperty; },
 set$actualWidthProperty: function(v) { this.actualWidthProperty = v; },
 get$actualWidthProperty: function() { return this.actualWidthProperty; },
 set$zOrderProperty: function(v) { this.zOrderProperty = v; },
 set$verticalAlignmentProperty: function(v) { this.verticalAlignmentProperty = v; },
 get$verticalAlignmentProperty: function() { return this.verticalAlignmentProperty; },
 set$horizontalAlignmentProperty: function(v) { this.horizontalAlignmentProperty = v; },
 get$horizontalAlignmentProperty: function() { return this.horizontalAlignmentProperty; },
 set$tagProperty: function(v) { this.tagProperty = v; },
 get$tagProperty: function() { return this.tagProperty; },
 set$cursorProperty: function(v) { this.cursorProperty = v; },
 get$cursorProperty: function() { return this.cursorProperty; },
 set$minHeightProperty: function(v) { this.minHeightProperty = v; },
 get$minHeightProperty: function() { return this.minHeightProperty; },
 set$maxHeightProperty: function(v) { this.maxHeightProperty = v; },
 get$maxHeightProperty: function() { return this.maxHeightProperty; },
 set$minWidthProperty: function(v) { this.minWidthProperty = v; },
 get$minWidthProperty: function() { return this.minWidthProperty; },
 set$maxWidthProperty: function(v) { this.maxWidthProperty = v; },
 get$maxWidthProperty: function() { return this.maxWidthProperty; },
 set$heightProperty: function(v) { this.heightProperty = v; },
 get$heightProperty: function() { return this.heightProperty; },
 set$widthProperty: function(v) { this.widthProperty = v; },
 get$widthProperty: function() { return this.widthProperty; },
 set$marginProperty: function(v) { this.marginProperty = v; },
 get$marginProperty: function() { return this.marginProperty; },
 get$_lib2_templateBindings: function() { return this._lib2_templateBindings; },
 set$_lib2_style: function(v) { this._lib2_style = v; },
 get$_lib2_style: function() { return this._lib2_style; },
 set$_lib2_containerParent: function(v) { this._lib2_containerParent = v; },
 FrameworkElement$0: function() {
  $.appendBuckshotClass(this.get$_lib2_component(), 'frameworkelement');
  this.set$_lib2_style($._lib2_StyleTemplateImplementation$0());
  this._lib2_initFrameworkProperties$0();
  $.indexSet(this.get$_lib2_component().get$attributes(), 'data-buckshot-element', this.get$type());
  $.indexSet(this.get$_lib2_component().get$attributes(), 'data-buckshot-id', '' + $.stringToString(this.hashCode$0()));
  this._lib2_initFrameworkEvents$0();
 },
 is$FrameworkElement: true,
});

Isolate.$defineClass("Closure53", "Closure330",
function Closure(box_0) {
  this.box_0 = box_0;
}, {
 $call$0: function() {
  return this.box_0.closure_1.$call$2(this.box_0.arg1_2, this.box_0.arg2_3);
 },
});

Isolate.$defineClass("Closure147", "Closure330",
function Closure(this_2) {
  this.this_2 = this_2;
}, {
 $call$1: function(v) {
  $.indexSet(this.this_2.get$_lib2_component().get$attributes(), 'step', $.toString(v));
 },
});

Isolate.$defineClass("Closure101", "Closure330",
function Closure(this_1) {
  this.this_1 = this_1;
}, {
 $call$1: function(_) {
  var t0 = this.this_1;
  if (typeof t0 === 'object' && !!t0.is$IFrameworkContainer) {
    this.this_1.updateLayout$0();
  } else {
    if (!$.eqNullB(this.this_1.get$parent())) {
      this.this_1.get$parent().updateLayout$0();
    }
  }
 },
});

Isolate.$defineClass("_SharedWorkerContextEventsImpl", "_WorkerContextEventsImpl",
function _SharedWorkerContextEventsImpl(_EventsImpl__lib5_ptr) {
  this._lib5_ptr = _EventsImpl__lib5_ptr;
}, {
});

Isolate.$defineClass("Closure45", "Closure330",
function Closure(this_34, box_2) {
  this.this_34 = this_34;
  this.box_2 = box_2;
}, {
 $call$1: function(e) {
  if (!(this.this_34.get$mouseEnter().get$hasHandlers() === true)) {
    return;
  }
  e.stopPropagation$0();
  if (this.box_2.isMouseReallyOut_3 === true && this.this_34.get$mouseLeave().get$hasHandlers() === true) {
    this.box_2.isMouseReallyOut_3 = false;
    this.this_34.get$mouseEnter().invoke$2(this.this_34, $.EventArgs$0());
  } else {
    if (!(this.this_34.get$mouseLeave().get$hasHandlers() === true)) {
      this.this_34.get$mouseEnter().invoke$2(this.this_34, $.EventArgs$0());
    }
  }
 },
});

Isolate.$defineClass("_IDBVersionChangeRequestEventsImpl", "_IDBRequestEventsImpl",
function _IDBVersionChangeRequestEventsImpl(_EventsImpl__lib5_ptr) {
  this._lib5_ptr = _EventsImpl__lib5_ptr;
}, {
});

Isolate.$defineClass("Closure186", "Closure330",
function Closure(this_3) {
  this.this_3 = this_3;
}, {
 $call$1: function(v) {
  if (!(typeof v === 'number')) {
    return;
  }
  $.indexSet(this.this_3.get$_lib2_svgWrapper().get$attributes(), 'width', v);
 },
});

Isolate.$defineClass("Closure303", "Closure330",
function Closure() {
}, {
 $call$1: function(v) {
 },
});

Isolate.$defineClass("Closure3", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$1: function(c) {
  if (!$.eqNullB(this.this_0.get$contentProperty().get$previousValue())) {
    this.this_0.get$contentProperty().get$previousValue().removeFromLayoutTree$0();
  }
  if (!$.eqNullB(c)) {
    c.addToLayoutTree$1(this.this_0);
  }
 },
});

Isolate.$defineClass("_FileWriterEventsImpl", "_EventsImpl",
function _FileWriterEventsImpl(_EventsImpl__lib5_ptr) {
  this._lib5_ptr = _EventsImpl__lib5_ptr;
}, {
});

Isolate.$defineClass("Closure232", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$2: function(_, __) {
  this.this_0.get$selectionChanged().invoke$2(this.this_0, $.EventArgs$0());
 },
});

Isolate.$defineClass("Closure12", "Closure330",
function Closure(box_0) {
  this.box_0 = box_0;
}, {
 $call$1: function(handlerReference) {
  return handlerReference.handler$2(this.box_0.sender_1, this.box_0.args_2);
 },
});

Isolate.$defineClass("XmlTokenizer", "Object",
function XmlTokenizer(_lib7_i, _lib7_length, _lib7_xml, _lib7_tq) {
  this._lib7_i = _lib7_i;
  this._lib7_length = _lib7_length;
  this._lib7_xml = _lib7_xml;
  this._lib7_tq = _lib7_tq;
}, {
 next$0: function() {
  var t0 = new $.Closure291(this);
  var t1 = new $.Closure292(this);
  var t2 = new $.Closure293(this);
  var t3 = new $.Closure294(this);
  var t4 = new $.Closure295(this);
  var t5 = new $.Closure296(this);
  if (!($.isEmpty(this.get$_lib7_tq()) === true)) {
    return t1.$call$0();
  }
  for (; $.ltB(this.get$_lib7_i(), this.get$_lib7_length()) && $.isWhitespace($.charCodeAt(this.get$_lib7_xml(), this.get$_lib7_i())) === true; ) {
    this.set$_lib7_i($.add(this.get$_lib7_i(), 1));
  }
  if ($.eqB(this.get$_lib7_i(), this.get$_lib7_length())) {
    return;
  }
  var char$ = $.charCodeAt(this.get$_lib7_xml(), this.get$_lib7_i());
  $0:{
    if (33 === char$) {
      this.set$_lib7_i($.add(this.get$_lib7_i(), 1));
      t0.$call$1($._XmlToken(5));
      break $0;
    } else {
      if (58 === char$) {
        this.set$_lib7_i($.add(this.get$_lib7_i(), 1));
        t0.$call$1($._XmlToken(6));
        break $0;
      } else {
        if (47 === char$) {
          this.set$_lib7_i($.add(this.get$_lib7_i(), 1));
          t0.$call$1($._XmlToken(7));
          break $0;
        } else {
          if (60 === char$) {
            for (var t6 = $.iterator($.CTC231); found = '', endIndex = -1, t6.hasNext$0() === true; ) {
              var found0 = t6.next$0();
              var m = t3.$call$1(found0);
              if (!$.eqB(m, -1)) {
                found = found0;
                endIndex = m;
                break;
              }
            }
            $1:{
              var t7 = $.CTC231.length;
              if (0 >= t7) throw $.ioore(0);
              if ($.eqB($.CTC231[0], found)) {
                t0.$call$1($._XmlToken(12));
                this.set$_lib7_i($.add(endIndex, 1));
                var endComment = $.indexOf$2(this.get$_lib7_xml(), '-->', this.get$_lib7_i());
                var nestedTest = $.indexOf$2(this.get$_lib7_xml(), '<!--', this.get$_lib7_i());
                if ($.eqB(endComment, -1)) {
                  throw $.captureStackTrace($.CTC232);
                }
                if (!$.eqB(nestedTest, -1) && $.ltB(nestedTest, endComment)) {
                  throw $.captureStackTrace($.CTC233);
                }
                t0.$call$1($._XmlToken$string($.substring$2(this.get$_lib7_xml(), this.get$_lib7_i(), endComment)));
                t0.$call$1($._XmlToken(13));
                this.set$_lib7_i($.add(endComment, 3));
                break $1;
              } else {
                var t8 = $.CTC231.length;
                if (1 >= t8) throw $.ioore(1);
                if ($.eqB($.CTC231[1], found)) {
                  t0.$call$1($._XmlToken(14));
                  this.set$_lib7_i($.add(endIndex, 1));
                  var endCDATA = $.indexOf$2(this.get$_lib7_xml(), ']]>', this.get$_lib7_i());
                  var nestedTest0 = $.indexOf$2(this.get$_lib7_xml(), '<![CDATA[', this.get$_lib7_i());
                  if ($.eqB(endCDATA, -1)) {
                    throw $.captureStackTrace($.CTC234);
                  }
                  if (!$.eqB(nestedTest0, -1) && $.ltB(nestedTest0, endCDATA)) {
                    throw $.captureStackTrace($.CTC235);
                  }
                  t0.$call$1($._XmlToken$string($.trim($.substring$2(this.get$_lib7_xml(), this.get$_lib7_i(), endCDATA))));
                  t0.$call$1($._XmlToken(15));
                  this.set$_lib7_i($.add(endCDATA, 3));
                  break $1;
                } else {
                  var t9 = $.CTC231.length;
                  if (2 >= t9) throw $.ioore(2);
                  if ($.eqB($.CTC231[2], found)) {
                    t0.$call$1($._XmlToken(16));
                    this.set$_lib7_i($.add(endIndex, 1));
                    var endPI = $.indexOf$2(this.get$_lib7_xml(), '?>', this.get$_lib7_i());
                    var nestedTest1 = $.indexOf$2(this.get$_lib7_xml(), '<?', this.get$_lib7_i());
                    if ($.eqB(endPI, -1)) {
                      throw $.captureStackTrace($.CTC236);
                    }
                    if (!$.eqB(nestedTest1, -1) && $.ltB(nestedTest1, endPI)) {
                      throw $.captureStackTrace($.CTC237);
                    }
                    t0.$call$1($._XmlToken$string($.trim($.substring$2(this.get$_lib7_xml(), this.get$_lib7_i(), endPI))));
                    t0.$call$1($._XmlToken(17));
                    this.set$_lib7_i($.add(endPI, 2));
                    break $1;
                  } else {
                    var t10 = $.CTC231.length;
                    if (3 >= t10) throw $.ioore(3);
                    if ($.eqB($.CTC231[3], found)) {
                      t0.$call$1($._XmlToken(1));
                      t0.$call$1($._XmlToken(7));
                      this.set$_lib7_i($.add(endIndex, 1));
                      break $1;
                    } else {
                      this.set$_lib7_i($.add(this.get$_lib7_i(), 1));
                      t0.$call$1($._XmlToken(1));
                      this.set$_lib7_i(t4.$call$1(this.get$_lib7_i()));
                      var c = t2.$call$1([32, 58, 62]);
                      if ($.eqB(c, 32)) {
                        var _ii = this.get$_lib7_i();
                        this.set$_lib7_i(t5.$call$1(_ii));
                        t0.$call$1($._XmlToken$string($.substring$2(this.get$_lib7_xml(), _ii, this.get$_lib7_i())));
                        this.set$_lib7_i(t4.$call$1(this.get$_lib7_i()));
                      } else {
                        if ($.eqB(c, 58)) {
                          var _ii0 = this.get$_lib7_i();
                          this.set$_lib7_i($.add($.indexOf$2(this.get$_lib7_xml(), ':', _ii0), 1));
                          t0.$call$1($._XmlToken$string($.substring$2(this.get$_lib7_xml(), _ii0, $.sub(this.get$_lib7_i(), 1))));
                          t0.$call$1($._XmlToken(6));
                          var _ii1 = t5.$call$1(this.get$_lib7_i());
                          t0.$call$1($._XmlToken$string($.substring$2(this.get$_lib7_xml(), this.get$_lib7_i(), _ii1)));
                          this.set$_lib7_i(t4.$call$1(_ii1));
                        }
                      }
                      break $1;
                    }
                  }
                }
              }
            }
            break $0;
          } else {
            if (62 === char$) {
              this.set$_lib7_i($.add(this.get$_lib7_i(), 1));
              t0.$call$1($._XmlToken(2));
              break $0;
            } else {
              if (61 === char$) {
                this.set$_lib7_i($.add(this.get$_lib7_i(), 1));
                t0.$call$1($._XmlToken(8));
                break $0;
              } else {
                if (34 === char$) {
                  this.set$_lib7_i($.add(this.get$_lib7_i(), 1));
                  t0.$call$1($._XmlToken$quote(34));
                  break $0;
                } else {
                  if (39 === char$) {
                    this.set$_lib7_i($.add(this.get$_lib7_i(), 1));
                    t0.$call$1($._XmlToken$quote(39));
                    break $0;
                  } else {
                    var m0 = t3.$call$1('xmlns:');
                    if (!$.eqB(m0, -1)) {
                      this.set$_lib7_i($.add(m0, 1));
                      t0.$call$1($._XmlToken(18));
                    } else {
                      var s = $.StringBufferImpl$1('');
                      for (; $.ltB(this.get$_lib7_i(), this.get$_lib7_length()) && !($.isReserved($.charCodeAt(this.get$_lib7_xml(), this.get$_lib7_i())) === true); ) {
                        s.add$1($.substring$2(this.get$_lib7_xml(), this.get$_lib7_i(), $.add(this.get$_lib7_i(), 1)));
                        this.set$_lib7_i($.add(this.get$_lib7_i(), 1));
                      }
                      t0.$call$1($._XmlToken$string($.trim(s.toString$0())));
                    }
                    break $0;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return t1.$call$0();
  var endIndex, found;
 },
 set$_lib7_i: function(v) { this._lib7_i = v; },
 get$_lib7_i: function() { return this._lib7_i; },
 set$_lib7_length: function(v) { this._lib7_length = v; },
 get$_lib7_length: function() { return this._lib7_length; },
 get$_lib7_xml: function() { return this._lib7_xml; },
 get$_lib7_tq: function() { return this._lib7_tq; },
 XmlTokenizer$1: function(_xml) {
  this.set$_lib7_length($.get$length(this.get$_lib7_xml()));
 },
});

Isolate.$defineClass("Closure212", "Closure330",
function Closure(this_11, box_3) {
  this.this_11 = this_11;
  this.box_3 = box_3;
}, {
 $call$1: function(c) {
  var t0 = ({});
  t0.c_1 = c;
  if ($.eqB(t0.c_1.get$height().get$gridUnitType(), $.CTC212)) {
    var t1 = t0.c_1.get$height().get$value();
    t0.c_1.set$_lib2_adjustedLength(t1);
    var totalPixelValue = $.add(this.box_3.totalPixelValue_5, t0.c_1.get$height().get$value());
    this.box_3.totalPixelValue_5 = totalPixelValue;
  } else {
    if ($.eqB(t0.c_1.get$height().get$gridUnitType(), $.CTC211)) {
      var totalStarValue = $.add(this.box_3.totalStarValue_6, t0.c_1.get$height().get$value());
      this.box_3.totalStarValue_6 = totalStarValue;
      var lastStar = t0.c_1;
      this.box_3.lastStar_7 = lastStar;
    } else {
      if ($.eqB(t0.c_1.get$height().get$gridUnitType(), $.CTC213)) {
        t0.widestAuto_2 = 0;
        $.forEach($.filter(this.this_11.get$_lib2_internalChildren(), new $.Closure216(this.this_11, t0)), new $.Closure217(t0));
        var t2 = t0.widestAuto_2;
        t0.c_1.set$_lib2_adjustedLength(t2);
        var totalPixelValue0 = $.add(this.box_3.totalPixelValue_5, t0.widestAuto_2);
        this.box_3.totalPixelValue_5 = totalPixelValue0;
      }
    }
  }
 },
});

Isolate.$defineClass("FutureNotCompleteException", "Object",
function FutureNotCompleteException() {
}, {
 toString$0: function() {
  return 'Exception: future has not been completed';
 },
 FutureNotCompleteException$0: function() {
 },
 is$Exception: true,
});

Isolate.$defineClass("NoSuchMethodException", "Object",
function NoSuchMethodException(_lib4_existingArgumentNames, _lib4_arguments, _lib4_functionName, _lib4_receiver) {
  this._lib4_existingArgumentNames = _lib4_existingArgumentNames;
  this._lib4_arguments = _lib4_arguments;
  this._lib4_functionName = _lib4_functionName;
  this._lib4_receiver = _lib4_receiver;
}, {
 get$_lib4_existingArgumentNames: function() { return this._lib4_existingArgumentNames; },
 get$_lib4_arguments: function() { return this._lib4_arguments; },
 get$_lib4_functionName: function() { return this._lib4_functionName; },
 get$_lib4_receiver: function() { return this._lib4_receiver; },
 toString$0: function() {
  var sb = $.StringBufferImpl$1('');
  for (var i = 0; $.ltB(i, $.get$length(this.get$_lib4_arguments())); i = i + 1) {
    if (i > 0) {
      sb.add$1(', ');
    }
    sb.add$1($.index(this.get$_lib4_arguments(), i));
  }
  if (this.get$_lib4_existingArgumentNames() === (void 0)) {
    return 'NoSuchMethodException : method not found: \'' + $.stringToString(this.get$_lib4_functionName()) + '\'\nReceiver: ' + $.stringToString(this.get$_lib4_receiver()) + '\nArguments: [' + $.stringToString(sb) + ']';
  } else {
    var actualParameters = sb.toString$0();
    var sb0 = $.StringBufferImpl$1('');
    for (var i0 = 0; $.ltB(i0, $.get$length(this.get$_lib4_existingArgumentNames())); i0 = i0 + 1) {
      if (i0 > 0) {
        sb0.add$1(', ');
      }
      sb0.add$1($.index(this.get$_lib4_existingArgumentNames(), i0));
    }
    var formalParameters = sb0.toString$0();
    return 'NoSuchMethodException: incorrect number of arguments passed to method named \'' + $.stringToString(this.get$_lib4_functionName()) + '\'\nReceiver: ' + $.stringToString(this.get$_lib4_receiver()) + '\nTried calling: ' + $.stringToString(this.get$_lib4_functionName()) + '(' + $.stringToString(actualParameters) + ')\nFound: ' + $.stringToString(this.get$_lib4_functionName()) + '(' + $.stringToString(formalParameters) + ')';
  }
 },
 is$Exception: true,
});

Isolate.$defineClass("_FrameworkEventImplementation", "BuckshotObject",
function _FrameworkEventImplementation(_lib2_handlers, _lib2_lostLastSubscriberCallback, _lib2_gotFirstSubscriberCallback, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this._lib2_handlers = _lib2_handlers;
  this._lib2_lostLastSubscriberCallback = _lib2_lostLastSubscriberCallback;
  this._lib2_gotFirstSubscriberCallback = _lib2_gotFirstSubscriberCallback;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$type: function() {
  return 'FrameworkEvent';
 },
 invoke$2: function(sender, args) {
  var t0 = ({});
  t0.sender_1 = sender;
  t0.args_2 = args;
  return $.forEach(this.get$_lib2_handlers(), new $.Closure12(t0));
 },
 operator$sub$1: function(handlerReference) {
  return this.unregister$1(handlerReference);
 },
 operator$add$1: function(handler) {
  return this.register$1(handler);
 },
 unregister$1: function(handlerReference) {
  var i = $.indexOf$2(this.get$_lib2_handlers(), handlerReference, 0);
  if ($.ltB(i, 0)) {
    return;
  }
  $.removeRange(this.get$_lib2_handlers(), i, 1);
  if (!$.eqNullB(this.get$_lib2_lostLastSubscriberCallback()) && $.isEmpty(this.get$_lib2_handlers()) === true) {
    this._lib2_lostLastSubscriberCallback$0();
  }
 },
 register$1: function(handler) {
  var hr = $.EventHandlerReference$1(handler);
  $.add$1(this.get$_lib2_handlers(), hr);
  if (!$.eqNullB(this.get$_lib2_gotFirstSubscriberCallback()) && $.eqB($.get$length(this.get$_lib2_handlers()), 1)) {
    this._lib2_gotFirstSubscriberCallback$0();
  }
  return hr;
 },
 get$hasHandlers: function() {
  return !($.isEmpty(this.get$_lib2_handlers()) === true);
 },
 get$_lib2_handlers: function() { return this._lib2_handlers; },
 makeMe$0: function() {
  return;
 },
 get$_lib2_lostLastSubscriberCallback: function() { return this._lib2_lostLastSubscriberCallback; },
 _lib2_lostLastSubscriberCallback$0: function() { return this._lib2_lostLastSubscriberCallback.$call$0(); },
 get$_lib2_gotFirstSubscriberCallback: function() { return this._lib2_gotFirstSubscriberCallback; },
 _lib2_gotFirstSubscriberCallback$0: function() { return this._lib2_gotFirstSubscriberCallback.$call$0(); },
});

Isolate.$defineClass("_FrozenElementList", "Object",
function _FrozenElementList(_lib5_nodeList) {
  this._lib5_nodeList = _lib5_nodeList;
}, {
 last$0: function() {
  return $.last(this.get$_lib5_nodeList());
 },
 removeLast$0: function() {
  throw $.captureStackTrace($.CTC163);
 },
 clear$0: function() {
  throw $.captureStackTrace($.CTC163);
 },
 indexOf$2: function(element, start) {
  return $.indexOf$2(this.get$_lib5_nodeList(), element, start);
 },
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 getRange$2: function(start, rangeLength) {
  return $._lib5_FrozenElementList$_wrap$1($.getRange(this.get$_lib5_nodeList(), start, rangeLength));
 },
 removeRange$2: function(start, rangeLength) {
  throw $.captureStackTrace($.CTC163);
 },
 sort$1: function(compare) {
  throw $.captureStackTrace($.CTC163);
 },
 addAll$1: function(collection) {
  throw $.captureStackTrace($.CTC163);
 },
 iterator$0: function() {
  return $._lib5_FrozenElementListIterator$1(this);
 },
 addLast$1: function(value) {
  throw $.captureStackTrace($.CTC163);
 },
 add$1: function(value) {
  throw $.captureStackTrace($.CTC163);
 },
 set$length: function(newLength) {
  $.set$length(this.get$_lib5_nodeList(), newLength);
 },
 operator$indexSet$2: function(index, value) {
  throw $.captureStackTrace($.CTC163);
 },
 operator$index$1: function(index) {
  return $.index(this.get$_lib5_nodeList(), index);
 },
 get$length: function() {
  return $.get$length(this.get$_lib5_nodeList());
 },
 isEmpty$0: function() {
  return $.isEmpty(this.get$_lib5_nodeList());
 },
 some$1: function(f) {
  for (var t0 = this.iterator$0(); t0.hasNext$0() === true; ) {
    if (f.$call$1(t0.next$0()) === true) {
      return true;
    }
  }
  return false;
 },
 every$1: function(f) {
  for (var t0 = this.iterator$0(); t0.hasNext$0() === true; ) {
    if (!(f.$call$1(t0.next$0()) === true)) {
      return false;
    }
  }
  return true;
 },
 filter$1: function(f) {
  var out = $._lib5_ElementList$1([]);
  for (var t0 = this.iterator$0(); t0.hasNext$0() === true; ) {
    var t1 = t0.next$0();
    if (f.$call$1(t1) === true) {
      out.add$1(t1);
    }
  }
  return out;
 },
 forEach$1: function(f) {
  for (var t0 = this.iterator$0(); t0.hasNext$0() === true; ) {
    f.$call$1(t0.next$0());
  }
 },
 get$first: function() {
  return $.index(this.get$_lib5_nodeList(), 0);
 },
 first$0: function() { return this.get$first().$call$0(); },
 get$_lib5_nodeList: function() { return this._lib5_nodeList; },
 is$List2: function() { return true; },
 is$Collection: function() { return true; },
});

Isolate.$defineClass("Closure118", "Closure330",
function Closure() {
}, {
 $call$1: function(_) {
 },
});

Isolate.$defineClass("Closure323", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$1: function(time) {
  if (!(this.this_0.get$_lib2_watchingMeasurement() === true)) {
    return;
  }
  this.this_0.get$_lib2_component().get$rect().then$1(new $.Closure324(this.this_0, this));
 },
});

Isolate.$defineClass("Closure142", "Closure330",
function Closure(this_3) {
  this.this_3 = this_3;
}, {
 $call$1: function(value) {
  var t0 = '' + $.stringToString($.toString(value)) + 'px';
  this.this_3.get$_lib2_component().get$style().set$fontSize(t0);
 },
});

Isolate.$defineClass("Closure144", "Closure330",
function Closure(this_0) {
  this.this_0 = this_0;
}, {
 $call$1: function(e) {
  if ($.eqB(this.this_0.get$value(), $.get$dynamic(this.this_0.get$_lib2_component()).get$value())) {
    return;
  }
  var t0 = $.get$dynamic(this.this_0.get$_lib2_component()).get$value();
  this.this_0.set$value(t0);
  e.stopPropagation$0();
 },
});

Isolate.$defineClass("Closure266", "Closure330",
function Closure(setAttribute_6, box_0, this_5) {
  this.setAttribute_6 = setAttribute_6;
  this.box_0 = box_0;
  this.this_5 = this_5;
}, {
 $call$0: function() {
  this.this_5._lib7_assertKind$3(this.box_0.next_4, 9, 'Quotes are required around attribute values.');
  var s = $.StringBufferImpl$1('');
  var qkind = this.box_0.next_4.get$quoteKind();
  if (typeof qkind !== 'number') return this.$call$0$bailout(1, s, qkind);
  var qkind0 = qkind;
  do {
    var qkind1 = qkind0;
    var next = this.box_0.t_1.next$0();
    this.box_0.next_4 = next;
    if ($.eqNullB(this.box_0.next_4)) {
      throw $.captureStackTrace($.CTC219);
    }
    if (!$.eqB(this.box_0.next_4.get$kind(), 9)) {
      s.add$1(this.box_0.next_4.toStringLiteral$0());
      qkind1 = qkind0;
    } else {
      if (!$.eqB(this.box_0.next_4.get$quoteKind(), qkind0)) {
        s.add$1(this.box_0.next_4.toStringLiteral$0());
        qkind1 = qkind0;
      } else {
        qkind1 = -1;
      }
    }
  } while (qkind0 = qkind1, !(qkind1 === -1));
  this.setAttribute_6.$call$2(this.box_0.attributeName_2, s.toString$0());
 },
 $call$0$bailout: function(state, env0, env1) {
  switch (state) {
    case 1:
      s = env0;
      qkind = env1;
      break;
  }
  switch (state) {
    case 0:
      this.this_5._lib7_assertKind$3(this.box_0.next_4, 9, 'Quotes are required around attribute values.');
      var s = $.StringBufferImpl$1('');
      var qkind = this.box_0.next_4.get$quoteKind();
    case 1:
      state = 0;
      var qkind0 = qkind;
      L0: while (true) {
        var qkind1 = qkind0;
        var next = this.box_0.t_1.next$0();
        this.box_0.next_4 = next;
        if ($.eqNullB(this.box_0.next_4)) {
          throw $.captureStackTrace($.CTC219);
        }
        if (!$.eqB(this.box_0.next_4.get$kind(), 9)) {
          s.add$1(this.box_0.next_4.toStringLiteral$0());
          qkind1 = qkind0;
        } else {
          if (!$.eqB(this.box_0.next_4.get$quoteKind(), qkind0)) {
            s.add$1(this.box_0.next_4.toStringLiteral$0());
            qkind1 = qkind0;
          } else {
            qkind1 = -1;
          }
        }
        qkind0 = qkind1;
        if (!!$.eqB(qkind1, -1)) break L0;
      }
      this.setAttribute_6.$call$2(this.box_0.attributeName_2, s.toString$0());
  }
 },
});

Isolate.$defineClass("Orientation", "Object",
function Orientation(_lib2_str) {
  this._lib2_str = _lib2_str;
}, {
 toString$0: function() {
  return this.get$_lib2_str();
 },
 get$_lib2_str: function() { return this._lib2_str; },
});

Isolate.$defineClass("_GridCell", "FrameworkObject",
function _GridCell(marginProperty, contentProperty, _lib2_ref, FrameworkObject_mostRecentMeasurement, FrameworkObject__lib2_dataContextUpdated, FrameworkObject_nameProperty, FrameworkObject_attachedPropertyChanged, FrameworkObject_measurementChanged, FrameworkObject_unloaded, FrameworkObject_loaded, FrameworkObject_lateBindings, FrameworkObject_dataContextProperty, FrameworkObject__lib2_isLoaded, FrameworkObject__lib2_parent, FrameworkObject__lib2_component, FrameworkObject__lib2_previousMeasurement, FrameworkObject__lib2_animationFrameID, FrameworkObject__lib2_watchingMeasurement, BuckshotObject__lib2_frameworkProperties, BuckshotObject__lib2_bindings, BuckshotObject__lib2_stateBag, HashableObject__lib2_assignedHash) {
  this.marginProperty = marginProperty;
  this.contentProperty = contentProperty;
  this._lib2_ref = _lib2_ref;
  this.mostRecentMeasurement = FrameworkObject_mostRecentMeasurement;
  this._lib2_dataContextUpdated = FrameworkObject__lib2_dataContextUpdated;
  this.nameProperty = FrameworkObject_nameProperty;
  this.attachedPropertyChanged = FrameworkObject_attachedPropertyChanged;
  this.measurementChanged = FrameworkObject_measurementChanged;
  this.unloaded = FrameworkObject_unloaded;
  this.loaded = FrameworkObject_loaded;
  this.lateBindings = FrameworkObject_lateBindings;
  this.dataContextProperty = FrameworkObject_dataContextProperty;
  this._lib2_isLoaded = FrameworkObject__lib2_isLoaded;
  this._lib2_parent = FrameworkObject__lib2_parent;
  this._lib2_component = FrameworkObject__lib2_component;
  this._lib2_previousMeasurement = FrameworkObject__lib2_previousMeasurement;
  this._lib2_animationFrameID = FrameworkObject__lib2_animationFrameID;
  this._lib2_watchingMeasurement = FrameworkObject__lib2_watchingMeasurement;
  this._lib2_frameworkProperties = BuckshotObject__lib2_frameworkProperties;
  this._lib2_bindings = BuckshotObject__lib2_bindings;
  this._lib2_stateBag = BuckshotObject__lib2_stateBag;
  this._lib2_assignedHash = HashableObject__lib2_assignedHash;
}, {
 get$type: function() {
  return '_GridCell';
 },
 updateLayout$0: function() {
  if (!$.eqNullB(this.get$content())) {
    if (!$.eqNullB(this.get$content().get$horizontalAlignment())) {
      if ($.eqB(this.get$content().get$horizontalAlignment(), $.CTC150)) {
        if (!($.attemptSetXPCSS(this.get$content().get$rawElement(), 'flex', '1') === true)) {
          if ($.eqNullB(this.get$_lib2_ref())) {
            this.set$_lib2_ref($.add(this.get$measurementChanged(), new $.Closure209(this)));
          }
        }
      } else {
        if (!($.attemptSetXPCSS(this.get$content().get$rawElement(), 'flex', 'none') === true)) {
          if (!$.eqNullB(this.get$_lib2_ref())) {
            $.sub(this.get$measurementChanged(), this.get$_lib2_ref());
            this.set$_lib2_ref((void 0));
            this.get$content().get$rawElement().get$style().set$width('auto');
          }
        }
        $.setHorizontalFlexBoxAlignment(this, this.get$content().get$horizontalAlignment());
      }
    }
    if (!$.eqNullB(this.get$content().get$verticalAlignment())) {
      $.setVerticalFlexBoxAlignment(this, this.get$content().get$verticalAlignment());
    }
  }
 },
 CreateElement$0: function() {
  this.set$_lib2_component($.createByTag('div'));
  this.get$_lib2_component().get$style().set$overflow('hidden');
  this.get$_lib2_component().get$style().set$position('absolute');
  $.makeFlexBox(this);
 },
 updateMeasurement$0: function() {
  this.get$_lib2_component().get$rect().then$1(new $.Closure314(this));
 },
 get$margin: function() {
  return $.getValue(this.get$marginProperty());
 },
 set$margin: function(value) {
  return $.setValue(this.get$marginProperty(), value);
 },
 set$content: function(value) {
  return $.setValue(this.get$contentProperty(), value);
 },
 get$content: function() {
  return $.getValue(this.get$contentProperty());
 },
 _lib2_initGridCellProperties$0: function() {
  this.set$contentProperty($.FrameworkProperty$5(this, 'content', new $.Closure207(this), (void 0), (void 0)));
  this.set$marginProperty($.FrameworkProperty$5(this, 'margin', new $.Closure208(this), $.Thickness$1(0), $.CTC5));
 },
 set$marginProperty: function(v) { this.marginProperty = v; },
 get$marginProperty: function() { return this.marginProperty; },
 set$contentProperty: function(v) { this.contentProperty = v; },
 get$contentProperty: function() { return this.contentProperty; },
 set$_lib2_ref: function(v) { this._lib2_ref = v; },
 get$_lib2_ref: function() { return this._lib2_ref; },
 _lib2_GridCell$0: function() {
  $.appendBuckshotClass(this.get$_lib2_component(), 'GridCell');
  this._lib2_initGridCellProperties$0();
  $.indexSet(this.get$_lib2_stateBag(), 'CONTAINER_CONTEXT', this.get$contentProperty());
 },
 is$_GridCell: true,
});

Isolate.$defineClass("Closure330", "Object",
function Closure() {
}, {
 toString$0: function() {
  return 'Closure';
 },
});

Isolate.$defineClass('Closure331', 'Closure330', function BoundClosure(self) { this.self = self; }, {
$call$0: function() {
  return this.self.click$0();
},
});
Isolate.$defineClass('Closure332', 'Closure330', function BoundClosure(self) { this.self = self; }, {
$call$0: function() {
  return this.self.focus$0();
},
});
Isolate.$defineClass('Closure333', 'Closure330', function BoundClosure(self) { this.self = self; }, {
$call$0: function() {
  return this.self.blur$0();
},
});
Isolate.$defineClass('Closure334', 'Closure330', function BoundClosure(self) { this.self = self; }, {
$call$2: function(arg0, arg1) {
  return this.self._lib2_OnItemCreated$2(arg0, arg1);
},
});
Isolate.$defineClass('Closure335', 'Closure330', function BoundClosure(self) { this.self = self; }, {
$call$2: function(arg0, arg1) {
  return this.self._lib2_onAttachedPropertyChanging$2(arg0, arg1);
},
});
Isolate.$defineClass('Closure336', 'Closure330', function BoundClosure(self) { this.self = self; }, {
$call$2: function(arg0, arg1) {
  return this.self._lib2_onChildrenChanging$2(arg0, arg1);
},
});
Isolate.$defineClass('Closure337', 'Closure330', function BoundClosure(self) { this.self = self; }, {
$call$2: function(arg0, arg1) {
  return this.self._lib2_onSettersCollectionChanging$2(arg0, arg1);
},
});
Isolate.$defineClass('Closure338', 'Closure330', function BoundClosure(self) { this.self = self; }, {
$call$1: function(arg0) {
  return this.self.time$1(arg0);
},
});
Isolate.$defineClass('Closure339', 'Closure330', function BoundClosure(self) { this.self = self; }, {
$call$2: function(arg0, arg1) {
  return this.self._lib2_onListChanging$2(arg0, arg1);
},
});
Isolate.$defineClass('Closure340', 'Closure330', function BoundClosure(self) { this.self = self; }, {
$call$1: function(arg0) {
  return this.self.add$1(arg0);
},
});
Isolate.$defineClass('Closure341', 'Closure330', function BoundClosure(self) { this.self = self; }, {
$call$0: function() {
  return this.self.first$0();
},
});
Isolate.$defineClass('Closure342', 'Closure330', function BoundClosure(self) { this.self = self; }, {
$call$2: function(arg0, arg1) {
  return this.self.scroll$2(arg0, arg1);
},
});
Isolate.$defineClass('Closure343', 'Closure330', function BoundClosure(self) { this.self = self; }, {
$call$0: function() {
  return this.self.focus$0();
},
});
Isolate.$defineClass('Closure344', 'Closure330', function BoundClosure(self) { this.self = self; }, {
$call$0: function() {
  return this.self.blur$0();
},
});
Isolate.$defineClass('Closure345', 'Closure330', function BoundClosure(self) { this.self = self; }, {
$call$4: function(arg0, arg1, arg2, arg3) {
  return this.self.rect$4(arg0, arg1, arg2, arg3);
},
});
Isolate.$defineClass('Closure346', 'Closure330', function BoundClosure(self) { this.self = self; }, {
$call$0: function() {
  return this.self.focus$0();
},
});
Isolate.$defineClass('Closure347', 'Closure330', function BoundClosure(self) { this.self = self; }, {
$call$0: function() {
  return this.self.click$0();
},
});
Isolate.$defineClass('Closure348', 'Closure330', function BoundClosure(self) { this.self = self; }, {
$call$0: function() {
  return this.self.blur$0();
},
});
$.sort2 = function(a, compare) {
  $._doSort(a, 0, $.sub($.get$length(a), 1), compare);
};

$.floor = function(receiver) {
  if (!(typeof receiver === 'number')) {
    return receiver.floor$0();
  }
  return Math.floor(receiver);
};

$.eqB = function(a, b) {
  return $.eq(a, b) === true;
};

$._containsRef = function(c, ref) {
  for (var t0 = $.iterator(c); t0.hasNext$0() === true; ) {
    if (t0.next$0() === ref) {
      return true;
    }
  }
  return false;
};

$.forEach = function(receiver, f) {
  if (!($.isJsArray(receiver) === true)) {
    return receiver.forEach$1(f);
  } else {
    return $.forEach2(receiver, f);
  }
};

$.XmlNamespace$2 = function(name$, uri) {
  return new $.XmlNamespace(uri, name$, (void 0), $.CTC223);
};

$.createByTag = function(tagName) {
  return $.Element$tag(tagName);
};

$.createByTag2 = function(tagName) {
  return $.Element$tag(tagName);
};

$.forEach2 = function(iterable, f) {
  for (var t0 = $.iterator(iterable); t0.hasNext$0() === true; ) {
    f.$call$1(t0.next$0());
  }
};

$._nextProbe = function(currentProbe, numberOfProbes, length$) {
  return $.and($.add(currentProbe, numberOfProbes), $.sub(length$, 1));
};

$.allMatches = function(receiver, str) {
  if (!(typeof receiver === 'string')) {
    return receiver.allMatches$1(str);
  }
  $.checkString(str);
  return $.allMatchesInStringUnchecked(receiver, str);
};

$.BuckshotTemplateProvider$0 = function() {
  var t0 = $._hashNum;
  $._hashNum = $.add(t0, 1);
  var t1 = new $.BuckshotTemplateProvider(t0);
  t1.HashableObject$0();
  return t1;
};

$._lib7_XmlToken$_internal$3 = function(kind, _str, quoteKind) {
  return new $._XmlToken2((void 0), _str, quoteKind, kind);
};

$.get$length = function(receiver) {
  if (typeof receiver === 'string' || $.isJsArray(receiver) === true) {
    return receiver.length;
  } else {
    return receiver.get$length();
  }
};

$.indexOf = function(a, element, startIndex, endIndex) {
  if (typeof a !== 'string' && (typeof a !== 'object'||a.constructor !== Array)) return $.indexOf$bailout(a, element, startIndex, endIndex,  0);
  if (typeof endIndex !== 'number') return $.indexOf$bailout(a, element, startIndex, endIndex,  0);
  if ($.geB(startIndex, a.length)) {
    return -1;
  }
  var startIndex0 = startIndex;
  if ($.ltB(startIndex, 0)) {
    startIndex0 = 0;
  }
  if (typeof startIndex0 !== 'number') return $.indexOf$bailout(a, element, startIndex, endIndex, 3, a, endIndex, startIndex0);
  for (var i = startIndex0; i < endIndex; i = i + 1) {
    if (i !== (i | 0)) throw $.iae(i);
    var t0 = a.length;
    if (i < 0 || i >= t0) throw $.ioore(i);
    if ($.eqB(a[i], element)) {
      return i;
    }
  }
  return -1;
};

$.IllegalJSRegExpException$2 = function(_pattern, _errmsg) {
  return new $.IllegalJSRegExpException(_errmsg, _pattern);
};

$.setRowSpan = function(element, rowSpan) {
  if ($.eqNullB(element)) {
    return;
  }
  var rowSpan0 = rowSpan;
  if ($.ltB(rowSpan, 0)) {
    rowSpan0 = 0;
  }
  if ($.eqNullB($.rowSpanProperty)) {
    $.rowSpanProperty = $.AttachedFrameworkProperty$2('rowSpan', new $.Closure159());
  }
  $.setAttachedValue(element, $.rowSpanProperty, rowSpan0);
};

$.clear = function(receiver) {
  if (!($.isJsArray(receiver) === true)) {
    return receiver.clear$0();
  }
  $.set$length(receiver, 0);
};

$.regExpMatchStart = function(m) {
  return m.index;
};

$.NullPointerException$2 = function(functionName, arguments$) {
  return new $.NullPointerException(arguments$, functionName);
};

$.RowDefinition$0 = function() {
  var t0 = $._lib2_FrameworkEventImplementation$0();
  var t1 = $.HashMapImplementation$0();
  var t2 = $.List((void 0));
  $.setRuntimeTypeInfo(t2, ({E: 'Binding'}));
  var t3 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t3, ({E: 'FrameworkProperty'}));
  var t4 = $._hashNum;
  $._hashNum = $.add(t4, 1);
  var t5 = new $.RowDefinition((void 0), t0, 0, 32767, 0, (void 0), (void 0), 0, t3, t2, t1, t4);
  t5.HashableObject$0();
  t5.RowDefinition$0();
  return t5;
};

$.tdiv = function(a, b) {
  if ($.checkNumbers(a, b) === true) {
    return $.truncate($.div(a, b));
  }
  return a.operator$tdiv$1(b);
};

$.printString = function(string) {
  if (typeof console == "object") {
    console.log(string);
  } else {
    write(string);
    write("\n");
  }
};

$.JSSyntaxRegExp$_globalVersionOf$1 = function(other) {
  var t0 = other.get$pattern();
  var t1 = other.get$multiLine();
  var t2 = new $.JSSyntaxRegExp(other.get$ignoreCase(), t1, t0);
  t2.JSSyntaxRegExp$_globalVersionOf$1(other);
  return t2;
};

$.JSSyntaxRegExp$3 = function(pattern, multiLine, ignoreCase) {
  return new $.JSSyntaxRegExp(ignoreCase, multiLine, pattern);
};

$.typeNameInChrome = function(obj) {
  var name$ = (obj.constructor.name);
  if (name$ === 'Window') {
    return 'DOMWindow';
  }
  if (name$ === 'CanvasPixelArray') {
    return 'Uint8ClampedArray';
  }
  return name$;
};

$.some = function(receiver, f) {
  if (!($.isJsArray(receiver) === true)) {
    return receiver.some$1(f);
  } else {
    return $.some2(receiver, f);
  }
};

$.removeRange = function(receiver, start, length$) {
  if (!($.isJsArray(receiver) === true)) {
    return receiver.removeRange$2(start, length$);
  }
  $.checkGrowable(receiver, 'removeRange');
  if ($.eqB(length$, 0)) {
    return;
  }
  $.checkNull(start);
  $.checkNull(length$);
  if (!((typeof start === 'number') && (start === (start | 0)))) {
    throw $.captureStackTrace($.IllegalArgumentException$1(start));
  }
  if (!((typeof length$ === 'number') && (length$ === (length$ | 0)))) {
    throw $.captureStackTrace($.IllegalArgumentException$1(length$));
  }
  if (length$ < 0) {
    throw $.captureStackTrace($.IllegalArgumentException$1(length$));
  }
  var receiverLength = (receiver.length);
  if (start < 0 || start >= receiverLength) {
    throw $.captureStackTrace($.IndexOutOfRangeException$1(start));
  }
  var t0 = start + length$;
  if (t0 > receiverLength) {
    throw $.captureStackTrace($.IndexOutOfRangeException$1(t0));
  }
  $.copy(receiver, $.add(start, length$), receiver, start, $.sub($.sub(receiverLength, length$), start));
  $.set$length(receiver, $.sub(receiverLength, length$));
};

$.FrameworkPropertyResolutionException$1 = function(message) {
  return new $.FrameworkPropertyResolutionException(message);
};

$.forEach3 = function(iterable, f) {
  for (var t0 = $.iterator(iterable); t0.hasNext$0() === true; ) {
    f.$call$1(t0.next$0());
  }
};

$.some2 = function(iterable, f) {
  for (var t0 = $.iterator(iterable); t0.hasNext$0() === true; ) {
    if (f.$call$1(t0.next$0()) === true) {
      return true;
    }
  }
  return false;
};

$.shr = function(a, b) {
  if ($.checkNumbers(a, b) === true) {
    if ($.ltB(b, 0)) {
      throw $.captureStackTrace($.IllegalArgumentException$1(b));
    }
    return a >>> b;
  }
  return a.operator$shr$1(b);
};

$.TextArea$0 = function() {
  var t0 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t0, ({T: 'TextChangedEventArgs'}));
  var t1 = $.HashMapImplementation$0();
  var t2 = $.HashMapImplementation$0();
  var t3 = $.HashMapImplementation$0();
  var t4 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t4, ({T: 'EventArgs'}));
  var t5 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t5, ({T: 'EventArgs'}));
  var t6 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t6, ({T: 'AttachedPropertyChangedEventArgs'}));
  var t7 = $.HashMapImplementation$0();
  var t8 = $.List((void 0));
  $.setRuntimeTypeInfo(t8, ({E: 'Binding'}));
  var t9 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t9, ({E: 'FrameworkProperty'}));
  var t10 = $._hashNum;
  $._hashNum = $.add(t10, 1);
  var t11 = new $.TextArea(t0, (void 0), (void 0), (void 0), false, false, false, (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), t2, t1, (void 0), (void 0), (void 0), false, (void 0), t6, (void 0), t5, t4, t3, (void 0), false, (void 0), (void 0), (void 0), (void 0), false, t9, t8, t7, t10);
  t11.HashableObject$0();
  t11.FrameworkObject$0();
  t11.FrameworkElement$0();
  t11.Control$0();
  t11.TextArea$0();
  return t11;
};

$.eqNull = function(a) {
  if (typeof a === "object") {
    if (!!a.operator$eq$1) {
      return a.operator$eq$1((void 0));
    } else {
      return false;
    }
  } else {
    return typeof a === "undefined";
  }
};

$.and = function(a, b) {
  if ($.checkNumbers(a, b) === true) {
    return (a & b) >>> 0;
  }
  return a.operator$and$1(b);
};

$.substring$2 = function(receiver, startIndex, endIndex) {
  if (!(typeof receiver === 'string')) {
    return receiver.substring$2(startIndex, endIndex);
  }
  $.checkNum(startIndex);
  var length$ = receiver.length;
  var endIndex0 = endIndex;
  if (endIndex === (void 0)) {
    endIndex0 = length$;
  }
  $.checkNum(endIndex0);
  if ($.ltB(startIndex, 0)) {
    throw $.captureStackTrace($.IndexOutOfRangeException$1(startIndex));
  }
  if ($.gtB(startIndex, endIndex0)) {
    throw $.captureStackTrace($.IndexOutOfRangeException$1(startIndex));
  }
  if ($.gtB(endIndex0, length$)) {
    throw $.captureStackTrace($.IndexOutOfRangeException$1(endIndex0));
  }
  return $.substringUnchecked(receiver, startIndex, endIndex0);
};

$.Point = function(x, y) {
  return new WebKitPoint(x, y);;
};

$.indexSet = function(a, index, value) {
  if ($.isJsArray(a) === true) {
    if (!((typeof index === 'number') && (index === (index | 0)))) {
      throw $.captureStackTrace($.IllegalArgumentException$1(index));
    }
    if (index < 0 || $.geB(index, $.get$length(a))) {
      throw $.captureStackTrace($.IndexOutOfRangeException$1(index));
    }
    $.checkMutable(a, 'indexed set');
    a[index] = value;
    return;
  }
  a.operator$indexSet$2(index, value);
};

$.StringMatch$3 = function(_start, str, pattern) {
  return new $.StringMatch(pattern, str, _start);
};

$.ExceptionImplementation$1 = function(msg) {
  return new $.ExceptionImplementation(msg);
};

$.Rectangle$0 = function() {
  var t0 = $.HashMapImplementation$0();
  var t1 = $.HashMapImplementation$0();
  var t2 = $.HashMapImplementation$0();
  var t3 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t3, ({T: 'EventArgs'}));
  var t4 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t4, ({T: 'EventArgs'}));
  var t5 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t5, ({T: 'AttachedPropertyChangedEventArgs'}));
  var t6 = $.HashMapImplementation$0();
  var t7 = $.List((void 0));
  $.setRuntimeTypeInfo(t7, ({E: 'Binding'}));
  var t8 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t8, ({E: 'FrameworkProperty'}));
  var t9 = $._hashNum;
  $._hashNum = $.add(t9, 1);
  var t10 = new $.Rectangle((void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), t1, t0, (void 0), (void 0), (void 0), false, (void 0), t5, (void 0), t4, t3, t2, (void 0), false, (void 0), (void 0), (void 0), (void 0), false, t8, t7, t6, t9);
  t10.HashableObject$0();
  t10.FrameworkObject$0();
  t10.FrameworkElement$0();
  t10.Shape$0();
  t10.Rectangle$0();
  return t10;
};

$.computeKeyFramePercentages = function(keyFrames) {
  if (typeof keyFrames !== 'string' && (typeof keyFrames !== 'object'||keyFrames.constructor !== Array)) return $.computeKeyFramePercentages$bailout(keyFrames,  0);
  var span = $.last(keyFrames).get$time();
  if (typeof span !== 'number') return $.computeKeyFramePercentages$bailout(keyFrames, 2, keyFrames, span);
  for (var i = 0; i < keyFrames.length; i = i + 1) {
    var t0 = keyFrames.length;
    if (i < 0 || i >= t0) throw $.ioore(i);
    var t1 = $.mul($.div(keyFrames[i].get$time(), span), 100);
    var t2 = keyFrames.length;
    if (i < 0 || i >= t2) throw $.ioore(i);
    keyFrames[i].set$_lib2_percentage(t1);
  }
};

$.ColumnDefinition$0 = function() {
  var t0 = $._lib2_FrameworkEventImplementation$0();
  var t1 = $.HashMapImplementation$0();
  var t2 = $.List((void 0));
  $.setRuntimeTypeInfo(t2, ({E: 'Binding'}));
  var t3 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t3, ({E: 'FrameworkProperty'}));
  var t4 = $._hashNum;
  $._hashNum = $.add(t4, 1);
  var t5 = new $.ColumnDefinition((void 0), t0, 0, 32767, 0, (void 0), (void 0), 0, t3, t2, t1, t4);
  t5.HashableObject$0();
  t5.ColumnDefinition$0();
  return t5;
};

$._createMeasurementFuture = function(computeValue, completer) {
  if ($._pendingRequests === (void 0)) {
    $._pendingRequests = [];
    $._maybeScheduleMeasurementFrame();
  }
  $.add$1($._pendingRequests, $._lib5_MeasurementRequest$2(computeValue, completer));
  return completer.get$future();
};

$.FrameworkObject$0 = function() {
  var t0 = $.HashMapImplementation$0();
  var t1 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t1, ({T: 'EventArgs'}));
  var t2 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t2, ({T: 'EventArgs'}));
  var t3 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t3, ({T: 'AttachedPropertyChangedEventArgs'}));
  var t4 = $.HashMapImplementation$0();
  var t5 = $.List((void 0));
  $.setRuntimeTypeInfo(t5, ({E: 'Binding'}));
  var t6 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t6, ({E: 'FrameworkProperty'}));
  var t7 = $._hashNum;
  $._hashNum = $.add(t7, 1);
  var t8 = new $.FrameworkObject((void 0), false, (void 0), t3, (void 0), t2, t1, t0, (void 0), false, (void 0), (void 0), (void 0), (void 0), false, t6, t5, t4, t7);
  t8.HashableObject$0();
  t8.FrameworkObject$0();
  return t8;
};

$.ListChangedEventArgs$2 = function(oldItems, newItems) {
  var t0 = $.HashMapImplementation$0();
  var t1 = $.List((void 0));
  $.setRuntimeTypeInfo(t1, ({E: 'Binding'}));
  var t2 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t2, ({E: 'FrameworkProperty'}));
  var t3 = $._hashNum;
  $._hashNum = $.add(t3, 1);
  var t4 = new $.ListChangedEventArgs(newItems, oldItems, t2, t1, t0, t3);
  t4.HashableObject$0();
  t4.ListChangedEventArgs$2(oldItems, newItems);
  return t4;
};

$.buildDynamicMetadata = function(inputTable) {
  if (typeof inputTable !== 'string' && (typeof inputTable !== 'object'||inputTable.constructor !== Array)) return $.buildDynamicMetadata$bailout(inputTable,  0);
  var result = [];
  for (var i = 0; i < inputTable.length; i = i + 1) {
    var t0 = inputTable.length;
    if (i < 0 || i >= t0) throw $.ioore(i);
    var tag = $.index(inputTable[i], 0);
    var t1 = inputTable.length;
    if (i < 0 || i >= t1) throw $.ioore(i);
    var tags = $.index(inputTable[i], 1);
    var set = $.HashSetImplementation$0();
    $.setRuntimeTypeInfo(set, ({E: 'String'}));
    var tagNames = $.split(tags, '|');
    if (typeof tagNames !== 'string' && (typeof tagNames !== 'object'||tagNames.constructor !== Array)) return $.buildDynamicMetadata$bailout(inputTable, 2, inputTable, result, tag, i, tags, set, tagNames);
    for (var j = 0; j < tagNames.length; j = j + 1) {
      var t2 = tagNames.length;
      if (j < 0 || j >= t2) throw $.ioore(j);
      set.add$1(tagNames[j]);
    }
    $.add$1(result, $.MetaInfo$3(tag, tags, set));
  }
  return result;
};

$.parseInt = function(str) {
  return $.parseInt2(str);
};

$.filter = function(receiver, predicate) {
  if (!($.isJsArray(receiver) === true)) {
    return receiver.filter$1(predicate);
  } else {
    return $.filter2(receiver, [], predicate);
  }
};

$._lib5_NotificationEventsImpl$1 = function(_ptr) {
  return new $._NotificationEventsImpl(_ptr);
};

$.parseInt2 = function(str) {
  $.checkString(str);
  if (!(/^\s*[+-]?(?:0[xX][abcdefABCDEF0-9]+|\d+)\s*$/.test(str))) {
    throw $.captureStackTrace($.BadNumberFormatException$1(str));
  }
  var trimmed = $.trim(str);
  var base = 10;
  if ($.gtB($.get$length(trimmed), 2) && ($.eqB($.index(trimmed, 1), 'x') || $.eqB($.index(trimmed, 1), 'X')) || $.gtB($.get$length(trimmed), 3) && ($.eqB($.index(trimmed, 2), 'x') || $.eqB($.index(trimmed, 2), 'X'))) {
    base = 16;
  }
  var ret = (parseInt(trimmed, base));
  if ($.isNaN(ret) === true) {
    throw $.captureStackTrace($.BadNumberFormatException$1(str));
  }
  return ret;
};

$.filter2 = function(source, destination, f) {
  for (var t0 = $.iterator(source); t0.hasNext$0() === true; ) {
    var t1 = t0.next$0();
    if (f.$call$1(t1) === true) {
      $.add$1(destination, t1);
    }
  }
  return destination;
};

$.filter3 = function(source, destination, f) {
  for (var t0 = $.iterator(source); t0.hasNext$0() === true; ) {
    var t1 = t0.next$0();
    if (f.$call$1(t1) === true) {
      $.add$1(destination, t1);
    }
  }
  return destination;
};

$._emitCollection = function(c, result, visiting) {
  $.add$1(visiting, c);
  var isList = typeof c === 'object' && (c.constructor === Array || c.is$List2());
  if (isList) {
    var t0 = '[';
  } else {
    t0 = '{';
  }
  $.add$1(result, t0);
  for (var t1 = $.iterator(c), first = true; t1.hasNext$0() === true; ) {
    var t2 = t1.next$0();
    if (!first) {
      $.add$1(result, ', ');
    }
    $._emitObject(t2, result, visiting);
    first = false;
  }
  if (isList) {
    var t3 = ']';
  } else {
    t3 = '}';
  }
  $.add$1(result, t3);
  $.removeLast(visiting);
};

$.GridLength$pixel$1 = function(v) {
  var t0 = $.HashMapImplementation$0();
  var t1 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t1, ({T: 'EventArgs'}));
  var t2 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t2, ({T: 'EventArgs'}));
  var t3 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t3, ({T: 'AttachedPropertyChangedEventArgs'}));
  var t4 = $.HashMapImplementation$0();
  var t5 = $.List((void 0));
  $.setRuntimeTypeInfo(t5, ({E: 'Binding'}));
  var t6 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t6, ({E: 'FrameworkProperty'}));
  var t7 = $._hashNum;
  $._hashNum = $.add(t7, 1);
  var t8 = new $.GridLength((void 0), (void 0), (void 0), false, (void 0), t3, (void 0), t2, t1, t0, (void 0), false, (void 0), (void 0), (void 0), (void 0), false, t6, t5, t4, t7);
  t8.HashableObject$0();
  t8.FrameworkObject$0();
  t8.GridLength$pixel$1(v);
  return t8;
};

$.some3 = function(iterable, f) {
  for (var t0 = $.iterator(iterable); t0.hasNext$0() === true; ) {
    if (f.$call$1(t0.next$0()) === true) {
      return true;
    }
  }
  return false;
};

$.AnimationException$1 = function(msg) {
  return new $.AnimationException();
};

$.ControlTemplate$0 = function() {
  var t0 = $.HashMapImplementation$0();
  var t1 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t1, ({T: 'EventArgs'}));
  var t2 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t2, ({T: 'EventArgs'}));
  var t3 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t3, ({T: 'AttachedPropertyChangedEventArgs'}));
  var t4 = $.HashMapImplementation$0();
  var t5 = $.List((void 0));
  $.setRuntimeTypeInfo(t5, ({E: 'Binding'}));
  var t6 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t6, ({E: 'FrameworkProperty'}));
  var t7 = $._hashNum;
  $._hashNum = $.add(t7, 1);
  var t8 = new $.ControlTemplate((void 0), (void 0), (void 0), (void 0), (void 0), false, (void 0), t3, (void 0), t2, t1, t0, (void 0), false, (void 0), (void 0), (void 0), (void 0), false, t6, t5, t4, t7);
  t8.HashableObject$0();
  t8.FrameworkObject$0();
  t8.FrameworkResource$0();
  t8.ControlTemplate$0();
  return t8;
};

$._lib5_PeerConnection00EventsImpl$1 = function(_ptr) {
  return new $._PeerConnection00EventsImpl(_ptr);
};

$._lib5_WorkerContextEventsImpl$1 = function(_ptr) {
  return new $._WorkerContextEventsImpl(_ptr);
};

$.LayoutCanvas$0 = function() {
  var t0 = $.ObservableList$0();
  $.setRuntimeTypeInfo(t0, ({T: 'FrameworkElement'}));
  var t1 = $.HashMapImplementation$0();
  var t2 = $.HashMapImplementation$0();
  var t3 = $.HashMapImplementation$0();
  var t4 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t4, ({T: 'EventArgs'}));
  var t5 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t5, ({T: 'EventArgs'}));
  var t6 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t6, ({T: 'AttachedPropertyChangedEventArgs'}));
  var t7 = $.HashMapImplementation$0();
  var t8 = $.List((void 0));
  $.setRuntimeTypeInfo(t8, ({E: 'Binding'}));
  var t9 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t9, ({E: 'FrameworkProperty'}));
  var t10 = $._hashNum;
  $._hashNum = $.add(t10, 1);
  var t11 = new $.LayoutCanvas((void 0), t0, (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), t2, t1, (void 0), (void 0), (void 0), false, (void 0), t6, (void 0), t5, t4, t3, (void 0), false, (void 0), (void 0), (void 0), (void 0), false, t9, t8, t7, t10);
  t11.HashableObject$0();
  t11.FrameworkObject$0();
  t11.FrameworkElement$0();
  t11.Panel$0();
  t11.LayoutCanvas$0();
  return t11;
};

$._isValidInputType = function(candidate) {
  return $.gt($.indexOf$2($.CTC205, candidate, 0), -1);
};

$._lib5_DocumentEventsImpl$1 = function(_ptr) {
  return new $._DocumentEventsImpl(_ptr);
};

$.regExpTest = function(regExp, str) {
  return $.regExpGetNative(regExp).test(str);
};

$._lib2_StyleTemplateImplementation$0 = function() {
  var t0 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t0, ({E: 'FrameworkElement'}));
  var t1 = $.HashMapImplementation$0();
  var t2 = $.HashMapImplementation$0();
  var t3 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t3, ({T: 'EventArgs'}));
  var t4 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t4, ({T: 'EventArgs'}));
  var t5 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t5, ({T: 'AttachedPropertyChangedEventArgs'}));
  var t6 = $.HashMapImplementation$0();
  var t7 = $.List((void 0));
  $.setRuntimeTypeInfo(t7, ({E: 'Binding'}));
  var t8 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t8, ({E: 'FrameworkProperty'}));
  var t9 = $._hashNum;
  $._hashNum = $.add(t9, 1);
  var t10 = new $._StyleTemplateImplementation((void 0), '__StyleBinding__', t1, t0, (void 0), (void 0), (void 0), false, (void 0), t5, (void 0), t4, t3, t2, (void 0), false, (void 0), (void 0), (void 0), (void 0), false, t8, t7, t6, t9);
  t10.HashableObject$0();
  t10.FrameworkObject$0();
  t10.FrameworkResource$0();
  t10._lib2_StyleTemplateImplementation$0();
  return t10;
};

$.stringSplitUnchecked = function(receiver, pattern) {
  if (typeof pattern === 'string') {
    return receiver.split(pattern);
  } else {
    if (typeof pattern === 'object' && !!pattern.is$JSSyntaxRegExp) {
      return receiver.split($.regExpGetNative(pattern));
    } else {
      throw $.captureStackTrace('StringImplementation.split(Pattern) UNIMPLEMENTED');
    }
  }
};

$._lib5_SpeechRecognitionEventsImpl$1 = function(_ptr) {
  return new $._SpeechRecognitionEventsImpl(_ptr);
};

$.every = function(receiver, f) {
  if (!($.isJsArray(receiver) === true)) {
    return receiver.every$1(f);
  } else {
    return $.every2(receiver, f);
  }
};

$._lib5_SVGElementInstanceEventsImpl$1 = function(_ptr) {
  return new $._SVGElementInstanceEventsImpl(_ptr);
};

$.every2 = function(iterable, f) {
  for (var t0 = $.iterator(iterable); t0.hasNext$0() === true; ) {
    if (!(f.$call$1(t0.next$0()) === true)) {
      return false;
    }
  }
  return true;
};

$.GridLength$star$1 = function(v) {
  var t0 = $.HashMapImplementation$0();
  var t1 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t1, ({T: 'EventArgs'}));
  var t2 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t2, ({T: 'EventArgs'}));
  var t3 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t3, ({T: 'AttachedPropertyChangedEventArgs'}));
  var t4 = $.HashMapImplementation$0();
  var t5 = $.List((void 0));
  $.setRuntimeTypeInfo(t5, ({E: 'Binding'}));
  var t6 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t6, ({E: 'FrameworkProperty'}));
  var t7 = $._hashNum;
  $._hashNum = $.add(t7, 1);
  var t8 = new $.GridLength((void 0), (void 0), (void 0), false, (void 0), t3, (void 0), t2, t1, t0, (void 0), false, (void 0), (void 0), (void 0), (void 0), false, t6, t5, t4, t7);
  t8.HashableObject$0();
  t8.FrameworkObject$0();
  t8.GridLength$star$1(v);
  return t8;
};

$.every3 = function(iterable, f) {
  for (var t0 = $.iterator(iterable); t0.hasNext$0() === true; ) {
    if (!(f.$call$1(t0.next$0()) === true)) {
      return false;
    }
  }
  return true;
};

$.add$1 = function(receiver, value) {
  if ($.isJsArray(receiver) === true) {
    $.checkGrowable(receiver, 'add');
    receiver.push(value);
    return;
  }
  return receiver.add$1(value);
};

$.toString = function(value) {
  if (typeof value == "object") {
    if ($.isJsArray(value) === true) {
      return $.collectionToString(value);
    } else {
      return value.toString$0();
    }
  }
  if (value === 0 && (1 / value) < 0) {
    return '-0.0';
  }
  if (value === (void 0)) {
    return 'null';
  }
  if (typeof value == "function") {
    return 'Closure';
  }
  return String(value);
};

$.geB = function(a, b) {
  return $.ge(a, b) === true;
};

$.window = function() {
  return window;;
};

$.add = function(a, b) {
  if ($.checkNumbers(a, b) === true) {
    return a + b;
  } else {
    if (typeof a === 'string') {
      var b0 = $.toString(b);
      if (typeof b0 === 'string') {
        return a + b0;
      }
      $.checkNull(b0);
      throw $.captureStackTrace($.IllegalArgumentException$1(b0));
    }
  }
  return a.operator$add$1(b);
};

$.regExpAttachGlobalNative = function(regExp) {
  regExp._re = $.regExpMakeNative(regExp, true);
};

$.leB = function(a, b) {
  return $.le(a, b) === true;
};

$.isNegative = function(receiver) {
  if (typeof receiver === 'number') {
    if (receiver === 0) {
      var t0 = 1 / receiver < 0;
    } else {
      t0 = receiver < 0;
    }
    return t0;
  } else {
    return receiver.isNegative$0();
  }
};

$.setVerticalFlexBoxAlignment = function(element, alignment) {
  $0:{
    if ($.CTC151 === alignment) {
      element.get$_lib2_component().get$style().set$flexAlign('start');
      break $0;
    } else {
      if ($.CTC152 === alignment) {
        element.get$_lib2_component().get$style().set$flexAlign('end');
        break $0;
      } else {
        if ($.CTC153 === alignment) {
          element.get$_lib2_component().get$style().set$flexAlign('center');
          break $0;
        } else {
          if ($.CTC154 === alignment) {
            element.get$_lib2_component().get$style().set$flexAlign('stretch');
            break $0;
          }
        }
      }
    }
  }
};

$.getLeft = function(element) {
  if ($.eqNullB(element)) {
    return 0;
  }
  var value = $.getAttachedValue(element, $.leftProperty);
  if ($.eqNullB($.leftProperty) || $.eqNullB(value)) {
    $.setLeft(element, 0);
  }
  return $.getAttachedValue(element, $.leftProperty);
};

$.isReserved = function(c) {
  return $.gt($.CTC238.indexOf(c), -1);
};

$._lib5_FrozenElementListIterator$1 = function(_list) {
  return new $._FrozenElementListIterator(0, _list);
};

$.SelectedItemChangedEventArgs$1 = function(selectedItem) {
  var t0 = $.HashMapImplementation$0();
  var t1 = $.List((void 0));
  $.setRuntimeTypeInfo(t1, ({E: 'Binding'}));
  var t2 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t2, ({E: 'FrameworkProperty'}));
  var t3 = $._hashNum;
  $._hashNum = $.add(t3, 1);
  var t4 = new $.SelectedItemChangedEventArgs(selectedItem, t2, t1, t0, t3);
  t4.HashableObject$0();
  t4.SelectedItemChangedEventArgs$1(selectedItem);
  return t4;
};

$._lib5_XMLHttpRequestEventsImpl$1 = function(_ptr) {
  return new $._XMLHttpRequestEventsImpl(_ptr);
};

$._lib5_JavaScriptAudioNodeEventsImpl$1 = function(_ptr) {
  return new $._JavaScriptAudioNodeEventsImpl(_ptr);
};

$._lib2_FrameworkEventImplementation$_watchFirstAndLast$2 = function(_gotFirstSubscriberCallback, _lostLastSubscriberCallback) {
  var t0 = $.List((void 0));
  $.setRuntimeTypeInfo(t0, ({E: 'EventHandlerReference'}));
  var t1 = $.HashMapImplementation$0();
  var t2 = $.List((void 0));
  $.setRuntimeTypeInfo(t2, ({E: 'Binding'}));
  var t3 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t3, ({E: 'FrameworkProperty'}));
  var t4 = $._hashNum;
  $._hashNum = $.add(t4, 1);
  var t5 = new $._FrameworkEventImplementation(t0, _lostLastSubscriberCallback, _gotFirstSubscriberCallback, t3, t2, t1, t4);
  t5.HashableObject$0();
  return t5;
};

$._emitObject = function(o, result, visiting) {
  if (typeof o === 'object' && (o.constructor === Array || o.is$Collection())) {
    if ($._containsRef(visiting, o) === true) {
      if (typeof o === 'object' && (o.constructor === Array || o.is$List2())) {
        var t0 = '[...]';
      } else {
        t0 = '{...}';
      }
      $.add$1(result, t0);
    } else {
      $._emitCollection(o, result, visiting);
    }
  } else {
    if (typeof o === 'object' && o.is$Map()) {
      if ($._containsRef(visiting, o) === true) {
        $.add$1(result, '{...}');
      } else {
        $._emitMap(o, result, visiting);
      }
    } else {
      if ($.eqNullB(o)) {
        var t1 = 'null';
      } else {
        t1 = o;
      }
      $.add$1(result, t1);
    }
  }
};

$._emitMap = function(m, result, visiting) {
  var t0 = ({});
  t0.visiting_2 = visiting;
  t0.result_1 = result;
  $.add$1(t0.visiting_2, m);
  $.add$1(t0.result_1, '{');
  t0.first_3 = true;
  $.forEach(m, new $.Closure(t0));
  $.add$1(t0.result_1, '}');
  $.removeLast(t0.visiting_2);
};

$.isFirefox = function() {
  return $.contains$2($.userAgent(), 'Firefox', 0);
};

$.getValue = function(propertyInfo) {
  if ($.eqNullB(propertyInfo)) {
    var t0 = (void 0);
  } else {
    t0 = propertyInfo.get$value();
  }
  return t0;
};

$.makeFlexBox = function(element) {
  var t0 = ({});
  t0.element_1 = element;
  $.forEach($.CTC158, new $.Closure327(t0));
};

$.Color$predefined$1 = function(predefinedColor) {
  var t0 = $.HashMapImplementation$0();
  var t1 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t1, ({T: 'EventArgs'}));
  var t2 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t2, ({T: 'EventArgs'}));
  var t3 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t3, ({T: 'AttachedPropertyChangedEventArgs'}));
  var t4 = $.HashMapImplementation$0();
  var t5 = $.List((void 0));
  $.setRuntimeTypeInfo(t5, ({E: 'Binding'}));
  var t6 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t6, ({E: 'FrameworkProperty'}));
  var t7 = $._hashNum;
  $._hashNum = $.add(t7, 1);
  var t8 = new $.Color((void 0), (void 0), (void 0), (void 0), false, (void 0), t3, (void 0), t2, t1, t0, (void 0), false, (void 0), (void 0), (void 0), (void 0), false, t6, t5, t4, t7);
  t8.HashableObject$0();
  t8.FrameworkObject$0();
  t8.FrameworkResource$0();
  t8.Color$predefined$1(predefinedColor);
  return t8;
};

$.getColumn = function(element) {
  if ($.eqNullB(element)) {
    return 0;
  }
  var value = $.getAttachedValue(element, $.columnProperty);
  if ($.eqNullB($.columnProperty) || $.eqNullB(value)) {
    $.setColumn(element, 0);
  }
  return $.getAttachedValue(element, $.columnProperty);
};

$._lib5_SimpleClientRect$4 = function(left, top$, width, height) {
  return new $._SimpleClientRect(height, width, top$, left);
};

$.AnimationState$0 = function() {
  var t0 = $.HashMapImplementation$0();
  var t1 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t1, ({T: 'EventArgs'}));
  var t2 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t2, ({T: 'EventArgs'}));
  var t3 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t3, ({T: 'AttachedPropertyChangedEventArgs'}));
  var t4 = $.HashMapImplementation$0();
  var t5 = $.List((void 0));
  $.setRuntimeTypeInfo(t5, ({E: 'Binding'}));
  var t6 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t6, ({E: 'FrameworkProperty'}));
  var t7 = $._hashNum;
  $._hashNum = $.add(t7, 1);
  var t8 = new $.AnimationState((void 0), (void 0), (void 0), (void 0), false, (void 0), t3, (void 0), t2, t1, t0, (void 0), false, (void 0), (void 0), (void 0), (void 0), false, t6, t5, t4, t7);
  t8.HashableObject$0();
  t8.FrameworkObject$0();
  t8.AnimationState$0();
  return t8;
};

$.DoubleLinkedQueueEntry$1 = function(e) {
  var t0 = new $.DoubleLinkedQueueEntry((void 0), (void 0), (void 0));
  t0.DoubleLinkedQueueEntry$1(e);
  return t0;
};

$.StringToOrientationConverter$0 = function() {
  return new $.StringToOrientationConverter();
};

$.StyleSetter$0 = function() {
  var t0 = $.HashMapImplementation$0();
  var t1 = $.List((void 0));
  $.setRuntimeTypeInfo(t1, ({E: 'Binding'}));
  var t2 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t2, ({E: 'FrameworkProperty'}));
  var t3 = $._hashNum;
  $._hashNum = $.add(t3, 1);
  var t4 = new $.StyleSetter((void 0), (void 0), t2, t1, t0, t3);
  t4.HashableObject$0();
  t4.StyleSetter$0();
  return t4;
};

$.EventArgs$0 = function() {
  var t0 = $.HashMapImplementation$0();
  var t1 = $.List((void 0));
  $.setRuntimeTypeInfo(t1, ({E: 'Binding'}));
  var t2 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t2, ({E: 'FrameworkProperty'}));
  var t3 = $._hashNum;
  $._hashNum = $.add(t3, 1);
  var t4 = new $.EventArgs(t2, t1, t0, t3);
  t4.HashableObject$0();
  return t4;
};

$.addLast = function(receiver, value) {
  if (!($.isJsArray(receiver) === true)) {
    return receiver.addLast$1(value);
  }
  $.checkGrowable(receiver, 'addLast');
  receiver.push(value);
};

$._lib5_FileReaderEventsImpl$1 = function(_ptr) {
  return new $._FileReaderEventsImpl(_ptr);
};

$.Thickness$widthheight$2 = function(width, height) {
  var t0 = new $.Thickness(height, width, height, width);
  t0.Thickness$widthheight$2(width, height);
  return t0;
};

$._lib2_BindingImplementation$loose$4 = function(_fromProperty, _toProperty, bindingMode, converter) {
  var t0 = $.HashMapImplementation$0();
  var t1 = $.List((void 0));
  $.setRuntimeTypeInfo(t1, ({E: 'Binding'}));
  var t2 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t2, ({E: 'FrameworkProperty'}));
  var t3 = $._hashNum;
  $._hashNum = $.add(t3, 1);
  var t4 = new $._BindingImplementation(false, _toProperty, _fromProperty, converter, (void 0), bindingMode, t2, t1, t0, t3);
  t4.HashableObject$0();
  t4._lib2_BindingImplementation$loose$4(_fromProperty, _toProperty, bindingMode, converter);
  return t4;
};

$.eqNullB = function(a) {
  return $.eqNull(a) === true;
};

$.Element$tag = function(tag) {
  return document.createElement(tag);
};

$._lib5_FrameSetElementEventsImpl$1 = function(_ptr) {
  return new $._FrameSetElementEventsImpl(_ptr);
};

$.List$from = function(other) {
  var result = $.List((void 0));
  $.setRuntimeTypeInfo(result, ({E: 'E'}));
  var iterator = $.iterator(other);
  for (; iterator.hasNext$0() === true; ) {
    result.push(iterator.next$0());
  }
  return result;
};

$.main = function() {
  $.Debug$0().run$0();
};

$.HashSetIterator$1 = function(set_) {
  var t0 = new $.HashSetIterator(-1, set_.get$_lib3_backingMap().get$_lib3_keys());
  t0.HashSetIterator$1(set_);
  return t0;
};

$.IllegalArgumentException$1 = function(arg) {
  return new $.IllegalArgumentException(arg);
};

$._lib3_AllMatchesIterator$2 = function(re, _str) {
  return new $._AllMatchesIterator(false, (void 0), _str, $.JSSyntaxRegExp$_globalVersionOf$1(re));
};

$._lib2_CssAnimationObject$0 = function() {
  var t0 = $.StringBufferImpl$1('');
  return new $._CssAnimationObject((void 0), $.HashMapImplementation$0(), t0);
};

$.FutureImpl$0 = function() {
  var t0 = [];
  return new $.FutureImpl([], t0, false, (void 0), (void 0), false);
};

$.truncate = function(receiver) {
  if (!(typeof receiver === 'number')) {
    return receiver.truncate$0();
  }
  if (receiver < 0) {
    var t0 = $.ceil(receiver);
  } else {
    t0 = $.floor(receiver);
  }
  return t0;
};

$.br = function(breakInfo) {
  if (!($.DEBUG === true)) {
    return;
  }
  var t0 = $.window();
  if (!$.eqNullB(breakInfo)) {
    var t1 = $.toString(breakInfo);
  } else {
    t1 = '';
  }
  t0.alert$1('Debug Break: ' + $.stringToString(t1));
};

$.isInfinite = function(receiver) {
  if (!(typeof receiver === 'number')) {
    return receiver.isInfinite$0();
  }
  return (receiver == Infinity) || (receiver == -Infinity);
};

$.GridLayoutDefinition$0 = function() {
  var t0 = $.HashMapImplementation$0();
  var t1 = $.List((void 0));
  $.setRuntimeTypeInfo(t1, ({E: 'Binding'}));
  var t2 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t2, ({E: 'FrameworkProperty'}));
  var t3 = $._hashNum;
  $._hashNum = $.add(t3, 1);
  var t4 = new $.GridLayoutDefinition(0, 32767, 0, (void 0), (void 0), 0, t2, t1, t0, t3);
  t4.HashableObject$0();
  return t4;
};

$.allMatchesInStringUnchecked = function(needle, haystack) {
  var result = $.List((void 0));
  $.setRuntimeTypeInfo(result, ({E: 'Match'}));
  var length$ = $.get$length(haystack);
  var patternLength = $.get$length(needle);
  if (patternLength !== (patternLength | 0)) return $.allMatchesInStringUnchecked$bailout(needle, haystack, 1, length$, result, patternLength);
  for (var startIndex = 0; true; ) {
    var position = $.indexOf$2(haystack, needle, startIndex);
    if ($.eqB(position, -1)) {
      break;
    }
    result.push($.StringMatch$3(position, haystack, needle));
    var endIndex = $.add(position, patternLength);
    if ($.eqB(endIndex, length$)) {
      break;
    } else {
      if ($.eqB(position, endIndex)) {
        startIndex = $.add(startIndex, 1);
      } else {
        startIndex = endIndex;
      }
    }
  }
  return result;
};

$._lib5_ChildrenElementList$_wrap$1 = function(element) {
  return new $._ChildrenElementList(element.get$$dom_children(), element);
};

$.dynamicSetMetadata = function(inputTable) {
  var t0 = $.buildDynamicMetadata(inputTable);
  $._dynamicMetadata(t0);
};

$.endsWith = function(receiver, other) {
  if (!(typeof receiver === 'string')) {
    return receiver.endsWith$1(other);
  }
  $.checkString(other);
  var receiverLength = receiver.length;
  var otherLength = $.get$length(other);
  if ($.gtB(otherLength, receiverLength)) {
    return false;
  }
  return $.eq(other, $.substring$1(receiver, $.sub(receiverLength, otherLength)));
};

$.StyleSetter$with$2 = function(propertyName, propertyValue) {
  var t0 = $.HashMapImplementation$0();
  var t1 = $.List((void 0));
  $.setRuntimeTypeInfo(t1, ({E: 'Binding'}));
  var t2 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t2, ({E: 'FrameworkProperty'}));
  var t3 = $._hashNum;
  $._hashNum = $.add(t3, 1);
  var t4 = new $.StyleSetter((void 0), (void 0), t2, t1, t0, t3);
  t4.HashableObject$0();
  t4.StyleSetter$with$2(propertyName, propertyValue);
  return t4;
};

$.ListIterator$1 = function(list) {
  return new $.ListIterator(list, 0);
};

$.ViewModel$0 = function() {
  var t0 = $.HashMapImplementation$0();
  var t1 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t1, ({T: 'EventArgs'}));
  var t2 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t2, ({T: 'EventArgs'}));
  var t3 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t3, ({T: 'AttachedPropertyChangedEventArgs'}));
  var t4 = $.HashMapImplementation$0();
  var t5 = $.List((void 0));
  $.setRuntimeTypeInfo(t5, ({E: 'Binding'}));
  var t6 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t6, ({E: 'FrameworkProperty'}));
  var t7 = $._hashNum;
  $._hashNum = $.add(t7, 1);
  var t8 = new $.ViewModel((void 0), (void 0), false, (void 0), t3, (void 0), t2, t1, t0, (void 0), false, (void 0), (void 0), (void 0), (void 0), false, t6, t5, t4, t7);
  t8.HashableObject$0();
  t8.FrameworkObject$0();
  t8.ViewModel$0();
  return t8;
};

$.checkNum = function(value) {
  if (!(typeof value === 'number')) {
    $.checkNull(value);
    throw $.captureStackTrace($.IllegalArgumentException$1(value));
  }
  return value;
};

$.GradientStop$0 = function() {
  var t0 = $.HashMapImplementation$0();
  var t1 = $.List((void 0));
  $.setRuntimeTypeInfo(t1, ({E: 'Binding'}));
  var t2 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t2, ({E: 'FrameworkProperty'}));
  var t3 = $._hashNum;
  $._hashNum = $.add(t3, 1);
  var t4 = new $.GradientStop((void 0), (void 0), t2, t1, t0, t3);
  t4.HashableObject$0();
  t4.GradientStop$0();
  return t4;
};

$.setAttachedValue = function(element, property, value) {
  var aDepInfo = $.index($.buckshot().get$_lib2_attachedProperties(), property);
  if ($.eqB($.index(aDepInfo, element), value)) {
    return;
  }
  var oldValue = $.index(aDepInfo, element);
  $.indexSet(aDepInfo, element, value);
  element.get$attachedPropertyChanged().invoke$2(element, $.AttachedPropertyChangedEventArgs$3(element, property, value));
  property.get$propertyChanging().invoke$2(property, $.PropertyChangingEventArgs$2(oldValue, value));
};

$.ltB = function(a, b) {
  return $.lt(a, b) === true;
};

$._XmlToken$quote = function(quoteKind) {
  return $._lib7_XmlToken$_internal$3(9, '', quoteKind);
};

$._parse = function(xml, withQuirks) {
  if ($.isEmpty(xml) === true) {
    throw $.captureStackTrace($.CTC216);
  }
  var p = $.XmlParser$_internal$2(xml, withQuirks);
  p._lib7_parseElement$1($.XmlTokenizer$1(p.get$_lib7_xml()));
  return p.get$_lib7_root();
};

$.Debug$0 = function() {
  var t0 = new $.Debug($.ViewModel$0());
  t0.Debug$0();
  return t0;
};

$.getRange = function(receiver, start, length$) {
  if (!($.isJsArray(receiver) === true)) {
    return receiver.getRange$2(start, length$);
  }
  if (0 === length$) {
    return [];
  }
  $.checkNull(start);
  $.checkNull(length$);
  if (!((typeof start === 'number') && (start === (start | 0)))) {
    throw $.captureStackTrace($.IllegalArgumentException$1(start));
  }
  if (!((typeof length$ === 'number') && (length$ === (length$ | 0)))) {
    throw $.captureStackTrace($.IllegalArgumentException$1(length$));
  }
  if (length$ < 0) {
    throw $.captureStackTrace($.IllegalArgumentException$1(length$));
  }
  if (start < 0) {
    throw $.captureStackTrace($.IndexOutOfRangeException$1(start));
  }
  var end = start + length$;
  if ($.gtB(end, $.get$length(receiver))) {
    throw $.captureStackTrace($.IndexOutOfRangeException$1(length$));
  }
  if ($.ltB(length$, 0)) {
    throw $.captureStackTrace($.IllegalArgumentException$1(length$));
  }
  return receiver.slice(start, end);
};

$.PolyLine$0 = function() {
  var t0 = $.HashMapImplementation$0();
  var t1 = $.HashMapImplementation$0();
  var t2 = $.HashMapImplementation$0();
  var t3 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t3, ({T: 'EventArgs'}));
  var t4 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t4, ({T: 'EventArgs'}));
  var t5 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t5, ({T: 'AttachedPropertyChangedEventArgs'}));
  var t6 = $.HashMapImplementation$0();
  var t7 = $.List((void 0));
  $.setRuntimeTypeInfo(t7, ({E: 'Binding'}));
  var t8 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t8, ({E: 'FrameworkProperty'}));
  var t9 = $._hashNum;
  $._hashNum = $.add(t9, 1);
  var t10 = new $.PolyLine((void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), t1, t0, (void 0), (void 0), (void 0), false, (void 0), t5, (void 0), t4, t3, t2, (void 0), false, (void 0), (void 0), (void 0), (void 0), false, t8, t7, t6, t9);
  t10.HashableObject$0();
  t10.FrameworkObject$0();
  t10.FrameworkElement$0();
  t10.Shape$0();
  t10.PolyLine$0();
  return t10;
};

$._resolvePropertyInternal = function(currentObject, propertyChain) {
  var prop = currentObject._lib2_getPropertyByName$1($.index(propertyChain, 0));
  if ($.eqNullB(prop)) {
    $.db('err: ' + $.stringToString($.index(propertyChain, 0)), (void 0));
    throw $.captureStackTrace($.FrameworkPropertyResolutionException$1('Unable to resolve FrameworkProperty: "' + $.stringToString($.index(propertyChain, 0)) + '".'));
  }
  var t0 = prop.get$value();
  if (!((typeof t0 === 'object') && !!t0.is$BuckshotObject) && $.gtB($.get$length(propertyChain), 1)) {
    throw $.captureStackTrace($.CTC162);
  }
  var t1 = prop.get$value();
  var t2 = typeof t1 === 'object' && !!t1.is$BuckshotObject;
  var t3 = !t2;
  if (t2) {
    t3 = $.eqB($.get$length(propertyChain), 1);
  }
  if (t3) {
    return prop;
  }
  return $._resolvePropertyInternal(prop.get$value(), $.getRange(propertyChain, 1, $.sub($.get$length(propertyChain), 1)));
};

$.getRange2 = function(a, start, length$, accumulator) {
  if (typeof a !== 'string' && (typeof a !== 'object'||a.constructor !== Array)) return $.getRange2$bailout(a, start, length$, accumulator,  0);
  if (typeof start !== 'number') return $.getRange2$bailout(a, start, length$, accumulator,  0);
  if ($.ltB(length$, 0)) {
    throw $.captureStackTrace($.IllegalArgumentException$1('length'));
  }
  if (start < 0) {
    throw $.captureStackTrace($.IndexOutOfRangeException$1(start));
  }
  var end = $.add(start, length$);
  if (end > a.length) {
    throw $.captureStackTrace($.IndexOutOfRangeException$1(end));
  }
  for (var i = start; i < end; i = i + 1) {
    if (i !== (i | 0)) throw $.iae(i);
    var t0 = a.length;
    if (i < 0 || i >= t0) throw $.ioore(i);
    $.add$1(accumulator, a[i]);
  }
  return accumulator;
};

$._lib5_TextTrackListEventsImpl$1 = function(_ptr) {
  return new $._TextTrackListEventsImpl(_ptr);
};

$.jsPropertyAccess = function(jsObject, property) {
  return jsObject[property];
};

$._dynamicMetadata = function(table) {
  $dynamicMetadata = table;
};

$._dynamicMetadata2 = function() {
  if ((typeof($dynamicMetadata)) === 'undefined') {
    var t0 = [];
    $._dynamicMetadata(t0);
  }
  return $dynamicMetadata;
};

$._lib5_DeprecatedPeerConnectionEventsImpl$1 = function(_ptr) {
  return new $._DeprecatedPeerConnectionEventsImpl(_ptr);
};

$.regExpGetNative = function(regExp) {
  var r = (regExp._re);
  var r0 = r;
  if (r === (void 0)) {
    r0 = (regExp._re = $.regExpMakeNative(regExp, false));
  }
  return r0;
};

$.throwNoSuchMethod = function(obj, name$, arguments$) {
  throw $.captureStackTrace($.NoSuchMethodException$4(obj, name$, arguments$, (void 0)));
};

$.RadialGradientBrush$2 = function(mode, fallback) {
  var t0 = $.HashMapImplementation$0();
  var t1 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t1, ({T: 'EventArgs'}));
  var t2 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t2, ({T: 'EventArgs'}));
  var t3 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t3, ({T: 'AttachedPropertyChangedEventArgs'}));
  var t4 = $.HashMapImplementation$0();
  var t5 = $.List((void 0));
  $.setRuntimeTypeInfo(t5, ({E: 'Binding'}));
  var t6 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t6, ({E: 'FrameworkProperty'}));
  var t7 = $._hashNum;
  $._hashNum = $.add(t7, 1);
  var t8 = new $.RadialGradientBrush((void 0), (void 0), (void 0), (void 0), (void 0), (void 0), false, (void 0), t3, (void 0), t2, t1, t0, (void 0), false, (void 0), (void 0), (void 0), (void 0), false, t6, t5, t4, t7);
  t8.HashableObject$0();
  t8.FrameworkObject$0();
  t8.FrameworkResource$0();
  t8.RadialGradientBrush$2(mode, fallback);
  return t8;
};

$._addMeasurementFrameCallback = function(callback) {
  if ($._pendingMeasurementFrameCallbacks === (void 0)) {
    $._pendingMeasurementFrameCallbacks = [];
    $._maybeScheduleMeasurementFrame();
  }
  $.add$1($._pendingMeasurementFrameCallbacks, callback);
};

$._lib5_WindowEventsImpl$1 = function(_ptr) {
  return new $._WindowEventsImpl(_ptr);
};

$.setRow = function(element, row) {
  if ($.eqNullB(element)) {
    return;
  }
  var row0 = row;
  if ($.ltB(row, 0)) {
    row0 = 0;
  }
  if ($.eqNullB($.rowProperty)) {
    $.rowProperty = $.AttachedFrameworkProperty$2('row', new $.Closure161());
  }
  $.setAttachedValue(element, $.rowProperty, row0);
};

$.checkNumbers = function(a, b) {
  if (typeof a === 'number') {
    if (typeof b === 'number') {
      return true;
    } else {
      $.checkNull(b);
      throw $.captureStackTrace($.IllegalArgumentException$1(b));
    }
  }
  return false;
};

$._lib3_DoubleLinkedQueueEntrySentinel$0 = function() {
  var t0 = new $._DoubleLinkedQueueEntrySentinel((void 0), (void 0), (void 0));
  t0.DoubleLinkedQueueEntry$1((void 0));
  t0._lib3_DoubleLinkedQueueEntrySentinel$0();
  return t0;
};

$.attemptSetXPCSS = function(e, property, value) {
  $.setXPCSS(e, property, value);
  return !$.eqNullB($.getXPCSS(e, property));
};

$.StackPanel$0 = function() {
  var t0 = $.ObservableList$0();
  $.setRuntimeTypeInfo(t0, ({T: 'FrameworkElement'}));
  var t1 = $.HashMapImplementation$0();
  var t2 = $.HashMapImplementation$0();
  var t3 = $.HashMapImplementation$0();
  var t4 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t4, ({T: 'EventArgs'}));
  var t5 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t5, ({T: 'EventArgs'}));
  var t6 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t6, ({T: 'AttachedPropertyChangedEventArgs'}));
  var t7 = $.HashMapImplementation$0();
  var t8 = $.List((void 0));
  $.setRuntimeTypeInfo(t8, ({E: 'Binding'}));
  var t9 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t9, ({E: 'FrameworkProperty'}));
  var t10 = $._hashNum;
  $._hashNum = $.add(t10, 1);
  var t11 = new $.StackPanel((void 0), (void 0), t0, (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), t2, t1, (void 0), (void 0), (void 0), false, (void 0), t6, (void 0), t5, t4, t3, (void 0), false, (void 0), (void 0), (void 0), (void 0), false, t9, t8, t7, t10);
  t11.HashableObject$0();
  t11.FrameworkObject$0();
  t11.FrameworkElement$0();
  t11.Panel$0();
  t11.StackPanel$0();
  return t11;
};

$.stringToString = function(value) {
  var res = $.toString(value);
  if (!(typeof res === 'string')) {
    throw $.captureStackTrace($.IllegalArgumentException$1(value));
  }
  return res;
};

$._lib5_ElementAttributeMap$1 = function(_element) {
  return new $._ElementAttributeMap(_element);
};

$.db = function(message, element) {
  if (!($.DEBUG === true)) {
    return;
  }
  if ($.eqNullB(element)) {
    $.print(message);
    return;
  }
  $.print('[' + $.stringToString(element.get$type()) + '(' + $.stringToString(element.get$name()) + ')] ' + $.stringToString(message));
};

$.setValue = function(property, value) {
  var value0 = value;
  if (!$.eqNullB(property.get$stringToValueConverter()) && typeof value === 'string') {
    value0 = property.get$stringToValueConverter().convert$1(value);
  }
  if ($.eqB(property.get$value(), value0)) {
    return;
  }
  property.set$_lib2_previousValue(property.get$value());
  property.set$value(value0);
  property.get$propertyChangedCallback().$call$1(value0);
  $._executeBindingsFor(property);
  if (property.get$propertyChanging().get$hasHandlers() === true) {
    property.get$propertyChanging().invoke$2(property.get$sourceObject(), $.PropertyChangingEventArgs$2(property.get$previousValue(), value0));
  }
};

$.FrameworkProperty$5 = function(sourceObject, propertyName, propertyChangedCallback, defaultValue, converter) {
  var t0 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t0, ({T: 'PropertyChangingEventArgs'}));
  var t1 = $._hashNum;
  $._hashNum = $.add(t1, 1);
  var t2 = new $.FrameworkProperty(false, (void 0), (void 0), converter, t0, propertyName, propertyChangedCallback, sourceObject, t1);
  t2.HashableObject$0();
  t2.FrameworkPropertyBase$4(sourceObject, propertyName, propertyChangedCallback, converter);
  t2.FrameworkProperty$5(sourceObject, propertyName, propertyChangedCallback, defaultValue, converter);
  return t2;
};

$.setFlexBoxOrientation = function(element, orientation) {
  if ($.eqB(orientation, $.CTC210)) {
    var t0 = 'horizontal';
  } else {
    t0 = 'vertical';
  }
  element.get$_lib2_component().get$style().set$boxOrient(t0);
};

$._XmlToken$string = function(s) {
  return $._lib7_XmlToken$_internal$3(4, s, -1);
};

$.findByName = function(name$, startingWith) {
  if (!$.eqNullB(startingWith.get$name()) && $.eqB(startingWith.get$name(), name$)) {
    return startingWith;
  }
  if (!(startingWith.get$isContainer() === true)) {
    return;
  }
  var cc = $.index(startingWith.get$_lib2_stateBag(), 'CONTAINER_CONTEXT');
  if (typeof cc === 'object' && (cc.constructor === Array || cc.is$List2())) {
    for (var t0 = $.iterator(cc); t0.hasNext$0() === true; ) {
      var result = $.findByName(name$, t0.next$0());
      if (!$.eqNullB(result)) {
        return result;
      }
    }
  } else {
    if (typeof cc === 'object' && !!cc.is$FrameworkProperty) {
      var obj = $.getValue(cc);
      if ($.eqNullB(obj) || !((typeof obj === 'object') && !!obj.is$FrameworkElement)) {
        return;
      }
      return $.findByName(name$, obj);
    } else {
      return;
    }
  }
};

$.charCodeAt = function(receiver, index) {
  if (typeof receiver === 'string') {
    if (!(typeof index === 'number')) {
      throw $.captureStackTrace($.IllegalArgumentException$1(index));
    }
    if (index < 0) {
      throw $.captureStackTrace($.IndexOutOfRangeException$1(index));
    }
    if (index >= receiver.length) {
      throw $.captureStackTrace($.IndexOutOfRangeException$1(index));
    }
    return receiver.charCodeAt(index);
  } else {
    return receiver.charCodeAt$1(index);
  }
};

$.generateXPCSS = function(declaration, value) {
  var t0 = ({});
  t0.value_2 = value;
  t0.declaration_1 = declaration;
  t0.sb_3 = $.StringBufferImpl$1('');
  $.forEach($.CTC158, new $.Closure173(t0));
  return $.toString(t0.sb_3);
};

$._stringifyInternal = function(b, n, indent) {
  var t0 = ({});
  t0.b_1 = b;
  t0.indent_2 = indent;
  $0:{
    var t1 = n.get$type();
    if ($.CTC222 === t1) {
      $.add$1(t0.b_1, '\r' + $.stringToString($._space(t0.indent_2)) + '<' + $.stringToString($.get$dynamic(n).get$name()));
      if ($.gtB($.get$length($.get$dynamic(n).get$namespaces()), 0)) {
        $.forEach($.get$dynamic(n).get$namespaces(), new $.Closure262(t0));
      }
      if ($.gtB($.get$length($.get$dynamic(n).get$attributes()), 0)) {
        $.forEach($.get$dynamic(n).get$attributes(), new $.Closure263(t0));
      }
      $.add$1(t0.b_1, '>');
      if ($.get$dynamic(n).get$hasChildren() === true) {
        $.forEach($.get$dynamic(n).get$children(), new $.Closure264(t0));
      }
      if ($.gtB($.get$length($.get$dynamic(n).get$children()), 0)) {
        $.add$1(t0.b_1, '\r' + $.stringToString($._space(t0.indent_2)) + '</' + $.stringToString($.get$dynamic(n).get$name()) + '>');
      } else {
        $.add$1(t0.b_1, '</' + $.stringToString($.get$dynamic(n).get$name()) + '>');
      }
      break $0;
    } else {
      if ($.CTC223 === t1 || $.CTC224 === t1) {
        $.add$1(t0.b_1, $.toString(n));
        break $0;
      } else {
        if ($.CTC220 === t1) {
          $.add$1(t0.b_1, '\r' + $.stringToString($._space(t0.indent_2)) + $.stringToString(n));
          break $0;
        } else {
          if ($.CTC225 === t1 || $.CTC226 === t1) {
            $.add$1(t0.b_1, '\r' + $.stringToString(n));
            break $0;
          }
        }
      }
    }
  }
};

$.toInt = function(receiver) {
  if (!(typeof receiver === 'number')) {
    return receiver.toInt$0();
  }
  if ($.isNaN(receiver) === true) {
    throw $.captureStackTrace($.BadNumberFormatException$1('NaN'));
  }
  if ($.isInfinite(receiver) === true) {
    throw $.captureStackTrace($.BadNumberFormatException$1('Infinity'));
  }
  var truncated = $.truncate(receiver);
  if (truncated == -0.0) {
    var t0 = 0;
  } else {
    t0 = truncated;
  }
  return t0;
};

$.KeyValuePair$2 = function(key, value) {
  var t0 = new $.KeyValuePair(value, key);
  t0.KeyValuePair$2(key, value);
  return t0;
};

$.BuckshotException$1 = function(msg) {
  return new $.BuckshotException();
};

$.defineProperty = function(obj, property, value) {
  Object.defineProperty(obj, property,
      {value: value, enumerable: false, writable: false, configurable: true});;
};

$.print = function(obj) {
  return $.printString($.toString(obj));
};

$.checkString = function(value) {
  if (!(typeof value === 'string')) {
    $.checkNull(value);
    throw $.captureStackTrace($.IllegalArgumentException$1(value));
  }
  return value;
};

$.div = function(a, b) {
  if ($.checkNumbers(a, b) === true) {
    return a / b;
  }
  return a.operator$div$1(b);
};

$.dynamicFunction = function(name$) {
  var f = (Object.prototype[name$]);
  if (!(f === (void 0)) && (!!f.methods)) {
    return f.methods;
  }
  var methods = ({});
  var dartMethod = (Object.getPrototypeOf($.CTC251)[name$]);
  if (!(dartMethod === (void 0))) {
    methods['Object'] = dartMethod;
  }
  var bind = (function() {return $.dynamicBind.$call$4(this, name$, methods, Array.prototype.slice.call(arguments));});
  bind.methods = methods;
  $.defineProperty((Object.prototype), name$, bind);
  return methods;
};

$.addAll = function(receiver, collection) {
  if (!($.isJsArray(receiver) === true)) {
    return receiver.addAll$1(collection);
  }
  var iterator = $.iterator(collection);
  for (; iterator.hasNext$0() === true; ) {
    $.add$1(receiver, iterator.next$0());
  }
};

$.AnimationResource$0 = function() {
  var t0 = $.HashMapImplementation$0();
  var t1 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t1, ({T: 'EventArgs'}));
  var t2 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t2, ({T: 'EventArgs'}));
  var t3 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t3, ({T: 'AttachedPropertyChangedEventArgs'}));
  var t4 = $.HashMapImplementation$0();
  var t5 = $.List((void 0));
  $.setRuntimeTypeInfo(t5, ({E: 'Binding'}));
  var t6 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t6, ({E: 'FrameworkProperty'}));
  var t7 = $._hashNum;
  $._hashNum = $.add(t7, 1);
  var t8 = new $.AnimationResource((void 0), (void 0), (void 0), (void 0), (void 0), false, (void 0), t3, (void 0), t2, t1, t0, (void 0), false, (void 0), (void 0), (void 0), (void 0), false, t6, t5, t4, t7);
  t8.HashableObject$0();
  t8.FrameworkObject$0();
  t8.FrameworkResource$0();
  t8.AnimationResource$0();
  return t8;
};

$.Color$hex$1 = function(hex) {
  var t0 = $.HashMapImplementation$0();
  var t1 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t1, ({T: 'EventArgs'}));
  var t2 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t2, ({T: 'EventArgs'}));
  var t3 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t3, ({T: 'AttachedPropertyChangedEventArgs'}));
  var t4 = $.HashMapImplementation$0();
  var t5 = $.List((void 0));
  $.setRuntimeTypeInfo(t5, ({E: 'Binding'}));
  var t6 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t6, ({E: 'FrameworkProperty'}));
  var t7 = $._hashNum;
  $._hashNum = $.add(t7, 1);
  var t8 = new $.Color((void 0), (void 0), (void 0), (void 0), false, (void 0), t3, (void 0), t2, t1, t0, (void 0), false, (void 0), (void 0), (void 0), (void 0), false, t6, t5, t4, t7);
  t8.HashableObject$0();
  t8.FrameworkObject$0();
  t8.FrameworkResource$0();
  t8.Color$hex$1(hex);
  return t8;
};

$.objectToString = function(object) {
  var name$ = (object.constructor.name);
  if (name$ === (void 0)) {
    var name0 = (object.constructor.toString().match(/^\s*function\s*\$?(\S*)\s*\(/)[1]);
  } else {
    name0 = name$;
    if ($.charCodeAt(name$, 0) === 36) {
      name0 = $.substring$1(name$, 1);
    }
  }
  return 'Instance of \'' + $.stringToString(name0) + '\'';
};

$._space = function(amount) {
  if (typeof amount !== 'number') return $._space$bailout(amount,  0);
  var s = $.StringBufferImpl$1('');
  for (var i = 0; i < amount; i = i + 1) {
    s.add$1(' ');
  }
  return s.toString$0();
};

$.Buckshot$_init$1 = function(rootID) {
  var t0 = $.HashMapImplementation$0();
  var t1 = $.HashMapImplementation$0();
  var t2 = $.HashMapImplementation$0();
  var t3 = $.HashMapImplementation$0();
  var t4 = $.Border$0();
  var t5 = $.HashMapImplementation$0();
  var t6 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t6, ({T: 'EventArgs'}));
  var t7 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t7, ({T: 'EventArgs'}));
  var t8 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t8, ({T: 'AttachedPropertyChangedEventArgs'}));
  var t9 = $.HashMapImplementation$0();
  var t10 = $.List((void 0));
  $.setRuntimeTypeInfo(t10, ({E: 'Binding'}));
  var t11 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t11, ({E: 'FrameworkProperty'}));
  var t12 = $._hashNum;
  $._hashNum = $.add(t12, 1);
  var t13 = new $.Buckshot((void 0), (void 0), (void 0), t0, t4, t2, t1, t3, (void 0), (void 0), (void 0), (void 0), (void 0), false, (void 0), t8, (void 0), t7, t6, t5, (void 0), false, (void 0), (void 0), (void 0), (void 0), false, t11, t10, t9, t12);
  t13.HashableObject$0();
  t13.FrameworkObject$0();
  t13.Buckshot$_init$1(rootID);
  return t13;
};

$.AttachedFrameworkProperty$2 = function(propertyName, propertyChangedCallback) {
  var t0 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t0, ({T: 'PropertyChangingEventArgs'}));
  var t1 = $._hashNum;
  $._hashNum = $.add(t1, 1);
  var t2 = new $.AttachedFrameworkProperty((void 0), t0, propertyName, propertyChangedCallback, (void 0), t1);
  t2.HashableObject$0();
  t2.FrameworkPropertyBase$4((void 0), propertyName, propertyChangedCallback, (void 0));
  t2.AttachedFrameworkProperty$2(propertyName, propertyChangedCallback);
  return t2;
};

$.XmlException$1 = function(msg) {
  return new $.XmlException(0, '', msg);
};

$.trim = function(receiver) {
  if (!(typeof receiver === 'string')) {
    return receiver.trim$0();
  }
  return receiver.trim();
};

$.dynamicBind = function(obj, name$, methods, arguments$) {
  var tag = $.getTypeNameOf(obj);
  var method = (methods[tag]);
  var method0 = method;
  if (method === (void 0) && !($._dynamicMetadata2() === (void 0))) {
    for (var method1 = method, i = 0; method0 = method1, $.ltB(i, $.get$length($._dynamicMetadata2())); i = i0) {
      var entry = $.index($._dynamicMetadata2(), i);
      if ($.contains$1(entry.get$set(), tag) === true) {
        var method2 = (methods[entry.get$tag()]);
        if (!(method2 === (void 0))) {
          method0 = method2;
          break;
        }
        method1 = method2;
      }
      var i0 = i + 1;
    }
  }
  var method3 = method0;
  if (method0 === (void 0)) {
    method3 = (methods['Object']);
  }
  var proto = (Object.getPrototypeOf(obj));
  var method4 = method3;
  if (method3 === (void 0)) {
    method4 = (function () {if (Object.getPrototypeOf(this) === proto) {$.throwNoSuchMethod.$call$3(this, name$, Array.prototype.slice.call(arguments));} else {return Object.prototype[name$].apply(this, arguments);}});
  }
  var nullCheckMethod = (function() {var res = method4.apply(this, Array.prototype.slice.call(arguments));return res === null ? (void 0) : res;});
  if (!proto.hasOwnProperty(name$)) {
    $.defineProperty(proto, name$, nullCheckMethod);
  }
  return nullCheckMethod.apply(obj, arguments$);
};

$.index = function(a, index) {
  if (typeof a === 'string' || $.isJsArray(a) === true) {
    if (!((typeof index === 'number') && (index === (index | 0)))) {
      if (!(typeof index === 'number')) {
        throw $.captureStackTrace($.IllegalArgumentException$1(index));
      }
      if (!($.truncate(index) === index)) {
        throw $.captureStackTrace($.IllegalArgumentException$1(index));
      }
    }
    if ($.ltB(index, 0) || $.geB(index, $.get$length(a))) {
      throw $.captureStackTrace($.IndexOutOfRangeException$1(index));
    }
    return a[index];
  }
  return a.operator$index$1(index);
};

$.RawHtml$0 = function() {
  var t0 = $.HashMapImplementation$0();
  var t1 = $.HashMapImplementation$0();
  var t2 = $.HashMapImplementation$0();
  var t3 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t3, ({T: 'EventArgs'}));
  var t4 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t4, ({T: 'EventArgs'}));
  var t5 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t5, ({T: 'AttachedPropertyChangedEventArgs'}));
  var t6 = $.HashMapImplementation$0();
  var t7 = $.List((void 0));
  $.setRuntimeTypeInfo(t7, ({E: 'Binding'}));
  var t8 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t8, ({E: 'FrameworkProperty'}));
  var t9 = $._hashNum;
  $._hashNum = $.add(t9, 1);
  var t10 = new $.RawHtml((void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), t1, t0, (void 0), (void 0), (void 0), false, (void 0), t5, (void 0), t4, t3, t2, (void 0), false, (void 0), (void 0), (void 0), (void 0), false, t8, t7, t6, t9);
  t10.HashableObject$0();
  t10.FrameworkObject$0();
  t10.FrameworkElement$0();
  t10.RawHtml$0();
  return t10;
};

$.MouseEventArgs$4 = function(mouseX, mouseY, windowX, windowY) {
  var t0 = $.HashMapImplementation$0();
  var t1 = $.List((void 0));
  $.setRuntimeTypeInfo(t1, ({E: 'Binding'}));
  var t2 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t2, ({E: 'FrameworkProperty'}));
  var t3 = $._hashNum;
  $._hashNum = $.add(t3, 1);
  var t4 = new $.MouseEventArgs(windowY, windowX, mouseY, mouseX, false, t2, t1, t0, t3);
  t4.HashableObject$0();
  return t4;
};

$.XmlCDATA$1 = function(text) {
  return new $.XmlCDATA(text, (void 0), $.CTC226);
};

$.toLowerCase = function(receiver) {
  if (!(typeof receiver === 'string')) {
    return receiver.toLowerCase$0();
  }
  return receiver.toLowerCase();
};

$._isPowerOfTwo = function(x) {
  return $.eq($.and(x, $.sub(x, 1)), 0);
};

$._lib5_XMLHttpRequestUploadEventsImpl$1 = function(_ptr) {
  return new $._XMLHttpRequestUploadEventsImpl(_ptr);
};

$.captureStackTrace = function(ex) {
  var jsError = (new Error());
  jsError.dartException = ex;
  jsError.toString = $.toStringWrapper.$call$0;
  return jsError;
};

$.PresentationProviderException$1 = function(msg) {
  return new $.PresentationProviderException();
};

$.sortKeyFrames = function(keyFrames) {
  $.sort(keyFrames, new $.Closure171());
};

$.getRow = function(element) {
  if ($.eqNullB(element)) {
    return 0;
  }
  var value = $.getAttachedValue(element, $.rowProperty);
  if ($.eqNullB($.rowProperty) || $.eqNullB(value)) {
    $.setRow(element, 0);
  }
  return $.getAttachedValue(element, $.rowProperty);
};

$.Element$html = function(html) {
  var match = $.CTC246.firstMatch$1(html);
  var tag = (void 0);
  var parentTag = 'div';
  if (!(match === (void 0))) {
    var tag0 = $.toLowerCase(match.group$1(1));
    parentTag = 'div';
    if ($.CTC248.containsKey$1(tag0) === true) {
      parentTag = $.CTC248.operator$index$1(tag0);
    }
    tag = tag0;
  }
  var temp = $.Element$tag(parentTag);
  temp.set$innerHTML(html);
  if ($.eqB($.get$length(temp.get$elements()), 1)) {
    var element = temp.get$elements().get$first();
  } else {
    if ($.eqB(parentTag, 'html') && $.eqB($.get$length(temp.get$elements()), 2)) {
      var t0 = temp.get$elements();
      if ($.eqB(tag, 'head')) {
        var t1 = 0;
      } else {
        t1 = 1;
      }
    } else {
      throw $.captureStackTrace($.IllegalArgumentException$1('HTML had ' + $.stringToString($.get$length(temp.get$elements())) + ' ' + 'top level elements but 1 expected'));
    }
    element = $.index(t0, t1);
  }
  element.remove$0();
  return element;
};

$.StackOverflowException$0 = function() {
  return new $.StackOverflowException();
};

$.eq = function(a, b) {
  if (typeof a === "object") {
    if (!!a.operator$eq$1) {
      return a.operator$eq$1(b);
    } else {
      return a === b;
    }
  }
  return a === b;
};

$.FrameworkElement$0 = function() {
  var t0 = $.HashMapImplementation$0();
  var t1 = $.HashMapImplementation$0();
  var t2 = $.HashMapImplementation$0();
  var t3 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t3, ({T: 'EventArgs'}));
  var t4 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t4, ({T: 'EventArgs'}));
  var t5 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t5, ({T: 'AttachedPropertyChangedEventArgs'}));
  var t6 = $.HashMapImplementation$0();
  var t7 = $.List((void 0));
  $.setRuntimeTypeInfo(t7, ({E: 'Binding'}));
  var t8 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t8, ({E: 'FrameworkProperty'}));
  var t9 = $._hashNum;
  $._hashNum = $.add(t9, 1);
  var t10 = new $.FrameworkElement((void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), t1, t0, (void 0), (void 0), (void 0), false, (void 0), t5, (void 0), t4, t3, t2, (void 0), false, (void 0), (void 0), (void 0), (void 0), false, t8, t7, t6, t9);
  t10.HashableObject$0();
  t10.FrameworkObject$0();
  t10.FrameworkElement$0();
  return t10;
};

$.getXPCSS = function(e, property) {
  for (var t0 = $.iterator($.CTC158); t0.hasNext$0() === true; ) {
    var pre = '' + $.stringToString(t0.next$0()) + $.stringToString(property);
    var result = e.get$style().getPropertyValue$1(pre);
    if (!$.eqNullB(result)) {
      return result;
    }
  }
  return;
};

$.gtB = function(a, b) {
  return $.gt(a, b) === true;
};

$.setRuntimeTypeInfo = function(target, typeInfo) {
  if (!(target === (void 0))) {
    target.builtin$typeInfo = typeInfo;
  }
};

$.document = function() {
  return document;;
};

$._lib5_FileWriterEventsImpl$1 = function(_ptr) {
  return new $._FileWriterEventsImpl(_ptr);
};

$.setVerticalItemFlexAlignment = function(element, alignment) {
  $0:{
    if ($.CTC151 === alignment) {
      $.setXPCSS(element.get$rawElement(), 'flex-item-align', 'start');
      break $0;
    } else {
      if ($.CTC152 === alignment) {
        $.setXPCSS(element.get$rawElement(), 'flex-item-align', 'end');
        break $0;
      } else {
        if ($.CTC153 === alignment) {
          $.setXPCSS(element.get$rawElement(), 'flex-item-align', 'center');
          break $0;
        } else {
          if ($.CTC154 === alignment) {
            $.setXPCSS(element.get$rawElement(), 'flex-item-align', 'stretch');
            break $0;
          }
        }
      }
    }
  }
};

$.ceil = function(receiver) {
  if (!(typeof receiver === 'number')) {
    return receiver.ceil$0();
  }
  return Math.ceil(receiver);
};

$.GridLength$auto$0 = function() {
  var t0 = $.HashMapImplementation$0();
  var t1 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t1, ({T: 'EventArgs'}));
  var t2 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t2, ({T: 'EventArgs'}));
  var t3 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t3, ({T: 'AttachedPropertyChangedEventArgs'}));
  var t4 = $.HashMapImplementation$0();
  var t5 = $.List((void 0));
  $.setRuntimeTypeInfo(t5, ({E: 'Binding'}));
  var t6 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t6, ({E: 'FrameworkProperty'}));
  var t7 = $._hashNum;
  $._hashNum = $.add(t7, 1);
  var t8 = new $.GridLength((void 0), (void 0), (void 0), false, (void 0), t3, (void 0), t2, t1, t0, (void 0), false, (void 0), (void 0), (void 0), (void 0), false, t6, t5, t4, t7);
  t8.HashableObject$0();
  t8.FrameworkObject$0();
  t8.GridLength$auto$0();
  return t8;
};

$.getTypeNameOf = function(obj) {
  if ($._getTypeNameOf === (void 0)) {
    $._getTypeNameOf = $.getFunctionForTypeNameOf();
  }
  return $._getTypeNameOf.$call$1(obj);
};

$._lib2_GridCell$0 = function() {
  var t0 = $.HashMapImplementation$0();
  var t1 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t1, ({T: 'EventArgs'}));
  var t2 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t2, ({T: 'EventArgs'}));
  var t3 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t3, ({T: 'AttachedPropertyChangedEventArgs'}));
  var t4 = $.HashMapImplementation$0();
  var t5 = $.List((void 0));
  $.setRuntimeTypeInfo(t5, ({E: 'Binding'}));
  var t6 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t6, ({E: 'FrameworkProperty'}));
  var t7 = $._hashNum;
  $._hashNum = $.add(t7, 1);
  var t8 = new $._GridCell((void 0), (void 0), (void 0), (void 0), false, (void 0), t3, (void 0), t2, t1, t0, (void 0), false, (void 0), (void 0), (void 0), (void 0), false, t6, t5, t4, t7);
  t8.HashableObject$0();
  t8.FrameworkObject$0();
  t8._lib2_GridCell$0();
  return t8;
};

$.getColumnSpan = function(element) {
  if ($.eqNullB(element)) {
    return 0;
  }
  var value = $.getAttachedValue(element, $.columnSpanProperty);
  if ($.eqNullB($.columnSpanProperty) || $.eqNullB(value)) {
    $.setColumnSpan(element, 0);
  }
  return $.getAttachedValue(element, $.columnSpanProperty);
};

$._lib5_ChildNodeListLazy$1 = function(_this) {
  return new $._ChildNodeListLazy(_this);
};

$._lib5_AudioContextEventsImpl$1 = function(_ptr) {
  return new $._AudioContextEventsImpl(_ptr);
};

$._executeBindingsFor = function(property) {
  for (var t0 = $.iterator(property.get$sourceObject().get$_lib2_bindings()); t0.hasNext$0() === true; ) {
    var t1 = t0.next$0();
    $.setValue(t1.get$_lib2_toProperty(), t1.get$converter().convert$1($.getValue(t1.get$_lib2_fromProperty())));
    if ($.eqB(t1.get$bindingMode(), $.CTC10)) {
      t1.unregister$0();
    }
  }
};

$._completeMeasurementFutures = function() {
  if ($.eqB($._nextMeasurementFrameScheduled, false)) {
    return;
  }
  $._nextMeasurementFrameScheduled = false;
  if (!($._pendingRequests === (void 0))) {
    for (var t0 = $.iterator($._pendingRequests); t0.hasNext$0() === true; ) {
      var request = t0.next$0();
      try {
        var t1 = request.computeValue$0();
        request.set$value(t1);
      }catch (t2) {
        var t3 = $.unwrapException(t2);
        var e = t3;
        var t4 = e;
        request.set$value(t4);
        request.set$exception(true);
      }
    }
  }
  var completedRequests = $._pendingRequests;
  var readyMeasurementFrameCallbacks = $._pendingMeasurementFrameCallbacks;
  $._pendingRequests = (void 0);
  $._pendingMeasurementFrameCallbacks = (void 0);
  if (!(completedRequests === (void 0))) {
    for (var t5 = $.iterator(completedRequests); t5.hasNext$0() === true; ) {
      var t6 = t5.next$0();
      if (t6.get$exception() === true) {
        t6.get$completer().completeException$1(t6.get$value());
      } else {
        t6.get$completer().complete$1(t6.get$value());
      }
    }
  }
  if (!(readyMeasurementFrameCallbacks === (void 0))) {
    for (var t7 = $.iterator(readyMeasurementFrameCallbacks); t7.hasNext$0() === true; ) {
      t7.next$0().$call$0();
    }
  }
};

$._lib5_NodeListWrapper$1 = function(list) {
  return new $._NodeListWrapper(list);
};

$.jsHasOwnProperty = function(jsObject, property) {
  return jsObject.hasOwnProperty(property);
};

$.isJsArray = function(value) {
  return !(value === (void 0)) && (value.constructor === Array);
};

$.substringUnchecked = function(receiver, startIndex, endIndex) {
  return receiver.substring(startIndex, endIndex);
};

$.AttachedPropertyChangedEventArgs$3 = function(element, property, value) {
  var t0 = $.HashMapImplementation$0();
  var t1 = $.List((void 0));
  $.setRuntimeTypeInfo(t1, ({E: 'Binding'}));
  var t2 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t2, ({E: 'FrameworkProperty'}));
  var t3 = $._hashNum;
  $._hashNum = $.add(t3, 1);
  var t4 = new $.AttachedPropertyChangedEventArgs(value, element, property, t2, t1, t0, t3);
  t4.HashableObject$0();
  return t4;
};

$.isWhitespace = function(c) {
  return $.eqB(c, 32) || $.eqB(c, 9) || $.eqB(c, 10) || $.eqB(c, 13);
};

$.XmlAttribute$2 = function(name$, value) {
  return new $.XmlAttribute(value, name$, (void 0), $.CTC224);
};

$.VarResource$0 = function() {
  var t0 = $.HashMapImplementation$0();
  var t1 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t1, ({T: 'EventArgs'}));
  var t2 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t2, ({T: 'EventArgs'}));
  var t3 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t3, ({T: 'AttachedPropertyChangedEventArgs'}));
  var t4 = $.HashMapImplementation$0();
  var t5 = $.List((void 0));
  $.setRuntimeTypeInfo(t5, ({E: 'Binding'}));
  var t6 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t6, ({E: 'FrameworkProperty'}));
  var t7 = $._hashNum;
  $._hashNum = $.add(t7, 1);
  var t8 = new $.VarResource((void 0), (void 0), (void 0), (void 0), false, (void 0), t3, (void 0), t2, t1, t0, (void 0), false, (void 0), (void 0), (void 0), (void 0), false, t6, t5, t4, t7);
  t8.HashableObject$0();
  t8.FrameworkObject$0();
  t8.FrameworkResource$0();
  t8.VarResource$0();
  return t8;
};

$.typeNameInIE = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if ($.eqB(name$, 'Window')) {
    return 'DOMWindow';
  }
  if ($.eqB(name$, 'Document')) {
    if (!!obj.xmlVersion) {
      return 'Document';
    }
    return 'HTMLDocument';
  }
  if ($.eqB(name$, 'HTMLTableDataCellElement')) {
    return 'HTMLTableCellElement';
  }
  if ($.eqB(name$, 'HTMLTableHeaderCellElement')) {
    return 'HTMLTableCellElement';
  }
  if ($.eqB(name$, 'MSStyleCSSProperties')) {
    return 'CSSStyleDeclaration';
  }
  if ($.eqB(name$, 'CanvasPixelArray')) {
    return 'Uint8ClampedArray';
  }
  if ($.eqB(name$, 'HTMLPhraseElement')) {
    return 'HTMLElement';
  }
  return name$;
};

$.constructorNameFallback = function(obj) {
  var constructor$ = (obj.constructor);
  if ((typeof(constructor$)) === 'function') {
    var name$ = (constructor$.name);
    if ((typeof(name$)) === 'string' && !($.isEmpty(name$) === true) && !(name$ === 'Object')) {
      return name$;
    }
  }
  var string = (Object.prototype.toString.call(obj));
  return $.substring$2(string, 8, string.length - 1);
};

$.Image$0 = function() {
  var t0 = $.HashMapImplementation$0();
  var t1 = $.HashMapImplementation$0();
  var t2 = $.HashMapImplementation$0();
  var t3 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t3, ({T: 'EventArgs'}));
  var t4 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t4, ({T: 'EventArgs'}));
  var t5 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t5, ({T: 'AttachedPropertyChangedEventArgs'}));
  var t6 = $.HashMapImplementation$0();
  var t7 = $.List((void 0));
  $.setRuntimeTypeInfo(t7, ({E: 'Binding'}));
  var t8 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t8, ({E: 'FrameworkProperty'}));
  var t9 = $._hashNum;
  $._hashNum = $.add(t9, 1);
  var t10 = new $.Image((void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), t1, t0, (void 0), (void 0), (void 0), false, (void 0), t5, (void 0), t4, t3, t2, (void 0), false, (void 0), (void 0), (void 0), (void 0), false, t8, t7, t6, t9);
  t10.HashableObject$0();
  t10.FrameworkObject$0();
  t10.FrameworkElement$0();
  t10.Image$0();
  return t10;
};

$.Color$0 = function() {
  var t0 = $.HashMapImplementation$0();
  var t1 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t1, ({T: 'EventArgs'}));
  var t2 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t2, ({T: 'EventArgs'}));
  var t3 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t3, ({T: 'AttachedPropertyChangedEventArgs'}));
  var t4 = $.HashMapImplementation$0();
  var t5 = $.List((void 0));
  $.setRuntimeTypeInfo(t5, ({E: 'Binding'}));
  var t6 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t6, ({E: 'FrameworkProperty'}));
  var t7 = $._hashNum;
  $._hashNum = $.add(t7, 1);
  var t8 = new $.Color((void 0), (void 0), (void 0), (void 0), false, (void 0), t3, (void 0), t2, t1, t0, (void 0), false, (void 0), (void 0), (void 0), (void 0), false, t6, t5, t4, t7);
  t8.HashableObject$0();
  t8.FrameworkObject$0();
  t8.FrameworkResource$0();
  t8.Color$0();
  return t8;
};

$.stringReplaceAllUnchecked = function(receiver, from, to) {
  if (typeof receiver !== 'string') return $.stringReplaceAllUnchecked$bailout(receiver, from, to,  0);
  if (typeof from === 'string') {
    if (from === '') {
      if (receiver === '') {
        return to;
      } else {
        var result = $.StringBufferImpl$1('');
        var length$ = receiver.length;
        result.add$1(to);
        for (var i = 0; i < length$; i = i + 1) {
          var t0 = receiver.length;
          if (i < 0 || i >= t0) throw $.ioore(i);
          result.add$1(receiver[i]);
          result.add$1(to);
        }
        return result.toString$0();
      }
    } else {
      return receiver.replace($.regExpMakeNative($.JSSyntaxRegExp$3((from.replace($.regExpMakeNative($.CTC208, true), "\\$&")), false, false), true), to);
    }
  } else {
    if (typeof from === 'object' && !!from.is$JSSyntaxRegExp) {
      return receiver.replace($.regExpMakeNative(from, true), to);
    } else {
      $.checkNull(from);
      throw $.captureStackTrace('StringImplementation.replaceAll(Pattern) UNIMPLEMENTED');
    }
  }
};

$._dualPivotQuicksort = function(a, left, right, compare) {
  if (typeof a !== 'object'||a.constructor !== Array||!!a.immutable$list) return $._dualPivotQuicksort$bailout(a, left, right, compare,  0);
  $.assert($.gt($.sub(right, left), 32));
  var sixth = $.tdiv($.add($.sub(right, left), 1), 6);
  var index1 = $.add(left, sixth);
  var index5 = $.sub(right, sixth);
  var index3 = $.tdiv($.add(left, right), 2);
  var index2 = $.sub(index3, sixth);
  var index4 = $.add(index3, sixth);
  if (index1 !== (index1 | 0)) throw $.iae(index1);
  var t0 = a.length;
  if (index1 < 0 || index1 >= t0) throw $.ioore(index1);
  var t1 = a[index1];
  if (index2 !== (index2 | 0)) throw $.iae(index2);
  var t2 = a.length;
  if (index2 < 0 || index2 >= t2) throw $.ioore(index2);
  var t3 = a[index2];
  if (index3 !== (index3 | 0)) throw $.iae(index3);
  var t4 = a.length;
  if (index3 < 0 || index3 >= t4) throw $.ioore(index3);
  var t5 = a[index3];
  if (index4 !== (index4 | 0)) throw $.iae(index4);
  var t6 = a.length;
  if (index4 < 0 || index4 >= t6) throw $.ioore(index4);
  var t7 = a[index4];
  if (index5 !== (index5 | 0)) throw $.iae(index5);
  var t8 = a.length;
  if (index5 < 0 || index5 >= t8) throw $.ioore(index5);
  var t9 = a[index5];
  var el2 = t3;
  var el1 = t1;
  if ($.gtB(compare.$call$2(t1, t3), 0)) {
    el2 = t1;
    el1 = t3;
  }
  var el4 = t7;
  var el5 = t9;
  if ($.gtB(compare.$call$2(t7, t9), 0)) {
    el4 = t9;
    el5 = t7;
  }
  var el10 = el1;
  var el3 = t5;
  if ($.gtB(compare.$call$2(el1, t5), 0)) {
    el10 = t5;
    el3 = el1;
  }
  var el20 = el2;
  var el30 = el3;
  if ($.gtB(compare.$call$2(el2, el3), 0)) {
    el20 = el3;
    el30 = el2;
  }
  var el11 = el10;
  var el40 = el4;
  if ($.gtB(compare.$call$2(el10, el4), 0)) {
    el11 = el4;
    el40 = el10;
  }
  var el41 = el40;
  var el31 = el30;
  if ($.gtB(compare.$call$2(el30, el40), 0)) {
    el41 = el30;
    el31 = el40;
  }
  var el21 = el20;
  var el50 = el5;
  if ($.gtB(compare.$call$2(el20, el5), 0)) {
    el21 = el5;
    el50 = el20;
  }
  var el22 = el21;
  var el32 = el31;
  if ($.gtB(compare.$call$2(el21, el31), 0)) {
    el22 = el31;
    el32 = el21;
  }
  var el42 = el41;
  var el51 = el50;
  if ($.gtB(compare.$call$2(el41, el50), 0)) {
    el42 = el50;
    el51 = el41;
  }
  var t10 = a.length;
  if (index1 < 0 || index1 >= t10) throw $.ioore(index1);
  a[index1] = el11;
  var t11 = a.length;
  if (index3 < 0 || index3 >= t11) throw $.ioore(index3);
  a[index3] = el32;
  var t12 = a.length;
  if (index5 < 0 || index5 >= t12) throw $.ioore(index5);
  a[index5] = el51;
  if (left !== (left | 0)) throw $.iae(left);
  var t13 = a.length;
  if (left < 0 || left >= t13) throw $.ioore(left);
  var t14 = a[left];
  var t15 = a.length;
  if (index2 < 0 || index2 >= t15) throw $.ioore(index2);
  a[index2] = t14;
  if (right !== (right | 0)) throw $.iae(right);
  var t16 = a.length;
  if (right < 0 || right >= t16) throw $.ioore(right);
  var t17 = a[right];
  var t18 = a.length;
  if (index4 < 0 || index4 >= t18) throw $.ioore(index4);
  a[index4] = t17;
  var less = $.add(left, 1);
  if (typeof less !== 'number') return $._dualPivotQuicksort$bailout(a, left, right, compare, 2, el22, index1, index5, el42, a, less);
  var great = $.sub(right, 1);
  if (typeof great !== 'number') return $._dualPivotQuicksort$bailout(a, left, right, compare, 3, less, el22, index1, index5, el42, a, great);
  var pivots_are_equal = $.eqB(compare.$call$2(el22, el42), 0);
  if (pivots_are_equal) {
    for (var great0 = great, less0 = less, k = less; k <= great0; k0 = k + 1, k = k0) {
      if (k !== (k | 0)) throw $.iae(k);
      var t19 = a.length;
      if (k < 0 || k >= t19) throw $.ioore(k);
      var t20 = a[k];
      var comp = compare.$call$2(t20, el22);
      if (typeof comp !== 'number') return $._dualPivotQuicksort$bailout(a, left, right, compare, 4, k, great0, el22, pivots_are_equal, index1, t20, index5, el42, less0, a, comp);
      if (comp === 0) {
        continue;
      }
      if (comp < 0) {
        if (!(k === less0)) {
          if (less0 !== (less0 | 0)) throw $.iae(less0);
          var t21 = a.length;
          if (less0 < 0 || less0 >= t21) throw $.ioore(less0);
          var t22 = a[less0];
          var t23 = a.length;
          if (k < 0 || k >= t23) throw $.ioore(k);
          a[k] = t22;
          var t24 = a.length;
          if (less0 < 0 || less0 >= t24) throw $.ioore(less0);
          a[less0] = t20;
        }
        less0 = less0 + 1;
      } else {
        var less1 = less0 + 1;
        for (var comp0 = comp, great1 = great0; great0 = great1, true; ) {
          if (great1 !== (great1 | 0)) throw $.iae(great1);
          var t25 = a.length;
          if (great1 < 0 || great1 >= t25) throw $.ioore(great1);
          var comp1 = compare.$call$2(a[great1], el22);
          var great2 = great1 - 1;
          if ($.gtB(comp1, 0)) {
            comp0 = comp1;
            great1 = great2;
            continue;
          } else {
            if ($.ltB(comp1, 0)) {
              if (less0 !== (less0 | 0)) throw $.iae(less0);
              var t26 = a.length;
              if (less0 < 0 || less0 >= t26) throw $.ioore(less0);
              var t27 = a[less0];
              var t28 = a.length;
              if (k < 0 || k >= t28) throw $.ioore(k);
              a[k] = t27;
              var t29 = a.length;
              if (great1 < 0 || great1 >= t29) throw $.ioore(great1);
              var t30 = a[great1];
              var t31 = a.length;
              if (less0 < 0 || less0 >= t31) throw $.ioore(less0);
              a[less0] = t30;
              var t32 = a.length;
              if (great1 < 0 || great1 >= t32) throw $.ioore(great1);
              a[great1] = t20;
              great0 = great2;
              less0 = less1;
              break;
            } else {
              var t33 = a.length;
              if (great1 < 0 || great1 >= t33) throw $.ioore(great1);
              var t34 = a[great1];
              var t35 = a.length;
              if (k < 0 || k >= t35) throw $.ioore(k);
              a[k] = t34;
              var t36 = a.length;
              if (great1 < 0 || great1 >= t36) throw $.ioore(great1);
              a[great1] = t20;
              great0 = great2;
              break;
            }
          }
        }
      }
    }
    var great3 = great0;
    var less2 = less0;
  } else {
    for (var less3 = less, k1 = less, great4 = great; k1 <= great4; k1 = k2) {
      if (k1 !== (k1 | 0)) throw $.iae(k1);
      var t37 = a.length;
      if (k1 < 0 || k1 >= t37) throw $.ioore(k1);
      var t38 = a[k1];
      if ($.ltB(compare.$call$2(t38, el22), 0)) {
        if (!(k1 === less3)) {
          if (less3 !== (less3 | 0)) throw $.iae(less3);
          var t39 = a.length;
          if (less3 < 0 || less3 >= t39) throw $.ioore(less3);
          var t40 = a[less3];
          var t41 = a.length;
          if (k1 < 0 || k1 >= t41) throw $.ioore(k1);
          a[k1] = t40;
          var t42 = a.length;
          if (less3 < 0 || less3 >= t42) throw $.ioore(less3);
          a[less3] = t38;
        }
        less3 = less3 + 1;
      } else {
        if ($.gtB(compare.$call$2(t38, el42), 0)) {
          var less4 = less3 + 1;
          for (var great5 = great4; great4 = great5, true; ) {
            if (great5 !== (great5 | 0)) throw $.iae(great5);
            var t43 = a.length;
            if (great5 < 0 || great5 >= t43) throw $.ioore(great5);
            var comp2 = compare.$call$2(a[great5], el42);
            var great6 = great5 - 1;
            if ($.gtB(comp2, 0)) {
              if (great6 < k1) {
                great4 = great6;
                break;
              }
              great5 = great6;
              continue;
            } else {
              var t44 = a.length;
              if (great5 < 0 || great5 >= t44) throw $.ioore(great5);
              if ($.ltB(compare.$call$2(a[great5], el22), 0)) {
                if (less3 !== (less3 | 0)) throw $.iae(less3);
                var t45 = a.length;
                if (less3 < 0 || less3 >= t45) throw $.ioore(less3);
                var t46 = a[less3];
                var t47 = a.length;
                if (k1 < 0 || k1 >= t47) throw $.ioore(k1);
                a[k1] = t46;
                var t48 = a.length;
                if (great5 < 0 || great5 >= t48) throw $.ioore(great5);
                var t49 = a[great5];
                var t50 = a.length;
                if (less3 < 0 || less3 >= t50) throw $.ioore(less3);
                a[less3] = t49;
                var t51 = a.length;
                if (great5 < 0 || great5 >= t51) throw $.ioore(great5);
                a[great5] = t38;
                less3 = less4;
                great4 = great6;
              } else {
                var t52 = a.length;
                if (great5 < 0 || great5 >= t52) throw $.ioore(great5);
                var t53 = a[great5];
                var t54 = a.length;
                if (k1 < 0 || k1 >= t54) throw $.ioore(k1);
                a[k1] = t53;
                var t55 = a.length;
                if (great5 < 0 || great5 >= t55) throw $.ioore(great5);
                a[great5] = t38;
                great4 = great6;
              }
              break;
            }
          }
        }
      }
      var k2 = k1 + 1;
    }
    great3 = great4;
    less2 = less3;
  }
  var t56 = less2 - 1;
  if (t56 !== (t56 | 0)) throw $.iae(t56);
  var t57 = a.length;
  if (t56 < 0 || t56 >= t57) throw $.ioore(t56);
  var t58 = a[t56];
  var t59 = a.length;
  if (left < 0 || left >= t59) throw $.ioore(left);
  a[left] = t58;
  var t60 = a.length;
  if (t56 < 0 || t56 >= t60) throw $.ioore(t56);
  a[t56] = el22;
  var t61 = great3 + 1;
  if (t61 !== (t61 | 0)) throw $.iae(t61);
  var t62 = a.length;
  if (t61 < 0 || t61 >= t62) throw $.ioore(t61);
  var t63 = a[t61];
  var t64 = a.length;
  if (right < 0 || right >= t64) throw $.ioore(right);
  a[right] = t63;
  var t65 = a.length;
  if (t61 < 0 || t61 >= t65) throw $.ioore(t61);
  a[t61] = el42;
  $._doSort(a, left, less2 - 2, compare);
  $._doSort(a, great3 + 2, right, compare);
  if (pivots_are_equal) {
    return;
  }
  if ($.ltB(less2, index1) && $.gtB(great3, index5)) {
    var less5 = less2;
    while (true) {
      if (less5 !== (less5 | 0)) throw $.iae(less5);
      var t66 = a.length;
      if (less5 < 0 || less5 >= t66) throw $.ioore(less5);
      if (!$.eqB(compare.$call$2(a[less5], el22), 0)) break;
      less5 = less5 + 1;
    }
    var great7 = great3;
    while (true) {
      if (great7 !== (great7 | 0)) throw $.iae(great7);
      var t67 = a.length;
      if (great7 < 0 || great7 >= t67) throw $.ioore(great7);
      if (!$.eqB(compare.$call$2(a[great7], el42), 0)) break;
      great7 = great7 - 1;
    }
    for (var great8 = great7, less6 = less5, k3 = less5; k3 <= great8; k3 = k4) {
      if (k3 !== (k3 | 0)) throw $.iae(k3);
      var t68 = a.length;
      if (k3 < 0 || k3 >= t68) throw $.ioore(k3);
      var t69 = a[k3];
      if ($.eqB(compare.$call$2(t69, el22), 0)) {
        if (!(k3 === less6)) {
          if (less6 !== (less6 | 0)) throw $.iae(less6);
          var t70 = a.length;
          if (less6 < 0 || less6 >= t70) throw $.ioore(less6);
          var t71 = a[less6];
          var t72 = a.length;
          if (k3 < 0 || k3 >= t72) throw $.ioore(k3);
          a[k3] = t71;
          var t73 = a.length;
          if (less6 < 0 || less6 >= t73) throw $.ioore(less6);
          a[less6] = t69;
        }
        less6 = less6 + 1;
      } else {
        if ($.eqB(compare.$call$2(t69, el42), 0)) {
          var less7 = less6 + 1;
          for (var great9 = great8; great8 = great9, true; ) {
            if (great9 !== (great9 | 0)) throw $.iae(great9);
            var t74 = a.length;
            if (great9 < 0 || great9 >= t74) throw $.ioore(great9);
            var comp3 = compare.$call$2(a[great9], el42);
            var great10 = great9 - 1;
            if ($.eqB(comp3, 0)) {
              if (great10 < k3) {
                great8 = great10;
                break;
              }
              great9 = great10;
              continue;
            } else {
              var t75 = a.length;
              if (great9 < 0 || great9 >= t75) throw $.ioore(great9);
              if ($.ltB(compare.$call$2(a[great9], el22), 0)) {
                if (less6 !== (less6 | 0)) throw $.iae(less6);
                var t76 = a.length;
                if (less6 < 0 || less6 >= t76) throw $.ioore(less6);
                var t77 = a[less6];
                var t78 = a.length;
                if (k3 < 0 || k3 >= t78) throw $.ioore(k3);
                a[k3] = t77;
                var t79 = a.length;
                if (great9 < 0 || great9 >= t79) throw $.ioore(great9);
                var t80 = a[great9];
                var t81 = a.length;
                if (less6 < 0 || less6 >= t81) throw $.ioore(less6);
                a[less6] = t80;
                var t82 = a.length;
                if (great9 < 0 || great9 >= t82) throw $.ioore(great9);
                a[great9] = t69;
                great8 = great10;
                less6 = less7;
              } else {
                var t83 = a.length;
                if (great9 < 0 || great9 >= t83) throw $.ioore(great9);
                var t84 = a[great9];
                var t85 = a.length;
                if (k3 < 0 || k3 >= t85) throw $.ioore(k3);
                a[k3] = t84;
                var t86 = a.length;
                if (great9 < 0 || great9 >= t86) throw $.ioore(great9);
                a[great9] = t69;
                great8 = great10;
              }
              break;
            }
          }
        }
      }
      var k4 = k3 + 1;
    }
    $._doSort(a, less6, great8, compare);
  } else {
    $._doSort(a, less2, great3, compare);
  }
  var k0;
};

$.ItemCreatedEventArgs$1 = function(itemCreated) {
  var t0 = $.HashMapImplementation$0();
  var t1 = $.List((void 0));
  $.setRuntimeTypeInfo(t1, ({E: 'Binding'}));
  var t2 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t2, ({E: 'FrameworkProperty'}));
  var t3 = $._hashNum;
  $._hashNum = $.add(t3, 1);
  var t4 = new $.ItemCreatedEventArgs(itemCreated, t2, t1, t0, t3);
  t4.HashableObject$0();
  return t4;
};

$._lib5_DOMApplicationCacheEventsImpl$1 = function(_ptr) {
  return new $._DOMApplicationCacheEventsImpl(_ptr);
};

$.invokeClosure = function(closure, isolate, numberOfArguments, arg1, arg2) {
  var t0 = ({});
  t0.arg2_3 = arg2;
  t0.arg1_2 = arg1;
  t0.closure_1 = closure;
  if ($.eqB(numberOfArguments, 0)) {
    return new $.Closure51(t0).$call$0();
  } else {
    if ($.eqB(numberOfArguments, 1)) {
      return new $.Closure52(t0).$call$0();
    } else {
      if ($.eqB(numberOfArguments, 2)) {
        return new $.Closure53(t0).$call$0();
      } else {
        throw $.captureStackTrace($.ExceptionImplementation$1('Unsupported number of arguments for wrapped closure'));
      }
    }
  }
};

$.last = function(receiver) {
  if (!($.isJsArray(receiver) === true)) {
    return receiver.last$0();
  }
  return $.index(receiver, $.sub($.get$length(receiver), 1));
};

$.gt = function(a, b) {
  if ($.checkNumbers(a, b) === true) {
    return a > b;
  }
  return a.operator$gt$1(b);
};

$.ObservableList$0 = function() {
  var t0 = $.List((void 0));
  $.setRuntimeTypeInfo(t0, ({E: 'T'}));
  var t1 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t1, ({T: 'ListChangedEventArgs<T>'}));
  return new $.ObservableList(t0, t1);
};

$.assert = function(condition) {
};

$.buckshot = function() {
  return $.Buckshot$_cached();
};

$.SolidColorBrush$1 = function(toColor) {
  var t0 = $.HashMapImplementation$0();
  var t1 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t1, ({T: 'EventArgs'}));
  var t2 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t2, ({T: 'EventArgs'}));
  var t3 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t3, ({T: 'AttachedPropertyChangedEventArgs'}));
  var t4 = $.HashMapImplementation$0();
  var t5 = $.List((void 0));
  $.setRuntimeTypeInfo(t5, ({E: 'Binding'}));
  var t6 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t6, ({E: 'FrameworkProperty'}));
  var t7 = $._hashNum;
  $._hashNum = $.add(t7, 1);
  var t8 = new $.SolidColorBrush((void 0), (void 0), (void 0), (void 0), false, (void 0), t3, (void 0), t2, t1, t0, (void 0), false, (void 0), (void 0), (void 0), (void 0), false, t6, t5, t4, t7);
  t8.HashableObject$0();
  t8.FrameworkObject$0();
  t8.FrameworkResource$0();
  t8.SolidColorBrush$1(toColor);
  return t8;
};

$._maybeScheduleMeasurementFrame = function() {
  if ($._nextMeasurementFrameScheduled === true) {
    return;
  }
  $._nextMeasurementFrameScheduled = true;
  if ($._firstMeasurementRequest === true) {
    $.add$1($.window().get$on().get$message(), new $.Closure56());
    $._firstMeasurementRequest = false;
  }
  $.window().postMessage$2('DART-MEASURE', '*');
};

$.setXPCSS = function(e, property, value) {
  var t0 = ({});
  t0.e_1 = e;
  t0.value_3 = value;
  t0.property_2 = property;
  $.forEach($.CTC158, new $.Closure17(t0));
};

$.contains$1 = function(receiver, other) {
  if (!(typeof receiver === 'string')) {
    return receiver.contains$1(other);
  }
  return $.contains$2(receiver, other, 0);
};

$._lib5_EventSourceEventsImpl$1 = function(_ptr) {
  return new $._EventSourceEventsImpl(_ptr);
};

$.mul = function(a, b) {
  if ($.checkNumbers(a, b) === true) {
    return a * b;
  }
  return a.operator$mul$1(b);
};

$.ListBox$0 = function() {
  var t0 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t0, ({T: 'SelectedItemChangedEventArgs'}));
  var t1 = $.HashMapImplementation$0();
  var t2 = $.HashMapImplementation$0();
  var t3 = $.HashMapImplementation$0();
  var t4 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t4, ({T: 'EventArgs'}));
  var t5 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t5, ({T: 'EventArgs'}));
  var t6 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t6, ({T: 'AttachedPropertyChangedEventArgs'}));
  var t7 = $.HashMapImplementation$0();
  var t8 = $.List((void 0));
  $.setRuntimeTypeInfo(t8, ({E: 'Binding'}));
  var t9 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t9, ({E: 'FrameworkProperty'}));
  var t10 = $._hashNum;
  $._hashNum = $.add(t10, 1);
  var t11 = new $.ListBox(t0, -1, (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), false, false, false, (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), t2, t1, (void 0), (void 0), (void 0), false, (void 0), t6, (void 0), t5, t4, t3, (void 0), false, (void 0), (void 0), (void 0), (void 0), false, t9, t8, t7, t10);
  t11.HashableObject$0();
  t11.FrameworkObject$0();
  t11.FrameworkElement$0();
  t11.Control$0();
  t11.ListBox$0();
  return t11;
};

$._browserPrefix = function() {
  if ($._cachedBrowserPrefix === (void 0)) {
    if ($.isFirefox() === true) {
      $._cachedBrowserPrefix = '-moz-';
    } else {
      $._cachedBrowserPrefix = '-webkit-';
    }
  }
  return $._cachedBrowserPrefix;
};

$.setTop = function(element, value) {
  if ($.eqNullB(element)) {
    return;
  }
  var value0 = value;
  if ($.ltB(value, 0)) {
    value0 = 0;
  }
  if ($.eqNullB($.topProperty)) {
    $.topProperty = $.AttachedFrameworkProperty$2('top', new $.Closure158());
  }
  $.setAttachedValue(element, $.topProperty, value0);
};

$.checkMutable = function(list, reason) {
  if (!!(list.immutable$list)) {
    throw $.captureStackTrace($.UnsupportedOperationException$1(reason));
  }
};

$.appendClass = function(element, classToAppend) {
  var currentClasses = $.index(element.get$attributes(), 'class');
  if ($.eqNullB(currentClasses) || $.eqB(currentClasses, 'null')) {
    var currentClasses0 = '';
  } else {
    currentClasses0 = currentClasses;
  }
  var t0 = element.get$attributes();
  if (!$.eqB(currentClasses0, '')) {
    var t1 = $.add($.add(currentClasses0, ' '), classToAppend);
  } else {
    t1 = classToAppend;
  }
  $.indexSet(t0, 'class', t1);
};

$.toStringWrapper = function() {
  return $.toString((this.dartException));
};

$._lib5_ElementList$1 = function(list) {
  return new $._ElementList(list);
};

$.LinearGradientBrush$2 = function(dir, fallback) {
  var t0 = $.HashMapImplementation$0();
  var t1 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t1, ({T: 'EventArgs'}));
  var t2 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t2, ({T: 'EventArgs'}));
  var t3 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t3, ({T: 'AttachedPropertyChangedEventArgs'}));
  var t4 = $.HashMapImplementation$0();
  var t5 = $.List((void 0));
  $.setRuntimeTypeInfo(t5, ({E: 'Binding'}));
  var t6 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t6, ({E: 'FrameworkProperty'}));
  var t7 = $._hashNum;
  $._hashNum = $.add(t7, 1);
  var t8 = new $.LinearGradientBrush((void 0), (void 0), (void 0), (void 0), (void 0), (void 0), false, (void 0), t3, (void 0), t2, t1, t0, (void 0), false, (void 0), (void 0), (void 0), (void 0), false, t6, t5, t4, t7);
  t8.HashableObject$0();
  t8.FrameworkObject$0();
  t8.FrameworkResource$0();
  t8.LinearGradientBrush$2(dir, fallback);
  return t8;
};

$.TextChangedEventArgs$with$2 = function(oldText, newText) {
  var t0 = $.HashMapImplementation$0();
  var t1 = $.List((void 0));
  $.setRuntimeTypeInfo(t1, ({E: 'Binding'}));
  var t2 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t2, ({E: 'FrameworkProperty'}));
  var t3 = $._hashNum;
  $._hashNum = $.add(t3, 1);
  var t4 = new $.TextChangedEventArgs(oldText, newText, t2, t1, t0, t3);
  t4.HashableObject$0();
  return t4;
};

$.setLeft = function(element, value) {
  if ($.eqNullB(element)) {
    return;
  }
  var value0 = value;
  if ($.ltB(value, 0)) {
    value0 = 0;
  }
  if ($.eqNullB($.leftProperty)) {
    $.leftProperty = $.AttachedFrameworkProperty$2('left', new $.Closure157());
  }
  $.setAttachedValue(element, $.leftProperty, value0);
};

$.Grid$0 = function() {
  var t0 = $.List((void 0));
  $.setRuntimeTypeInfo(t0, ({E: '_GridCell'}));
  var t1 = $.ObservableList$0();
  $.setRuntimeTypeInfo(t1, ({T: 'FrameworkElement'}));
  var t2 = $.HashMapImplementation$0();
  var t3 = $.HashMapImplementation$0();
  var t4 = $.HashMapImplementation$0();
  var t5 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t5, ({T: 'EventArgs'}));
  var t6 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t6, ({T: 'EventArgs'}));
  var t7 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t7, ({T: 'AttachedPropertyChangedEventArgs'}));
  var t8 = $.HashMapImplementation$0();
  var t9 = $.List((void 0));
  $.setRuntimeTypeInfo(t9, ({E: 'Binding'}));
  var t10 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t10, ({E: 'FrameworkProperty'}));
  var t11 = $._hashNum;
  $._hashNum = $.add(t11, 1);
  var t12 = new $.Grid((void 0), (void 0), t0, (void 0), t1, (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), t3, t2, (void 0), (void 0), (void 0), false, (void 0), t7, (void 0), t6, t5, t4, (void 0), false, (void 0), (void 0), (void 0), (void 0), false, t10, t9, t8, t11);
  t12.HashableObject$0();
  t12.FrameworkObject$0();
  t12.FrameworkElement$0();
  t12.Panel$0();
  t12.Grid$0();
  return t12;
};

$._lib5_EventsImpl$1 = function(_ptr) {
  return new $._EventsImpl(_ptr);
};

$.Border$0 = function() {
  var t0 = $.HashMapImplementation$0();
  var t1 = $.HashMapImplementation$0();
  var t2 = $.HashMapImplementation$0();
  var t3 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t3, ({T: 'EventArgs'}));
  var t4 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t4, ({T: 'EventArgs'}));
  var t5 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t5, ({T: 'AttachedPropertyChangedEventArgs'}));
  var t6 = $.HashMapImplementation$0();
  var t7 = $.List((void 0));
  $.setRuntimeTypeInfo(t7, ({E: 'Binding'}));
  var t8 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t8, ({E: 'FrameworkProperty'}));
  var t9 = $._hashNum;
  $._hashNum = $.add(t9, 1);
  var t10 = new $.Border((void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), t1, t0, (void 0), (void 0), (void 0), false, (void 0), t5, (void 0), t4, t3, t2, (void 0), false, (void 0), (void 0), (void 0), (void 0), false, t8, t7, t6, t9);
  t10.HashableObject$0();
  t10.FrameworkObject$0();
  t10.FrameworkElement$0();
  t10.Border$0();
  return t10;
};

$.HashSetImplementation$0 = function() {
  var t0 = new $.HashSetImplementation((void 0));
  t0.HashSetImplementation$0();
  return t0;
};

$.isEmpty = function(receiver) {
  if (typeof receiver === 'string' || $.isJsArray(receiver) === true) {
    return receiver.length === 0;
  }
  return receiver.isEmpty$0();
};

$._lib5_IDBRequestEventsImpl$1 = function(_ptr) {
  return new $._IDBRequestEventsImpl(_ptr);
};

$.checkGrowable = function(list, reason) {
  if (!!(list.fixed$length)) {
    throw $.captureStackTrace($.UnsupportedOperationException$1(reason));
  }
};

$._XmlToken = function(kind) {
  return $._lib7_XmlToken$_internal$3(kind, '', -1);
};

$.XmlText$1 = function(text) {
  return new $.XmlText(text, (void 0), $.CTC220);
};

$.regExpExec = function(regExp, str) {
  var result = ($.regExpGetNative(regExp).exec(str));
  if (result === null) {
    return;
  }
  return result;
};

$.PropertyChangingEventArgs$2 = function(oldValue, newValue) {
  var t0 = $.HashMapImplementation$0();
  var t1 = $.List((void 0));
  $.setRuntimeTypeInfo(t1, ({E: 'Binding'}));
  var t2 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t2, ({E: 'FrameworkProperty'}));
  var t3 = $._hashNum;
  $._hashNum = $.add(t3, 1);
  var t4 = new $.PropertyChangingEventArgs(newValue, oldValue, t2, t1, t0, t3);
  t4.HashableObject$0();
  return t4;
};

$.getRowSpan = function(element) {
  if ($.eqNullB(element)) {
    return 0;
  }
  var value = $.getAttachedValue(element, $.rowSpanProperty);
  if ($.eqNullB($.rowSpanProperty) || $.eqNullB(value)) {
    $.setRowSpan(element, 0);
  }
  return $.getAttachedValue(element, $.rowSpanProperty);
};

$.AnimatingFrameworkProperty$6 = function(sourceObject, propertyName, propertyChangedCallback, cssPropertyPeer, value, converter) {
  var t0 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t0, ({T: 'PropertyChangingEventArgs'}));
  var t1 = $._hashNum;
  $._hashNum = $.add(t1, 1);
  var t2 = new $.AnimatingFrameworkProperty(cssPropertyPeer, false, (void 0), (void 0), converter, t0, propertyName, propertyChangedCallback, sourceObject, t1);
  t2.HashableObject$0();
  t2.FrameworkPropertyBase$4(sourceObject, propertyName, propertyChangedCallback, converter);
  t2.FrameworkProperty$5(sourceObject, propertyName, propertyChangedCallback, value, converter);
  t2.AnimatingFrameworkProperty$6(sourceObject, propertyName, propertyChangedCallback, cssPropertyPeer, value, converter);
  return t2;
};

$.stringContainsUnchecked = function(receiver, other, startIndex) {
  if (typeof other === 'string') {
    return !($.indexOf$2(receiver, other, startIndex) === -1);
  } else {
    if (typeof other === 'object' && !!other.is$JSSyntaxRegExp) {
      return other.hasMatch$1($.substring$1(receiver, startIndex));
    } else {
      return $.iterator($.allMatches(other, $.substring$1(receiver, startIndex))).hasNext$0();
    }
  }
};

$.ObjectNotClosureException$0 = function() {
  return new $.ObjectNotClosureException();
};

$.Ellipse$0 = function() {
  var t0 = $.HashMapImplementation$0();
  var t1 = $.HashMapImplementation$0();
  var t2 = $.HashMapImplementation$0();
  var t3 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t3, ({T: 'EventArgs'}));
  var t4 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t4, ({T: 'EventArgs'}));
  var t5 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t5, ({T: 'AttachedPropertyChangedEventArgs'}));
  var t6 = $.HashMapImplementation$0();
  var t7 = $.List((void 0));
  $.setRuntimeTypeInfo(t7, ({E: 'Binding'}));
  var t8 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t8, ({E: 'FrameworkProperty'}));
  var t9 = $._hashNum;
  $._hashNum = $.add(t9, 1);
  var t10 = new $.Ellipse((void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), t1, t0, (void 0), (void 0), (void 0), false, (void 0), t5, (void 0), t4, t3, t2, (void 0), false, (void 0), (void 0), (void 0), (void 0), false, t8, t7, t6, t9);
  t10.HashableObject$0();
  t10.FrameworkObject$0();
  t10.FrameworkElement$0();
  t10.Shape$0();
  t10.Ellipse$0();
  return t10;
};

$.iterator = function(receiver) {
  if ($.isJsArray(receiver) === true) {
    return $.ListIterator$1(receiver);
  }
  return receiver.iterator$0();
};

$.regExpMakeNative = function(regExp, global) {
  var pattern = regExp.get$pattern();
  var multiLine = regExp.get$multiLine();
  var ignoreCase = regExp.get$ignoreCase();
  $.checkString(pattern);
  var sb = $.StringBufferImpl$1('');
  if (multiLine === true) {
    $.add$1(sb, 'm');
  }
  if (ignoreCase === true) {
    $.add$1(sb, 'i');
  }
  if (global === true) {
    $.add$1(sb, 'g');
  }
  try {
    return new RegExp(pattern, $.toString(sb));
  }catch (t0) {
    var t1 = $.unwrapException(t0);
    var e = t1;
    throw $.captureStackTrace($.IllegalJSRegExpException$2(pattern, (String(e))));
  }
};

$.BadNumberFormatException$1 = function(_s) {
  return new $.BadNumberFormatException(_s);
};

$.mapToString = function(m) {
  var result = $.StringBufferImpl$1('');
  $._emitMap(m, result, $.List((void 0)));
  return result.toString$0();
};

$.AnimationKeyFrame$0 = function() {
  var t0 = $.HashMapImplementation$0();
  var t1 = $.List((void 0));
  $.setRuntimeTypeInfo(t1, ({E: 'Binding'}));
  var t2 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t2, ({E: 'FrameworkProperty'}));
  var t3 = $._hashNum;
  $._hashNum = $.add(t3, 1);
  var t4 = new $.AnimationKeyFrame((void 0), (void 0), (void 0), t2, t1, t0, t3);
  t4.HashableObject$0();
  t4.AnimationKeyFrame$0();
  return t4;
};

$._lib5_IDBDatabaseEventsImpl$1 = function(_ptr) {
  return new $._IDBDatabaseEventsImpl(_ptr);
};

$.ge = function(a, b) {
  if ($.checkNumbers(a, b) === true) {
    return a >= b;
  }
  return a.operator$ge$1(b);
};

$._lib5_MeasurementRequest$2 = function(computeValue, completer) {
  return new $._MeasurementRequest(false, (void 0), completer, computeValue);
};

$._lib5_TextTrackCueEventsImpl$1 = function(_ptr) {
  return new $._TextTrackCueEventsImpl(_ptr);
};

$._lib2_BindingImplementation$4 = function(_fromProperty, _toProperty, bindingMode, converter) {
  var t0 = $.HashMapImplementation$0();
  var t1 = $.List((void 0));
  $.setRuntimeTypeInfo(t1, ({E: 'Binding'}));
  var t2 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t2, ({E: 'FrameworkProperty'}));
  var t3 = $._hashNum;
  $._hashNum = $.add(t3, 1);
  var t4 = new $._BindingImplementation(false, _toProperty, _fromProperty, converter, (void 0), bindingMode, t2, t1, t0, t3);
  t4.HashableObject$0();
  t4._lib2_BindingImplementation$4(_fromProperty, _toProperty, bindingMode, converter);
  return t4;
};

$.MatchImplementation$5 = function(pattern, str, _start, _end, _groups) {
  return new $.MatchImplementation(_groups, _end, _start, str, pattern);
};

$.UnsupportedOperationException$1 = function(_message) {
  return new $.UnsupportedOperationException(_message);
};

$.toStringAsPrecision = function(receiver, fractionDigits) {
  if (!(typeof receiver === 'number')) {
    return receiver.toStringAsPrecision$1(fractionDigits);
  }
  $.checkNum(fractionDigits);
  var result = (receiver.toPrecision(fractionDigits));
  if (receiver === 0 && $.isNegative(receiver) === true) {
    return '-' + $.stringToString(result);
  }
  return result;
};

$.get$dynamic = function(receiver) {
  return receiver;
};

$.indexOf$2 = function(receiver, element, start) {
  if ($.isJsArray(receiver) === true) {
    if (!((typeof start === 'number') && (start === (start | 0)))) {
      throw $.captureStackTrace($.IllegalArgumentException$1(start));
    }
    return $.indexOf(receiver, element, start, (receiver.length));
  } else {
    if (typeof receiver === 'string') {
      $.checkNull(element);
      if (!((typeof start === 'number') && (start === (start | 0)))) {
        throw $.captureStackTrace($.IllegalArgumentException$1(start));
      }
      if (!(typeof element === 'string')) {
        throw $.captureStackTrace($.IllegalArgumentException$1(element));
      }
      if (start < 0) {
        return -1;
      }
      return receiver.indexOf(element, start);
    }
  }
  return receiver.indexOf$2(element, start);
};

$._lib5_DedicatedWorkerContextEventsImpl$1 = function(_ptr) {
  return new $._DedicatedWorkerContextEventsImpl(_ptr);
};

$.setHorizontalItemFlexAlignment = function(element, alignment) {
  $0:{
    if ($.CTC155 === alignment) {
      $.setXPCSS(element.get$rawElement(), 'flex-item-align', 'start');
      break $0;
    } else {
      if ($.CTC156 === alignment) {
        $.setXPCSS(element.get$rawElement(), 'flex-item-align', 'end');
        break $0;
      } else {
        if ($.CTC157 === alignment) {
          $.setXPCSS(element.get$rawElement(), 'flex-item-align', 'center');
          break $0;
        } else {
          if ($.CTC150 === alignment) {
            $.setXPCSS(element.get$rawElement(), 'flex-item-align', 'stretch');
            break $0;
          }
        }
      }
    }
  }
};

$.replaceAll = function(receiver, from, to) {
  if (!(typeof receiver === 'string')) {
    return receiver.replaceAll$2(from, to);
  }
  $.checkString(to);
  return $.stringReplaceAllUnchecked(receiver, from, to);
};

$.NoMoreElementsException$0 = function() {
  return new $.NoMoreElementsException();
};

$.TextBox$0 = function() {
  var t0 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t0, ({T: 'TextChangedEventArgs'}));
  var t1 = $.HashMapImplementation$0();
  var t2 = $.HashMapImplementation$0();
  var t3 = $.HashMapImplementation$0();
  var t4 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t4, ({T: 'EventArgs'}));
  var t5 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t5, ({T: 'EventArgs'}));
  var t6 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t6, ({T: 'AttachedPropertyChangedEventArgs'}));
  var t7 = $.HashMapImplementation$0();
  var t8 = $.List((void 0));
  $.setRuntimeTypeInfo(t8, ({E: 'Binding'}));
  var t9 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t9, ({E: 'FrameworkProperty'}));
  var t10 = $._hashNum;
  $._hashNum = $.add(t10, 1);
  var t11 = new $.TextBox(t0, (void 0), (void 0), (void 0), false, false, false, (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), t2, t1, (void 0), (void 0), (void 0), false, (void 0), t6, (void 0), t5, t4, t3, (void 0), false, (void 0), (void 0), (void 0), (void 0), false, t9, t8, t7, t10);
  t11.HashableObject$0();
  t11.FrameworkObject$0();
  t11.FrameworkElement$0();
  t11.Control$0();
  t11.TextBox$0();
  return t11;
};

$.newList = function(length$) {
  if (length$ === (void 0)) {
    return new Array();
  }
  var t0 = typeof length$ === 'number' && length$ === (length$ | 0);
  var t1 = !t0;
  if (t0) {
    t1 = length$ < 0;
  }
  if (t1) {
    throw $.captureStackTrace($.IllegalArgumentException$1(length$));
  }
  var result = (new Array(length$));
  result.fixed$length = true;
  return result;
};

$.XmlProcessingInstruction$1 = function(text) {
  return new $.XmlProcessingInstruction(text, (void 0), $.CTC225);
};

$._lib5_AbstractWorkerEventsImpl$1 = function(_ptr) {
  return new $._AbstractWorkerEventsImpl(_ptr);
};

$._computeLoadLimit = function(capacity) {
  return $.tdiv($.mul(capacity, 3), 4);
};

$._lib5_MediaElementEventsImpl$1 = function(_ptr) {
  return new $._MediaElementEventsImpl(_ptr);
};

$._lib5_IDBTransactionEventsImpl$1 = function(_ptr) {
  return new $._IDBTransactionEventsImpl(_ptr);
};

$._lib5_BodyElementEventsImpl$1 = function(_ptr) {
  return new $._BodyElementEventsImpl(_ptr);
};

$.iae = function(argument) {
  throw $.captureStackTrace($.IllegalArgumentException$1(argument));
};

$.XmlElement$2 = function(name$, elements) {
  var t0 = $.XmlCollection$_internal$0();
  $.setRuntimeTypeInfo(t0, ({E: 'XmlNode'}));
  var t1 = $.makeLiteralMap([]);
  var t2 = new $.XmlElement($.makeLiteralMap([]), t1, t0, name$, (void 0), $.CTC222);
  t2.XmlElement$2(name$, elements);
  return t2;
};

$.isNaN = function(receiver) {
  if (typeof receiver === 'number') {
    return isNaN(receiver);
  } else {
    return receiver.isNegative$0();
  }
};

$.Polygon$0 = function() {
  var t0 = $.HashMapImplementation$0();
  var t1 = $.HashMapImplementation$0();
  var t2 = $.HashMapImplementation$0();
  var t3 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t3, ({T: 'EventArgs'}));
  var t4 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t4, ({T: 'EventArgs'}));
  var t5 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t5, ({T: 'AttachedPropertyChangedEventArgs'}));
  var t6 = $.HashMapImplementation$0();
  var t7 = $.List((void 0));
  $.setRuntimeTypeInfo(t7, ({E: 'Binding'}));
  var t8 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t8, ({E: 'FrameworkProperty'}));
  var t9 = $._hashNum;
  $._hashNum = $.add(t9, 1);
  var t10 = new $.Polygon((void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), t1, t0, (void 0), (void 0), (void 0), false, (void 0), t5, (void 0), t4, t3, t2, (void 0), false, (void 0), (void 0), (void 0), (void 0), false, t8, t7, t6, t9);
  t10.HashableObject$0();
  t10.FrameworkObject$0();
  t10.FrameworkElement$0();
  t10.Shape$0();
  t10.Polygon$0();
  return t10;
};

$.round = function(receiver) {
  if (!(typeof receiver === 'number')) {
    return receiver.round$0();
  }
  if (receiver < 0) {
    return -Math.round(-receiver);
  } else {
    return Math.round(receiver);
  }
};

$.ResourceCollection$0 = function() {
  var t0 = $.ObservableList$0();
  $.setRuntimeTypeInfo(t0, ({T: 'FrameworkResource'}));
  var t1 = $.HashMapImplementation$0();
  var t2 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t2, ({T: 'EventArgs'}));
  var t3 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t3, ({T: 'EventArgs'}));
  var t4 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t4, ({T: 'AttachedPropertyChangedEventArgs'}));
  var t5 = $.HashMapImplementation$0();
  var t6 = $.List((void 0));
  $.setRuntimeTypeInfo(t6, ({E: 'Binding'}));
  var t7 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t7, ({E: 'FrameworkProperty'}));
  var t8 = $._hashNum;
  $._hashNum = $.add(t8, 1);
  var t9 = new $.ResourceCollection(t0, (void 0), (void 0), (void 0), false, (void 0), t4, (void 0), t3, t2, t1, (void 0), false, (void 0), (void 0), (void 0), (void 0), false, t7, t6, t5, t8);
  t9.HashableObject$0();
  t9.FrameworkObject$0();
  t9.FrameworkResource$0();
  t9.ResourceCollection$0();
  return t9;
};

$._lib3_AllMatchesIterable$2 = function(_re, _str) {
  return new $._AllMatchesIterable(_str, _re);
};

$.copy = function(src, srcStart, dst, dstStart, count) {
  if (typeof src !== 'string' && (typeof src !== 'object'||src.constructor !== Array)) return $.copy$bailout(src, srcStart, dst, dstStart, count,  0);
  if (typeof dst !== 'object'||dst.constructor !== Array||!!dst.immutable$list) return $.copy$bailout(src, srcStart, dst, dstStart, count,  0);
  if (typeof count !== 'number') return $.copy$bailout(src, srcStart, dst, dstStart, count,  0);
  var srcStart0 = srcStart;
  if (srcStart === (void 0)) {
    srcStart0 = 0;
  }
  if (typeof srcStart0 !== 'number') return $.copy$bailout(src, srcStart, dst, dstStart, count, 4, src, dst, count, srcStart0);
  var dstStart0 = dstStart;
  if (dstStart === (void 0)) {
    dstStart0 = 0;
  }
  if (typeof dstStart0 !== 'number') return $.copy$bailout(src, srcStart, dst, dstStart, count, 5, src, dst, count, srcStart0, dstStart0);
  var t0 = srcStart0 < dstStart0;
  var t1 = srcStart0 + count;
  if (t0) {
    var t2 = dstStart0 + count;
    for (var i = t1 - 1, i0 = i, j = t2 - 1; i0 >= srcStart0; i0 = i1, j = j - 1) {
      if (i0 !== (i0 | 0)) throw $.iae(i0);
      var t3 = src.length;
      if (i0 < 0 || i0 >= t3) throw $.ioore(i0);
      var t4 = src[i0];
      if (j !== (j | 0)) throw $.iae(j);
      var t5 = dst.length;
      if (j < 0 || j >= t5) throw $.ioore(j);
      dst[j] = t4;
      var i1 = i0 - 1;
    }
  } else {
    for (var i2 = srcStart0, j0 = dstStart0; i2 < t1; i2 = i3, j0 = j0 + 1) {
      if (i2 !== (i2 | 0)) throw $.iae(i2);
      var t6 = src.length;
      if (i2 < 0 || i2 >= t6) throw $.ioore(i2);
      var t7 = src[i2];
      if (j0 !== (j0 | 0)) throw $.iae(j0);
      var t8 = dst.length;
      if (j0 < 0 || j0 >= t8) throw $.ioore(j0);
      dst[j0] = t7;
      var i3 = i2 + 1;
    }
  }
};

$.XmlException$withDebug$3 = function(msg, debugXml, errorLocation) {
  return new $.XmlException(errorLocation, debugXml, msg);
};

$.XmlCollection$_internal$0 = function() {
  var t0 = $.List((void 0));
  $.setRuntimeTypeInfo(t0, ({E: 'E'}));
  return new $.XmlCollection(t0);
};

$.setColumnSpan = function(element, columnSpan) {
  if ($.eqNullB(element)) {
    return;
  }
  var columnSpan0 = columnSpan;
  if ($.ltB(columnSpan, 0)) {
    columnSpan0 = 0;
  }
  if ($.eqNullB($.columnSpanProperty)) {
    $.columnSpanProperty = $.AttachedFrameworkProperty$2('columnSpan', new $.Closure160());
  }
  $.setAttachedValue(element, $.columnSpanProperty, columnSpan0);
};

$.SVGSVGElement = function() {
  var el = $.SVGElement$tag('svg');
  $.indexSet(el.get$attributes(), 'version', '1.1');
  return el;
};

$.Buckshot$_cached = function() {
  if (!$.eqNullB($._ref)) {
    return $._ref;
  }
  return $.Buckshot$_init$1('#BuckshotHost');
};

$.FutureAlreadyCompleteException$0 = function() {
  var t0 = new $.FutureAlreadyCompleteException();
  t0.FutureAlreadyCompleteException$0();
  return t0;
};

$._lib5_WorkerEventsImpl$1 = function(_ptr) {
  return new $._WorkerEventsImpl(_ptr);
};

$.FilteredElementList$1 = function(node) {
  return new $.FilteredElementList(node.get$nodes(), node);
};

$.convertDartClosureToJS = function(closure) {
  if (closure === (void 0)) {
    return;
  }
  var function$ = (closure.$identity);
  if (!!function$) {
    return function$;
  }
  var function0 = (function() {
    return $.invokeClosure.$call$5(closure, $, arguments.length, arguments[0], arguments[1]);
  });
  closure.$identity = function0;
  return function0;
};

$.parse = function(xml, withQuirks) {
  return $._parse($.trim(xml), withQuirks);
};

$._lib5_FixedSizeListIterator$1 = function(array) {
  return new $._FixedSizeListIterator($.get$length(array), 0, array);
};

$._lib5_FrozenElementList$_wrap$1 = function(_nodeList) {
  return new $._FrozenElementList(_nodeList);
};

$.split = function(receiver, pattern) {
  if (!(typeof receiver === 'string')) {
    return receiver.split$1(pattern);
  }
  $.checkNull(pattern);
  return $.stringSplitUnchecked(receiver, pattern);
};

$.concatAll = function(strings) {
  $.checkNull(strings);
  for (var t0 = $.iterator(strings), result = ''; t0.hasNext$0() === true; ) {
    var t1 = t0.next$0();
    $.checkNull(t1);
    if (!(typeof t1 === 'string')) {
      throw $.captureStackTrace($.IllegalArgumentException$1(t1));
    }
    result = result + t1;
  }
  return result;
};

$.userAgent = function() {
  return $.window().get$navigator().get$userAgent();
};

$._lib5_InputElementEventsImpl$1 = function(_ptr) {
  return new $._InputElementEventsImpl(_ptr);
};

$.Button$0 = function() {
  var t0 = $.HashMapImplementation$0();
  var t1 = $.HashMapImplementation$0();
  var t2 = $.HashMapImplementation$0();
  var t3 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t3, ({T: 'EventArgs'}));
  var t4 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t4, ({T: 'EventArgs'}));
  var t5 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t5, ({T: 'AttachedPropertyChangedEventArgs'}));
  var t6 = $.HashMapImplementation$0();
  var t7 = $.List((void 0));
  $.setRuntimeTypeInfo(t7, ({E: 'Binding'}));
  var t8 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t8, ({E: 'FrameworkProperty'}));
  var t9 = $._hashNum;
  $._hashNum = $.add(t9, 1);
  var t10 = new $.Button((void 0), (void 0), false, false, false, (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), t1, t0, (void 0), (void 0), (void 0), false, (void 0), t5, (void 0), t4, t3, t2, (void 0), false, (void 0), (void 0), (void 0), (void 0), false, t8, t7, t6, t9);
  t10.HashableObject$0();
  t10.FrameworkObject$0();
  t10.FrameworkElement$0();
  t10.Control$0();
  t10.Button$0();
  return t10;
};

$._lib3_DoubleLinkedQueueIterator$1 = function(_sentinel) {
  var t0 = new $._DoubleLinkedQueueIterator((void 0), _sentinel);
  t0._lib3_DoubleLinkedQueueIterator$1(_sentinel);
  return t0;
};

$.LinkedHashMapImplementation$0 = function() {
  var t0 = new $.LinkedHashMapImplementation((void 0), (void 0));
  t0.LinkedHashMapImplementation$0();
  return t0;
};

$.checkNull = function(object) {
  if (object === (void 0)) {
    throw $.captureStackTrace($.NullPointerException$2((void 0), $.CTC));
  }
  return object;
};

$.SVGElement$tag = function(tag) {
  return $._document().$dom_createElementNS$2('http://www.w3.org/2000/svg', tag);
};

$.CompleterImpl$0 = function() {
  var t0 = new $.CompleterImpl($.FutureImpl$0());
  t0.CompleterImpl$0();
  return t0;
};

$._lib5_EventListenerListImpl$2 = function(_ptr, _type) {
  return new $._EventListenerListImpl(_type, _ptr);
};

$.DoubleLinkedQueue$0 = function() {
  var t0 = new $.DoubleLinkedQueue((void 0));
  t0.DoubleLinkedQueue$0();
  return t0;
};

$.insertionSort_ = function(a, left, right, compare) {
  if (typeof a !== 'object'||a.constructor !== Array||!!a.immutable$list) return $.insertionSort_$bailout(a, left, right, compare,  0);
  if (typeof left !== 'number') return $.insertionSort_$bailout(a, left, right, compare,  0);
  if (typeof right !== 'number') return $.insertionSort_$bailout(a, left, right, compare,  0);
  for (var i = left + 1; i <= right; i = i + 1) {
    if (i !== (i | 0)) throw $.iae(i);
    var t0 = a.length;
    if (i < 0 || i >= t0) throw $.ioore(i);
    var t1 = a[i];
    var j = i;
    while (true) {
      var t2 = j > left;
      var t3 = t2;
      if (t2) {
        var t4 = j - 1;
        if (t4 !== (t4 | 0)) throw $.iae(t4);
        var t5 = a.length;
        if (t4 < 0 || t4 >= t5) throw $.ioore(t4);
        t3 = $.gtB(compare.$call$2(a[t4], t1), 0);
      }
      if (!t3) break;
      var t6 = j - 1;
      if (t6 !== (t6 | 0)) throw $.iae(t6);
      var t7 = a.length;
      if (t6 < 0 || t6 >= t7) throw $.ioore(t6);
      var t8 = a[t6];
      if (j !== (j | 0)) throw $.iae(j);
      var t9 = a.length;
      if (j < 0 || j >= t9) throw $.ioore(j);
      a[j] = t8;
      j = t6;
    }
    if (j !== (j | 0)) throw $.iae(j);
    var t10 = a.length;
    if (j < 0 || j >= t10) throw $.ioore(j);
    a[j] = t1;
  }
};

$.GridDemoView$with$1 = function(_vm) {
  var t0 = new $.GridDemoView(_vm, $.buckshot().get$defaultPresentationProvider().deserialize$1('<grid margin=\'10\' \r\nhorizontalalignment=\'stretch\' verticalalignment=\'stretch\'>\r\n\r\n  <resourcecollection>\r\n    <styletemplate key=\'_borderAuto\'>\r\n      <setters>\r\n        <stylesetter property="borderColor" value="Black"></stylesetter>\r\n        <stylesetter property="borderThickness" value="1"></stylesetter>\r\n        <stylesetter property="horizontalAlignment" value="stretch"></stylesetter>\r\n        <stylesetter property="padding" value="5"></stylesetter>\r\n        <stylesetter property="height" value="250"></stylesetter>\r\n      </setters>\r\n    </styletemplate>\r\n    <styletemplate key=\'_border\'>\r\n      <setters>\r\n        <stylesetter property="borderColor" value="Black"></stylesetter>\r\n        <stylesetter property="borderThickness" value="1"></stylesetter>\r\n        <stylesetter property="verticalAlignment" value="stretch"></stylesetter>\r\n        <stylesetter property="horizontalAlignment" value="stretch"></stylesetter>\r\n        <stylesetter property="padding" value="5"></stylesetter>\r\n      </setters>\r\n    </styletemplate>\r\n    <styletemplate key=\'_text\'>\r\n      <setters>\r\n        <stylesetter property="verticalAlignment" value="center"></stylesetter>\r\n        <stylesetter property="horizontalAlignment" value="center"></stylesetter>\r\n      </setters>\r\n    </styletemplate>\r\n  </resourcecollection>\r\n\r\n  <rowdefinitions>\r\n    <rowdefinition height=\'auto\'></rowdefinition>\r\n    <rowdefinition height=\'*\'></rowdefinition>\r\n    <rowdefinition height=\'*.5\'></rowdefinition>\r\n    <rowdefinition height=\'*\'></rowdefinition>\r\n  </rowdefinitions>\r\n\r\n  <columndefinitions>\r\n    <columndefinition width=\'*\'></columndefinition>\r\n    <columndefinition width=\'*.5\'></columndefinition>\r\n    <columndefinition width=\'*\'></columndefinition>\r\n  </columndefinitions>\r\n\r\n  <textblock horizontalalignment=\'center\' fontsize=\'36\' fontfamily=\'Consolas\'\r\n  margin=\'5\' grid.columnspan=\'3\' text=\'{data title}\'></textblock>\r\n\r\n  <border background=\'#333333\' grid.row=\'1\' style=\'{resource _border}\'>\r\n    <grid horizontalalignment=\'stretch\' verticalalignment=\'stretch\'>\r\n      <rowdefinitions>\r\n        <rowdefinition height=\'*\'></rowdefinition>\r\n        <rowdefinition height=\'*.5\'></rowdefinition>\r\n        <rowdefinition height=\'*\'></rowdefinition>\r\n      </rowdefinitions>\r\n      <columndefinitions>\r\n        <columndefinition width=\'*\'></columndefinition>\r\n        <columndefinition width=\'*.5\'></columndefinition>\r\n        <columndefinition width=\'*\'></columndefinition>\r\n      </columndefinitions>\r\n      <border background=\'#333333\' grid.row=\'0\' style=\'{resource _border}\'>\r\n        <textblock text=\'0,0\' style=\'{resource _text}\'></textblock>\r\n      </border>\r\n      <border background=\'#555555\' grid.row=\'0\' grid.column=\'1\' style=\'{resource _border}\'>\r\n        <textblock text=\'1,0\' style=\'{resource _text}\'></textblock>\r\n      </border>\r\n      <border background=\'#777777\' grid.row=\'0\' grid.column=\'2\' style=\'{resource _border}\'>\r\n        <textblock text=\'2,0\' style=\'{resource _text}\'></textblock>\r\n      </border>\r\n      <border background=\'#555555\' grid.row=\'1\' style=\'{resource _border}\'>\r\n        <textblock text=\'0,1\' style=\'{resource _text}\'></textblock>\r\n      </border>\r\n      <border background=\'#999999\' grid.row=\'1\' grid.column=\'1\' style=\'{resource _border}\'>\r\n        <textblock text=\'1,1\' style=\'{resource _text}\'></textblock>\r\n      </border>\r\n      <border background=\'#BBBBBB\' grid.row=\'1\' grid.column=\'2\' style=\'{resource _border}\'>\r\n        <textblock text=\'2,1\' style=\'{resource _text}\'></textblock>\r\n      </border>\r\n      <border background=\'#777777\' grid.row=\'2\' style=\'{resource _border}\'>\r\n        <textblock text=\'0,2\' style=\'{resource _text}\'></textblock>\r\n      </border>\r\n      <border background=\'#BBBBBB\' grid.row=\'2\' grid.column=\'1\' style=\'{resource _border}\'>\r\n        <textblock text=\'1,2\' style=\'{resource _text}\'></textblock>\r\n      </border>\r\n      <border background=\'#EEEEEE\' grid.row=\'2\' grid.column=\'2\' style=\'{resource _border}\'>\r\n        <textblock text=\'2,2\' style=\'{resource _text}\'></textblock>\r\n      </border>\r\n    </grid>\r\n  </border>\r\n  <border background=\'#555555\' grid.row=\'1\' grid.column=\'1\' style=\'{resource _border}\'>\r\n    <textblock text=\'1,0\' style=\'{resource _text}\'></textblock>\r\n  </border>\r\n  <border background=\'#777777\' grid.row=\'1\' grid.column=\'2\' style=\'{resource _border}\'>\r\n    <grid horizontalalignment=\'stretch\' verticalalignment=\'stretch\'>\r\n      <rowdefinitions>\r\n        <rowdefinition height=\'*\'></rowdefinition>\r\n        <rowdefinition height=\'*.5\'></rowdefinition>\r\n        <rowdefinition height=\'*\'></rowdefinition>\r\n      </rowdefinitions>\r\n      <columndefinitions>\r\n        <columndefinition width=\'*\'></columndefinition>\r\n        <columndefinition width=\'*.5\'></columndefinition>\r\n        <columndefinition width=\'*\'></columndefinition>\r\n      </columndefinitions>\r\n      <border background=\'#333333\' grid.row=\'0\' style=\'{resource _border}\'>\r\n        <textblock text=\'0,0\' style=\'{resource _text}\'></textblock>\r\n      </border>\r\n      <border background=\'#555555\' grid.row=\'0\' grid.column=\'1\' style=\'{resource _border}\'>\r\n        <textblock text=\'1,0\' style=\'{resource _text}\'></textblock>\r\n      </border>\r\n      <border background=\'#777777\' grid.row=\'0\' grid.column=\'2\' style=\'{resource _border}\'>\r\n        <textblock text=\'2,0\' style=\'{resource _text}\'></textblock>\r\n      </border>\r\n      <border background=\'#555555\' grid.row=\'1\' style=\'{resource _border}\'>\r\n        <textblock text=\'0,1\' style=\'{resource _text}\'></textblock>\r\n      </border>\r\n      <border background=\'#999999\' grid.row=\'1\' grid.column=\'1\' style=\'{resource _border}\'>\r\n        <textblock text=\'1,1\' style=\'{resource _text}\'></textblock>\r\n      </border>\r\n      <border background=\'#BBBBBB\' grid.row=\'1\' grid.column=\'2\' style=\'{resource _border}\'>\r\n        <textblock text=\'2,1\' style=\'{resource _text}\'></textblock>\r\n      </border>\r\n      <border background=\'#777777\' grid.row=\'2\' style=\'{resource _border}\'>\r\n        <textblock text=\'0,2\' style=\'{resource _text}\'></textblock>\r\n      </border>\r\n      <border background=\'#BBBBBB\' grid.row=\'2\' grid.column=\'1\' style=\'{resource _border}\'>\r\n        <textblock text=\'1,2\' style=\'{resource _text}\'></textblock>\r\n      </border>\r\n      <border background=\'#EEEEEE\' grid.row=\'2\' grid.column=\'2\' style=\'{resource _border}\'>\r\n        <textblock text=\'2,2\' style=\'{resource _text}\'></textblock>\r\n      </border>\r\n    </grid>\r\n  </border>\r\n  <border background=\'#555555\' grid.row=\'2\' style=\'{resource _border}\'>\r\n    <textblock text=\'0,1\' style=\'{resource _text}\'></textblock>\r\n  </border>\r\n  <border background=\'#999999\' grid.row=\'2\' grid.column=\'1\' style=\'{resource _border}\'>\r\n    <textblock text=\'1,1\' style=\'{resource _text}\'></textblock>\r\n  </border>\r\n  <border background=\'#BBBBBB\' grid.row=\'2\' grid.column=\'2\' style=\'{resource _border}\'>\r\n    <textblock text=\'2,1\' style=\'{resource _text}\'></textblock>\r\n  </border>\r\n  <border background=\'#777777\' grid.row=\'3\' style=\'{resource _border}\'>\r\n    <grid horizontalalignment=\'stretch\' verticalalignment=\'stretch\'>\r\n      <rowdefinitions>\r\n        <rowdefinition height=\'*\'></rowdefinition>\r\n        <rowdefinition height=\'*.5\'></rowdefinition>\r\n        <rowdefinition height=\'*\'></rowdefinition>\r\n      </rowdefinitions>\r\n      <columndefinitions>\r\n        <columndefinition width=\'*\'></columndefinition>\r\n        <columndefinition width=\'*.5\'></columndefinition>\r\n        <columndefinition width=\'*\'></columndefinition>\r\n      </columndefinitions>\r\n      <border background=\'#333333\' grid.row=\'0\' style=\'{resource _border}\'>\r\n        <textblock text=\'0,0\' style=\'{resource _text}\'></textblock>\r\n      </border>\r\n      <border background=\'#555555\' grid.row=\'0\' grid.column=\'1\' style=\'{resource _border}\'>\r\n        <textblock text=\'1,0\' style=\'{resource _text}\'></textblock>\r\n      </border>\r\n      <border background=\'#777777\' grid.row=\'0\' grid.column=\'2\' style=\'{resource _border}\'>\r\n        <textblock text=\'2,0\' style=\'{resource _text}\'></textblock>\r\n      </border>\r\n      <border background=\'#555555\' grid.row=\'1\' style=\'{resource _border}\'>\r\n        <textblock text=\'0,1\' style=\'{resource _text}\'></textblock>\r\n      </border>\r\n      <border background=\'#999999\' grid.row=\'1\' grid.column=\'1\' style=\'{resource _border}\'>\r\n        <textblock text=\'1,1\' style=\'{resource _text}\'></textblock>\r\n      </border>\r\n      <border background=\'#BBBBBB\' grid.row=\'1\' grid.column=\'2\' style=\'{resource _border}\'>\r\n        <textblock text=\'2,1\' style=\'{resource _text}\'></textblock>\r\n      </border>\r\n      <border background=\'#777777\' grid.row=\'2\' style=\'{resource _border}\'>\r\n        <textblock text=\'0,2\' style=\'{resource _text}\'></textblock>\r\n      </border>\r\n      <border background=\'#BBBBBB\' grid.row=\'2\' grid.column=\'1\' style=\'{resource _border}\'>\r\n        <textblock text=\'1,2\' style=\'{resource _text}\'></textblock>\r\n      </border>\r\n      <border background=\'#EEEEEE\' grid.row=\'2\' grid.column=\'2\' style=\'{resource _border}\'>\r\n        <textblock text=\'2,2\' style=\'{resource _text}\'></textblock>\r\n      </border>\r\n    </grid>\r\n  </border>\r\n  <border background=\'#BBBBBB\' grid.row=\'3\' grid.column=\'1\' style=\'{resource _border}\'>\r\n    <textblock text=\'1,2\' style=\'{resource _text}\'></textblock>\r\n  </border>\r\n  <border background=\'#EEEEEE\' grid.row=\'3\' grid.column=\'2\' style=\'{resource _border}\'>\r\n    <grid horizontalalignment=\'stretch\' verticalalignment=\'stretch\'>\r\n      <rowdefinitions>\r\n        <rowdefinition height=\'*\'></rowdefinition>\r\n        <rowdefinition height=\'*.5\'></rowdefinition>\r\n        <rowdefinition height=\'*\'></rowdefinition>\r\n      </rowdefinitions>\r\n      <columndefinitions>\r\n        <columndefinition width=\'*\'></columndefinition>\r\n        <columndefinition width=\'*.5\'></columndefinition>\r\n        <columndefinition width=\'*\'></columndefinition>\r\n      </columndefinitions>\r\n      <border background=\'#333333\' grid.row=\'0\' style=\'{resource _border}\'>\r\n        <textblock text=\'0,0\' style=\'{resource _text}\'></textblock>\r\n      </border>\r\n      <border background=\'#555555\' grid.row=\'0\' grid.column=\'1\' style=\'{resource _border}\'>\r\n        <textblock text=\'1,0\' style=\'{resource _text}\'></textblock>\r\n      </border>\r\n      <border background=\'#777777\' grid.row=\'0\' grid.column=\'2\' style=\'{resource _border}\'>\r\n        <textblock text=\'2,0\' style=\'{resource _text}\'></textblock>\r\n      </border>\r\n      <border background=\'#555555\' grid.row=\'1\' style=\'{resource _border}\'>\r\n        <textblock text=\'0,1\' style=\'{resource _text}\'></textblock>\r\n      </border>\r\n      <border background=\'#999999\' grid.row=\'1\' grid.column=\'1\' style=\'{resource _border}\'>\r\n        <textblock text=\'1,1\' style=\'{resource _text}\'></textblock>\r\n      </border>\r\n      <border background=\'#BBBBBB\' grid.row=\'1\' grid.column=\'2\' style=\'{resource _border}\'>\r\n        <textblock text=\'2,1\' style=\'{resource _text}\'></textblock>\r\n      </border>\r\n      <border background=\'#777777\' grid.row=\'2\' style=\'{resource _border}\'>\r\n        <textblock text=\'0,2\' style=\'{resource _text}\'></textblock>\r\n      </border>\r\n      <border background=\'#BBBBBB\' grid.row=\'2\' grid.column=\'1\' style=\'{resource _border}\'>\r\n        <textblock text=\'1,2\' style=\'{resource _text}\'></textblock>\r\n      </border>\r\n      <border background=\'#EEEEEE\' grid.row=\'2\' grid.column=\'2\' style=\'{resource _border}\'>\r\n        <textblock text=\'2,2\' style=\'{resource _text}\'></textblock>\r\n      </border>\r\n    </grid>\r\n  </border>\r\n</grid>\r\n'));
  t0.GridDemoView$with$1(_vm);
  return t0;
};

$.DropDownList$0 = function() {
  var t0 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t0, ({T: 'SelectedItemChangedEventArgs<DropDownListItem>'}));
  var t1 = $.HashMapImplementation$0();
  var t2 = $.HashMapImplementation$0();
  var t3 = $.HashMapImplementation$0();
  var t4 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t4, ({T: 'EventArgs'}));
  var t5 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t5, ({T: 'EventArgs'}));
  var t6 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t6, ({T: 'AttachedPropertyChangedEventArgs'}));
  var t7 = $.HashMapImplementation$0();
  var t8 = $.List((void 0));
  $.setRuntimeTypeInfo(t8, ({E: 'Binding'}));
  var t9 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t9, ({E: 'FrameworkProperty'}));
  var t10 = $._hashNum;
  $._hashNum = $.add(t10, 1);
  var t11 = new $.DropDownList(t0, (void 0), (void 0), (void 0), (void 0), false, false, false, (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), t2, t1, (void 0), (void 0), (void 0), false, (void 0), t6, (void 0), t5, t4, t3, (void 0), false, (void 0), (void 0), (void 0), (void 0), false, t9, t8, t7, t10);
  t11.HashableObject$0();
  t11.FrameworkObject$0();
  t11.FrameworkElement$0();
  t11.Control$0();
  t11.DropDownList$0();
  return t11;
};

$.Thickness$1 = function(uniformThickness) {
  var t0 = new $.Thickness(uniformThickness, uniformThickness, uniformThickness, uniformThickness);
  t0.Thickness$1(uniformThickness);
  return t0;
};

$.RadioButton$0 = function() {
  var t0 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t0, ({T: 'EventArgs'}));
  var t1 = $.HashMapImplementation$0();
  var t2 = $.HashMapImplementation$0();
  var t3 = $.HashMapImplementation$0();
  var t4 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t4, ({T: 'EventArgs'}));
  var t5 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t5, ({T: 'EventArgs'}));
  var t6 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t6, ({T: 'AttachedPropertyChangedEventArgs'}));
  var t7 = $.HashMapImplementation$0();
  var t8 = $.List((void 0));
  $.setRuntimeTypeInfo(t8, ({E: 'Binding'}));
  var t9 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t9, ({E: 'FrameworkProperty'}));
  var t10 = $._hashNum;
  $._hashNum = $.add(t10, 1);
  var t11 = new $.RadioButton(t0, (void 0), (void 0), false, false, false, (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), t2, t1, (void 0), (void 0), (void 0), false, (void 0), t6, (void 0), t5, t4, t3, (void 0), false, (void 0), (void 0), (void 0), (void 0), false, t9, t8, t7, t10);
  t11.HashableObject$0();
  t11.FrameworkObject$0();
  t11.FrameworkElement$0();
  t11.Control$0();
  t11.RadioButton$0();
  return t11;
};

$.getAttachedValue = function(element, property) {
  if ($.eqNullB(property)) {
    return;
  }
  var aDepInfo = $.index($.buckshot().get$_lib2_attachedProperties(), property);
  if (aDepInfo.containsKey$1(element) === true) {
    var t0 = $.index(aDepInfo, element);
  } else {
    t0 = (void 0);
  }
  return t0;
};

$.CheckBox$0 = function() {
  var t0 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t0, ({T: 'EventArgs'}));
  var t1 = $.HashMapImplementation$0();
  var t2 = $.HashMapImplementation$0();
  var t3 = $.HashMapImplementation$0();
  var t4 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t4, ({T: 'EventArgs'}));
  var t5 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t5, ({T: 'EventArgs'}));
  var t6 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t6, ({T: 'AttachedPropertyChangedEventArgs'}));
  var t7 = $.HashMapImplementation$0();
  var t8 = $.List((void 0));
  $.setRuntimeTypeInfo(t8, ({E: 'Binding'}));
  var t9 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t9, ({E: 'FrameworkProperty'}));
  var t10 = $._hashNum;
  $._hashNum = $.add(t10, 1);
  var t11 = new $.CheckBox(t0, (void 0), (void 0), false, false, false, (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), t2, t1, (void 0), (void 0), (void 0), false, (void 0), t6, (void 0), t5, t4, t3, (void 0), false, (void 0), (void 0), (void 0), (void 0), false, t9, t8, t7, t10);
  t11.HashableObject$0();
  t11.FrameworkObject$0();
  t11.FrameworkElement$0();
  t11.Control$0();
  t11.CheckBox$0();
  return t11;
};

$.compileAnimation = function(anim) {
  var t0 = ({});
  t0.anim_8 = anim;
  var t1 = $.eqNullB(t0.anim_8.get$_lib2_cachedAnimation());
  var t2 = !t1;
  if (t1) {
    t2 = $.eqNullB(t0.anim_8.get$keyFrames());
  }
  if (t2 || $.eqB($.get$length(t0.anim_8.get$keyFrames()), 0)) {
    return;
  }
  $.sortKeyFrames(t0.anim_8.get$keyFrames());
  if ($.ltB($.index(t0.anim_8.get$keyFrames(), 0).get$time(), 0)) {
    throw $.captureStackTrace($.CTC206);
  }
  $.computeKeyFramePercentages(t0.anim_8.get$keyFrames());
  var animHash = $.HashMapImplementation$0();
  $.forEach(t0.anim_8.get$keyFrames(), new $.Closure169(t0, animHash));
  t0.compiledCSS_9 = $.StringBufferImpl$1('');
  animHash.forEach$1(new $.Closure170(t0));
  var t3 = $.toString(t0.compiledCSS_9);
  t0.anim_8.set$_lib2_cachedAnimation(t3);
};

$.contains$2 = function(receiver, other, startIndex) {
  if (!(typeof receiver === 'string')) {
    return receiver.contains$2(other, startIndex);
  }
  $.checkNull(other);
  return $.stringContainsUnchecked(receiver, other, startIndex);
};

$.setColumn = function(element, column) {
  if ($.eqNullB(element)) {
    return;
  }
  var column0 = column;
  if ($.ltB(column, 0)) {
    column0 = 0;
  }
  if ($.eqNullB($.columnProperty)) {
    $.columnProperty = $.AttachedFrameworkProperty$2('column', new $.Closure162());
  }
  $.setAttachedValue(element, $.columnProperty, column0);
};

$.IndexOutOfRangeException$1 = function(_index) {
  return new $.IndexOutOfRangeException(_index);
};

$._lib5_TextTrackEventsImpl$1 = function(_ptr) {
  return new $._TextTrackEventsImpl(_ptr);
};

$.EventHandlerReference$1 = function(handler) {
  var t0 = $._hashNum;
  $._hashNum = $.add(t0, 1);
  var t1 = new $.EventHandlerReference(handler, t0);
  t1.HashableObject$0();
  return t1;
};

$._lib5_BatteryManagerEventsImpl$1 = function(_ptr) {
  return new $._BatteryManagerEventsImpl(_ptr);
};

$._lib5_ElementRectImpl$1 = function(element) {
  var t0 = $._lib5_SimpleClientRect$4(element.get$$dom_clientLeft(), element.get$$dom_clientTop(), element.get$$dom_clientWidth(), element.get$$dom_clientHeight());
  var t1 = $._lib5_SimpleClientRect$4(element.get$$dom_offsetLeft(), element.get$$dom_offsetTop(), element.get$$dom_offsetWidth(), element.get$$dom_offsetHeight());
  var t2 = $._lib5_SimpleClientRect$4(element.get$$dom_scrollLeft(), element.get$$dom_scrollTop(), element.get$$dom_scrollWidth(), element.get$$dom_scrollHeight());
  var t3 = element.$dom_getBoundingClientRect$0();
  return new $._ElementRectImpl(element.$dom_getClientRects$0(), t3, t2, t1, t0);
};

$.removeLast = function(receiver) {
  if ($.isJsArray(receiver) === true) {
    $.checkGrowable(receiver, 'removeLast');
    if ($.get$length(receiver) === 0) {
      throw $.captureStackTrace($.IndexOutOfRangeException$1(-1));
    }
    return receiver.pop();
  }
  return receiver.removeLast$0();
};

$.MeasurementChangedEventArgs$2 = function(oldMeasurement, newMeasurement) {
  var t0 = $.HashMapImplementation$0();
  var t1 = $.List((void 0));
  $.setRuntimeTypeInfo(t1, ({E: 'Binding'}));
  var t2 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t2, ({E: 'FrameworkProperty'}));
  var t3 = $._hashNum;
  $._hashNum = $.add(t3, 1);
  var t4 = new $.MeasurementChangedEventArgs(newMeasurement, oldMeasurement, t2, t1, t0, t3);
  t4.HashableObject$0();
  return t4;
};

$._lib5_WebSocketEventsImpl$1 = function(_ptr) {
  return new $._WebSocketEventsImpl(_ptr);
};

$.collectionToString = function(c) {
  var result = $.StringBufferImpl$1('');
  $._emitCollection(c, result, $.List((void 0)));
  return result.toString$0();
};

$.MetaInfo$3 = function(tag, tags, set) {
  return new $.MetaInfo(set, tags, tag);
};

$._lib5_MediaStreamEventsImpl$1 = function(_ptr) {
  return new $._MediaStreamEventsImpl(_ptr);
};

$.XmlCollection$_from$1 = function(list) {
  var t0 = $.List((void 0));
  $.setRuntimeTypeInfo(t0, ({E: 'E'}));
  var t1 = new $.XmlCollection(t0);
  t1.XmlCollection$_from$1(list);
  return t1;
};

$.DropDownListItem$0 = function() {
  var t0 = $.HashMapImplementation$0();
  var t1 = $.List((void 0));
  $.setRuntimeTypeInfo(t1, ({E: 'Binding'}));
  var t2 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t2, ({E: 'FrameworkProperty'}));
  var t3 = $._hashNum;
  $._hashNum = $.add(t3, 1);
  var t4 = new $.DropDownListItem((void 0), (void 0), t2, t1, t0, t3);
  t4.HashableObject$0();
  t4.DropDownListItem$0();
  return t4;
};

$.Thickness$specified$4 = function(top$, right, bottom, left) {
  var t0 = new $.Thickness(bottom, right, top$, left);
  t0.Thickness$specified$4(top$, right, bottom, left);
  return t0;
};

$.setHorizontalFlexBoxAlignment = function(element, alignment) {
  $0:{
    if ($.CTC155 === alignment) {
      element.get$_lib2_component().get$style().set$flexPack('start');
      break $0;
    } else {
      if ($.CTC156 === alignment) {
        element.get$_lib2_component().get$style().set$flexPack('end');
        break $0;
      } else {
        if ($.CTC157 === alignment) {
          element.get$_lib2_component().get$style().set$flexPack('center');
          break $0;
        } else {
          if ($.CTC150 === alignment) {
            element.get$_lib2_component().get$style().set$flexPack('start');
            break $0;
          }
        }
      }
    }
  }
};

$.Slider$0 = function() {
  var t0 = $.HashMapImplementation$0();
  var t1 = $.HashMapImplementation$0();
  var t2 = $.HashMapImplementation$0();
  var t3 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t3, ({T: 'EventArgs'}));
  var t4 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t4, ({T: 'EventArgs'}));
  var t5 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t5, ({T: 'AttachedPropertyChangedEventArgs'}));
  var t6 = $.HashMapImplementation$0();
  var t7 = $.List((void 0));
  $.setRuntimeTypeInfo(t7, ({E: 'Binding'}));
  var t8 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t8, ({E: 'FrameworkProperty'}));
  var t9 = $._hashNum;
  $._hashNum = $.add(t9, 1);
  var t10 = new $.Slider((void 0), (void 0), (void 0), (void 0), false, false, false, (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), t1, t0, (void 0), (void 0), (void 0), false, (void 0), t5, (void 0), t4, t3, t2, (void 0), false, (void 0), (void 0), (void 0), (void 0), false, t8, t7, t6, t9);
  t10.HashableObject$0();
  t10.FrameworkObject$0();
  t10.FrameworkElement$0();
  t10.Control$0();
  t10.Slider$0();
  return t10;
};

$._firstProbe = function(hashCode, length$) {
  return $.and(hashCode, $.sub(length$, 1));
};

$.appendBuckshotClass = function(element, classToAppend) {
  $.appendClass(element, $.add('buckshot_', classToAppend));
};

$.set$length = function(receiver, newLength) {
  if ($.isJsArray(receiver) === true) {
    $.checkNull(newLength);
    if (!((typeof newLength === 'number') && (newLength === (newLength | 0)))) {
      throw $.captureStackTrace($.IllegalArgumentException$1(newLength));
    }
    if (newLength < 0) {
      throw $.captureStackTrace($.IndexOutOfRangeException$1(newLength));
    }
    $.checkGrowable(receiver, 'set length');
    receiver.length = newLength;
  } else {
    receiver.set$length(newLength);
  }
  return newLength;
};

$.TextBlock$0 = function() {
  var t0 = $.HashMapImplementation$0();
  var t1 = $.HashMapImplementation$0();
  var t2 = $.HashMapImplementation$0();
  var t3 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t3, ({T: 'EventArgs'}));
  var t4 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t4, ({T: 'EventArgs'}));
  var t5 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t5, ({T: 'AttachedPropertyChangedEventArgs'}));
  var t6 = $.HashMapImplementation$0();
  var t7 = $.List((void 0));
  $.setRuntimeTypeInfo(t7, ({E: 'Binding'}));
  var t8 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t8, ({E: 'FrameworkProperty'}));
  var t9 = $._hashNum;
  $._hashNum = $.add(t9, 1);
  var t10 = new $.TextBlock((void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), t1, t0, (void 0), (void 0), (void 0), false, (void 0), t5, (void 0), t4, t3, t2, (void 0), false, (void 0), (void 0), (void 0), (void 0), false, t8, t7, t6, t9);
  t10.HashableObject$0();
  t10.FrameworkObject$0();
  t10.FrameworkElement$0();
  t10.TextBlock$0();
  return t10;
};

$.ioore = function(index) {
  throw $.captureStackTrace($.IndexOutOfRangeException$1(index));
};

$.typeNameInFirefox = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if ($.eqB(name$, 'Window')) {
    return 'DOMWindow';
  }
  if ($.eqB(name$, 'Document')) {
    return 'HTMLDocument';
  }
  if ($.eqB(name$, 'XMLDocument')) {
    return 'Document';
  }
  if ($.eqB(name$, 'WorkerMessageEvent')) {
    return 'MessageEvent';
  }
  return name$;
};

$.BindingData$3 = function(dataContextPath, converter, bindingMode) {
  return new $.BindingData(bindingMode, converter, dataContextPath);
};

$.hashCode = function(receiver) {
  if (typeof receiver === 'number') {
    return receiver & 0x1FFFFFFF;
  }
  if (!(typeof receiver === 'string')) {
    return receiver.hashCode$0();
  }
  var length$ = (receiver.length);
  for (var hash = 0, i = 0; i < length$; i = i0) {
    var hash0 = 536870911 & hash + (receiver.charCodeAt(i)) >>> 0;
    var hash1 = 536870911 & hash0 + (524287 & hash0 >>> 0 << 10) >>> 0;
    hash = hash1 ^ $.shr(hash1, 6) >>> 0;
    var i0 = i + 1;
  }
  var hash2 = 536870911 & hash + (67108863 & hash >>> 0 << 3) >>> 0;
  var hash3 = hash2 ^ $.shr(hash2, 11) >>> 0;
  return 536870911 & hash3 + (16383 & hash3 >>> 0 << 15) >>> 0;
};

$.makeLiteralMap = function(keyValuePairs) {
  var iterator = $.iterator(keyValuePairs);
  var result = $.LinkedHashMapImplementation$0();
  for (; iterator.hasNext$0() === true; ) {
    result.operator$indexSet$2(iterator.next$0(), iterator.next$0());
  }
  return result;
};

$.startsWith = function(receiver, other) {
  if (!(typeof receiver === 'string')) {
    return receiver.startsWith$1(other);
  }
  $.checkString(other);
  var length$ = $.get$length(other);
  if ($.gtB(length$, receiver.length)) {
    return false;
  }
  return other == receiver.substring(0, length$);
};

$.le = function(a, b) {
  if ($.checkNumbers(a, b) === true) {
    return a <= b;
  }
  return a.operator$le$1(b);
};

$.toStringForNativeObject = function(obj) {
  return 'Instance of ' + $.stringToString($.getTypeNameOf(obj));
};

$._lib5_MessagePortEventsImpl$1 = function(_ptr) {
  return new $._MessagePortEventsImpl(_ptr);
};

$._document = function() {
  return document;;
};

$.getFunctionForTypeNameOf = function() {
  if (!((typeof(navigator)) === 'object')) {
    return $.typeNameInChrome;
  }
  var userAgent = (navigator.userAgent);
  if ($.contains$1(userAgent, $.CTC250) === true) {
    return $.typeNameInChrome;
  } else {
    if ($.contains$1(userAgent, 'Firefox') === true) {
      return $.typeNameInFirefox;
    } else {
      if ($.contains$1(userAgent, 'MSIE') === true) {
        return $.typeNameInIE;
      } else {
        return $.constructorNameFallback;
      }
    }
  }
};

$._lib5_ElementEventsImpl$1 = function(_ptr) {
  return new $._ElementEventsImpl(_ptr);
};

$.parseDouble = function(str) {
  return $.parseDouble2(str);
};

$.parseDouble2 = function(str) {
  $.checkString(str);
  var ret = (parseFloat(str));
  var ret0 = ret;
  if (ret === 0 && ($.startsWith(str, '0x') === true || $.startsWith(str, '0X') === true)) {
    ret0 = (parseInt(str));
  }
  if ($.isNaN(ret0) === true && !$.eqB(str, 'NaN') && !$.eqB(str, '-NaN')) {
    throw $.captureStackTrace($.BadNumberFormatException$1(str));
  }
  return ret0;
};

$.List = function(length$) {
  return $.newList(length$);
};

$.getTop = function(element) {
  if ($.eqNullB(element)) {
    return 0;
  }
  var value = $.getAttachedValue(element, $.topProperty);
  if ($.eqNullB($.topProperty) || $.eqNullB(value)) {
    $.setTop(element, 0);
  }
  return $.getAttachedValue(element, $.topProperty);
};

$._doSort = function(a, left, right, compare) {
  if ($.leB($.sub(right, left), 32)) {
    $.insertionSort_(a, left, right, compare);
  } else {
    $._dualPivotQuicksort(a, left, right, compare);
  }
};

$.indexOf$1 = function(receiver, element) {
  if ($.isJsArray(receiver) === true || typeof receiver === 'string') {
    return $.indexOf$2(receiver, element, 0);
  }
  return receiver.indexOf$1(element);
};

$.CollectionPresenter$0 = function() {
  var t0 = $.BuckshotTemplateProvider$0();
  var t1 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t1, ({T: 'ItemCreatedEventArgs'}));
  var t2 = $.HashMapImplementation$0();
  var t3 = $.HashMapImplementation$0();
  var t4 = $.HashMapImplementation$0();
  var t5 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t5, ({T: 'EventArgs'}));
  var t6 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t6, ({T: 'EventArgs'}));
  var t7 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t7, ({T: 'AttachedPropertyChangedEventArgs'}));
  var t8 = $.HashMapImplementation$0();
  var t9 = $.List((void 0));
  $.setRuntimeTypeInfo(t9, ({E: 'Binding'}));
  var t10 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t10, ({E: 'FrameworkProperty'}));
  var t11 = $._hashNum;
  $._hashNum = $.add(t11, 1);
  var t12 = new $.CollectionPresenter(t0, t1, (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), t3, t2, (void 0), (void 0), (void 0), false, (void 0), t7, (void 0), t6, t5, t4, (void 0), false, (void 0), (void 0), (void 0), (void 0), false, t10, t9, t8, t11);
  t12.HashableObject$0();
  t12.FrameworkObject$0();
  t12.FrameworkElement$0();
  t12.CollectionPresenter$0();
  return t12;
};

$.StringBufferImpl$1 = function(content$) {
  var t0 = new $.StringBufferImpl((void 0), (void 0));
  t0.StringBufferImpl$1(content$);
  return t0;
};

$.HashMapImplementation$0 = function() {
  var t0 = new $.HashMapImplementation((void 0), (void 0), (void 0), (void 0), (void 0));
  t0.HashMapImplementation$0();
  return t0;
};

$.substring$1 = function(receiver, startIndex) {
  if (!(typeof receiver === 'string')) {
    return receiver.substring$1(startIndex);
  }
  return $.substring$2(receiver, startIndex, (void 0));
};

$.Line$0 = function() {
  var t0 = $.HashMapImplementation$0();
  var t1 = $.HashMapImplementation$0();
  var t2 = $.HashMapImplementation$0();
  var t3 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t3, ({T: 'EventArgs'}));
  var t4 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t4, ({T: 'EventArgs'}));
  var t5 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t5, ({T: 'AttachedPropertyChangedEventArgs'}));
  var t6 = $.HashMapImplementation$0();
  var t7 = $.List((void 0));
  $.setRuntimeTypeInfo(t7, ({E: 'Binding'}));
  var t8 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t8, ({E: 'FrameworkProperty'}));
  var t9 = $._hashNum;
  $._hashNum = $.add(t9, 1);
  var t10 = new $.Line((void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), t1, t0, (void 0), (void 0), (void 0), false, (void 0), t5, (void 0), t4, t3, t2, (void 0), false, (void 0), (void 0), (void 0), (void 0), false, t8, t7, t6, t9);
  t10.HashableObject$0();
  t10.FrameworkObject$0();
  t10.FrameworkElement$0();
  t10.Shape$0();
  t10.Line$0();
  return t10;
};

$.Hyperlink$0 = function() {
  var t0 = $.HashMapImplementation$0();
  var t1 = $.HashMapImplementation$0();
  var t2 = $.HashMapImplementation$0();
  var t3 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t3, ({T: 'EventArgs'}));
  var t4 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t4, ({T: 'EventArgs'}));
  var t5 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t5, ({T: 'AttachedPropertyChangedEventArgs'}));
  var t6 = $.HashMapImplementation$0();
  var t7 = $.List((void 0));
  $.setRuntimeTypeInfo(t7, ({E: 'Binding'}));
  var t8 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t8, ({E: 'FrameworkProperty'}));
  var t9 = $._hashNum;
  $._hashNum = $.add(t9, 1);
  var t10 = new $.Hyperlink((void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), false, false, false, (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), (void 0), t1, t0, (void 0), (void 0), (void 0), false, (void 0), t5, (void 0), t4, t3, t2, (void 0), false, (void 0), (void 0), (void 0), (void 0), false, t8, t7, t6, t9);
  t10.HashableObject$0();
  t10.FrameworkObject$0();
  t10.FrameworkElement$0();
  t10.Control$0();
  t10.Hyperlink$0();
  return t10;
};

$.GridLength$0 = function() {
  var t0 = $.HashMapImplementation$0();
  var t1 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t1, ({T: 'EventArgs'}));
  var t2 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t2, ({T: 'EventArgs'}));
  var t3 = $._lib2_FrameworkEventImplementation$0();
  $.setRuntimeTypeInfo(t3, ({T: 'AttachedPropertyChangedEventArgs'}));
  var t4 = $.HashMapImplementation$0();
  var t5 = $.List((void 0));
  $.setRuntimeTypeInfo(t5, ({E: 'Binding'}));
  var t6 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t6, ({E: 'FrameworkProperty'}));
  var t7 = $._hashNum;
  $._hashNum = $.add(t7, 1);
  var t8 = new $.GridLength((void 0), (void 0), (void 0), false, (void 0), t3, (void 0), t2, t1, t0, (void 0), false, (void 0), (void 0), (void 0), (void 0), false, t6, t5, t4, t7);
  t8.HashableObject$0();
  t8.FrameworkObject$0();
  t8.GridLength$0();
  return t8;
};

$._lib5_SharedWorkerContextEventsImpl$1 = function(_ptr) {
  return new $._SharedWorkerContextEventsImpl(_ptr);
};

$._lib5_IDBVersionChangeRequestEventsImpl$1 = function(_ptr) {
  return new $._IDBVersionChangeRequestEventsImpl(_ptr);
};

$.indexOf2 = function(a, element, startIndex, endIndex) {
  if (typeof a !== 'string' && (typeof a !== 'object'||a.constructor !== Array)) return $.indexOf2$bailout(a, element, startIndex, endIndex,  0);
  if (typeof endIndex !== 'number') return $.indexOf2$bailout(a, element, startIndex, endIndex,  0);
  if ($.geB(startIndex, a.length)) {
    return -1;
  }
  var startIndex0 = startIndex;
  if ($.ltB(startIndex, 0)) {
    startIndex0 = 0;
  }
  if (typeof startIndex0 !== 'number') return $.indexOf2$bailout(a, element, startIndex, endIndex, 3, a, endIndex, startIndex0);
  for (var i = startIndex0; i < endIndex; i = i + 1) {
    if (i !== (i | 0)) throw $.iae(i);
    var t0 = a.length;
    if (i < 0 || i >= t0) throw $.ioore(i);
    if ($.eqB(a[i], element)) {
      return i;
    }
  }
  return -1;
};

$.XmlTokenizer$1 = function(_xml) {
  var t0 = $.DoubleLinkedQueue$0();
  $.setRuntimeTypeInfo(t0, ({E: '_XmlToken'}));
  var t1 = new $.XmlTokenizer(0, (void 0), _xml, t0);
  t1.XmlTokenizer$1(_xml);
  return t1;
};

$.FutureNotCompleteException$0 = function() {
  var t0 = new $.FutureNotCompleteException();
  t0.FutureNotCompleteException$0();
  return t0;
};

$.NoSuchMethodException$4 = function(_receiver, _functionName, _arguments, _existingArgumentNames) {
  return new $.NoSuchMethodException(_existingArgumentNames, _arguments, _functionName, _receiver);
};

$.lt = function(a, b) {
  if ($.checkNumbers(a, b) === true) {
    return a < b;
  }
  return a.operator$lt$1(b);
};

$._lib2_FrameworkEventImplementation$0 = function() {
  var t0 = $.List((void 0));
  $.setRuntimeTypeInfo(t0, ({E: 'EventHandlerReference'}));
  var t1 = $.HashMapImplementation$0();
  var t2 = $.List((void 0));
  $.setRuntimeTypeInfo(t2, ({E: 'Binding'}));
  var t3 = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(t3, ({E: 'FrameworkProperty'}));
  var t4 = $._hashNum;
  $._hashNum = $.add(t4, 1);
  var t5 = new $._FrameworkEventImplementation(t0, (void 0), (void 0), t3, t2, t1, t4);
  t5.HashableObject$0();
  return t5;
};

$.unwrapException = function(ex) {
  if ("dartException" in ex) {
    return ex.dartException;
  } else {
    if (ex instanceof TypeError) {
      var type = (ex.type);
      var name$ = $.index((ex.arguments), 0);
      if (type === 'property_not_function' || type === 'called_non_callable' || type === 'non_object_property_call' || type === 'non_object_property_load') {
        if (!(name$ === (void 0)) && $.startsWith(name$, '$call$') === true) {
          return $.ObjectNotClosureException$0();
        } else {
          return $.NullPointerException$2((void 0), $.CTC);
        }
      } else {
        if (type === 'undefined_method') {
          if (typeof name$ === 'string' && $.startsWith(name$, '$call$') === true) {
            return $.ObjectNotClosureException$0();
          } else {
            return $.NoSuchMethodException$4('', name$, [], (void 0));
          }
        }
      }
    } else {
      if (ex instanceof RangeError) {
        if ($.contains$1((ex.message), 'call stack') === true) {
          return $.StackOverflowException$0();
        }
      }
    }
  }
  return ex;
};

$.XmlParser$_internal$2 = function(_xml, _withQuirks) {
  var t0 = $.DoubleLinkedQueue$0();
  $.setRuntimeTypeInfo(t0, ({E: 'XmlElement'}));
  return new $.XmlParser((void 0), _withQuirks, t0, _xml);
};

$.sort = function(receiver, compare) {
  if (!($.isJsArray(receiver) === true)) {
    return receiver.sort$1(compare);
  }
  $.checkMutable(receiver, 'sort');
  $.sort2(receiver, compare);
};

$.sub = function(a, b) {
  if ($.checkNumbers(a, b) === true) {
    return a - b;
  }
  return a.operator$sub$1(b);
};

$.copy$bailout = function(src, srcStart, dst, dstStart, count, state, env0, env1, env2, env3, env4) {
  switch (state) {
    case 1:
      t0 = env0;
      break;
    case 2:
      t0 = env0;
      t1 = env1;
      break;
    case 3:
      t0 = env0;
      t1 = env1;
      t2 = env2;
      break;
    case 4:
      t0 = env0;
      t1 = env1;
      t2 = env2;
      srcStart0 = env3;
      break;
    case 5:
      t0 = env0;
      t1 = env1;
      t2 = env2;
      srcStart0 = env3;
      dstStart0 = env4;
      break;
  }
  switch (state) {
    case 0:
    case 1:
      state = 0;
    case 2:
      state = 0;
    case 3:
      state = 0;
      var srcStart0 = srcStart;
      if (srcStart === (void 0)) {
        srcStart0 = 0;
      }
    case 4:
      state = 0;
      var dstStart0 = dstStart;
      if (dstStart === (void 0)) {
        dstStart0 = 0;
      }
    case 5:
      state = 0;
      if ($.ltB(srcStart0, dstStart0)) {
        var i = $.sub($.add(srcStart0, count), 1);
        var i0 = i;
        var j = $.sub($.add(dstStart0, count), 1);
        L0: while (true) {
          if (!$.geB(i0, srcStart0)) break L0;
          $.indexSet(dst, j, $.index(src, i0));
          var i1 = $.sub(i0, 1);
          i0 = i1;
          j = $.sub(j, 1);
        }
      } else {
        var i2 = srcStart0;
        var j0 = dstStart0;
        L1: while (true) {
          if (!$.ltB(i2, $.add(srcStart0, count))) break L1;
          $.indexSet(dst, j0, $.index(src, i2));
          var i3 = $.add(i2, 1);
          i2 = i3;
          j0 = $.add(j0, 1);
        }
      }
  }
};

$._space$bailout = function(amount, state, env0) {
  switch (state) {
    case 1:
      t0 = env0;
      break;
  }
  switch (state) {
    case 0:
    case 1:
      state = 0;
      var s = $.StringBufferImpl$1('');
      var i = 0;
      L0: while (true) {
        if (!$.ltB(i, amount)) break L0;
        s.add$1(' ');
        i = i + 1;
      }
      return s.toString$0();
  }
};

$.insertionSort_$bailout = function(a, left, right, compare, state, env0, env1, env2) {
  switch (state) {
    case 1:
      t0 = env0;
      break;
    case 2:
      t0 = env0;
      t1 = env1;
      break;
    case 3:
      t0 = env0;
      t1 = env1;
      t2 = env2;
      break;
  }
  switch (state) {
    case 0:
    case 1:
      state = 0;
    case 2:
      state = 0;
    case 3:
      state = 0;
      var i = $.add(left, 1);
      L0: while (true) {
        if (!$.leB(i, right)) break L0;
        var el = $.index(a, i);
        var j = i;
        L1: while (true) {
          if (!($.gtB(j, left) && $.gtB(compare.$call$2($.index(a, $.sub(j, 1)), el), 0))) break L1;
          $.indexSet(a, j, $.index(a, $.sub(j, 1)));
          j = $.sub(j, 1);
        }
        $.indexSet(a, j, el);
        i = $.add(i, 1);
      }
  }
};

$.stringReplaceAllUnchecked$bailout = function(receiver, from, to, state, env0) {
  switch (state) {
    case 1:
      t0 = env0;
      break;
  }
  switch (state) {
    case 0:
    case 1:
      state = 0;
      if (typeof from === 'string') {
        if (from === '') {
          if ($.eqB(receiver, '')) {
            return to;
          } else {
            var result = $.StringBufferImpl$1('');
            var length$ = $.get$length(receiver);
            result.add$1(to);
            var i = 0;
            L0: while (true) {
              if (!$.ltB(i, length$)) break L0;
              result.add$1($.index(receiver, i));
              result.add$1(to);
              i = i + 1;
            }
            return result.toString$0();
          }
        } else {
          return receiver.replace($.regExpMakeNative($.JSSyntaxRegExp$3((from.replace($.regExpMakeNative($.CTC208, true), "\\$&")), false, false), true), to);
        }
      } else {
        if (typeof from === 'object' && !!from.is$JSSyntaxRegExp) {
          return receiver.replace($.regExpMakeNative(from, true), to);
        } else {
          $.checkNull(from);
          throw $.captureStackTrace('StringImplementation.replaceAll(Pattern) UNIMPLEMENTED');
        }
      }
  }
};

$.indexOf2$bailout = function(a, element, startIndex, endIndex, state, env0, env1, env2) {
  switch (state) {
    case 1:
      t0 = env0;
      break;
    case 2:
      t0 = env0;
      t1 = env1;
      break;
    case 3:
      t0 = env0;
      t1 = env1;
      startIndex0 = env2;
      break;
  }
  switch (state) {
    case 0:
    case 1:
      state = 0;
    case 2:
      state = 0;
      if ($.geB(startIndex, $.get$length(a))) {
        return -1;
      }
      var startIndex0 = startIndex;
      if ($.ltB(startIndex, 0)) {
        startIndex0 = 0;
      }
    case 3:
      state = 0;
      var i = startIndex0;
      L0: while (true) {
        if (!$.ltB(i, endIndex)) break L0;
        if ($.eqB($.index(a, i), element)) {
          return i;
        }
        i = $.add(i, 1);
      }
      return -1;
  }
};

$.indexOf$bailout = function(a, element, startIndex, endIndex, state, env0, env1, env2) {
  switch (state) {
    case 1:
      t0 = env0;
      break;
    case 2:
      t0 = env0;
      t1 = env1;
      break;
    case 3:
      t0 = env0;
      t1 = env1;
      startIndex0 = env2;
      break;
  }
  switch (state) {
    case 0:
    case 1:
      state = 0;
    case 2:
      state = 0;
      if ($.geB(startIndex, $.get$length(a))) {
        return -1;
      }
      var startIndex0 = startIndex;
      if ($.ltB(startIndex, 0)) {
        startIndex0 = 0;
      }
    case 3:
      state = 0;
      var i = startIndex0;
      L0: while (true) {
        if (!$.ltB(i, endIndex)) break L0;
        if ($.eqB($.index(a, i), element)) {
          return i;
        }
        i = $.add(i, 1);
      }
      return -1;
  }
};

$._dualPivotQuicksort$bailout = function(a, left, right, compare, state, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10) {
  switch (state) {
    case 1:
      t0 = env0;
      break;
    case 2:
      el23 = env0;
      index1 = env1;
      index5 = env2;
      el43 = env3;
      t0 = env4;
      less = env5;
      break;
    case 3:
      less = env0;
      el23 = env1;
      index1 = env2;
      index5 = env3;
      el43 = env4;
      t0 = env5;
      great = env6;
      break;
    case 4:
      k = env0;
      great0 = env1;
      el23 = env2;
      t1 = env3;
      index1 = env4;
      ak = env5;
      index5 = env6;
      el43 = env7;
      less0 = env8;
      t0 = env9;
      comp = env10;
      break;
  }
  switch (state) {
    case 0:
    case 1:
      state = 0;
      $.assert($.gt($.sub(right, left), 32));
      var sixth = $.tdiv($.add($.sub(right, left), 1), 6);
      var index1 = $.add(left, sixth);
      var index5 = $.sub(right, sixth);
      var index3 = $.tdiv($.add(left, right), 2);
      var index2 = $.sub(index3, sixth);
      var index4 = $.add(index3, sixth);
      var el1 = $.index(a, index1);
      var el2 = $.index(a, index2);
      var el3 = $.index(a, index3);
      var el4 = $.index(a, index4);
      var el5 = $.index(a, index5);
      var el20 = el2;
      var el10 = el1;
      if ($.gtB(compare.$call$2(el1, el2), 0)) {
        el20 = el1;
        el10 = el2;
      }
      var el40 = el4;
      var el50 = el5;
      if ($.gtB(compare.$call$2(el4, el5), 0)) {
        el40 = el5;
        el50 = el4;
      }
      var el11 = el10;
      var el30 = el3;
      if ($.gtB(compare.$call$2(el10, el3), 0)) {
        el11 = el3;
        el30 = el10;
      }
      var el21 = el20;
      var el31 = el30;
      if ($.gtB(compare.$call$2(el20, el30), 0)) {
        el21 = el30;
        el31 = el20;
      }
      var el12 = el11;
      var el41 = el40;
      if ($.gtB(compare.$call$2(el11, el40), 0)) {
        el12 = el40;
        el41 = el11;
      }
      var el42 = el41;
      var el32 = el31;
      if ($.gtB(compare.$call$2(el31, el41), 0)) {
        el42 = el31;
        el32 = el41;
      }
      var el22 = el21;
      var el51 = el50;
      if ($.gtB(compare.$call$2(el21, el50), 0)) {
        el22 = el50;
        el51 = el21;
      }
      var el23 = el22;
      var el33 = el32;
      if ($.gtB(compare.$call$2(el22, el32), 0)) {
        el23 = el32;
        el33 = el22;
      }
      var el43 = el42;
      var el52 = el51;
      if ($.gtB(compare.$call$2(el42, el51), 0)) {
        el43 = el51;
        el52 = el42;
      }
      $.indexSet(a, index1, el12);
      $.indexSet(a, index3, el33);
      $.indexSet(a, index5, el52);
      $.indexSet(a, index2, $.index(a, left));
      $.indexSet(a, index4, $.index(a, right));
      var less = $.add(left, 1);
    case 2:
      state = 0;
      var great = $.sub(right, 1);
    case 3:
      state = 0;
      var t1 = $.eq(compare.$call$2(el23, el43), 0) === true;
    case 4:
      if (state == 4 || (state == 0 && t1)) {
        switch (state) {
          case 0:
            var great0 = great;
            var less0 = less;
            var k = less;
          case 4:
            L0: while (true) {
              switch (state) {
                case 0:
                  if (!$.leB(k, great0)) break L0;
                case 4:
                  c$0:{
                    switch (state) {
                      case 0:
                        var ak = $.index(a, k);
                        var comp = compare.$call$2(ak, el23);
                      case 4:
                        state = 0;
                        if ($.eqB(comp, 0)) {
                          break c$0;
                        }
                        if ($.ltB(comp, 0)) {
                          if (!$.eqB(k, less0)) {
                            $.indexSet(a, k, $.index(a, less0));
                            $.indexSet(a, less0, ak);
                          }
                          less0 = $.add(less0, 1);
                        } else {
                          var comp0 = comp;
                          var great1 = great0;
                          L1: while (true) {
                            great0 = great1;
                            if (!true) break L1;
                            c$1:{
                              var comp1 = compare.$call$2($.index(a, great1), el23);
                              if ($.gtB(comp1, 0)) {
                                comp0 = comp1;
                                great1 = $.sub(great1, 1);
                                break c$1;
                              } else {
                                if ($.ltB(comp1, 0)) {
                                  $.indexSet(a, k, $.index(a, less0));
                                  var less1 = $.add(less0, 1);
                                  $.indexSet(a, less0, $.index(a, great1));
                                  var great2 = $.sub(great1, 1);
                                  $.indexSet(a, great1, ak);
                                  great0 = great2;
                                  less0 = less1;
                                  break;
                                } else {
                                  $.indexSet(a, k, $.index(a, great1));
                                  var great3 = $.sub(great1, 1);
                                  $.indexSet(a, great1, ak);
                                  great0 = great3;
                                  break;
                                }
                              }
                            }
                          }
                        }
                    }
                  }
                  var k0 = $.add(k, 1);
                  k = k0;
              }
            }
            var great4 = great0;
            var less2 = less0;
        }
      } else {
        var less3 = less;
        var k1 = less;
        var great5 = great;
        L2: while (true) {
          if (!$.leB(k1, great5)) break L2;
          var ak0 = $.index(a, k1);
          if ($.ltB(compare.$call$2(ak0, el23), 0)) {
            if (!$.eqB(k1, less3)) {
              $.indexSet(a, k1, $.index(a, less3));
              $.indexSet(a, less3, ak0);
            }
            less3 = $.add(less3, 1);
          } else {
            if ($.gtB(compare.$call$2(ak0, el43), 0)) {
              var great6 = great5;
              L3: while (true) {
                great5 = great6;
                if (!true) break L3;
                c$1:{
                  if ($.gtB(compare.$call$2($.index(a, great6), el43), 0)) {
                    var great7 = $.sub(great6, 1);
                    if ($.ltB(great7, k1)) {
                      great5 = great7;
                      break;
                    }
                    great6 = great7;
                    break c$1;
                  } else {
                    if ($.ltB(compare.$call$2($.index(a, great6), el23), 0)) {
                      $.indexSet(a, k1, $.index(a, less3));
                      var less4 = $.add(less3, 1);
                      $.indexSet(a, less3, $.index(a, great6));
                      var great8 = $.sub(great6, 1);
                      $.indexSet(a, great6, ak0);
                      less3 = less4;
                      great5 = great8;
                    } else {
                      $.indexSet(a, k1, $.index(a, great6));
                      var great9 = $.sub(great6, 1);
                      $.indexSet(a, great6, ak0);
                      great5 = great9;
                    }
                    break;
                  }
                }
              }
            }
          }
          var k2 = $.add(k1, 1);
          k1 = k2;
        }
        great4 = great5;
        less2 = less3;
      }
      $.indexSet(a, left, $.index(a, $.sub(less2, 1)));
      $.indexSet(a, $.sub(less2, 1), el23);
      $.indexSet(a, right, $.index(a, $.add(great4, 1)));
      $.indexSet(a, $.add(great4, 1), el43);
      $._doSort(a, left, $.sub(less2, 2), compare);
      $._doSort(a, $.add(great4, 2), right, compare);
      if (t1) {
        return;
      }
      if ($.ltB(less2, index1) && $.gtB(great4, index5)) {
        var less5 = less2;
        L4: while (true) {
          if (!$.eqB(compare.$call$2($.index(a, less5), el23), 0)) break L4;
          less5 = $.add(less5, 1);
        }
        var great10 = great4;
        L5: while (true) {
          if (!$.eqB(compare.$call$2($.index(a, great10), el43), 0)) break L5;
          great10 = $.sub(great10, 1);
        }
        var great11 = great10;
        var less6 = less5;
        var k3 = less5;
        L6: while (true) {
          if (!$.leB(k3, great11)) break L6;
          var ak1 = $.index(a, k3);
          if ($.eqB(compare.$call$2(ak1, el23), 0)) {
            if (!$.eqB(k3, less6)) {
              $.indexSet(a, k3, $.index(a, less6));
              $.indexSet(a, less6, ak1);
            }
            less6 = $.add(less6, 1);
          } else {
            if ($.eqB(compare.$call$2(ak1, el43), 0)) {
              var great12 = great11;
              L7: while (true) {
                great11 = great12;
                if (!true) break L7;
                c$1:{
                  if ($.eqB(compare.$call$2($.index(a, great12), el43), 0)) {
                    var great13 = $.sub(great12, 1);
                    if ($.ltB(great13, k3)) {
                      great11 = great13;
                      break;
                    }
                    great12 = great13;
                    break c$1;
                  } else {
                    if ($.ltB(compare.$call$2($.index(a, great12), el23), 0)) {
                      $.indexSet(a, k3, $.index(a, less6));
                      var less7 = $.add(less6, 1);
                      $.indexSet(a, less6, $.index(a, great12));
                      var great14 = $.sub(great12, 1);
                      $.indexSet(a, great12, ak1);
                      great11 = great14;
                      less6 = less7;
                    } else {
                      $.indexSet(a, k3, $.index(a, great12));
                      var great15 = $.sub(great12, 1);
                      $.indexSet(a, great12, ak1);
                      great11 = great15;
                    }
                    break;
                  }
                }
              }
            }
          }
          var k4 = $.add(k3, 1);
          k3 = k4;
        }
        $._doSort(a, less6, great11, compare);
      } else {
        $._doSort(a, less2, great4, compare);
      }
  }
};

$.buildDynamicMetadata$bailout = function(inputTable, state, env0, env1, env2, env3, env4, env5, env6) {
  switch (state) {
    case 1:
      t0 = env0;
      break;
    case 2:
      t0 = env0;
      result = env1;
      tag = env2;
      i = env3;
      tags = env4;
      set = env5;
      tagNames = env6;
      break;
  }
  switch (state) {
    case 0:
    case 1:
      state = 0;
      var result = [];
      var i = 0;
    case 2:
      L0: while (true) {
        switch (state) {
          case 0:
            if (!$.ltB(i, $.get$length(inputTable))) break L0;
            var tag = $.index($.index(inputTable, i), 0);
            var tags = $.index($.index(inputTable, i), 1);
            var set = $.HashSetImplementation$0();
            $.setRuntimeTypeInfo(set, ({E: 'String'}));
            var tagNames = $.split(tags, '|');
          case 2:
            state = 0;
            var j = 0;
            L1: while (true) {
              if (!$.ltB(j, $.get$length(tagNames))) break L1;
              set.add$1($.index(tagNames, j));
              j = j + 1;
            }
            $.add$1(result, $.MetaInfo$3(tag, tags, set));
            i = i + 1;
        }
      }
      return result;
  }
};

$.allMatchesInStringUnchecked$bailout = function(needle, haystack, state, env0, env1, env2) {
  switch (state) {
    case 1:
      length$ = env0;
      result = env1;
      patternLength = env2;
      break;
  }
  switch (state) {
    case 0:
      var result = $.List((void 0));
      $.setRuntimeTypeInfo(result, ({E: 'Match'}));
      var length$ = $.get$length(haystack);
      var patternLength = $.get$length(needle);
    case 1:
      state = 0;
      var startIndex = 0;
      L0: while (true) {
        if (!true) break L0;
        var position = $.indexOf$2(haystack, needle, startIndex);
        if ($.eqB(position, -1)) {
          break;
        }
        result.push($.StringMatch$3(position, haystack, needle));
        var endIndex = $.add(position, patternLength);
        if ($.eqB(endIndex, length$)) {
          break;
        } else {
          if ($.eqB(position, endIndex)) {
            startIndex = $.add(startIndex, 1);
          } else {
            startIndex = endIndex;
          }
        }
      }
      return result;
  }
};

$.getRange2$bailout = function(a, start, length$, accumulator, state, env0, env1) {
  switch (state) {
    case 1:
      t0 = env0;
      break;
    case 2:
      t0 = env0;
      i = env1;
      break;
  }
  switch (state) {
    case 0:
    case 1:
      state = 0;
    case 2:
      state = 0;
      if ($.ltB(length$, 0)) {
        throw $.captureStackTrace($.IllegalArgumentException$1('length'));
      }
      if ($.ltB(start, 0)) {
        throw $.captureStackTrace($.IndexOutOfRangeException$1(start));
      }
      var end = $.add(start, length$);
      if ($.gtB(end, $.get$length(a))) {
        throw $.captureStackTrace($.IndexOutOfRangeException$1(end));
      }
      var i0 = start;
      L0: while (true) {
        if (!$.ltB(i0, end)) break L0;
        $.add$1(accumulator, $.index(a, i0));
        i0 = $.add(i0, 1);
      }
      return accumulator;
  }
};

$.computeKeyFramePercentages$bailout = function(keyFrames, state, env0, env1) {
  switch (state) {
    case 1:
      t0 = env0;
      break;
    case 2:
      t0 = env0;
      span = env1;
      break;
  }
  switch (state) {
    case 0:
    case 1:
      state = 0;
      var span = $.last(keyFrames).get$time();
    case 2:
      state = 0;
      var i = 0;
      L0: while (true) {
        if (!$.ltB(i, $.get$length(keyFrames))) break L0;
        var t1 = $.mul($.div($.index(keyFrames, i).get$time(), span), 100);
        $.index(keyFrames, i).set$_lib2_percentage(t1);
        i = i + 1;
      }
  }
};

$.dynamicBind.$call$4 = $.dynamicBind;
$.setRowSpan.$call$2 = $.setRowSpan;
$.typeNameInIE.$call$1 = $.typeNameInIE;
$.setLeft.$call$2 = $.setLeft;
$.setColumnSpan.$call$2 = $.setColumnSpan;
$.typeNameInFirefox.$call$1 = $.typeNameInFirefox;
$.constructorNameFallback.$call$1 = $.constructorNameFallback;
$.setTop.$call$2 = $.setTop;
$.setRow.$call$2 = $.setRow;
$.setColumn.$call$2 = $.setColumn;
$.throwNoSuchMethod.$call$3 = $.throwNoSuchMethod;
$.invokeClosure.$call$5 = $.invokeClosure;
$.toStringWrapper.$call$0 = $.toStringWrapper;
$.typeNameInChrome.$call$1 = $.typeNameInChrome;
Isolate.$finishClasses();
Isolate.makeConstantList = function(list) {
  list.immutable$list = true;
  list.fixed$length = true;
  return list;
};
$.CTC = Isolate.makeConstantList([]);
$.CTC166 = new Isolate.$isolateProperties.ConstantMap(Isolate.$isolateProperties.CTC, {}, 0);
$.CTC7 = new Isolate.$isolateProperties.StringToBooleanConverter();
$.CTC70 = new Isolate.$isolateProperties.Colors('Lavender', '#e6e6fa');
$.CTC118 = new Isolate.$isolateProperties.Colors('PeachPuff', '#ffdab9');
$.CTC30 = new Isolate.$isolateProperties.Colors('Crimson', '#dc143c');
$.CTC186 = new Isolate.$isolateProperties.Cursors('se-resize');
$.CTC138 = new Isolate.$isolateProperties.Colors('SpringGreen', '#00ff7f');
$.CTC251 = new Isolate.$isolateProperties.Object();
$.CTC35 = new Isolate.$isolateProperties.Colors('DarkGray', '#A9A9A9');
$.CTC93 = new Isolate.$isolateProperties.Colors('MediumBlue', '#0000cd');
$.CTC150 = new Isolate.$isolateProperties.HorizontalAlignment('stretch');
$.CTC238 = Isolate.makeConstantList([60, 62, 33, 58, 47, 34, 39, 61]);
$.CTC250 = new Isolate.$isolateProperties.JSSyntaxRegExp(false, false, 'Chrome|DumpRenderTree');
$.CTC172 = new Isolate.$isolateProperties.StringToHorizontalAlignmentConverter();
$.CTC29 = new Isolate.$isolateProperties.Colors('Cornsilk', '#fff8dc');
$.CTC86 = new Isolate.$isolateProperties.Colors('LightYellow', '#ffffe0');
$.CTC190 = new Isolate.$isolateProperties.Cursors('inherit');
$.CTC68 = new Isolate.$isolateProperties.Colors('Ivory', '#fffff0');
$.CTC72 = new Isolate.$isolateProperties.Colors('LawnGreen', '#7cfc00');
$.CTC122 = new Isolate.$isolateProperties.Colors('PowderBlue', '#b0e0e6');
$.CTC231 = Isolate.makeConstantList(['<!--', '<![CDATA[', '<?', '</']);
$.CTC22 = new Isolate.$isolateProperties.Colors('Brown', '#a52a2a');
$.CTC178 = new Isolate.$isolateProperties.Cursors('help');
$.CTC115 = new Isolate.$isolateProperties.Colors('PaleTurquoise', '#afeeee');
$.CTC95 = new Isolate.$isolateProperties.Colors('MediumPurple', '#9370db');
$.CTC131 = new Isolate.$isolateProperties.Colors('SeaShell', '#fff5ee');
$.CTC219 = new Isolate.$isolateProperties.XmlException(0, '', 'Unexpected end of file.');
$.CTC17 = new Isolate.$isolateProperties.Colors('Bisque', '#FFE4C4');
$.CTC204 = new Isolate.$isolateProperties.InputTypes('week');
$.CTC242 = new Isolate.$isolateProperties.LinearGradientDirection('top');
$.CTC232 = new Isolate.$isolateProperties.XmlException(0, '', 'End comment tag not found.');
$.CTC247 = Isolate.makeConstantList(['body', 'head', 'caption', 'td', 'colgroup', 'col', 'tr', 'tbody', 'tfoot', 'thead', 'track']);
$.CTC208 = new Isolate.$isolateProperties.JSSyntaxRegExp(false, false, '[-[\\]{}()*+?.,\\\\^$|#\\s]');
$.CTC246 = new Isolate.$isolateProperties.JSSyntaxRegExp(false, false, '<(\\w+)');
$.CTC237 = new Isolate.$isolateProperties.XmlException(0, '', 'Nested PI not allowed.');
$.CTC148 = new Isolate.$isolateProperties.Colors('Yellow', '#ffff00');
$.CTC74 = new Isolate.$isolateProperties.Colors('LightBlue', '#add8e6');
$.CTC105 = new Isolate.$isolateProperties.Colors('NavajoWhite', '#ffdead');
$.CTC46 = new Isolate.$isolateProperties.Colors('DarkSlateGray', '#2f4f4f');
$.CTC125 = new Isolate.$isolateProperties.Colors('RosyBrown', '#bc8f8f');
$.CTC179 = new Isolate.$isolateProperties.Cursors('move');
$.CTC139 = new Isolate.$isolateProperties.Colors('SteelBlue', '#4682b4');
$.CTC236 = new Isolate.$isolateProperties.XmlException(0, '', 'End PI tag not found.');
$.CTC8 = new Isolate.$isolateProperties.BuckshotException();
$.CTC92 = new Isolate.$isolateProperties.Colors('MediumAquamarine', '#66cdaa');
$.CTC123 = new Isolate.$isolateProperties.Colors('Purple', '#800080');
$.CTC14 = new Isolate.$isolateProperties.Colors('Aquamarine', '#7FFFD4');
$.CTC233 = new Isolate.$isolateProperties.XmlException(0, '', 'Nested comments not allowed.');
$.CTC181 = new Isolate.$isolateProperties.Cursors('ne-resize');
$.CTC227 = new Isolate.$isolateProperties.ExceptionImplementation('Unexpected end of file.');
$.CTC132 = new Isolate.$isolateProperties.Colors('Sienna', '#a0522d');
$.CTC61 = new Isolate.$isolateProperties.Colors('Gray', '#808080');
$.CTC140 = new Isolate.$isolateProperties.Colors('Tan', '#d2b48c');
$.CTC229 = new Isolate.$isolateProperties.XmlException(0, '', 'PI nodes are not supported in the top level.');
$.CTC162 = new Isolate.$isolateProperties.FrameworkPropertyResolutionException('Unable to resolve further.  Remaining properties in the chain while current property value is not a BuckshotObject');
$.CTC153 = new Isolate.$isolateProperties.VerticalAlignment('center');
$.CTC63 = new Isolate.$isolateProperties.Colors('GreenYellow', '#adff2f');
$.CTC171 = new Isolate.$isolateProperties.StringToCursorConverter();
$.CTC145 = new Isolate.$isolateProperties.Colors('Violet', '#ee82ee');
$.CTC110 = new Isolate.$isolateProperties.Colors('Orange', '#ffa500');
$.CTC64 = new Isolate.$isolateProperties.Colors('Honeydew', '#f0fff0');
$.CTC220 = new Isolate.$isolateProperties.XmlNodeType('Text');
$.CTC89 = new Isolate.$isolateProperties.Colors('Linen', '#faf0e6');
$.CTC137 = new Isolate.$isolateProperties.Colors('Snow', '#fffafa');
$.CTC228 = new Isolate.$isolateProperties.EmptyQueueException();
$.CTC185 = new Isolate.$isolateProperties.Cursors('s-resize');
$.CTC121 = new Isolate.$isolateProperties.Colors('Plum', '#dda0dd');
$.CTC188 = new Isolate.$isolateProperties.Cursors('text');
$.CTC15 = new Isolate.$isolateProperties.Colors('Azure', '#F0FFFF');
$.CTC158 = Isolate.makeConstantList(['', '-webkit-', '-moz-', '-o-', '-ms-']);
$.CTC218 = new Isolate.$isolateProperties.XmlException(0, '', 'Unexpected end of file.  Not all tags were closed.');
$.CTC199 = new Isolate.$isolateProperties.InputTypes('month');
$.CTC202 = new Isolate.$isolateProperties.InputTypes('time');
$.CTC27 = new Isolate.$isolateProperties.Colors('Coral', '#ff7f50');
$.CTC78 = new Isolate.$isolateProperties.Colors('LightGray', '#d3d3d3');
$.CTC198 = new Isolate.$isolateProperties.InputTypes('datetime');
$.CTC216 = new Isolate.$isolateProperties.XmlException(0, '', 'Nothing to parse.');
$.CTC18 = new Isolate.$isolateProperties.Colors('Black', '#000000');
$.CTC239 = new Isolate.$isolateProperties.LinearGradientDirection('left');
$.CTC235 = new Isolate.$isolateProperties.XmlException(0, '', 'Nested CDATA not allowed.');
$.CTC36 = new Isolate.$isolateProperties.Colors('DarkGreen', '#006400');
$.CTC51 = new Isolate.$isolateProperties.Colors('DimGray', '#696969');
$.CTC160 = new Isolate.$isolateProperties._DefaultConverter();
$.CTC155 = new Isolate.$isolateProperties.HorizontalAlignment('left');
$.CTC168 = new Isolate.$isolateProperties._SimpleClientRect(0, 0, 0, 0);
$.CTC169 = new Isolate.$isolateProperties.EmptyElementRect(Isolate.$isolateProperties.CTC, Isolate.$isolateProperties.CTC168, Isolate.$isolateProperties.CTC168, Isolate.$isolateProperties.CTC168, Isolate.$isolateProperties.CTC168);
$.CTC100 = new Isolate.$isolateProperties.Colors('MediumVioletRed', '#c71585');
$.CTC33 = new Isolate.$isolateProperties.Colors('DarkCyan', '#008b8b');
$.CTC20 = new Isolate.$isolateProperties.Colors('Blue', '#0000FF');
$.CTC37 = new Isolate.$isolateProperties.Colors('DarkKhaki', '#000000');
$.CTC197 = new Isolate.$isolateProperties.InputTypes('date');
$.CTC90 = new Isolate.$isolateProperties.Colors('Magenta', '#ff00ff');
$.CTC41 = new Isolate.$isolateProperties.Colors('DarkOrchid', '#9932cc');
$.CTC129 = new Isolate.$isolateProperties.Colors('SandyBrown', '#f4a460');
$.CTC56 = new Isolate.$isolateProperties.Colors('Fuchsia', '#ff00ff');
$.CTC102 = new Isolate.$isolateProperties.Colors('MintCream', '#f5fffa');
$.CTC67 = new Isolate.$isolateProperties.Colors('Indigo', '#4b0082');
$.CTC164 = new Isolate.$isolateProperties.NotImplementedException();
$.CTC196 = new Isolate.$isolateProperties.InputTypes('email');
$.CTC201 = new Isolate.$isolateProperties.InputTypes('tel');
$.CTC126 = new Isolate.$isolateProperties.Colors('RoyalBlue', '#4169e1');
$.CTC167 = new Isolate.$isolateProperties.IllegalAccessException();
$.CTC241 = new Isolate.$isolateProperties.StringToColorConverter();
$.CTC221 = new Isolate.$isolateProperties.XmlException(0, '', 'Element not found.');
$.CTC21 = new Isolate.$isolateProperties.Colors('BlueViolet', '#8a2be2');
$.CTC16 = new Isolate.$isolateProperties.Colors('Beige', '#F5F5DC');
$.CTC187 = new Isolate.$isolateProperties.Cursors('sw-resize');
$.CTC59 = new Isolate.$isolateProperties.Colors('Gold', '#ffd700');
$.CTC24 = new Isolate.$isolateProperties.Colors('CadetBlue', '#5f9ea0');
$.CTC200 = new Isolate.$isolateProperties.InputTypes('search');
$.CTC11 = new Isolate.$isolateProperties.Colors('AliceBlue', '#F0F8FF');
$.CTC38 = new Isolate.$isolateProperties.Colors('DarkMagenta', '#8b008b');
$.CTC97 = new Isolate.$isolateProperties.Colors('MediumSlateBlue', '#7b68ee');
$.CTC184 = new Isolate.$isolateProperties.Cursors('progress');
$.CTC96 = new Isolate.$isolateProperties.Colors('MediumSeaGreen', '#3cb371');
$.CTC117 = new Isolate.$isolateProperties.Colors('PapayaWhip', '#ffefd5');
$.CTC43 = new Isolate.$isolateProperties.Colors('DarkSalmon', '#e9967a');
$.CTC91 = new Isolate.$isolateProperties.Colors('Maroon', '#800000');
$.CTC6 = new Isolate.$isolateProperties.StringToNumericConverter();
$.CTC2 = new Isolate.$isolateProperties._DeletedKeySentinel();
$.CTC42 = new Isolate.$isolateProperties.Colors('DarkRed', '#8b0000');
$.CTC65 = new Isolate.$isolateProperties.Colors('HotPink', '#ff69b4');
$.CTC113 = new Isolate.$isolateProperties.Colors('PaleGoldenrod', '#eee8aa');
$.CTC5 = new Isolate.$isolateProperties.StringToThicknessConverter();
$.CTC130 = new Isolate.$isolateProperties.Colors('SeaGreen', '#2e8b57');
$.CTC214 = new Isolate.$isolateProperties.StringToGridLengthConverter();
$.CTC234 = new Isolate.$isolateProperties.XmlException(0, '', 'End CDATA tag not found.');
$.CTC54 = new Isolate.$isolateProperties.Colors('FloralWhite', '#fffaf0');
$.CTC147 = new Isolate.$isolateProperties.Colors('WhiteSmoke', '#f5f5f5');
$.CTC57 = new Isolate.$isolateProperties.Colors('Gainsboro', '#dcdcdc');
$.CTC176 = new Isolate.$isolateProperties.Cursors('default');
$.CTC222 = new Isolate.$isolateProperties.XmlNodeType('Element');
$.CTC175 = new Isolate.$isolateProperties.Cursors('crosshair');
$.CTC146 = new Isolate.$isolateProperties.Colors('Wheat', '#f5deb3');
$.CTC50 = new Isolate.$isolateProperties.Colors('DeepSkyBlue', '#00bfff');
$.CTC9 = new Isolate.$isolateProperties.Colors('White', '#ffffff');
$.CTC79 = new Isolate.$isolateProperties.Colors('LightGreen', '#90ee90');
$.CTC207 = new Isolate.$isolateProperties.UnsupportedOperationException('TODO(jacobr): should we impl?');
$.CTC193 = new Isolate.$isolateProperties.InputTypes('text');
$.CTC144 = new Isolate.$isolateProperties.Colors('Turquoise', '#40e0d0');
$.CTC19 = new Isolate.$isolateProperties.Colors('BlanchedAlmond', '#FFEBCD');
$.CTC212 = new Isolate.$isolateProperties.GridUnitType(2);
$.CTC213 = new Isolate.$isolateProperties.GridUnitType(3);
$.CTC211 = new Isolate.$isolateProperties.GridUnitType(1);
$.CTC99 = new Isolate.$isolateProperties.Colors('MediumTurquoise', '#48d1cc');
$.CTC120 = new Isolate.$isolateProperties.Colors('Pink', '#ffc0cb');
$.CTC151 = new Isolate.$isolateProperties.VerticalAlignment('top');
$.CTC157 = new Isolate.$isolateProperties.HorizontalAlignment('center');
$.CTC31 = new Isolate.$isolateProperties.Colors('Cyan', '#00ffff');
$.CTC80 = new Isolate.$isolateProperties.Colors('LightPink', '#ffb6c1');
$.CTC203 = new Isolate.$isolateProperties.InputTypes('url');
$.CTC111 = new Isolate.$isolateProperties.Colors('OrangeRed', '#ff4500');
$.CTC154 = new Isolate.$isolateProperties.VerticalAlignment('stretch');
$.CTC141 = new Isolate.$isolateProperties.Colors('Teal', '#008080');
$.CTC209 = new Isolate.$isolateProperties.Orientation('vertical');
$.CTC223 = new Isolate.$isolateProperties.XmlNodeType('Namespace');
$.CTC48 = new Isolate.$isolateProperties.Colors('DarkViolet', '#9400d3');
$.CTC94 = new Isolate.$isolateProperties.Colors('MediumOrchid', '#ba55d3');
$.CTC112 = new Isolate.$isolateProperties.Colors('Orchid', '#da70d6');
$.CTC40 = new Isolate.$isolateProperties.Colors('DarkOrange', '#ff8c00');
$.CTC192 = new Isolate.$isolateProperties.Visibility('hidden');
$.CTC183 = new Isolate.$isolateProperties.Cursors('pointer');
$.CTC28 = new Isolate.$isolateProperties.Colors('ConflowerBlue', '#6495ed');
$.CTC66 = new Isolate.$isolateProperties.Colors('IndianRed', '#cd5c5c');
$.CTC116 = new Isolate.$isolateProperties.Colors('PaleVioletRed', '#db7093');
$.CTC230 = new Isolate.$isolateProperties.XmlException(0, '', 'CDATA nodes are not supported in the top level.');
$.CTC81 = new Isolate.$isolateProperties.Colors('LightSalmon', '#ffa07a');
$.CTC25 = new Isolate.$isolateProperties.Colors('Chartreuse', '#7fff00');
$.CTC248 = new Isolate.$isolateProperties.ConstantMap(Isolate.$isolateProperties.CTC247, {'body': 'html', 'head': 'html', 'caption': 'table', 'td': 'tr', 'colgroup': 'table', 'col': 'colgroup', 'tr': 'tbody', 'tbody': 'table', 'tfoot': 'table', 'thead': 'table', 'track': 'audio'}, 11);
$.CTC76 = new Isolate.$isolateProperties.Colors('LightCyan', '#e0ffff');
$.CTC163 = new Isolate.$isolateProperties.UnsupportedOperationException('');
$.CTC69 = new Isolate.$isolateProperties.Colors('Khaki', '#f0e68c');
$.CTC182 = new Isolate.$isolateProperties.Cursors('nw-resize');
$.CTC98 = new Isolate.$isolateProperties.Colors('MediumSpringGreen', '#00fa9a');
$.CTC109 = new Isolate.$isolateProperties.Colors('OliveDrab', '#6b8e23');
$.CTC133 = new Isolate.$isolateProperties.Colors('Silver', '#c0c0c0');
$.CTC173 = new Isolate.$isolateProperties.StringToVerticalAlignmentConverter();
$.CTC26 = new Isolate.$isolateProperties.Colors('Chocolate', '#d2691e');
$.CTC195 = new Isolate.$isolateProperties.InputTypes('password');
$.CTC34 = new Isolate.$isolateProperties.Colors('DarkGoldenrod', '#b8860b');
$.CTC217 = new Isolate.$isolateProperties.XmlException(0, '', 'Text not allowed in root level. Use comments instead.');
$.CTC243 = new Isolate.$isolateProperties.RadialGradientDrawMode('contain');
$.CTC13 = new Isolate.$isolateProperties.Colors('Aqua', '#00FFFF');
$.CTC215 = new Isolate.$isolateProperties.PresentationProviderException();
$.CTC23 = new Isolate.$isolateProperties.Colors('BurlyWood', '#deb887');
$.CTC165 = new Isolate.$isolateProperties.IllegalArgumentException('Invalid list length');
$.CTC170 = new Isolate.$isolateProperties.StringToVisibilityConverter();
$.CTC149 = new Isolate.$isolateProperties.Colors('YellowGreen', '#9acd32');
$.CTC73 = new Isolate.$isolateProperties.Colors('LemonChiffon', '#fffacd');
$.CTC52 = new Isolate.$isolateProperties.Colors('DodgerBlue', '#1e90ff');
$.CTC124 = new Isolate.$isolateProperties.Colors('Red', '#ff0000');
$.CTC127 = new Isolate.$isolateProperties.Colors('SaddleBrown', '#8b4513');
$.CTC226 = new Isolate.$isolateProperties.XmlNodeType('CDATA');
$.CTC244 = new Isolate.$isolateProperties.StringToRadialGradientDrawModeConverter();
$.CTC60 = new Isolate.$isolateProperties.Colors('Goldenrod', '#daa520');
$.CTC249 = new Isolate.$isolateProperties.JSSyntaxRegExp(false, false, '^#[_a-zA-Z]\\w*$');
$.CTC87 = new Isolate.$isolateProperties.Colors('Lime', '#00ff00');
$.CTC84 = new Isolate.$isolateProperties.Colors('LightSlateGray', '#778899');
$.CTC4 = new Isolate.$isolateProperties.StringToSolidColorBrushConverter();
$.CTC85 = new Isolate.$isolateProperties.Colors('LightSteelBlue', '#b0c4de');
$.CTC58 = new Isolate.$isolateProperties.Colors('GhostWhite', '#f8f8ff');
$.CTC101 = new Isolate.$isolateProperties.Colors('MidnightBlue', '#191970');
$.CTC114 = new Isolate.$isolateProperties.Colors('PaleGreen', '#98fb98');
$.CTC49 = new Isolate.$isolateProperties.Colors('DeepPink', '#ff1493');
$.CTC62 = new Isolate.$isolateProperties.Colors('Green', '#008000');
$.CTC240 = new Isolate.$isolateProperties.StringToLinearGradientDirectionConverter();
$.CTC174 = new Isolate.$isolateProperties.Cursors('auto');
$.CTC136 = new Isolate.$isolateProperties.Colors('SlateGray', '#708090');
$.CTC206 = new Isolate.$isolateProperties.AnimationException();
$.CTC143 = new Isolate.$isolateProperties.Colors('Tomato', '#ff6347');
$.CTC224 = new Isolate.$isolateProperties.XmlNodeType('Attribute');
$.CTC3 = new Isolate.$isolateProperties.NoMoreElementsException();
$.CTC177 = new Isolate.$isolateProperties.Cursors('e-resize');
$.CTC55 = new Isolate.$isolateProperties.Colors('ForestGreen', '#228b22');
$.CTC77 = new Isolate.$isolateProperties.Colors('LightGoldenrod', '#fafad2');
$.CTC135 = new Isolate.$isolateProperties.Colors('SlateBlue', '#6a5acd');
$.CTC142 = new Isolate.$isolateProperties.Colors('Thistle', '#d8bfd8');
$.CTC225 = new Isolate.$isolateProperties.XmlNodeType('PI');
$.CTC82 = new Isolate.$isolateProperties.Colors('LightSeaGreen', '#20b2aa');
$.CTC159 = new Isolate.$isolateProperties.BindingMode(1);
$.CTC10 = new Isolate.$isolateProperties.BindingMode(3);
$.CTC119 = new Isolate.$isolateProperties.Colors('Peru', '#cd853f');
$.CTC47 = new Isolate.$isolateProperties.Colors('DarkTurquoise', '#00ced1');
$.CTC108 = new Isolate.$isolateProperties.Colors('Olive', '#808000');
$.CTC161 = new Isolate.$isolateProperties.BindingMode(2);
$.CTC44 = new Isolate.$isolateProperties.Colors('DarkSeaGreen', '#8fbc8f');
$.CTC103 = new Isolate.$isolateProperties.Colors('MistyRose', '#ffe4e1');
$.CTC88 = new Isolate.$isolateProperties.Colors('LimeGreen', '#32cd32');
$.CTC107 = new Isolate.$isolateProperties.Colors('OldLace', '#fdf5e6');
$.CTC53 = new Isolate.$isolateProperties.Colors('Firebrick', '#b22222');
$.CTC156 = new Isolate.$isolateProperties.HorizontalAlignment('right');
$.CTC12 = new Isolate.$isolateProperties.Colors('AntiqueWhite', '#FAEBD7');
$.CTC104 = new Isolate.$isolateProperties.Colors('Moccasin', '#ffe4b5');
$.CTC194 = new Isolate.$isolateProperties.StringToInputTypesConverter();
$.CTC191 = new Isolate.$isolateProperties.Visibility('visible');
$.CTC205 = Isolate.makeConstantList([Isolate.$isolateProperties.CTC195, Isolate.$isolateProperties.CTC196, Isolate.$isolateProperties.CTC197, Isolate.$isolateProperties.CTC198, Isolate.$isolateProperties.CTC199, Isolate.$isolateProperties.CTC200, Isolate.$isolateProperties.CTC201, Isolate.$isolateProperties.CTC193, Isolate.$isolateProperties.CTC202, Isolate.$isolateProperties.CTC203, Isolate.$isolateProperties.CTC204]);
$.CTC210 = new Isolate.$isolateProperties.Orientation('horizontal');
$.CTC83 = new Isolate.$isolateProperties.Colors('LightSkyBlue', '#87cefa');
$.CTC128 = new Isolate.$isolateProperties.Colors('Salmon', '#fa8072');
$.CTC75 = new Isolate.$isolateProperties.Colors('LightCoral', '#f08080');
$.CTC134 = new Isolate.$isolateProperties.Colors('SkyBlue', '#87ceeb');
$.CTC152 = new Isolate.$isolateProperties.VerticalAlignment('bottom');
$.CTC189 = new Isolate.$isolateProperties.Cursors('wait');
$.CTC245 = new Isolate.$isolateProperties.RadialGradientDrawMode('cover');
$.CTC39 = new Isolate.$isolateProperties.Colors('DarkOliveGreen', '#556b2f');
$.CTC45 = new Isolate.$isolateProperties.Colors('DarkSlateBlue', '#483d8b');
$.CTC180 = new Isolate.$isolateProperties.Cursors('n-resize');
$.CTC106 = new Isolate.$isolateProperties.Colors('Navy', '#000080');
$.CTC71 = new Isolate.$isolateProperties.Colors('LavenderBlush', '#fff0f5');
$.CTC32 = new Isolate.$isolateProperties.Colors('DarkBlue', '#00008b');
$._pendingRequests = (void 0);
$._cachedBrowserPrefix = (void 0);
$._nextMeasurementFrameScheduled = false;
$._firstMeasurementRequest = true;
$._pendingMeasurementFrameCallbacks = (void 0);
$.columnProperty = (void 0);
$.columnSpanProperty = (void 0);
$.rowSpanProperty = (void 0);
$._hashNum = 0;
$._ref = (void 0);
$.DEBUG = true;
$.leftProperty = (void 0);
$._getTypeNameOf = (void 0);
$.topProperty = (void 0);
$.rowProperty = (void 0);
var $ = null;
Isolate.$finishClasses();
Isolate = Isolate.$finishIsolateConstructor(Isolate);
var $ = new Isolate();
(function() {
$.defineProperty(Object.prototype, 'is$Collection', function() { return false; });
$.defineProperty(Object.prototype, 'is$List2', function() { return false; });
$.defineProperty(Object.prototype, 'is$Map', function() { return false; });
$.defineProperty(Object.prototype, 'is$Element', function() { return false; });
$.defineProperty(Object.prototype, 'toString$0', function() { return $.toStringForNativeObject(this); });
$.dynamicFunction('is$Element').SVGRadialGradientElement = function() { return true; };
$.dynamicFunction('get$width').ImageData = function() { return this.width; };
$.dynamicFunction('get$height').ImageData = function() { return this.height; };
$.dynamicFunction('$dom_removeEventListener$3').WebSocket = function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('$dom_addEventListener$3').WebSocket = function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('get$on').WebSocket = function() {
  return $._lib5_WebSocketEventsImpl$1(this);
 };
$.dynamicFunction('get$y').SVGFETurbulenceElement = function() { return this.y; };
$.dynamicFunction('get$x').SVGFETurbulenceElement = function() { return this.x; };
$.dynamicFunction('get$width').SVGFETurbulenceElement = function() { return this.width; };
$.dynamicFunction('get$height').SVGFETurbulenceElement = function() { return this.height; };
$.dynamicFunction('get$type').SVGFETurbulenceElement = function() { return this.type; };
$.dynamicFunction('is$Element').SVGFETurbulenceElement = function() { return true; };
$.dynamicFunction('get$y').SVGFETileElement = function() { return this.y; };
$.dynamicFunction('get$x').SVGFETileElement = function() { return this.x; };
$.dynamicFunction('get$width').SVGFETileElement = function() { return this.width; };
$.dynamicFunction('get$height').SVGFETileElement = function() { return this.height; };
$.dynamicFunction('is$Element').SVGFETileElement = function() { return true; };
$.dynamicFunction('set$value').SVGNumber = function(v) { this.value = v; };
$.dynamicFunction('get$value').SVGNumber = function() { return this.value; };
$.dynamicFunction('getRange$2').Int8Array = function(start, rangeLength) {
  return $.getRange2(this, start, rangeLength, []);
 };
$.dynamicFunction('removeRange$2').Int8Array = function(start, rangeLength) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot removeRange on immutable List.'));
 };
$.dynamicFunction('removeLast$0').Int8Array = function() {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot removeLast on immutable List.'));
 };
$.dynamicFunction('last$0').Int8Array = function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
 };
$.dynamicFunction('indexOf$2').Int8Array = function(element, start) {
  return $.indexOf2(this, element, start, $.get$length(this));
 };
$.dynamicFunction('indexOf$1').Int8Array = function(element) {
  return this.indexOf$2(element,0)
};
$.dynamicFunction('sort$1').Int8Array = function(compare) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot sort immutable List.'));
 };
$.dynamicFunction('isEmpty$0').Int8Array = function() {
  return $.eq($.get$length(this), 0);
 };
$.dynamicFunction('some$1').Int8Array = function(f) {
  return $.some3(this, f);
 };
$.dynamicFunction('every$1').Int8Array = function(f) {
  return $.every3(this, f);
 };
$.dynamicFunction('filter$1').Int8Array = function(f) {
  return $.filter3(this, [], f);
 };
$.dynamicFunction('forEach$1').Int8Array = function(f) {
  return $.forEach3(this, f);
 };
$.dynamicFunction('addAll$1').Int8Array = function(collection) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('addLast$1').Int8Array = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('add$1').Int8Array = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('iterator$0').Int8Array = function() {
  var t0 = $._lib5_FixedSizeListIterator$1(this);
  $.setRuntimeTypeInfo(t0, ({T: 'int'}));
  return t0;
 };
$.dynamicFunction('operator$indexSet$2').Int8Array = function(index, value) {
  this[index] = value;
 };
$.dynamicFunction('operator$index$1').Int8Array = function(index) {
  return this[index];;
 };
$.dynamicFunction('get$length').Int8Array = function() { return this.length; };
$.dynamicFunction('is$List2').Int8Array = function() { return true; };
$.dynamicFunction('is$Collection').Int8Array = function() { return true; };
$.dynamicFunction('is$Element').HTMLOptGroupElement = function() { return true; };
$.dynamicFunction('get$userAgent').WorkerNavigator = function() { return this.userAgent; };
$.dynamicFunction('set$width').HTMLAppletElement = function(v) { this.width = v; };
$.dynamicFunction('get$width').HTMLAppletElement = function() { return this.width; };
$.dynamicFunction('set$name').HTMLAppletElement = function(v) { this.name = v; };
$.dynamicFunction('get$name').HTMLAppletElement = function() { return this.name; };
$.dynamicFunction('set$height').HTMLAppletElement = function(v) { this.height = v; };
$.dynamicFunction('get$height').HTMLAppletElement = function() { return this.height; };
$.dynamicFunction('is$Element').HTMLAppletElement = function() { return true; };
$.dynamicFunction('set$innerHTML').ShadowRoot = function(v) { this.innerHTML = v; };
$.dynamicFunction('is$Element').ShadowRoot = function() { return true; };
$.dynamicFunction('is$Element').HTMLQuoteElement = function() { return true; };
$.dynamicFunction('is$Element').HTMLMenuElement = function() { return true; };
$.dynamicFunction('is$Element').HTMLHeadElement = function() { return true; };
$.dynamicFunction('get$y').SVGPathSegCurvetoQuadraticSmoothAbs = function() { return this.y; };
$.dynamicFunction('get$x').SVGPathSegCurvetoQuadraticSmoothAbs = function() { return this.x; };
$.dynamicFunction('get$y').SVGPoint = function() { return this.y; };
$.dynamicFunction('get$x').SVGPoint = function() { return this.x; };
$.dynamicFunction('get$name').DOMFileSystem = function() { return this.name; };
$.dynamicFunction('is$Element').SVGAnimateMotionElement = function() { return true; };
$.dynamicFunction('get$type').SVGStyleElement = function() { return this.type; };
$.dynamicFunction('set$title').SVGStyleElement = function(value) {
  this.title = value;;
 };
$.dynamicFunction('is$Element').SVGStyleElement = function() { return true; };
$.dynamicFunction('$dom_removeEventListener$3').MediaStream = function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('$dom_addEventListener$3').MediaStream = function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('get$on').MediaStream = function() {
  return $._lib5_MediaStreamEventsImpl$1(this);
 };
$.dynamicFunction('get$pageY').UIEvent = function() { return this.pageY; };
$.dynamicFunction('get$pageX').UIEvent = function() { return this.pageX; };
$.dynamicFunction('$dom_removeEventListener$3').SpeechRecognition = function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('$dom_addEventListener$3').SpeechRecognition = function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('get$on').SpeechRecognition = function() {
  return $._lib5_SpeechRecognitionEventsImpl$1(this);
 };
$.dynamicFunction('get$length').EntryArraySync = function() { return this.length; };
$.dynamicFunction('get$y').SVGImageElement = function() { return this.y; };
$.dynamicFunction('get$x').SVGImageElement = function() { return this.x; };
$.dynamicFunction('get$width').SVGImageElement = function() { return this.width; };
$.dynamicFunction('get$height').SVGImageElement = function() { return this.height; };
$.dynamicFunction('is$Element').SVGImageElement = function() { return true; };
$.dynamicFunction('set$width').HTMLTableCellElement = function(v) { this.width = v; };
$.dynamicFunction('get$width').HTMLTableCellElement = function() { return this.width; };
$.dynamicFunction('set$height').HTMLTableCellElement = function(v) { this.height = v; };
$.dynamicFunction('get$height').HTMLTableCellElement = function() { return this.height; };
$.dynamicFunction('is$Element').HTMLTableCellElement = function() { return true; };
$.dynamicFunction('get$y').SVGFEDropShadowElement = function() { return this.y; };
$.dynamicFunction('get$x').SVGFEDropShadowElement = function() { return this.x; };
$.dynamicFunction('get$width').SVGFEDropShadowElement = function() { return this.width; };
$.dynamicFunction('get$height').SVGFEDropShadowElement = function() { return this.height; };
$.dynamicFunction('is$Element').SVGFEDropShadowElement = function() { return true; };
$.dynamicFunction('getRange$2').HTMLCollection = function(start, rangeLength) {
  return $.getRange2(this, start, rangeLength, []);
 };
$.dynamicFunction('removeRange$2').HTMLCollection = function(start, rangeLength) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot removeRange on immutable List.'));
 };
$.dynamicFunction('removeLast$0').HTMLCollection = function() {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot removeLast on immutable List.'));
 };
$.dynamicFunction('last$0').HTMLCollection = function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
 };
$.dynamicFunction('indexOf$2').HTMLCollection = function(element, start) {
  return $.indexOf2(this, element, start, $.get$length(this));
 };
$.dynamicFunction('indexOf$1').HTMLCollection = function(element) {
  return this.indexOf$2(element,0)
};
$.dynamicFunction('sort$1').HTMLCollection = function(compare) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot sort immutable List.'));
 };
$.dynamicFunction('isEmpty$0').HTMLCollection = function() {
  return $.eq($.get$length(this), 0);
 };
$.dynamicFunction('some$1').HTMLCollection = function(f) {
  return $.some3(this, f);
 };
$.dynamicFunction('every$1').HTMLCollection = function(f) {
  return $.every3(this, f);
 };
$.dynamicFunction('filter$1').HTMLCollection = function(f) {
  return $.filter3(this, [], f);
 };
$.dynamicFunction('forEach$1').HTMLCollection = function(f) {
  return $.forEach3(this, f);
 };
$.dynamicFunction('addAll$1').HTMLCollection = function(collection) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('addLast$1').HTMLCollection = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('add$1').HTMLCollection = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('iterator$0').HTMLCollection = function() {
  var t0 = $._lib5_FixedSizeListIterator$1(this);
  $.setRuntimeTypeInfo(t0, ({T: 'Node'}));
  return t0;
 };
$.dynamicFunction('operator$indexSet$2').HTMLCollection = function(index, value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot assign element of immutable List.'));
 };
$.dynamicFunction('operator$index$1').HTMLCollection = function(index) {
  return this[index];;
 };
$.dynamicFunction('get$length').HTMLCollection = function() { return this.length; };
$.dynamicFunction('is$List2').HTMLCollection = function() { return true; };
$.dynamicFunction('is$Collection').HTMLCollection = function() { return true; };
$.dynamicFunction('is$Element').SVGAnimateColorElement = function() { return true; };
$.dynamicFunction('set$width').HTMLTableColElement = function(v) { this.width = v; };
$.dynamicFunction('get$width').HTMLTableColElement = function() { return this.width; };
$.dynamicFunction('is$Element').HTMLTableColElement = function() { return true; };
$.dynamicFunction('get$length').ClientRectList = function() { return this.length; };
$.dynamicFunction('is$Element').SVGMarkerElement = function() { return true; };
$.dynamicFunction('is$Element').SVGLineElement = function() { return true; };
$.dynamicFunction('get$y').SVGMaskElement = function() { return this.y; };
$.dynamicFunction('get$x').SVGMaskElement = function() { return this.x; };
$.dynamicFunction('get$width').SVGMaskElement = function() { return this.width; };
$.dynamicFunction('get$height').SVGMaskElement = function() { return this.height; };
$.dynamicFunction('is$Element').SVGMaskElement = function() { return true; };
$.dynamicFunction('filter$1').TreeWalker = function(arg0) { return this.filter.$call$1(arg0); };
$.dynamicFunction('get$y').SVGFEPointLightElement = function() { return this.y; };
$.dynamicFunction('get$x').SVGFEPointLightElement = function() { return this.x; };
$.dynamicFunction('is$Element').SVGFEPointLightElement = function() { return true; };
$.dynamicFunction('is$Element').SVGFEMergeNodeElement = function() { return true; };
$.dynamicFunction('get$type').HTMLLinkElement = function() { return this.type; };
$.dynamicFunction('get$target').HTMLLinkElement = function() { return this.target; };
$.dynamicFunction('is$Element').HTMLLinkElement = function() { return true; };
$.dynamicFunction('is$Element').SVGAnimationElement = function() { return true; };
$.dynamicFunction('get$y').SVGFEImageElement = function() { return this.y; };
$.dynamicFunction('get$x').SVGFEImageElement = function() { return this.x; };
$.dynamicFunction('get$width').SVGFEImageElement = function() { return this.width; };
$.dynamicFunction('get$height').SVGFEImageElement = function() { return this.height; };
$.dynamicFunction('is$Element').SVGFEImageElement = function() { return true; };
$.dynamicFunction('get$width').Screen = function() { return this.width; };
$.dynamicFunction('get$height').Screen = function() { return this.height; };
$.dynamicFunction('get$length').SpeechInputResultList = function() { return this.length; };
$.dynamicFunction('set$width').HTMLHRElement = function(v) { this.width = v; };
$.dynamicFunction('get$width').HTMLHRElement = function() { return this.width; };
$.dynamicFunction('is$Element').HTMLHRElement = function() { return true; };
$.dynamicFunction('getRange$2').MediaList = function(start, rangeLength) {
  return $.getRange2(this, start, rangeLength, []);
 };
$.dynamicFunction('removeRange$2').MediaList = function(start, rangeLength) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot removeRange on immutable List.'));
 };
$.dynamicFunction('removeLast$0').MediaList = function() {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot removeLast on immutable List.'));
 };
$.dynamicFunction('last$0').MediaList = function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
 };
$.dynamicFunction('indexOf$2').MediaList = function(element, start) {
  return $.indexOf2(this, element, start, $.get$length(this));
 };
$.dynamicFunction('indexOf$1').MediaList = function(element) {
  return this.indexOf$2(element,0)
};
$.dynamicFunction('sort$1').MediaList = function(compare) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot sort immutable List.'));
 };
$.dynamicFunction('isEmpty$0').MediaList = function() {
  return $.eq($.get$length(this), 0);
 };
$.dynamicFunction('some$1').MediaList = function(f) {
  return $.some3(this, f);
 };
$.dynamicFunction('every$1').MediaList = function(f) {
  return $.every3(this, f);
 };
$.dynamicFunction('filter$1').MediaList = function(f) {
  return $.filter3(this, [], f);
 };
$.dynamicFunction('forEach$1').MediaList = function(f) {
  return $.forEach3(this, f);
 };
$.dynamicFunction('addAll$1').MediaList = function(collection) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('addLast$1').MediaList = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('add$1').MediaList = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('iterator$0').MediaList = function() {
  var t0 = $._lib5_FixedSizeListIterator$1(this);
  $.setRuntimeTypeInfo(t0, ({T: 'String'}));
  return t0;
 };
$.dynamicFunction('operator$indexSet$2').MediaList = function(index, value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot assign element of immutable List.'));
 };
$.dynamicFunction('operator$index$1').MediaList = function(index) {
  return this[index];;
 };
$.dynamicFunction('get$length').MediaList = function() { return this.length; };
$.dynamicFunction('is$List2').MediaList = function() { return true; };
$.dynamicFunction('is$Collection').MediaList = function() { return true; };
$.dynamicFunction('get$y').SVGPathSegCurvetoQuadraticSmoothRel = function() { return this.y; };
$.dynamicFunction('get$x').SVGPathSegCurvetoQuadraticSmoothRel = function() { return this.x; };
$.dynamicFunction('toString$0').DOMSelection = function() {
  return this.toString();
 };
$.dynamicFunction('get$type').DOMSelection = function() { return this.type; };
$.dynamicFunction('is$Element').HTMLTableSectionElement = function() { return true; };
$.dynamicFunction('$dom_replaceChild$2').Node = function(newChild, oldChild) {
  return this.replaceChild(newChild,oldChild);
 };
$.dynamicFunction('$dom_removeChild$1').Node = function(oldChild) {
  return this.removeChild(oldChild);
 };
$.dynamicFunction('contains$1').Node = function(other) {
  return this.contains(other);
 };
$.dynamicFunction('$dom_appendChild$1').Node = function(newChild) {
  return this.appendChild(newChild);
 };
$.dynamicFunction('set$text').Node = function(value) {
  this.textContent = value;;
 };
$.dynamicFunction('get$text').Node = function() {
  return this.textContent;;
 };
$.dynamicFunction('get$parent').Node = function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$parent')) {
    return this.parentNode;;
  } else {
    return Object.prototype.get$parent.call(this);
  }
 };
$.dynamicFunction('get$$dom_childNodes').Node = function() {
  return this.childNodes;;
 };
$.dynamicFunction('get$$dom_attributes').Node = function() {
  return this.attributes;;
 };
$.dynamicFunction('replaceWith$1').Node = function(otherNode) {
  try {
    var parent$ = this.get$parent();
    parent$.$dom_replaceChild$2(otherNode, this);
  }catch (t0) {
    $.unwrapException(t0);
  }
  return this;
 };
$.dynamicFunction('remove$0').Node = function() {
  if (!$.eqNullB(this.get$parent())) {
    this.get$parent().$dom_removeChild$1(this);
  }
  return this;
 };
$.dynamicFunction('get$nodes').Node = function() {
  return $._lib5_ChildNodeListLazy$1(this);
 };
$.dynamicFunction('get$name').IDBIndex = function() { return this.name; };
$.dynamicFunction('get$y').SVGTextPositioningElement = function() { return this.y; };
$.dynamicFunction('get$x').SVGTextPositioningElement = function() { return this.x; };
$.dynamicFunction('is$Element').SVGTextPositioningElement = function() { return true; };
$.dynamicFunction('is$Element').HTMLLegendElement = function() { return true; };
$.dynamicFunction('is$Element').HTMLContentElement = function() { return true; };
$.dynamicFunction('get$type').MutationRecord = function() { return this.type; };
$.dynamicFunction('get$target').MutationRecord = function() { return this.target; };
$.dynamicFunction('is$Element').SVGFontFaceUriElement = function() { return true; };
$.dynamicFunction('query$1').DocumentFragment = function(selectors) {
  return this.querySelector(selectors);
 };
$.dynamicFunction('get$on').DocumentFragment = function() {
  return $._lib5_ElementEventsImpl$1(this);
 };
$.dynamicFunction('set$title').DocumentFragment = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Title can\'t be set for document fragments.'));
 };
$.dynamicFunction('click$0').DocumentFragment = function() {
 };
$.dynamicFunction('get$click').DocumentFragment = function() { return new $.Closure331(this); };
$.dynamicFunction('focus$0').DocumentFragment = function() {
 };
$.dynamicFunction('get$focus').DocumentFragment = function() { return new $.Closure332(this); };
$.dynamicFunction('blur$0').DocumentFragment = function() {
 };
$.dynamicFunction('get$blur').DocumentFragment = function() { return new $.Closure333(this); };
$.dynamicFunction('get$style').DocumentFragment = function() {
  return $.Element$tag('div').get$style();
 };
$.dynamicFunction('get$attributes').DocumentFragment = function() {
  return $.CTC166;
 };
$.dynamicFunction('get$parent').DocumentFragment = function() {
  return;
 };
$.dynamicFunction('get$$dom_lastElementChild').DocumentFragment = function() {
  return $.last(this.get$elements());
 };
$.dynamicFunction('get$$dom_firstElementChild').DocumentFragment = function() {
  return this.get$elements().first$0();
 };
$.dynamicFunction('get$tagName').DocumentFragment = function() {
  return '';
 };
$.dynamicFunction('get$rect').DocumentFragment = function() {
  var t0 = new $.Closure57();
  var t1 = $.CompleterImpl$0();
  $.setRuntimeTypeInfo(t1, ({T: 'ElementRect'}));
  return $._createMeasurementFuture(t0, t1);
 };
$.dynamicFunction('set$innerHTML').DocumentFragment = function(value) {
  if (Object.getPrototypeOf(this).hasOwnProperty('set$innerHTML')) {
    $.clear(this.get$nodes());
  var e = $.Element$tag('div');
  e.set$innerHTML(value);
  var nodes = $.List$from(e.get$nodes());
  $.addAll(this.get$nodes(), nodes);
  } else {
    return Object.prototype.set$innerHTML.call(this, value);
  }
 };
$.dynamicFunction('get$elements').DocumentFragment = function() {
  if ($.eqNullB(this.get$_lib5_elements())) {
    this.set$_lib5_elements($.FilteredElementList$1(this));
  }
  return this.get$_lib5_elements();
 };
$.dynamicFunction('set$_lib5_elements').DocumentFragment = function(v) { this._lib5_elements = v; };
$.dynamicFunction('get$_lib5_elements').DocumentFragment = function() { return this._lib5_elements; };
$.dynamicFunction('is$Element').DocumentFragment = function() { return true; };
$.dynamicFunction('is$Element').SVGFontFaceFormatElement = function() { return true; };
$.dynamicFunction('get$target').Touch = function() { return this.target; };
$.dynamicFunction('get$pageY').Touch = function() { return this.pageY; };
$.dynamicFunction('get$pageX').Touch = function() { return this.pageX; };
$.dynamicFunction('$dom_removeEventListener$3').FileWriter = function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('$dom_addEventListener$3').FileWriter = function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('get$length').FileWriter = function() { return this.length; };
$.dynamicFunction('get$on').FileWriter = function() {
  return $._lib5_FileWriterEventsImpl$1(this);
 };
$.dynamicFunction('get$y').SVGFEOffsetElement = function() { return this.y; };
$.dynamicFunction('get$x').SVGFEOffsetElement = function() { return this.x; };
$.dynamicFunction('get$width').SVGFEOffsetElement = function() { return this.width; };
$.dynamicFunction('get$height').SVGFEOffsetElement = function() { return this.height; };
$.dynamicFunction('is$Element').SVGFEOffsetElement = function() { return true; };
$.dynamicFunction('set$name').WebKitCSSKeyframesRule = function(v) { this.name = v; };
$.dynamicFunction('get$name').WebKitCSSKeyframesRule = function() { return this.name; };
$.dynamicFunction('set$value').AudioParam = function(v) { this.value = v; };
$.dynamicFunction('get$value').AudioParam = function() { return this.value; };
$.dynamicFunction('get$name').AudioParam = function() { return this.name; };
$.dynamicFunction('get$y').SVGPathSegArcRel = function() { return this.y; };
$.dynamicFunction('get$x').SVGPathSegArcRel = function() { return this.x; };
$.dynamicFunction('is$Element').HTMLUnknownElement = function() { return true; };
$.dynamicFunction('get$y').SVGFEDiffuseLightingElement = function() { return this.y; };
$.dynamicFunction('get$x').SVGFEDiffuseLightingElement = function() { return this.x; };
$.dynamicFunction('get$width').SVGFEDiffuseLightingElement = function() { return this.width; };
$.dynamicFunction('get$height').SVGFEDiffuseLightingElement = function() { return this.height; };
$.dynamicFunction('is$Element').SVGFEDiffuseLightingElement = function() { return true; };
$.dynamicFunction('is$Element').SVGSetElement = function() { return true; };
$.dynamicFunction('$dom_removeEventListener$3').TextTrackList = function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('$dom_addEventListener$3').TextTrackList = function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('get$length').TextTrackList = function() { return this.length; };
$.dynamicFunction('get$on').TextTrackList = function() {
  return $._lib5_TextTrackListEventsImpl$1(this);
 };
$.dynamicFunction('is$Element').SVGViewElement = function() { return true; };
$.dynamicFunction('get$y').SVGPathSegCurvetoQuadraticRel = function() { return this.y; };
$.dynamicFunction('get$x').SVGPathSegCurvetoQuadraticRel = function() { return this.x; };
$.dynamicFunction('clear$0').SVGNumberList = function() {
  return this.clear();
 };
$.dynamicFunction('get$head').ScriptProfile = function() { return this.head; };
$.dynamicFunction('$dom_removeEventListener$3').XMLHttpRequest = function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('$dom_addEventListener$3').XMLHttpRequest = function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('get$on').XMLHttpRequest = function() {
  return $._lib5_XMLHttpRequestEventsImpl$1(this);
 };
$.dynamicFunction('get$type').SVGComponentTransferFunctionElement = function() { return this.type; };
$.dynamicFunction('get$offset').SVGComponentTransferFunctionElement = function() { return this.offset; };
$.dynamicFunction('is$Element').SVGComponentTransferFunctionElement = function() { return true; };
$.dynamicFunction('is$Element').SVGClipPathElement = function() { return true; };
$.dynamicFunction('clear$0').SVGPathSegList = function() {
  return this.clear();
 };
$.dynamicFunction('get$style').CSSPageRule = function() { return this.style; };
$.dynamicFunction('getRange$2').StyleSheetList = function(start, rangeLength) {
  return $.getRange2(this, start, rangeLength, []);
 };
$.dynamicFunction('removeRange$2').StyleSheetList = function(start, rangeLength) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot removeRange on immutable List.'));
 };
$.dynamicFunction('removeLast$0').StyleSheetList = function() {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot removeLast on immutable List.'));
 };
$.dynamicFunction('last$0').StyleSheetList = function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
 };
$.dynamicFunction('indexOf$2').StyleSheetList = function(element, start) {
  return $.indexOf2(this, element, start, $.get$length(this));
 };
$.dynamicFunction('indexOf$1').StyleSheetList = function(element) {
  return this.indexOf$2(element,0)
};
$.dynamicFunction('sort$1').StyleSheetList = function(compare) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot sort immutable List.'));
 };
$.dynamicFunction('isEmpty$0').StyleSheetList = function() {
  return $.eq($.get$length(this), 0);
 };
$.dynamicFunction('some$1').StyleSheetList = function(f) {
  return $.some3(this, f);
 };
$.dynamicFunction('every$1').StyleSheetList = function(f) {
  return $.every3(this, f);
 };
$.dynamicFunction('filter$1').StyleSheetList = function(f) {
  return $.filter3(this, [], f);
 };
$.dynamicFunction('forEach$1').StyleSheetList = function(f) {
  return $.forEach3(this, f);
 };
$.dynamicFunction('addAll$1').StyleSheetList = function(collection) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('addLast$1').StyleSheetList = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('add$1').StyleSheetList = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('iterator$0').StyleSheetList = function() {
  var t0 = $._lib5_FixedSizeListIterator$1(this);
  $.setRuntimeTypeInfo(t0, ({T: 'StyleSheet'}));
  return t0;
 };
$.dynamicFunction('operator$indexSet$2').StyleSheetList = function(index, value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot assign element of immutable List.'));
 };
$.dynamicFunction('operator$index$1').StyleSheetList = function(index) {
  return this[index];;
 };
$.dynamicFunction('get$length').StyleSheetList = function() { return this.length; };
$.dynamicFunction('is$List2').StyleSheetList = function() { return true; };
$.dynamicFunction('is$Collection').StyleSheetList = function() { return true; };
$.dynamicFunction('set$width').HTMLEmbedElement = function(v) { this.width = v; };
$.dynamicFunction('get$width').HTMLEmbedElement = function() { return this.width; };
$.dynamicFunction('get$type').HTMLEmbedElement = function() { return this.type; };
$.dynamicFunction('set$name').HTMLEmbedElement = function(v) { this.name = v; };
$.dynamicFunction('get$name').HTMLEmbedElement = function() { return this.name; };
$.dynamicFunction('set$height').HTMLEmbedElement = function(v) { this.height = v; };
$.dynamicFunction('get$height').HTMLEmbedElement = function() { return this.height; };
$.dynamicFunction('is$Element').HTMLEmbedElement = function() { return true; };
$.dynamicFunction('get$y').SVGFEMorphologyElement = function() { return this.y; };
$.dynamicFunction('get$x').SVGFEMorphologyElement = function() { return this.x; };
$.dynamicFunction('get$width').SVGFEMorphologyElement = function() { return this.width; };
$.dynamicFunction('get$height').SVGFEMorphologyElement = function() { return this.height; };
$.dynamicFunction('is$Element').SVGFEMorphologyElement = function() { return true; };
$.dynamicFunction('get$key').StorageEvent = function() { return this.key; };
$.dynamicFunction('is$Element').SVGFEFuncAElement = function() { return true; };
$.dynamicFunction('set$width').HTMLCanvasElement = function(v) { this.width = v; };
$.dynamicFunction('get$width').HTMLCanvasElement = function() { return this.width; };
$.dynamicFunction('set$height').HTMLCanvasElement = function(v) { this.height = v; };
$.dynamicFunction('get$height').HTMLCanvasElement = function() { return this.height; };
$.dynamicFunction('is$Element').HTMLCanvasElement = function() { return true; };
$.dynamicFunction('get$target').HTMLFormElement = function() { return this.target; };
$.dynamicFunction('set$name').HTMLFormElement = function(v) { this.name = v; };
$.dynamicFunction('get$name').HTMLFormElement = function() { return this.name; };
$.dynamicFunction('get$length').HTMLFormElement = function() { return this.length; };
$.dynamicFunction('is$Element').HTMLFormElement = function() { return true; };
$.dynamicFunction('$dom_removeEventListener$3').DOMApplicationCache = function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('$dom_addEventListener$3').DOMApplicationCache = function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('get$on').DOMApplicationCache = function() {
  return $._lib5_DOMApplicationCacheEventsImpl$1(this);
 };
$.dynamicFunction('is$Element').SVGVKernElement = function() { return true; };
$.dynamicFunction('set$width').HTMLObjectElement = function(v) { this.width = v; };
$.dynamicFunction('get$width').HTMLObjectElement = function() { return this.width; };
$.dynamicFunction('get$type').HTMLObjectElement = function() { return this.type; };
$.dynamicFunction('set$name').HTMLObjectElement = function(v) { this.name = v; };
$.dynamicFunction('get$name').HTMLObjectElement = function() { return this.name; };
$.dynamicFunction('set$height').HTMLObjectElement = function(v) { this.height = v; };
$.dynamicFunction('get$height').HTMLObjectElement = function() { return this.height; };
$.dynamicFunction('is$Element').HTMLObjectElement = function() { return true; };
$.dynamicFunction('get$length').WebKitAnimationList = function() { return this.length; };
$.dynamicFunction('get$y').SVGFEDisplacementMapElement = function() { return this.y; };
$.dynamicFunction('get$x').SVGFEDisplacementMapElement = function() { return this.x; };
$.dynamicFunction('get$width').SVGFEDisplacementMapElement = function() { return this.width; };
$.dynamicFunction('get$height').SVGFEDisplacementMapElement = function() { return this.height; };
$.dynamicFunction('is$Element').SVGFEDisplacementMapElement = function() { return true; };
$.dynamicFunction('get$length').HTMLAllCollection = function() { return this.length; };
$.dynamicFunction('remove$0').EntrySync = function() {
  return this.remove();
 };
$.dynamicFunction('get$name').EntrySync = function() { return this.name; };
$.dynamicFunction('is$Element').SVGGradientElement = function() { return true; };
$.dynamicFunction('get$userAgent').Navigator = function() { return this.userAgent; };
$.dynamicFunction('is$Element').SVGPolygonElement = function() { return true; };
$.dynamicFunction('is$Element').SVGSymbolElement = function() { return true; };
$.dynamicFunction('get$offset').SVGStopElement = function() { return this.offset; };
$.dynamicFunction('is$Element').SVGStopElement = function() { return true; };
$.dynamicFunction('set$width').HTMLTableElement = function(v) { this.width = v; };
$.dynamicFunction('get$width').HTMLTableElement = function() { return this.width; };
$.dynamicFunction('is$Element').HTMLTableElement = function() { return true; };
$.dynamicFunction('get$y').SVGRectElement = function() { return this.y; };
$.dynamicFunction('get$x').SVGRectElement = function() { return this.x; };
$.dynamicFunction('get$width').SVGRectElement = function() { return this.width; };
$.dynamicFunction('get$height').SVGRectElement = function() { return this.height; };
$.dynamicFunction('is$Element').SVGRectElement = function() { return true; };
$.dynamicFunction('get$kind').MediaStreamTrack = function() { return this.kind; };
$.dynamicFunction('getRange$2').Uint16Array = function(start, rangeLength) {
  return $.getRange2(this, start, rangeLength, []);
 };
$.dynamicFunction('removeRange$2').Uint16Array = function(start, rangeLength) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot removeRange on immutable List.'));
 };
$.dynamicFunction('removeLast$0').Uint16Array = function() {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot removeLast on immutable List.'));
 };
$.dynamicFunction('last$0').Uint16Array = function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
 };
$.dynamicFunction('indexOf$2').Uint16Array = function(element, start) {
  return $.indexOf2(this, element, start, $.get$length(this));
 };
$.dynamicFunction('indexOf$1').Uint16Array = function(element) {
  return this.indexOf$2(element,0)
};
$.dynamicFunction('sort$1').Uint16Array = function(compare) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot sort immutable List.'));
 };
$.dynamicFunction('isEmpty$0').Uint16Array = function() {
  return $.eq($.get$length(this), 0);
 };
$.dynamicFunction('some$1').Uint16Array = function(f) {
  return $.some3(this, f);
 };
$.dynamicFunction('every$1').Uint16Array = function(f) {
  return $.every3(this, f);
 };
$.dynamicFunction('filter$1').Uint16Array = function(f) {
  return $.filter3(this, [], f);
 };
$.dynamicFunction('forEach$1').Uint16Array = function(f) {
  return $.forEach3(this, f);
 };
$.dynamicFunction('addAll$1').Uint16Array = function(collection) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('addLast$1').Uint16Array = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('add$1').Uint16Array = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('iterator$0').Uint16Array = function() {
  var t0 = $._lib5_FixedSizeListIterator$1(this);
  $.setRuntimeTypeInfo(t0, ({T: 'int'}));
  return t0;
 };
$.dynamicFunction('operator$indexSet$2').Uint16Array = function(index, value) {
  this[index] = value;
 };
$.dynamicFunction('operator$index$1').Uint16Array = function(index) {
  return this[index];;
 };
$.dynamicFunction('get$length').Uint16Array = function() { return this.length; };
$.dynamicFunction('is$List2').Uint16Array = function() { return true; };
$.dynamicFunction('is$Collection').Uint16Array = function() { return true; };
$.dynamicFunction('get$y').SVGPathSegMovetoRel = function() { return this.y; };
$.dynamicFunction('get$x').SVGPathSegMovetoRel = function() { return this.x; };
$.dynamicFunction('set$color').HTMLFontElement = function(v) { this.color = v; };
$.dynamicFunction('get$color').HTMLFontElement = function() { return this.color; };
$.dynamicFunction('is$Element').HTMLFontElement = function() { return true; };
$.dynamicFunction('get$y').SVGPathSegLinetoVerticalAbs = function() { return this.y; };
$.dynamicFunction('get$y').SVGCursorElement = function() { return this.y; };
$.dynamicFunction('get$x').SVGCursorElement = function() { return this.x; };
$.dynamicFunction('is$Element').SVGCursorElement = function() { return true; };
$.dynamicFunction('get$message').SQLError = function() { return this.message; };
$.dynamicFunction('get$type').StyleMedia = function() { return this.type; };
$.dynamicFunction('get$message').PositionError = function() { return this.message; };
$.dynamicFunction('get$type').HTMLOListElement = function() { return this.type; };
$.dynamicFunction('is$Element').HTMLOListElement = function() { return true; };
$.dynamicFunction('getRange$2').Int32Array = function(start, rangeLength) {
  return $.getRange2(this, start, rangeLength, []);
 };
$.dynamicFunction('removeRange$2').Int32Array = function(start, rangeLength) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot removeRange on immutable List.'));
 };
$.dynamicFunction('removeLast$0').Int32Array = function() {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot removeLast on immutable List.'));
 };
$.dynamicFunction('last$0').Int32Array = function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
 };
$.dynamicFunction('indexOf$2').Int32Array = function(element, start) {
  return $.indexOf2(this, element, start, $.get$length(this));
 };
$.dynamicFunction('indexOf$1').Int32Array = function(element) {
  return this.indexOf$2(element,0)
};
$.dynamicFunction('sort$1').Int32Array = function(compare) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot sort immutable List.'));
 };
$.dynamicFunction('isEmpty$0').Int32Array = function() {
  return $.eq($.get$length(this), 0);
 };
$.dynamicFunction('some$1').Int32Array = function(f) {
  return $.some3(this, f);
 };
$.dynamicFunction('every$1').Int32Array = function(f) {
  return $.every3(this, f);
 };
$.dynamicFunction('filter$1').Int32Array = function(f) {
  return $.filter3(this, [], f);
 };
$.dynamicFunction('forEach$1').Int32Array = function(f) {
  return $.forEach3(this, f);
 };
$.dynamicFunction('addAll$1').Int32Array = function(collection) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('addLast$1').Int32Array = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('add$1').Int32Array = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('iterator$0').Int32Array = function() {
  var t0 = $._lib5_FixedSizeListIterator$1(this);
  $.setRuntimeTypeInfo(t0, ({T: 'int'}));
  return t0;
 };
$.dynamicFunction('operator$indexSet$2').Int32Array = function(index, value) {
  this[index] = value;
 };
$.dynamicFunction('operator$index$1').Int32Array = function(index) {
  return this[index];;
 };
$.dynamicFunction('get$length').Int32Array = function() { return this.length; };
$.dynamicFunction('is$List2').Int32Array = function() { return true; };
$.dynamicFunction('is$Collection').Int32Array = function() { return true; };
$.dynamicFunction('is$Element').SVGTitleElement = function() { return true; };
$.dynamicFunction('get$type').CSSRule = function() { return this.type; };
$.dynamicFunction('contains$1').DOMStringList = function(string) {
  return this.contains(string);
 };
$.dynamicFunction('getRange$2').DOMStringList = function(start, rangeLength) {
  return $.getRange2(this, start, rangeLength, []);
 };
$.dynamicFunction('removeRange$2').DOMStringList = function(start, rangeLength) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot removeRange on immutable List.'));
 };
$.dynamicFunction('removeLast$0').DOMStringList = function() {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot removeLast on immutable List.'));
 };
$.dynamicFunction('last$0').DOMStringList = function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
 };
$.dynamicFunction('indexOf$2').DOMStringList = function(element, start) {
  return $.indexOf2(this, element, start, $.get$length(this));
 };
$.dynamicFunction('indexOf$1').DOMStringList = function(element) {
  return this.indexOf$2(element,0)
};
$.dynamicFunction('sort$1').DOMStringList = function(compare) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot sort immutable List.'));
 };
$.dynamicFunction('isEmpty$0').DOMStringList = function() {
  return $.eq($.get$length(this), 0);
 };
$.dynamicFunction('some$1').DOMStringList = function(f) {
  return $.some3(this, f);
 };
$.dynamicFunction('every$1').DOMStringList = function(f) {
  return $.every3(this, f);
 };
$.dynamicFunction('filter$1').DOMStringList = function(f) {
  return $.filter3(this, [], f);
 };
$.dynamicFunction('forEach$1').DOMStringList = function(f) {
  return $.forEach3(this, f);
 };
$.dynamicFunction('addAll$1').DOMStringList = function(collection) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('addLast$1').DOMStringList = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('add$1').DOMStringList = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('iterator$0').DOMStringList = function() {
  var t0 = $._lib5_FixedSizeListIterator$1(this);
  $.setRuntimeTypeInfo(t0, ({T: 'String'}));
  return t0;
 };
$.dynamicFunction('operator$indexSet$2').DOMStringList = function(index, value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot assign element of immutable List.'));
 };
$.dynamicFunction('operator$index$1').DOMStringList = function(index) {
  return this[index];;
 };
$.dynamicFunction('get$length').DOMStringList = function() { return this.length; };
$.dynamicFunction('is$List2').DOMStringList = function() { return true; };
$.dynamicFunction('is$Collection').DOMStringList = function() { return true; };
$.dynamicFunction('get$length').MediaStreamTrackList = function() { return this.length; };
$.dynamicFunction('toString$0').HTMLAnchorElement = function() {
  return this.toString();
 };
$.dynamicFunction('get$type').HTMLAnchorElement = function() { return this.type; };
$.dynamicFunction('get$target').HTMLAnchorElement = function() { return this.target; };
$.dynamicFunction('set$name').HTMLAnchorElement = function(v) { this.name = v; };
$.dynamicFunction('get$name').HTMLAnchorElement = function() { return this.name; };
$.dynamicFunction('is$Element').HTMLAnchorElement = function() { return true; };
$.dynamicFunction('is$Element').HTMLModElement = function() { return true; };
$.dynamicFunction('get$message').SpeechRecognitionError = function() { return this.message; };
$.dynamicFunction('is$Element').SVGPathElement = function() { return true; };
$.dynamicFunction('is$Element').SVGSwitchElement = function() { return true; };
$.dynamicFunction('get$value').IDBCursorWithValue = function() { return this.value; };
$.dynamicFunction('get$type').HTMLKeygenElement = function() { return this.type; };
$.dynamicFunction('set$name').HTMLKeygenElement = function(v) { this.name = v; };
$.dynamicFunction('get$name').HTMLKeygenElement = function() { return this.name; };
$.dynamicFunction('is$Element').HTMLKeygenElement = function() { return true; };
$.dynamicFunction('get$style').CSSFontFaceRule = function() { return this.style; };
$.dynamicFunction('get$message').ErrorEvent = function() { return this.message; };
$.dynamicFunction('get$type').StyleSheet = function() { return this.type; };
$.dynamicFunction('get$y').SVGPathSegLinetoRel = function() { return this.y; };
$.dynamicFunction('get$x').SVGPathSegLinetoRel = function() { return this.x; };
$.dynamicFunction('remove$2').Entry = function(successCallback, errorCallback) {
  return this.remove($.convertDartClosureToJS(successCallback),$.convertDartClosureToJS(errorCallback));
 };
$.dynamicFunction('remove$1').Entry = function(successCallback) {
  successCallback = $.convertDartClosureToJS(successCallback);
  errorCallback = $.convertDartClosureToJS(errorCallback);
  return this.remove(successCallback);
};
$.dynamicFunction('get$name').Entry = function() { return this.name; };
$.dynamicFunction('get$y').SVGSVGElement = function() { return this.y; };
$.dynamicFunction('get$x').SVGSVGElement = function() { return this.x; };
$.dynamicFunction('get$width').SVGSVGElement = function() { return this.width; };
$.dynamicFunction('get$height').SVGSVGElement = function() { return this.height; };
$.dynamicFunction('is$Element').SVGSVGElement = function() { return true; };
$.dynamicFunction('get$style').WebKitCSSKeyframeRule = function() { return this.style; };
$.dynamicFunction('get$length').FileList = function() { return this.length; };
$.dynamicFunction('get$uri').SVGPaint = function() { return this.uri; };
$.dynamicFunction('get$propertyName').WebKitTransitionEvent = function() { return this.propertyName; };
$.dynamicFunction('is$Element').SVGTSpanElement = function() { return true; };
$.dynamicFunction('get$length').AudioBuffer = function() { return this.length; };
$.dynamicFunction('$dom_setItem$2').Storage = function(key, data) {
  return this.setItem(key,data);
 };
$.dynamicFunction('$dom_removeItem$1').Storage = function(key) {
  return this.removeItem(key);
 };
$.dynamicFunction('$dom_key$1').Storage = function(index) {
  return this.key(index);
 };
$.dynamicFunction('$dom_getItem$1').Storage = function(key) {
  return this.getItem(key);
 };
$.dynamicFunction('$dom_clear$0').Storage = function() {
  return this.clear();
 };
$.dynamicFunction('get$$dom_length').Storage = function() {
  return this.length;;
 };
$.dynamicFunction('isEmpty$0').Storage = function() {
  return $.eqNull(this.$dom_key$1(0));
 };
$.dynamicFunction('get$length').Storage = function() {
  return this.get$$dom_length();
 };
$.dynamicFunction('getKeys$0').Storage = function() {
  var keys = [];
  this.forEach$1(new $.Closure115(keys));
  return keys;
 };
$.dynamicFunction('forEach$1').Storage = function(f) {
  for (var i = 0; true; i = i + 1) {
    var key = this.$dom_key$1(i);
    if ($.eqNullB(key)) {
      return;
    }
    f.$call$2(key, this.operator$index$1(key));
  }
 };
$.dynamicFunction('clear$0').Storage = function() {
  return this.$dom_clear$0();
 };
$.dynamicFunction('remove$1').Storage = function(key) {
  var value = this.operator$index$1(key);
  this.$dom_removeItem$1(key);
  return value;
 };
$.dynamicFunction('operator$indexSet$2').Storage = function(key, value) {
  return this.$dom_setItem$2(key, value);
 };
$.dynamicFunction('operator$index$1').Storage = function(key) {
  return this.$dom_getItem$1(key);
 };
$.dynamicFunction('containsKey$1').Storage = function(key) {
  return !$.eqNullB(this.$dom_getItem$1(key));
 };
$.dynamicFunction('is$Map').Storage = function() { return true; };
$.dynamicFunction('postMessage$2').DedicatedWorkerContext = function(message, messagePorts) {
  return this.postMessage(message,messagePorts);
 };
$.dynamicFunction('get$on').DedicatedWorkerContext = function() {
  return $._lib5_DedicatedWorkerContextEventsImpl$1(this);
 };
$.dynamicFunction('is$Element').SVGFEFuncRElement = function() { return true; };
$.dynamicFunction('postMessage$2').Worker = function(message, messagePorts) {
  return this.postMessage(message,messagePorts);
 };
$.dynamicFunction('get$on').Worker = function() {
  return $._lib5_WorkerEventsImpl$1(this);
 };
$.dynamicFunction('clear$0').SVGPointList = function() {
  return this.clear();
 };
$.dynamicFunction('$dom_removeEventListener$3').TextTrack = function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('$dom_addEventListener$3').TextTrack = function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('get$kind').TextTrack = function() { return this.kind; };
$.dynamicFunction('get$on').TextTrack = function() {
  return $._lib5_TextTrackEventsImpl$1(this);
 };
$.dynamicFunction('get$message').SQLException = function() { return this.message; };
$.dynamicFunction('clear$0').SVGLengthList = function() {
  return this.clear();
 };
$.dynamicFunction('query$1').NodeSelector = function(selectors) {
  return this.querySelector(selectors);
 };
$.dynamicFunction('get$y').WheelEvent = function() { return this.y; };
$.dynamicFunction('get$x').WheelEvent = function() { return this.x; };
$.dynamicFunction('is$Element').SVGEllipseElement = function() { return true; };
$.dynamicFunction('$dom_removeEventListener$3').BatteryManager = function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('$dom_addEventListener$3').BatteryManager = function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('get$on').BatteryManager = function() {
  return $._lib5_BatteryManagerEventsImpl$1(this);
 };
$.dynamicFunction('is$Element').SVGTextContentElement = function() { return true; };
$.dynamicFunction('get$type').BiquadFilterNode = function() { return this.type; };
$.dynamicFunction('getRange$2').TouchList = function(start, rangeLength) {
  return $.getRange2(this, start, rangeLength, []);
 };
$.dynamicFunction('removeRange$2').TouchList = function(start, rangeLength) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot removeRange on immutable List.'));
 };
$.dynamicFunction('removeLast$0').TouchList = function() {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot removeLast on immutable List.'));
 };
$.dynamicFunction('last$0').TouchList = function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
 };
$.dynamicFunction('indexOf$2').TouchList = function(element, start) {
  return $.indexOf2(this, element, start, $.get$length(this));
 };
$.dynamicFunction('indexOf$1').TouchList = function(element) {
  return this.indexOf$2(element,0)
};
$.dynamicFunction('sort$1').TouchList = function(compare) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot sort immutable List.'));
 };
$.dynamicFunction('isEmpty$0').TouchList = function() {
  return $.eq($.get$length(this), 0);
 };
$.dynamicFunction('some$1').TouchList = function(f) {
  return $.some3(this, f);
 };
$.dynamicFunction('every$1').TouchList = function(f) {
  return $.every3(this, f);
 };
$.dynamicFunction('filter$1').TouchList = function(f) {
  return $.filter3(this, [], f);
 };
$.dynamicFunction('forEach$1').TouchList = function(f) {
  return $.forEach3(this, f);
 };
$.dynamicFunction('addAll$1').TouchList = function(collection) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('addLast$1').TouchList = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('add$1').TouchList = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('iterator$0').TouchList = function() {
  var t0 = $._lib5_FixedSizeListIterator$1(this);
  $.setRuntimeTypeInfo(t0, ({T: 'Touch'}));
  return t0;
 };
$.dynamicFunction('operator$indexSet$2').TouchList = function(index, value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot assign element of immutable List.'));
 };
$.dynamicFunction('operator$index$1').TouchList = function(index) {
  return this[index];;
 };
$.dynamicFunction('get$length').TouchList = function() { return this.length; };
$.dynamicFunction('is$List2').TouchList = function() { return true; };
$.dynamicFunction('is$Collection').TouchList = function() { return true; };
$.dynamicFunction('get$on').HTMLFrameSetElement = function() {
  return $._lib5_FrameSetElementEventsImpl$1(this);
 };
$.dynamicFunction('is$Element').HTMLFrameSetElement = function() { return true; };
$.dynamicFunction('get$on').SVGElementInstance = function() {
  return $._lib5_SVGElementInstanceEventsImpl$1(this);
 };
$.dynamicFunction('is$Element').SVGLinearGradientElement = function() { return true; };
$.dynamicFunction('toString$0').DOMTokenList = function() {
  return this.toString();
 };
$.dynamicFunction('remove$1').DOMTokenList = function(token) {
  return this.remove(token);
 };
$.dynamicFunction('contains$1').DOMTokenList = function(token) {
  return this.contains(token);
 };
$.dynamicFunction('add$1').DOMTokenList = function(token) {
  return this.add(token);
 };
$.dynamicFunction('get$length').DOMTokenList = function() { return this.length; };
$.dynamicFunction('is$Element').SVGDefsElement = function() { return true; };
$.dynamicFunction('toString$0').Location = function() {
  return this.toString();
 };
$.dynamicFunction('get$width').HTMLFrameElement = function() { return this.width; };
$.dynamicFunction('set$name').HTMLFrameElement = function(v) { this.name = v; };
$.dynamicFunction('get$name').HTMLFrameElement = function() { return this.name; };
$.dynamicFunction('get$height').HTMLFrameElement = function() { return this.height; };
$.dynamicFunction('is$Element').HTMLFrameElement = function() { return true; };
$.dynamicFunction('stopPropagation$0').Event = function() {
  return this.stopPropagation();
 };
$.dynamicFunction('get$type').Event = function() { return this.type; };
$.dynamicFunction('get$target').Event = function() { return this.target; };
$.dynamicFunction('get$cancelable').Event = function() { return this.cancelable; };
$.dynamicFunction('set$cancelBubble').Event = function(v) { this.cancelBubble = v; };
$.dynamicFunction('set$width').HTMLVideoElement = function(v) { this.width = v; };
$.dynamicFunction('get$width').HTMLVideoElement = function() { return this.width; };
$.dynamicFunction('set$height').HTMLVideoElement = function(v) { this.height = v; };
$.dynamicFunction('get$height').HTMLVideoElement = function() { return this.height; };
$.dynamicFunction('is$Element').HTMLVideoElement = function() { return true; };
$.dynamicFunction('get$type').SVGTransform = function() { return this.type; };
$.dynamicFunction('is$Element').SVGGlyphElement = function() { return true; };
$.dynamicFunction('get$y').WebKitPoint = function() { return this.y; };
$.dynamicFunction('get$x').WebKitPoint = function() { return this.x; };
$.dynamicFunction('get$name').File = function() { return this.name; };
$.dynamicFunction('get$children').ScriptProfileNode = function() { return this.children; };
$.dynamicFunction('get$length').CharacterData = function() { return this.length; };
$.dynamicFunction('get$y').SVGPathSegLinetoAbs = function() { return this.y; };
$.dynamicFunction('get$x').SVGPathSegLinetoAbs = function() { return this.x; };
$.dynamicFunction('get$type').PerformanceNavigation = function() { return this.type; };
$.dynamicFunction('get$type').WebGLActiveInfo = function() { return this.type; };
$.dynamicFunction('get$name').WebGLActiveInfo = function() { return this.name; };
$.dynamicFunction('get$length').EntryArray = function() { return this.length; };
$.dynamicFunction('get$type').DOMMimeType = function() { return this.type; };
_ConsoleImpl = (typeof console == 'undefined' ? {} : console);
_ConsoleImpl.time$1 = function(title) {
  return this.time(title);
 };
_ConsoleImpl.get$time = function() { return new $.Closure338(this); };
_ConsoleImpl.group$1 = function(arg) {
  return this.group(arg);
 };
$.dynamicFunction('$dom_removeEventListener$3').DeprecatedPeerConnection = function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('$dom_addEventListener$3').DeprecatedPeerConnection = function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('get$on').DeprecatedPeerConnection = function() {
  return $._lib5_DeprecatedPeerConnectionEventsImpl$1(this);
 };
$.dynamicFunction('get$y').HTMLImageElement = function() { return this.y; };
$.dynamicFunction('get$x').HTMLImageElement = function() { return this.x; };
$.dynamicFunction('set$width').HTMLImageElement = function(v) { this.width = v; };
$.dynamicFunction('get$width').HTMLImageElement = function() { return this.width; };
$.dynamicFunction('set$name').HTMLImageElement = function(v) { this.name = v; };
$.dynamicFunction('get$name').HTMLImageElement = function() { return this.name; };
$.dynamicFunction('set$height').HTMLImageElement = function(v) { this.height = v; };
$.dynamicFunction('get$height').HTMLImageElement = function() { return this.height; };
$.dynamicFunction('complete$1').HTMLImageElement = function(arg0) { return this.complete.$call$1(arg0); };
$.dynamicFunction('is$Element').HTMLImageElement = function() { return true; };
$.dynamicFunction('$dom_removeEventListener$3').IDBVersionChangeRequest = function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('$dom_addEventListener$3').IDBVersionChangeRequest = function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('get$on').IDBVersionChangeRequest = function() {
  return $._lib5_IDBVersionChangeRequestEventsImpl$1(this);
 };
$.dynamicFunction('set$width').HTMLIFrameElement = function(v) { this.width = v; };
$.dynamicFunction('get$width').HTMLIFrameElement = function() { return this.width; };
$.dynamicFunction('set$name').HTMLIFrameElement = function(v) { this.name = v; };
$.dynamicFunction('get$name').HTMLIFrameElement = function() { return this.name; };
$.dynamicFunction('set$height').HTMLIFrameElement = function(v) { this.height = v; };
$.dynamicFunction('get$height').HTMLIFrameElement = function() { return this.height; };
$.dynamicFunction('is$Element').HTMLIFrameElement = function() { return true; };
$.dynamicFunction('get$length').TimeRanges = function() { return this.length; };
$.dynamicFunction('$dom_removeEventListener$3').IDBDatabase = function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('$dom_addEventListener$3').IDBDatabase = function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('get$name').IDBDatabase = function() { return this.name; };
$.dynamicFunction('get$on').IDBDatabase = function() {
  return $._lib5_IDBDatabaseEventsImpl$1(this);
 };
$.dynamicFunction('set$value').SVGAngle = function(v) { this.value = v; };
$.dynamicFunction('get$value').SVGAngle = function() { return this.value; };
$.dynamicFunction('remove$1').HTMLOptionsCollection = function(index) {
  return this.remove(index);
 };
$.dynamicFunction('get$selectedIndex').HTMLOptionsCollection = function() { return this.selectedIndex; };
$.dynamicFunction('set$length').HTMLOptionsCollection = function(value) {
  this.length = value;;
 };
$.dynamicFunction('get$length').HTMLOptionsCollection = function() {
  return this.length;;
 };
$.dynamicFunction('is$List2').HTMLOptionsCollection = function() { return true; };
$.dynamicFunction('is$Collection').HTMLOptionsCollection = function() { return true; };
$.dynamicFunction('is$Element').HTMLHtmlElement = function() { return true; };
$.dynamicFunction('clear$0').IDBObjectStore = function() {
  return this.clear();
 };
$.dynamicFunction('add$2').IDBObjectStore = function(value, key) {
  return this.add(value,key);
 };
$.dynamicFunction('add$1').IDBObjectStore = function(value) {
  return this.add(value);
};
$.dynamicFunction('get$name').IDBObjectStore = function() { return this.name; };
$.dynamicFunction('get$style').CSSStyleRule = function() { return this.style; };
$.dynamicFunction('is$Element').HTMLTitleElement = function() { return true; };
$.dynamicFunction('operator$index$1').NodeList = function(index) {
  return this[index];;
 };
$.dynamicFunction('get$length').NodeList = function() { return this.length; };
$.dynamicFunction('getRange$2').NodeList = function(start, rangeLength) {
  return $._lib5_NodeListWrapper$1($.getRange2(this, start, rangeLength, []));
 };
$.dynamicFunction('removeRange$2').NodeList = function(start, rangeLength) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot removeRange on immutable List.'));
 };
$.dynamicFunction('get$first').NodeList = function() {
  return this.operator$index$1(0);
 };
$.dynamicFunction('first$0').NodeList = function() { return this.get$first().$call$0(); };
$.dynamicFunction('last$0').NodeList = function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
 };
$.dynamicFunction('indexOf$2').NodeList = function(element, start) {
  return $.indexOf2(this, element, start, $.get$length(this));
 };
$.dynamicFunction('indexOf$1').NodeList = function(element) {
  return this.indexOf$2(element,0)
};
$.dynamicFunction('sort$1').NodeList = function(compare) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot sort immutable List.'));
 };
$.dynamicFunction('isEmpty$0').NodeList = function() {
  return $.eq($.get$length(this), 0);
 };
$.dynamicFunction('some$1').NodeList = function(f) {
  return $.some3(this, f);
 };
$.dynamicFunction('every$1').NodeList = function(f) {
  return $.every3(this, f);
 };
$.dynamicFunction('filter$1').NodeList = function(f) {
  return $._lib5_NodeListWrapper$1($.filter3(this, [], f));
 };
$.dynamicFunction('forEach$1').NodeList = function(f) {
  return $.forEach3(this, f);
 };
$.dynamicFunction('operator$indexSet$2').NodeList = function(index, value) {
  this.get$_lib5_parent().$dom_replaceChild$2(value, this.operator$index$1(index));
 };
$.dynamicFunction('clear$0').NodeList = function() {
  this.get$_lib5_parent().set$text('');
 };
$.dynamicFunction('removeLast$0').NodeList = function() {
  var result = this.last$0();
  if (!$.eqNullB(result)) {
    this.get$_lib5_parent().$dom_removeChild$1(result);
  }
  return result;
 };
$.dynamicFunction('addAll$1').NodeList = function(collection) {
  for (var t0 = $.iterator(collection); t0.hasNext$0() === true; ) {
    var t1 = t0.next$0();
    this.get$_lib5_parent().$dom_appendChild$1(t1);
  }
 };
$.dynamicFunction('addLast$1').NodeList = function(value) {
  this.get$_lib5_parent().$dom_appendChild$1(value);
 };
$.dynamicFunction('add$1').NodeList = function(value) {
  this.get$_lib5_parent().$dom_appendChild$1(value);
 };
$.dynamicFunction('iterator$0').NodeList = function() {
  var t0 = $._lib5_FixedSizeListIterator$1(this);
  $.setRuntimeTypeInfo(t0, ({T: 'Node'}));
  return t0;
 };
$.dynamicFunction('get$_lib5_parent').NodeList = function() { return this._lib5_parent; };
$.dynamicFunction('is$List2').NodeList = function() { return true; };
$.dynamicFunction('is$Collection').NodeList = function() { return true; };
$.dynamicFunction('get$y').SVGFilterPrimitiveStandardAttributes = function() { return this.y; };
$.dynamicFunction('get$x').SVGFilterPrimitiveStandardAttributes = function() { return this.x; };
$.dynamicFunction('get$width').SVGFilterPrimitiveStandardAttributes = function() { return this.width; };
$.dynamicFunction('get$height').SVGFilterPrimitiveStandardAttributes = function() { return this.height; };
$.dynamicFunction('get$y').SVGPathSegCurvetoCubicSmoothRel = function() { return this.y; };
$.dynamicFunction('get$x').SVGPathSegCurvetoCubicSmoothRel = function() { return this.x; };
$.dynamicFunction('is$Element').HTMLParagraphElement = function() { return true; };
$.dynamicFunction('get$name').DocumentType = function() { return this.name; };
$.dynamicFunction('is$Element').HTMLDListElement = function() { return true; };
$.dynamicFunction('set$value').HTMLOutputElement = function(v) { this.value = v; };
$.dynamicFunction('get$value').HTMLOutputElement = function() { return this.value; };
$.dynamicFunction('get$type').HTMLOutputElement = function() { return this.type; };
$.dynamicFunction('set$name').HTMLOutputElement = function(v) { this.name = v; };
$.dynamicFunction('get$name').HTMLOutputElement = function() { return this.name; };
$.dynamicFunction('is$Element').HTMLOutputElement = function() { return true; };
$.dynamicFunction('get$y').SVGFEBlendElement = function() { return this.y; };
$.dynamicFunction('get$x').SVGFEBlendElement = function() { return this.x; };
$.dynamicFunction('get$width').SVGFEBlendElement = function() { return this.width; };
$.dynamicFunction('get$height').SVGFEBlendElement = function() { return this.height; };
$.dynamicFunction('is$Element').SVGFEBlendElement = function() { return true; };
$.dynamicFunction('is$Element').HTMLTableCaptionElement = function() { return true; };
$.dynamicFunction('set$value').HTMLLIElement = function(v) { this.value = v; };
$.dynamicFunction('get$value').HTMLLIElement = function() { return this.value; };
$.dynamicFunction('get$type').HTMLLIElement = function() { return this.type; };
$.dynamicFunction('is$Element').HTMLLIElement = function() { return true; };
$.dynamicFunction('get$length').CSSRuleList = function() { return this.length; };
$.dynamicFunction('get$length').SQLResultSetRowList = function() { return this.length; };
$.dynamicFunction('filter$1').NodeIterator = function(arg0) { return this.filter.$call$1(arg0); };
$.dynamicFunction('getRange$2').Uint8Array = function(start, rangeLength) {
  return $.getRange2(this, start, rangeLength, []);
 };
$.dynamicFunction('removeRange$2').Uint8Array = function(start, rangeLength) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot removeRange on immutable List.'));
 };
$.dynamicFunction('removeLast$0').Uint8Array = function() {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot removeLast on immutable List.'));
 };
$.dynamicFunction('last$0').Uint8Array = function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
 };
$.dynamicFunction('indexOf$2').Uint8Array = function(element, start) {
  return $.indexOf2(this, element, start, $.get$length(this));
 };
$.dynamicFunction('indexOf$1').Uint8Array = function(element) {
  return this.indexOf$2(element,0)
};
$.dynamicFunction('sort$1').Uint8Array = function(compare) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot sort immutable List.'));
 };
$.dynamicFunction('isEmpty$0').Uint8Array = function() {
  return $.eq($.get$length(this), 0);
 };
$.dynamicFunction('some$1').Uint8Array = function(f) {
  return $.some3(this, f);
 };
$.dynamicFunction('every$1').Uint8Array = function(f) {
  return $.every3(this, f);
 };
$.dynamicFunction('filter$1').Uint8Array = function(f) {
  return $.filter3(this, [], f);
 };
$.dynamicFunction('forEach$1').Uint8Array = function(f) {
  return $.forEach3(this, f);
 };
$.dynamicFunction('addAll$1').Uint8Array = function(collection) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('addLast$1').Uint8Array = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('add$1').Uint8Array = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('iterator$0').Uint8Array = function() {
  var t0 = $._lib5_FixedSizeListIterator$1(this);
  $.setRuntimeTypeInfo(t0, ({T: 'int'}));
  return t0;
 };
$.dynamicFunction('operator$indexSet$2').Uint8Array = function(index, value) {
  this[index] = value;
 };
$.dynamicFunction('operator$index$1').Uint8Array = function(index) {
  return this[index];;
 };
$.dynamicFunction('get$length').Uint8Array = function() { return this.length; };
$.dynamicFunction('is$List2').Uint8Array = function() { return true; };
$.dynamicFunction('is$Collection').Uint8Array = function() { return true; };
$.dynamicFunction('get$y').SVGRect = function() { return this.y; };
$.dynamicFunction('get$x').SVGRect = function() { return this.x; };
$.dynamicFunction('set$width').SVGRect = function(v) { this.width = v; };
$.dynamicFunction('get$width').SVGRect = function() { return this.width; };
$.dynamicFunction('set$height').SVGRect = function(v) { this.height = v; };
$.dynamicFunction('get$height').SVGRect = function() { return this.height; };
$.dynamicFunction('get$x').SVGPathSegLinetoHorizontalAbs = function() { return this.x; };
$.dynamicFunction('get$length').CSSValueList = function() { return this.length; };
$.dynamicFunction('is$Element').SVGGElement = function() { return true; };
$.dynamicFunction('get$y').SVGPathSegCurvetoCubicAbs = function() { return this.y; };
$.dynamicFunction('get$x').SVGPathSegCurvetoCubicAbs = function() { return this.x; };
$.dynamicFunction('is$Element').SVGTRefElement = function() { return true; };
$.dynamicFunction('get$target').HTMLBaseElement = function() { return this.target; };
$.dynamicFunction('is$Element').HTMLBaseElement = function() { return true; };
$.dynamicFunction('get$y').SVGFEGaussianBlurElement = function() { return this.y; };
$.dynamicFunction('get$x').SVGFEGaussianBlurElement = function() { return this.x; };
$.dynamicFunction('get$width').SVGFEGaussianBlurElement = function() { return this.width; };
$.dynamicFunction('get$height').SVGFEGaussianBlurElement = function() { return this.height; };
$.dynamicFunction('is$Element').SVGFEGaussianBlurElement = function() { return true; };
$.dynamicFunction('get$target').ProcessingInstruction = function() { return this.target; };
$.dynamicFunction('get$name').WebKitAnimation = function() { return this.name; };
$.dynamicFunction('get$name').DOMPlugin = function() { return this.name; };
$.dynamicFunction('get$length').DOMPlugin = function() { return this.length; };
$.dynamicFunction('get$length').SpeechRecognitionResult = function() { return this.length; };
$.dynamicFunction('set$value').SVGLength = function(v) { this.value = v; };
$.dynamicFunction('get$value').SVGLength = function() { return this.value; };
$.dynamicFunction('$dom_removeEventListener$3').MessagePort = function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('postMessage$2').MessagePort = function(message, messagePorts) {
  return this.postMessage(message,messagePorts);
 };
$.dynamicFunction('$dom_addEventListener$3').MessagePort = function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('get$on').MessagePort = function() {
  return $._lib5_MessagePortEventsImpl$1(this);
 };
$.dynamicFunction('is$Element').SVGFEFuncGElement = function() { return true; };
$.dynamicFunction('is$Element').SVGFontFaceElement = function() { return true; };
$.dynamicFunction('toString$0').IDBDatabaseException = function() {
  return this.toString();
 };
$.dynamicFunction('get$name').IDBDatabaseException = function() { return this.name; };
$.dynamicFunction('get$message').IDBDatabaseException = function() { return this.message; };
$.dynamicFunction('get$tag').Notification = function() { return this.tag; };
$.dynamicFunction('get$on').Notification = function() {
  return $._lib5_NotificationEventsImpl$1(this);
 };
$.dynamicFunction('$dom_removeEventListener$3').WorkerContext = function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('$dom_addEventListener$3').WorkerContext = function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('get$navigator').WorkerContext = function() { return this.navigator; };
$.dynamicFunction('get$on').WorkerContext = function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
    return $._lib5_WorkerContextEventsImpl$1(this);
  } else {
    return Object.prototype.get$on.call(this);
  }
 };
$.dynamicFunction('set$value').HTMLInputElement = function(v) { this.value = v; };
$.dynamicFunction('get$value').HTMLInputElement = function() { return this.value; };
$.dynamicFunction('get$type').HTMLInputElement = function() { return this.type; };
$.dynamicFunction('set$readOnly').HTMLInputElement = function(v) { this.readOnly = v; };
$.dynamicFunction('get$pattern').HTMLInputElement = function() { return this.pattern; };
$.dynamicFunction('set$name').HTMLInputElement = function(v) { this.name = v; };
$.dynamicFunction('get$name').HTMLInputElement = function() { return this.name; };
$.dynamicFunction('get$maxLength').HTMLInputElement = function() { return this.maxLength; };
$.dynamicFunction('get$on').HTMLInputElement = function() {
  return $._lib5_InputElementEventsImpl$1(this);
 };
$.dynamicFunction('is$Element').HTMLInputElement = function() { return true; };
$.dynamicFunction('get$length').TextTrackCueList = function() { return this.length; };
$.dynamicFunction('get$type').HTMLFieldSetElement = function() { return this.type; };
$.dynamicFunction('set$name').HTMLFieldSetElement = function(v) { this.name = v; };
$.dynamicFunction('get$name').HTMLFieldSetElement = function() { return this.name; };
$.dynamicFunction('is$Element').HTMLFieldSetElement = function() { return true; };
$.dynamicFunction('$dom_removeEventListener$3').EventTarget = function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_removeEventListener$3')) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener),useCapture);
  } else {
    return Object.prototype.$dom_removeEventListener$3.call(this, type, listener, useCapture);
  }
 };
$.dynamicFunction('$dom_addEventListener$3').EventTarget = function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_addEventListener$3')) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
  } else {
    return Object.prototype.$dom_addEventListener$3.call(this, type, listener, useCapture);
  }
 };
$.dynamicFunction('get$on').EventTarget = function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
    return $._lib5_EventsImpl$1(this);
  } else {
    return Object.prototype.get$on.call(this);
  }
 };
$.dynamicFunction('get$width').TextMetrics = function() { return this.width; };
$.dynamicFunction('get$top').Rect = function() { return this.top; };
$.dynamicFunction('get$right').Rect = function() { return this.right; };
$.dynamicFunction('get$left').Rect = function() { return this.left; };
$.dynamicFunction('get$bottom').Rect = function() { return this.bottom; };
$.dynamicFunction('get$type').DataTransferItem = function() { return this.type; };
$.dynamicFunction('get$kind').DataTransferItem = function() { return this.kind; };
$.dynamicFunction('is$Element').HTMLAudioElement = function() { return true; };
$.dynamicFunction('get$type').SVGScriptElement = function() { return this.type; };
$.dynamicFunction('is$Element').SVGScriptElement = function() { return true; };
$.dynamicFunction('get$message').MediaKeyEvent = function() { return this.message; };
$.dynamicFunction('getRange$2').Int16Array = function(start, rangeLength) {
  return $.getRange2(this, start, rangeLength, []);
 };
$.dynamicFunction('removeRange$2').Int16Array = function(start, rangeLength) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot removeRange on immutable List.'));
 };
$.dynamicFunction('removeLast$0').Int16Array = function() {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot removeLast on immutable List.'));
 };
$.dynamicFunction('last$0').Int16Array = function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
 };
$.dynamicFunction('indexOf$2').Int16Array = function(element, start) {
  return $.indexOf2(this, element, start, $.get$length(this));
 };
$.dynamicFunction('indexOf$1').Int16Array = function(element) {
  return this.indexOf$2(element,0)
};
$.dynamicFunction('sort$1').Int16Array = function(compare) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot sort immutable List.'));
 };
$.dynamicFunction('isEmpty$0').Int16Array = function() {
  return $.eq($.get$length(this), 0);
 };
$.dynamicFunction('some$1').Int16Array = function(f) {
  return $.some3(this, f);
 };
$.dynamicFunction('every$1').Int16Array = function(f) {
  return $.every3(this, f);
 };
$.dynamicFunction('filter$1').Int16Array = function(f) {
  return $.filter3(this, [], f);
 };
$.dynamicFunction('forEach$1').Int16Array = function(f) {
  return $.forEach3(this, f);
 };
$.dynamicFunction('addAll$1').Int16Array = function(collection) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('addLast$1').Int16Array = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('add$1').Int16Array = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('iterator$0').Int16Array = function() {
  var t0 = $._lib5_FixedSizeListIterator$1(this);
  $.setRuntimeTypeInfo(t0, ({T: 'int'}));
  return t0;
 };
$.dynamicFunction('operator$indexSet$2').Int16Array = function(index, value) {
  this[index] = value;
 };
$.dynamicFunction('operator$index$1').Int16Array = function(index) {
  return this[index];;
 };
$.dynamicFunction('get$length').Int16Array = function() { return this.length; };
$.dynamicFunction('is$List2').Int16Array = function() { return true; };
$.dynamicFunction('is$Collection').Int16Array = function() { return true; };
$.dynamicFunction('set$value').HTMLButtonElement = function(v) { this.value = v; };
$.dynamicFunction('get$value').HTMLButtonElement = function() { return this.value; };
$.dynamicFunction('get$type').HTMLButtonElement = function() { return this.type; };
$.dynamicFunction('set$name').HTMLButtonElement = function(v) { this.name = v; };
$.dynamicFunction('get$name').HTMLButtonElement = function() { return this.name; };
$.dynamicFunction('is$Element').HTMLButtonElement = function() { return true; };
$.dynamicFunction('set$innerHTML').SVGElement = function(svg) {
  var container = $.Element$tag('div');
  container.set$innerHTML('<svg version="1.1">' + $.stringToString(svg) + '</svg>');
  this.set$elements(container.get$elements().get$first().get$elements());
 };
$.dynamicFunction('set$elements').SVGElement = function(value) {
  var elements = this.get$elements();
  $.clear(elements);
  $.addAll(elements, value);
 };
$.dynamicFunction('get$elements').SVGElement = function() {
  return $.FilteredElementList$1(this);
 };
$.dynamicFunction('is$Element').SVGElement = function() { return true; };
$.dynamicFunction('getRange$2').Float32Array = function(start, rangeLength) {
  return $.getRange2(this, start, rangeLength, []);
 };
$.dynamicFunction('removeRange$2').Float32Array = function(start, rangeLength) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot removeRange on immutable List.'));
 };
$.dynamicFunction('removeLast$0').Float32Array = function() {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot removeLast on immutable List.'));
 };
$.dynamicFunction('last$0').Float32Array = function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
 };
$.dynamicFunction('indexOf$2').Float32Array = function(element, start) {
  return $.indexOf2(this, element, start, $.get$length(this));
 };
$.dynamicFunction('indexOf$1').Float32Array = function(element) {
  return this.indexOf$2(element,0)
};
$.dynamicFunction('sort$1').Float32Array = function(compare) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot sort immutable List.'));
 };
$.dynamicFunction('isEmpty$0').Float32Array = function() {
  return $.eq($.get$length(this), 0);
 };
$.dynamicFunction('some$1').Float32Array = function(f) {
  return $.some3(this, f);
 };
$.dynamicFunction('every$1').Float32Array = function(f) {
  return $.every3(this, f);
 };
$.dynamicFunction('filter$1').Float32Array = function(f) {
  return $.filter3(this, [], f);
 };
$.dynamicFunction('forEach$1').Float32Array = function(f) {
  return $.forEach3(this, f);
 };
$.dynamicFunction('addAll$1').Float32Array = function(collection) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('addLast$1').Float32Array = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('add$1').Float32Array = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('iterator$0').Float32Array = function() {
  var t0 = $._lib5_FixedSizeListIterator$1(this);
  $.setRuntimeTypeInfo(t0, ({T: 'num'}));
  return t0;
 };
$.dynamicFunction('operator$indexSet$2').Float32Array = function(index, value) {
  this[index] = value;
 };
$.dynamicFunction('operator$index$1').Float32Array = function(index) {
  return this[index];;
 };
$.dynamicFunction('get$length').Float32Array = function() { return this.length; };
$.dynamicFunction('is$List2').Float32Array = function() { return true; };
$.dynamicFunction('is$Collection').Float32Array = function() { return true; };
$.dynamicFunction('$dom_removeEventListener$3').FileReader = function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('$dom_addEventListener$3').FileReader = function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('get$on').FileReader = function() {
  return $._lib5_FileReaderEventsImpl$1(this);
 };
$.dynamicFunction('get$y').SVGFilterElement = function() { return this.y; };
$.dynamicFunction('get$x').SVGFilterElement = function() { return this.x; };
$.dynamicFunction('get$width').SVGFilterElement = function() { return this.width; };
$.dynamicFunction('get$height').SVGFilterElement = function() { return this.height; };
$.dynamicFunction('is$Element').SVGFilterElement = function() { return true; };
$.dynamicFunction('get$y').SVGFEConvolveMatrixElement = function() { return this.y; };
$.dynamicFunction('get$x').SVGFEConvolveMatrixElement = function() { return this.x; };
$.dynamicFunction('get$width').SVGFEConvolveMatrixElement = function() { return this.width; };
$.dynamicFunction('get$height').SVGFEConvolveMatrixElement = function() { return this.height; };
$.dynamicFunction('is$Element').SVGFEConvolveMatrixElement = function() { return true; };
$.dynamicFunction('is$Element').HTMLSpanElement = function() { return true; };
$.dynamicFunction('toString$0').SVGException = function() {
  return this.toString();
 };
$.dynamicFunction('get$name').SVGException = function() { return this.name; };
$.dynamicFunction('get$message').SVGException = function() { return this.message; };
$.dynamicFunction('get$y').SVGPathSegMovetoAbs = function() { return this.y; };
$.dynamicFunction('get$x').SVGPathSegMovetoAbs = function() { return this.x; };
$.dynamicFunction('get$target').SVGAElement = function() { return this.target; };
$.dynamicFunction('is$Element').SVGAElement = function() { return true; };
$.dynamicFunction('get$loaded').ProgressEvent = function() { return this.loaded; };
$.dynamicFunction('is$Element').SVGAltGlyphDefElement = function() { return true; };
$.dynamicFunction('get$y').SVGFEMergeElement = function() { return this.y; };
$.dynamicFunction('get$x').SVGFEMergeElement = function() { return this.x; };
$.dynamicFunction('get$width').SVGFEMergeElement = function() { return this.width; };
$.dynamicFunction('get$height').SVGFEMergeElement = function() { return this.height; };
$.dynamicFunction('is$Element').SVGFEMergeElement = function() { return true; };
$.dynamicFunction('is$Element').SVGTextPathElement = function() { return true; };
$.dynamicFunction('get$type').HTMLScriptElement = function() { return this.type; };
$.dynamicFunction('is$Element').HTMLScriptElement = function() { return true; };
$.dynamicFunction('toString$0').OperationNotAllowedException = function() {
  return this.toString();
 };
$.dynamicFunction('get$name').OperationNotAllowedException = function() { return this.name; };
$.dynamicFunction('get$message').OperationNotAllowedException = function() { return this.message; };
$.dynamicFunction('get$y').SVGPathSegCurvetoQuadraticAbs = function() { return this.y; };
$.dynamicFunction('get$x').SVGPathSegCurvetoQuadraticAbs = function() { return this.x; };
$.dynamicFunction('get$length').FileWriterSync = function() { return this.length; };
$.dynamicFunction('get$length').MediaStreamList = function() { return this.length; };
$.dynamicFunction('get$kind').HTMLTrackElement = function() { return this.kind; };
$.dynamicFunction('is$Element').HTMLTrackElement = function() { return true; };
$.dynamicFunction('get$y').SVGPathSegArcAbs = function() { return this.y; };
$.dynamicFunction('get$x').SVGPathSegArcAbs = function() { return this.x; };
$.dynamicFunction('get$type').Blob = function() { return this.type; };
$.dynamicFunction('$dom_removeEventListener$3').IDBRequest = function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_removeEventListener$3')) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener),useCapture);
  } else {
    return Object.prototype.$dom_removeEventListener$3.call(this, type, listener, useCapture);
  }
 };
$.dynamicFunction('$dom_addEventListener$3').IDBRequest = function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_addEventListener$3')) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
  } else {
    return Object.prototype.$dom_addEventListener$3.call(this, type, listener, useCapture);
  }
 };
$.dynamicFunction('get$on').IDBRequest = function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
    return $._lib5_IDBRequestEventsImpl$1(this);
  } else {
    return Object.prototype.get$on.call(this);
  }
 };
$.dynamicFunction('set$value').Attr = function(v) { this.value = v; };
$.dynamicFunction('get$value').Attr = function() { return this.value; };
$.dynamicFunction('get$name').Attr = function() { return this.name; };
$.dynamicFunction('get$length').History = function() { return this.length; };
$.dynamicFunction('toString$0').XMLHttpRequestException = function() {
  return this.toString();
 };
$.dynamicFunction('get$name').XMLHttpRequestException = function() { return this.name; };
$.dynamicFunction('get$message').XMLHttpRequestException = function() { return this.message; };
$.dynamicFunction('toString$0').WorkerLocation = function() {
  return this.toString();
 };
$.dynamicFunction('get$y').SVGFEColorMatrixElement = function() { return this.y; };
$.dynamicFunction('get$x').SVGFEColorMatrixElement = function() { return this.x; };
$.dynamicFunction('get$width').SVGFEColorMatrixElement = function() { return this.width; };
$.dynamicFunction('get$height').SVGFEColorMatrixElement = function() { return this.height; };
$.dynamicFunction('get$type').SVGFEColorMatrixElement = function() { return this.type; };
$.dynamicFunction('is$Element').SVGFEColorMatrixElement = function() { return true; };
$.dynamicFunction('set$name').HTMLMapElement = function(v) { this.name = v; };
$.dynamicFunction('get$name').HTMLMapElement = function() { return this.name; };
$.dynamicFunction('is$Element').HTMLMapElement = function() { return true; };
$.dynamicFunction('is$Element').SVGPolylineElement = function() { return true; };
$.dynamicFunction('is$Element').HTMLDirectoryElement = function() { return true; };
$.dynamicFunction('get$length').SpeechGrammarList = function() { return this.length; };
$.dynamicFunction('get$y').SVGForeignObjectElement = function() { return this.y; };
$.dynamicFunction('get$x').SVGForeignObjectElement = function() { return this.x; };
$.dynamicFunction('get$width').SVGForeignObjectElement = function() { return this.width; };
$.dynamicFunction('get$height').SVGForeignObjectElement = function() { return this.height; };
$.dynamicFunction('is$Element').SVGForeignObjectElement = function() { return true; };
$.dynamicFunction('get$y').SVGPathSegCurvetoCubicSmoothAbs = function() { return this.y; };
$.dynamicFunction('get$x').SVGPathSegCurvetoCubicSmoothAbs = function() { return this.x; };
$.dynamicFunction('toString$0').EventException = function() {
  return this.toString();
 };
$.dynamicFunction('get$name').EventException = function() { return this.name; };
$.dynamicFunction('get$message').EventException = function() { return this.message; };
$.dynamicFunction('get$y').MouseEvent = function() { return this.y; };
$.dynamicFunction('get$x').MouseEvent = function() { return this.x; };
$.dynamicFunction('$dom_removeEventListener$3').IDBTransaction = function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('$dom_addEventListener$3').IDBTransaction = function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('get$on').IDBTransaction = function() {
  return $._lib5_IDBTransactionEventsImpl$1(this);
 };
$.dynamicFunction('$dom_removeEventListener$3').EventSource = function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('$dom_addEventListener$3').EventSource = function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('get$on').EventSource = function() {
  return $._lib5_EventSourceEventsImpl$1(this);
 };
$.dynamicFunction('webkitConvertPointFromPageToNode$2').DOMWindow = function(node, p) {
  return this.webkitConvertPointFromPageToNode(node,p);
 };
$.dynamicFunction('webkitCancelAnimationFrame$1').DOMWindow = function(id) {
  return this.webkitCancelAnimationFrame(id);
 };
$.dynamicFunction('scroll$2').DOMWindow = function(x, y) {
  return this.scroll(x,y);
 };
$.dynamicFunction('get$scroll').DOMWindow = function() { return new $.Closure342(this); };
$.dynamicFunction('$dom_removeEventListener$3').DOMWindow = function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('postMessage$3').DOMWindow = function(message, targetOrigin, messagePorts) {
  return this.postMessage(message,targetOrigin,messagePorts);
 };
$.dynamicFunction('postMessage$2').DOMWindow = function(message,targetOrigin) {
  return this.postMessage(message,targetOrigin);
};
$.dynamicFunction('focus$0').DOMWindow = function() {
  return this.focus();
 };
$.dynamicFunction('get$focus').DOMWindow = function() { return new $.Closure343(this); };
$.dynamicFunction('blur$0').DOMWindow = function() {
  return this.blur();
 };
$.dynamicFunction('get$blur').DOMWindow = function() { return new $.Closure344(this); };
$.dynamicFunction('alert$1').DOMWindow = function(message) {
  return this.alert(message);
 };
$.dynamicFunction('$dom_addEventListener$3').DOMWindow = function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('get$window').DOMWindow = function() { return this.window; };
$.dynamicFunction('get$top').DOMWindow = function() { return this.top; };
$.dynamicFunction('get$parent').DOMWindow = function() { return this.parent; };
$.dynamicFunction('get$navigator').DOMWindow = function() { return this.navigator; };
$.dynamicFunction('set$name').DOMWindow = function(v) { this.name = v; };
$.dynamicFunction('get$name').DOMWindow = function() { return this.name; };
$.dynamicFunction('get$length').DOMWindow = function() { return this.length; };
$.dynamicFunction('get$innerWidth').DOMWindow = function() { return this.innerWidth; };
$.dynamicFunction('get$innerHeight').DOMWindow = function() { return this.innerHeight; };
$.dynamicFunction('get$on').DOMWindow = function() {
  return $._lib5_WindowEventsImpl$1(this);
 };
$.dynamicFunction('requestAnimationFrame$1').DOMWindow = function(callback) {
  callback = $.convertDartClosureToJS(callback);
      if (!window.requestAnimationFrame) {
      window.requestAnimationFrame =
          window.webkitRequestAnimationFrame ||
          window.mozRequestAnimationFrame ||
          window.msRequestAnimationFrame ||
          window.oRequestAnimationFrame ||
          function (callback) {
            window.setTimeout(callback, 16 /* 16ms ~= 60fps */);
          };
    }
    return window.requestAnimationFrame(callback);
;
 };
$.dynamicFunction('requestLayoutFrame$1').DOMWindow = function(callback) {
  $._addMeasurementFrameCallback(callback);
 };
$.dynamicFunction('get$type').Oscillator = function() { return this.type; };
$.dynamicFunction('get$target').HTMLAreaElement = function() { return this.target; };
$.dynamicFunction('is$Element').HTMLAreaElement = function() { return true; };
$.dynamicFunction('toString$0').WebKitCSSMatrix = function() {
  return this.toString();
 };
$.dynamicFunction('get$x').SVGPathSegLinetoHorizontalRel = function() { return this.x; };
$.dynamicFunction('is$Element').SVGDocument = function() { return true; };
$.dynamicFunction('set$value').HTMLMeterElement = function(v) { this.value = v; };
$.dynamicFunction('get$value').HTMLMeterElement = function() { return this.value; };
$.dynamicFunction('is$Element').HTMLMeterElement = function() { return true; };
$.dynamicFunction('get$y').SVGUseElement = function() { return this.y; };
$.dynamicFunction('get$x').SVGUseElement = function() { return this.x; };
$.dynamicFunction('get$width').SVGUseElement = function() { return this.width; };
$.dynamicFunction('get$height').SVGUseElement = function() { return this.height; };
$.dynamicFunction('is$Element').SVGUseElement = function() { return true; };
$.dynamicFunction('set$name').HTMLMetaElement = function(v) { this.name = v; };
$.dynamicFunction('get$name').HTMLMetaElement = function() { return this.name; };
$.dynamicFunction('set$content').HTMLMetaElement = function(v) { this.content = v; };
$.dynamicFunction('get$content').HTMLMetaElement = function() { return this.content; };
$.dynamicFunction('is$Element').HTMLMetaElement = function() { return true; };
$.dynamicFunction('$dom_removeEventListener$3').JavaScriptAudioNode = function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('$dom_addEventListener$3').JavaScriptAudioNode = function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('get$on').JavaScriptAudioNode = function() {
  return $._lib5_JavaScriptAudioNodeEventsImpl$1(this);
 };
$.dynamicFunction('getRange$2').Uint32Array = function(start, rangeLength) {
  return $.getRange2(this, start, rangeLength, []);
 };
$.dynamicFunction('removeRange$2').Uint32Array = function(start, rangeLength) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot removeRange on immutable List.'));
 };
$.dynamicFunction('removeLast$0').Uint32Array = function() {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot removeLast on immutable List.'));
 };
$.dynamicFunction('last$0').Uint32Array = function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
 };
$.dynamicFunction('indexOf$2').Uint32Array = function(element, start) {
  return $.indexOf2(this, element, start, $.get$length(this));
 };
$.dynamicFunction('indexOf$1').Uint32Array = function(element) {
  return this.indexOf$2(element,0)
};
$.dynamicFunction('sort$1').Uint32Array = function(compare) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot sort immutable List.'));
 };
$.dynamicFunction('isEmpty$0').Uint32Array = function() {
  return $.eq($.get$length(this), 0);
 };
$.dynamicFunction('some$1').Uint32Array = function(f) {
  return $.some3(this, f);
 };
$.dynamicFunction('every$1').Uint32Array = function(f) {
  return $.every3(this, f);
 };
$.dynamicFunction('filter$1').Uint32Array = function(f) {
  return $.filter3(this, [], f);
 };
$.dynamicFunction('forEach$1').Uint32Array = function(f) {
  return $.forEach3(this, f);
 };
$.dynamicFunction('addAll$1').Uint32Array = function(collection) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('addLast$1').Uint32Array = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('add$1').Uint32Array = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('iterator$0').Uint32Array = function() {
  var t0 = $._lib5_FixedSizeListIterator$1(this);
  $.setRuntimeTypeInfo(t0, ({T: 'int'}));
  return t0;
 };
$.dynamicFunction('operator$indexSet$2').Uint32Array = function(index, value) {
  this[index] = value;
 };
$.dynamicFunction('operator$index$1').Uint32Array = function(index) {
  return this[index];;
 };
$.dynamicFunction('get$length').Uint32Array = function() { return this.length; };
$.dynamicFunction('is$List2').Uint32Array = function() { return true; };
$.dynamicFunction('is$Collection').Uint32Array = function() { return true; };
$.dynamicFunction('toString$0').RangeException = function() {
  return this.toString();
 };
$.dynamicFunction('get$name').RangeException = function() { return this.name; };
$.dynamicFunction('get$message').RangeException = function() { return this.message; };
$.dynamicFunction('set$value').HTMLProgressElement = function(v) { this.value = v; };
$.dynamicFunction('get$value').HTMLProgressElement = function() { return this.value; };
$.dynamicFunction('is$Element').HTMLProgressElement = function() { return true; };
$.dynamicFunction('$dom_removeEventListener$3').MediaController = function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('$dom_addEventListener$3').MediaController = function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('toString$0').Range = function() {
  return this.toString();
 };
$.dynamicFunction('is$Element').SVGCircleElement = function() { return true; };
$.dynamicFunction('$dom_querySelector$1').HTMLDocument = function(selectors) {
  return this.querySelector(selectors);;
 };
$.dynamicFunction('query$1').HTMLDocument = function(selectors) {
  if ($.CTC249.hasMatch$1(selectors) === true) {
    return this.$dom_getElementById$1($.substring$1(selectors, 1));
  }
  return this.$dom_querySelector$1(selectors);
 };
$.dynamicFunction('$dom_getElementById$1').HTMLDocument = function(elementId) {
  return this.getElementById(elementId);
 };
$.dynamicFunction('$dom_createElementNS$2').HTMLDocument = function(namespaceURI, qualifiedName) {
  return this.createElementNS(namespaceURI,qualifiedName);
 };
$.dynamicFunction('set$title').HTMLDocument = function(v) { this.title = v; };
$.dynamicFunction('get$head').HTMLDocument = function() { return this.head; };
$.dynamicFunction('get$window').HTMLDocument = function() {
  return this.defaultView;;
 };
$.dynamicFunction('get$on').HTMLDocument = function() {
  return $._lib5_DocumentEventsImpl$1(this);
 };
$.dynamicFunction('is$Element').HTMLDocument = function() { return true; };
$.dynamicFunction('get$width').ClientRect = function() { return this.width; };
$.dynamicFunction('get$top').ClientRect = function() { return this.top; };
$.dynamicFunction('get$right').ClientRect = function() { return this.right; };
$.dynamicFunction('get$left').ClientRect = function() { return this.left; };
$.dynamicFunction('get$height').ClientRect = function() { return this.height; };
$.dynamicFunction('get$bottom').ClientRect = function() { return this.bottom; };
$.dynamicFunction('is$Element').SVGAltGlyphElement = function() { return true; };
$.dynamicFunction('get$y').SVGFESpotLightElement = function() { return this.y; };
$.dynamicFunction('get$x').SVGFESpotLightElement = function() { return this.x; };
$.dynamicFunction('is$Element').SVGFESpotLightElement = function() { return true; };
$.dynamicFunction('is$Element').SVGMetadataElement = function() { return true; };
$.dynamicFunction('get$length').DOMPluginArray = function() { return this.length; };
$.dynamicFunction('set$value').HTMLParamElement = function(v) { this.value = v; };
$.dynamicFunction('get$value').HTMLParamElement = function() { return this.value; };
$.dynamicFunction('get$type').HTMLParamElement = function() { return this.type; };
$.dynamicFunction('set$name').HTMLParamElement = function(v) { this.name = v; };
$.dynamicFunction('get$name').HTMLParamElement = function() { return this.name; };
$.dynamicFunction('is$Element').HTMLParamElement = function() { return true; };
$.dynamicFunction('set$value').HTMLTextAreaElement = function(v) { this.value = v; };
$.dynamicFunction('get$value').HTMLTextAreaElement = function() { return this.value; };
$.dynamicFunction('get$type').HTMLTextAreaElement = function() { return this.type; };
$.dynamicFunction('set$readOnly').HTMLTextAreaElement = function(v) { this.readOnly = v; };
$.dynamicFunction('set$name').HTMLTextAreaElement = function(v) { this.name = v; };
$.dynamicFunction('get$name').HTMLTextAreaElement = function() { return this.name; };
$.dynamicFunction('get$maxLength').HTMLTextAreaElement = function() { return this.maxLength; };
$.dynamicFunction('is$Element').HTMLTextAreaElement = function() { return true; };
$.dynamicFunction('get$type').JavaScriptCallFrame = function() { return this.type; };
$.dynamicFunction('is$Element').SVGHKernElement = function() { return true; };
$.dynamicFunction('get$type').HTMLUListElement = function() { return this.type; };
$.dynamicFunction('is$Element').HTMLUListElement = function() { return true; };
$.dynamicFunction('set$width').HTMLPreElement = function(v) { this.width = v; };
$.dynamicFunction('get$width').HTMLPreElement = function() { return this.width; };
$.dynamicFunction('is$Element').HTMLPreElement = function() { return true; };
$.dynamicFunction('getRange$2').Float64Array = function(start, rangeLength) {
  return $.getRange2(this, start, rangeLength, []);
 };
$.dynamicFunction('removeRange$2').Float64Array = function(start, rangeLength) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot removeRange on immutable List.'));
 };
$.dynamicFunction('removeLast$0').Float64Array = function() {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot removeLast on immutable List.'));
 };
$.dynamicFunction('last$0').Float64Array = function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
 };
$.dynamicFunction('indexOf$2').Float64Array = function(element, start) {
  return $.indexOf2(this, element, start, $.get$length(this));
 };
$.dynamicFunction('indexOf$1').Float64Array = function(element) {
  return this.indexOf$2(element,0)
};
$.dynamicFunction('sort$1').Float64Array = function(compare) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot sort immutable List.'));
 };
$.dynamicFunction('isEmpty$0').Float64Array = function() {
  return $.eq($.get$length(this), 0);
 };
$.dynamicFunction('some$1').Float64Array = function(f) {
  return $.some3(this, f);
 };
$.dynamicFunction('every$1').Float64Array = function(f) {
  return $.every3(this, f);
 };
$.dynamicFunction('filter$1').Float64Array = function(f) {
  return $.filter3(this, [], f);
 };
$.dynamicFunction('forEach$1').Float64Array = function(f) {
  return $.forEach3(this, f);
 };
$.dynamicFunction('addAll$1').Float64Array = function(collection) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('addLast$1').Float64Array = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('add$1').Float64Array = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('iterator$0').Float64Array = function() {
  var t0 = $._lib5_FixedSizeListIterator$1(this);
  $.setRuntimeTypeInfo(t0, ({T: 'num'}));
  return t0;
 };
$.dynamicFunction('operator$indexSet$2').Float64Array = function(index, value) {
  this[index] = value;
 };
$.dynamicFunction('operator$index$1').Float64Array = function(index) {
  return this[index];;
 };
$.dynamicFunction('get$length').Float64Array = function() { return this.length; };
$.dynamicFunction('is$List2').Float64Array = function() { return true; };
$.dynamicFunction('is$Collection').Float64Array = function() { return true; };
$.dynamicFunction('getRange$2').NamedNodeMap = function(start, rangeLength) {
  return $.getRange2(this, start, rangeLength, []);
 };
$.dynamicFunction('removeRange$2').NamedNodeMap = function(start, rangeLength) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot removeRange on immutable List.'));
 };
$.dynamicFunction('removeLast$0').NamedNodeMap = function() {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot removeLast on immutable List.'));
 };
$.dynamicFunction('last$0').NamedNodeMap = function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
 };
$.dynamicFunction('indexOf$2').NamedNodeMap = function(element, start) {
  return $.indexOf2(this, element, start, $.get$length(this));
 };
$.dynamicFunction('indexOf$1').NamedNodeMap = function(element) {
  return this.indexOf$2(element,0)
};
$.dynamicFunction('sort$1').NamedNodeMap = function(compare) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot sort immutable List.'));
 };
$.dynamicFunction('isEmpty$0').NamedNodeMap = function() {
  return $.eq($.get$length(this), 0);
 };
$.dynamicFunction('some$1').NamedNodeMap = function(f) {
  return $.some3(this, f);
 };
$.dynamicFunction('every$1').NamedNodeMap = function(f) {
  return $.every3(this, f);
 };
$.dynamicFunction('filter$1').NamedNodeMap = function(f) {
  return $.filter3(this, [], f);
 };
$.dynamicFunction('forEach$1').NamedNodeMap = function(f) {
  return $.forEach3(this, f);
 };
$.dynamicFunction('addAll$1').NamedNodeMap = function(collection) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('addLast$1').NamedNodeMap = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('add$1').NamedNodeMap = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('iterator$0').NamedNodeMap = function() {
  var t0 = $._lib5_FixedSizeListIterator$1(this);
  $.setRuntimeTypeInfo(t0, ({T: 'Node'}));
  return t0;
 };
$.dynamicFunction('operator$indexSet$2').NamedNodeMap = function(index, value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot assign element of immutable List.'));
 };
$.dynamicFunction('operator$index$1').NamedNodeMap = function(index) {
  return this[index];;
 };
$.dynamicFunction('get$length').NamedNodeMap = function() { return this.length; };
$.dynamicFunction('is$List2').NamedNodeMap = function() { return true; };
$.dynamicFunction('is$Collection').NamedNodeMap = function() { return true; };
$.dynamicFunction('rect$4').CanvasRenderingContext2D = function(x, y, width, height) {
  return this.rect(x,y,width,height);
 };
$.dynamicFunction('get$rect').CanvasRenderingContext2D = function() { return new $.Closure345(this); };
$.dynamicFunction('toString$0').XPathException = function() {
  return this.toString();
 };
$.dynamicFunction('get$name').XPathException = function() { return this.name; };
$.dynamicFunction('get$message').XPathException = function() { return this.message; };
$.dynamicFunction('get$items').Clipboard = function() { return this.items; };
$.dynamicFunction('get$y').SVGFEFloodElement = function() { return this.y; };
$.dynamicFunction('get$x').SVGFEFloodElement = function() { return this.x; };
$.dynamicFunction('get$width').SVGFEFloodElement = function() { return this.width; };
$.dynamicFunction('get$height').SVGFEFloodElement = function() { return this.height; };
$.dynamicFunction('is$Element').SVGFEFloodElement = function() { return true; };
$.dynamicFunction('get$length').DOMMimeTypeArray = function() { return this.length; };
$.dynamicFunction('set$color').HTMLBaseFontElement = function(v) { this.color = v; };
$.dynamicFunction('get$color').HTMLBaseFontElement = function() { return this.color; };
$.dynamicFunction('is$Element').HTMLBaseFontElement = function() { return true; };
$.dynamicFunction('get$y').SVGFECompositeElement = function() { return this.y; };
$.dynamicFunction('get$x').SVGFECompositeElement = function() { return this.x; };
$.dynamicFunction('get$width').SVGFECompositeElement = function() { return this.width; };
$.dynamicFunction('get$height').SVGFECompositeElement = function() { return this.height; };
$.dynamicFunction('is$Element').SVGFECompositeElement = function() { return true; };
$.dynamicFunction('is$Element').SVGAltGlyphItemElement = function() { return true; };
$.dynamicFunction('$dom_removeEventListener$3').AbstractWorker = function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('$dom_addEventListener$3').AbstractWorker = function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('get$on').AbstractWorker = function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
    return $._lib5_AbstractWorkerEventsImpl$1(this);
  } else {
    return Object.prototype.get$on.call(this);
  }
 };
$.dynamicFunction('clear$0').SVGStringList = function() {
  return this.clear();
 };
$.dynamicFunction('get$y').SVGFESpecularLightingElement = function() { return this.y; };
$.dynamicFunction('get$x').SVGFESpecularLightingElement = function() { return this.x; };
$.dynamicFunction('get$width').SVGFESpecularLightingElement = function() { return this.width; };
$.dynamicFunction('get$height').SVGFESpecularLightingElement = function() { return this.height; };
$.dynamicFunction('is$Element').SVGFESpecularLightingElement = function() { return true; };
$.dynamicFunction('is$Element').SVGMissingGlyphElement = function() { return true; };
$.dynamicFunction('is$Element').SVGAnimateTransformElement = function() { return true; };
$.dynamicFunction('is$Element').SVGDescElement = function() { return true; };
$.dynamicFunction('set$value').DOMSettableTokenList = function(v) { this.value = v; };
$.dynamicFunction('get$value').DOMSettableTokenList = function() { return this.value; };
$.dynamicFunction('$dom_setAttribute$2').Element = function(name, value) {
  return this.setAttribute(name,value);
 };
$.dynamicFunction('$dom_removeAttribute$1').Element = function(name) {
  return this.removeAttribute(name);
 };
$.dynamicFunction('query$1').Element = function(selectors) {
  return this.querySelector(selectors);
 };
$.dynamicFunction('$dom_hasAttribute$1').Element = function(name) {
  return this.hasAttribute(name);
 };
$.dynamicFunction('$dom_getClientRects$0').Element = function() {
  return this.getClientRects();
 };
$.dynamicFunction('$dom_getBoundingClientRect$0').Element = function() {
  return this.getBoundingClientRect();
 };
$.dynamicFunction('$dom_getAttribute$1').Element = function(name) {
  return this.getAttribute(name);
 };
$.dynamicFunction('focus$0').Element = function() {
  return this.focus();
 };
$.dynamicFunction('get$focus').Element = function() { return new $.Closure346(this); };
$.dynamicFunction('click$0').Element = function() {
  return this.click();
 };
$.dynamicFunction('get$click').Element = function() { return new $.Closure347(this); };
$.dynamicFunction('blur$0').Element = function() {
  return this.blur();
 };
$.dynamicFunction('get$blur').Element = function() { return new $.Closure348(this); };
$.dynamicFunction('set$title').Element = function(v) { this.title = v; };
$.dynamicFunction('get$tagName').Element = function() { return this.tagName; };
$.dynamicFunction('get$style').Element = function() { return this.style; };
$.dynamicFunction('get$$dom_scrollWidth').Element = function() {
  return this.scrollWidth;;
 };
$.dynamicFunction('get$$dom_scrollTop').Element = function() {
  return this.scrollTop;;
 };
$.dynamicFunction('get$$dom_scrollLeft').Element = function() {
  return this.scrollLeft;;
 };
$.dynamicFunction('get$$dom_scrollHeight').Element = function() {
  return this.scrollHeight;;
 };
$.dynamicFunction('get$$dom_offsetWidth').Element = function() {
  return this.offsetWidth;;
 };
$.dynamicFunction('get$$dom_offsetTop').Element = function() {
  return this.offsetTop;;
 };
$.dynamicFunction('get$$dom_offsetLeft').Element = function() {
  return this.offsetLeft;;
 };
$.dynamicFunction('get$$dom_offsetHeight').Element = function() {
  return this.offsetHeight;;
 };
$.dynamicFunction('get$$dom_lastElementChild').Element = function() {
  return this.lastElementChild;;
 };
$.dynamicFunction('set$innerHTML').Element = function(v) { this.innerHTML = v; };
$.dynamicFunction('get$$dom_firstElementChild').Element = function() {
  return this.firstElementChild;;
 };
$.dynamicFunction('get$$dom_clientWidth').Element = function() {
  return this.clientWidth;;
 };
$.dynamicFunction('get$$dom_clientTop').Element = function() {
  return this.clientTop;;
 };
$.dynamicFunction('get$$dom_clientLeft').Element = function() {
  return this.clientLeft;;
 };
$.dynamicFunction('get$$dom_clientHeight').Element = function() {
  return this.clientHeight;;
 };
$.dynamicFunction('get$$dom_children').Element = function() {
  return this.children;;
 };
$.dynamicFunction('get$on').Element = function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
    return $._lib5_ElementEventsImpl$1(this);
  } else {
    return Object.prototype.get$on.call(this);
  }
 };
$.dynamicFunction('get$rect').Element = function() {
  var t0 = new $.Closure55(this);
  var t1 = $.CompleterImpl$0();
  $.setRuntimeTypeInfo(t1, ({T: 'ElementRect'}));
  return $._createMeasurementFuture(t0, t1);
 };
$.dynamicFunction('get$elements').Element = function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$elements')) {
    return $._lib5_ChildrenElementList$_wrap$1(this);
  } else {
    return Object.prototype.get$elements.call(this);
  }
 };
$.dynamicFunction('set$elements').Element = function(value) {
  if (Object.getPrototypeOf(this).hasOwnProperty('set$elements')) {
    var elements = this.get$elements();
  $.clear(elements);
  $.addAll(elements, value);
  } else {
    return Object.prototype.set$elements.call(this, value);
  }
 };
$.dynamicFunction('get$attributes').Element = function() {
  return $._lib5_ElementAttributeMap$1(this);
 };
$.dynamicFunction('is$Element').Element = function() { return true; };
$.dynamicFunction('set$zIndex').CSSStyleDeclaration = function(value) {
  this.setProperty$3('z-index', value, '');
 };
$.dynamicFunction('set$width').CSSStyleDeclaration = function(value) {
  this.setProperty$3('width', value, '');
 };
$.dynamicFunction('get$width').CSSStyleDeclaration = function() {
  return this.getPropertyValue$1('width');
 };
$.dynamicFunction('set$visibility').CSSStyleDeclaration = function(value) {
  this.setProperty$3('visibility', value, '');
 };
$.dynamicFunction('get$top').CSSStyleDeclaration = function() {
  return this.getPropertyValue$1('top');
 };
$.dynamicFunction('set$textDecoration').CSSStyleDeclaration = function(value) {
  this.setProperty$3('text-decoration', value, '');
 };
$.dynamicFunction('get$right').CSSStyleDeclaration = function() {
  return this.getPropertyValue$1('right');
 };
$.dynamicFunction('get$resize').CSSStyleDeclaration = function() {
  return this.getPropertyValue$1('resize');
 };
$.dynamicFunction('set$position').CSSStyleDeclaration = function(value) {
  this.setProperty$3('position', value, '');
 };
$.dynamicFunction('set$padding').CSSStyleDeclaration = function(value) {
  this.setProperty$3('padding', value, '');
 };
$.dynamicFunction('get$padding').CSSStyleDeclaration = function() {
  return this.getPropertyValue$1('padding');
 };
$.dynamicFunction('set$overflowY').CSSStyleDeclaration = function(value) {
  this.setProperty$3('overflow-y', value, '');
 };
$.dynamicFunction('set$overflowX').CSSStyleDeclaration = function(value) {
  this.setProperty$3('overflow-x', value, '');
 };
$.dynamicFunction('set$overflow').CSSStyleDeclaration = function(value) {
  this.setProperty$3('overflow', value, '');
 };
$.dynamicFunction('set$opacity').CSSStyleDeclaration = function(value) {
  this.setProperty$3('opacity', value, '');
 };
$.dynamicFunction('set$minWidth').CSSStyleDeclaration = function(value) {
  this.setProperty$3('min-width', value, '');
 };
$.dynamicFunction('set$minHeight').CSSStyleDeclaration = function(value) {
  this.setProperty$3('min-height', value, '');
 };
$.dynamicFunction('set$maxWidth').CSSStyleDeclaration = function(value) {
  this.setProperty$3('max-width', value, '');
 };
$.dynamicFunction('set$maxHeight').CSSStyleDeclaration = function(value) {
  this.setProperty$3('max-height', value, '');
 };
$.dynamicFunction('set$margin').CSSStyleDeclaration = function(value) {
  this.setProperty$3('margin', value, '');
 };
$.dynamicFunction('get$margin').CSSStyleDeclaration = function() {
  return this.getPropertyValue$1('margin');
 };
$.dynamicFunction('get$left').CSSStyleDeclaration = function() {
  return this.getPropertyValue$1('left');
 };
$.dynamicFunction('set$height').CSSStyleDeclaration = function(value) {
  this.setProperty$3('height', value, '');
 };
$.dynamicFunction('get$height').CSSStyleDeclaration = function() {
  return this.getPropertyValue$1('height');
 };
$.dynamicFunction('set$fontSize').CSSStyleDeclaration = function(value) {
  this.setProperty$3('font-size', value, '');
 };
$.dynamicFunction('set$fontFamily').CSSStyleDeclaration = function(value) {
  this.setProperty$3('font-family', value, '');
 };
$.dynamicFunction('set$flexPack').CSSStyleDeclaration = function(value) {
  this.setProperty$3('' + $.stringToString($._browserPrefix()) + 'flex-pack', value, '');
 };
$.dynamicFunction('set$flexFlow').CSSStyleDeclaration = function(value) {
  this.setProperty$3('' + $.stringToString($._browserPrefix()) + 'flex-flow', value, '');
 };
$.dynamicFunction('set$flexAlign').CSSStyleDeclaration = function(value) {
  this.setProperty$3('' + $.stringToString($._browserPrefix()) + 'flex-align', value, '');
 };
$.dynamicFunction('get$filter').CSSStyleDeclaration = function() {
  return this.getPropertyValue$1('' + $.stringToString($._browserPrefix()) + 'filter');
 };
$.dynamicFunction('filter$1').CSSStyleDeclaration = function(arg0) { return this.get$filter().$call$1(arg0); };
$.dynamicFunction('set$display').CSSStyleDeclaration = function(value) {
  this.setProperty$3('display', value, '');
 };
$.dynamicFunction('get$display').CSSStyleDeclaration = function() {
  return this.getPropertyValue$1('display');
 };
$.dynamicFunction('set$cursor').CSSStyleDeclaration = function(value) {
  this.setProperty$3('cursor', value, '');
 };
$.dynamicFunction('set$content').CSSStyleDeclaration = function(value) {
  this.setProperty$3('content', value, '');
 };
$.dynamicFunction('get$content').CSSStyleDeclaration = function() {
  return this.getPropertyValue$1('content');
 };
$.dynamicFunction('set$color').CSSStyleDeclaration = function(value) {
  this.setProperty$3('color', value, '');
 };
$.dynamicFunction('get$color').CSSStyleDeclaration = function() {
  return this.getPropertyValue$1('color');
 };
$.dynamicFunction('get$clear').CSSStyleDeclaration = function() {
  return this.getPropertyValue$1('clear');
 };
$.dynamicFunction('clear$0').CSSStyleDeclaration = function() { return this.get$clear().$call$0(); };
$.dynamicFunction('set$boxOrient').CSSStyleDeclaration = function(value) {
  this.setProperty$3('' + $.stringToString($._browserPrefix()) + 'box-orient', value, '');
 };
$.dynamicFunction('get$bottom').CSSStyleDeclaration = function() {
  return this.getPropertyValue$1('bottom');
 };
$.dynamicFunction('set$borderTop').CSSStyleDeclaration = function(value) {
  this.setProperty$3('border-top', value, '');
 };
$.dynamicFunction('set$borderRight').CSSStyleDeclaration = function(value) {
  this.setProperty$3('border-right', value, '');
 };
$.dynamicFunction('set$borderRadius').CSSStyleDeclaration = function(value) {
  this.setProperty$3('border-radius', value, '');
 };
$.dynamicFunction('set$borderLeft').CSSStyleDeclaration = function(value) {
  this.setProperty$3('border-left', value, '');
 };
$.dynamicFunction('set$borderColor').CSSStyleDeclaration = function(value) {
  this.setProperty$3('border-color', value, '');
 };
$.dynamicFunction('get$borderColor').CSSStyleDeclaration = function() {
  return this.getPropertyValue$1('border-color');
 };
$.dynamicFunction('set$borderBottom').CSSStyleDeclaration = function(value) {
  this.setProperty$3('border-bottom', value, '');
 };
$.dynamicFunction('set$background').CSSStyleDeclaration = function(value) {
  this.setProperty$3('background', value, '');
 };
$.dynamicFunction('get$background').CSSStyleDeclaration = function() {
  return this.getPropertyValue$1('background');
 };
$.dynamicFunction('setProperty$3').CSSStyleDeclaration = function(propertyName, value, priority) {
  return this.setProperty(propertyName,value,priority);
 };
$.dynamicFunction('setProperty$2').CSSStyleDeclaration = function(propertyName,value) {
  return this.setProperty(propertyName,value);
};
$.dynamicFunction('getPropertyValue$1').CSSStyleDeclaration = function(propertyName) {
  return this.getPropertyValue(propertyName);
 };
$.dynamicFunction('get$length').CSSStyleDeclaration = function() { return this.length; };
$.dynamicFunction('get$y').SVGGlyphRefElement = function() { return this.y; };
$.dynamicFunction('get$x').SVGGlyphRefElement = function() { return this.x; };
$.dynamicFunction('is$Element').SVGGlyphRefElement = function() { return true; };
$.dynamicFunction('get$y').SVGFEComponentTransferElement = function() { return this.y; };
$.dynamicFunction('get$x').SVGFEComponentTransferElement = function() { return this.x; };
$.dynamicFunction('get$width').SVGFEComponentTransferElement = function() { return this.width; };
$.dynamicFunction('get$height').SVGFEComponentTransferElement = function() { return this.height; };
$.dynamicFunction('is$Element').SVGFEComponentTransferElement = function() { return true; };
$.dynamicFunction('get$type').HTMLStyleElement = function() { return this.type; };
$.dynamicFunction('is$Element').HTMLStyleElement = function() { return true; };
$.dynamicFunction('clear$0').HTMLBRElement = function() { return this.clear.$call$0(); };
$.dynamicFunction('is$Element').HTMLBRElement = function() { return true; };
$.dynamicFunction('get$name').DOMFileSystemSync = function() { return this.name; };
$.dynamicFunction('clear$0').SVGTransformList = function() {
  return this.clear();
 };
$.dynamicFunction('is$Element').HTMLLabelElement = function() { return true; };
$.dynamicFunction('is$Element').SVGFEDistantLightElement = function() { return true; };
$.dynamicFunction('set$width').HTMLMarqueeElement = function(v) { this.width = v; };
$.dynamicFunction('get$width').HTMLMarqueeElement = function() { return this.width; };
$.dynamicFunction('set$height').HTMLMarqueeElement = function(v) { this.height = v; };
$.dynamicFunction('get$height').HTMLMarqueeElement = function() { return this.height; };
$.dynamicFunction('is$Element').HTMLMarqueeElement = function() { return true; };
$.dynamicFunction('get$style').SVGStylable = function() { return this.style; };
$.dynamicFunction('is$Element').SVGAnimateElement = function() { return true; };
$.dynamicFunction('get$length').SVGElementInstanceList = function() { return this.length; };
$.dynamicFunction('get$length').SpeechRecognitionResultList = function() { return this.length; };
$.dynamicFunction('get$on').AudioContext = function() {
  return $._lib5_AudioContextEventsImpl$1(this);
 };
$.dynamicFunction('is$Element').SVGFontFaceNameElement = function() { return true; };
$.dynamicFunction('get$name').SharedWorkerContext = function() { return this.name; };
$.dynamicFunction('get$on').SharedWorkerContext = function() {
  return $._lib5_SharedWorkerContextEventsImpl$1(this);
 };
$.dynamicFunction('is$Element').SVGFontFaceSrcElement = function() { return true; };
$.dynamicFunction('toString$0').FileException = function() {
  return this.toString();
 };
$.dynamicFunction('get$name').FileException = function() { return this.name; };
$.dynamicFunction('get$message').FileException = function() { return this.message; };
$.dynamicFunction('set$value').HTMLSelectElement = function(v) { this.value = v; };
$.dynamicFunction('get$value').HTMLSelectElement = function() { return this.value; };
$.dynamicFunction('get$type').HTMLSelectElement = function() { return this.type; };
$.dynamicFunction('get$selectedIndex').HTMLSelectElement = function() { return this.selectedIndex; };
$.dynamicFunction('set$name').HTMLSelectElement = function(v) { this.name = v; };
$.dynamicFunction('get$name').HTMLSelectElement = function() { return this.name; };
$.dynamicFunction('set$length').HTMLSelectElement = function(v) { this.length = v; };
$.dynamicFunction('get$length').HTMLSelectElement = function() { return this.length; };
$.dynamicFunction('is$Element').HTMLSelectElement = function() { return true; };
$.dynamicFunction('is$Element').HTMLDivElement = function() { return true; };
$.dynamicFunction('$dom_removeEventListener$3').TextTrackCue = function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('$dom_addEventListener$3').TextTrackCue = function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('set$text').TextTrackCue = function(v) { this.text = v; };
$.dynamicFunction('get$text').TextTrackCue = function() { return this.text; };
$.dynamicFunction('set$position').TextTrackCue = function(v) { this.position = v; };
$.dynamicFunction('get$on').TextTrackCue = function() {
  return $._lib5_TextTrackCueEventsImpl$1(this);
 };
$.dynamicFunction('$dom_removeEventListener$3').XMLHttpRequestUpload = function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('$dom_addEventListener$3').XMLHttpRequestUpload = function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('get$on').XMLHttpRequestUpload = function() {
  return $._lib5_XMLHttpRequestUploadEventsImpl$1(this);
 };
$.dynamicFunction('get$y').SVGPatternElement = function() { return this.y; };
$.dynamicFunction('get$x').SVGPatternElement = function() { return this.x; };
$.dynamicFunction('get$width').SVGPatternElement = function() { return this.width; };
$.dynamicFunction('get$height').SVGPatternElement = function() { return this.height; };
$.dynamicFunction('is$Element').SVGPatternElement = function() { return true; };
$.dynamicFunction('get$on').HTMLMediaElement = function() {
  return $._lib5_MediaElementEventsImpl$1(this);
 };
$.dynamicFunction('is$Element').HTMLMediaElement = function() { return true; };
$.dynamicFunction('get$key').IDBCursor = function() { return this.key; };
$.dynamicFunction('set$value').HTMLOptionElement = function(v) { this.value = v; };
$.dynamicFunction('get$value').HTMLOptionElement = function() { return this.value; };
$.dynamicFunction('is$Element').HTMLOptionElement = function() { return true; };
$.dynamicFunction('get$y').SVGPathSegCurvetoCubicRel = function() { return this.y; };
$.dynamicFunction('get$x').SVGPathSegCurvetoCubicRel = function() { return this.x; };
$.dynamicFunction('is$Element').HTMLDetailsElement = function() { return true; };
$.dynamicFunction('clear$0').DataTransferItemList = function() {
  return this.clear();
 };
$.dynamicFunction('add$2').DataTransferItemList = function(data_OR_file, type) {
  return this.add(data_OR_file,type);
 };
$.dynamicFunction('add$1').DataTransferItemList = function(data_OR_file) {
  return this.add(data_OR_file);
};
$.dynamicFunction('get$length').DataTransferItemList = function() { return this.length; };
$.dynamicFunction('is$Element').SVGFEFuncBElement = function() { return true; };
$.dynamicFunction('get$y').SVGPathSegLinetoVerticalRel = function() { return this.y; };
$.dynamicFunction('toString$0').DOMException = function() {
  return this.toString();
 };
$.dynamicFunction('get$name').DOMException = function() { return this.name; };
$.dynamicFunction('get$message').DOMException = function() { return this.message; };
$.dynamicFunction('is$Element').HTMLHeadingElement = function() { return true; };
$.dynamicFunction('$dom_removeEventListener$3').PeerConnection00 = function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('$dom_addEventListener$3').PeerConnection00 = function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('get$on').PeerConnection00 = function() {
  return $._lib5_PeerConnection00EventsImpl$1(this);
 };
$.dynamicFunction('get$type').HTMLSourceElement = function() { return this.type; };
$.dynamicFunction('is$Element').HTMLSourceElement = function() { return true; };
$.dynamicFunction('is$Element').HTMLTableRowElement = function() { return true; };
$.dynamicFunction('is$Element').SVGFontElement = function() { return true; };
$.dynamicFunction('is$Element').SVGTextElement = function() { return true; };
$.dynamicFunction('is$Element').HTMLShadowElement = function() { return true; };
$.dynamicFunction('set$background').HTMLBodyElement = function(v) { this.background = v; };
$.dynamicFunction('get$background').HTMLBodyElement = function() { return this.background; };
$.dynamicFunction('get$on').HTMLBodyElement = function() {
  return $._lib5_BodyElementEventsImpl$1(this);
 };
$.dynamicFunction('is$Element').HTMLBodyElement = function() { return true; };
$.dynamicFunction('is$List2').Uint8ClampedArray = function() { return true; };
$.dynamicFunction('is$Collection').Uint8ClampedArray = function() { return true; };
$.dynamicFunction('is$Element').SVGMPathElement = function() { return true; };
// 347 dynamic classes.
// 395 classes
// 33 !leaf
(function(){
  var v0/*class(_SVGTextPositioningElementImpl)*/ = 'SVGTextPositioningElement|SVGTextElement|SVGTSpanElement|SVGTRefElement|SVGAltGlyphElement';
  var v1/*class(_SVGTextContentElementImpl)*/ = [v0/*class(_SVGTextPositioningElementImpl)*/,'SVGTextContentElement|SVGTextPathElement'].join('|');
  var v2/*class(_SVGGradientElementImpl)*/ = 'SVGGradientElement|SVGRadialGradientElement|SVGLinearGradientElement';
  var v3/*class(_SVGComponentTransferFunctionElementImpl)*/ = 'SVGComponentTransferFunctionElement|SVGFEFuncRElement|SVGFEFuncGElement|SVGFEFuncBElement|SVGFEFuncAElement';
  var v4/*class(_SVGAnimationElementImpl)*/ = 'SVGAnimationElement|SVGSetElement|SVGAnimateTransformElement|SVGAnimateMotionElement|SVGAnimateElement|SVGAnimateColorElement';
  var v5/*class(_SVGElementImpl)*/ = [v1/*class(_SVGTextContentElementImpl)*/,v2/*class(_SVGGradientElementImpl)*/,v3/*class(_SVGComponentTransferFunctionElementImpl)*/,v4/*class(_SVGAnimationElementImpl)*/,'SVGElement|SVGViewElement|SVGVKernElement|SVGUseElement|SVGTitleElement|SVGSymbolElement|SVGSwitchElement|SVGStyleElement|SVGStopElement|SVGScriptElement|SVGSVGElement|SVGRectElement|SVGPolylineElement|SVGPolygonElement|SVGPatternElement|SVGPathElement|SVGMissingGlyphElement|SVGMetadataElement|SVGMaskElement|SVGMarkerElement|SVGMPathElement|SVGLineElement|SVGImageElement|SVGHKernElement|SVGGlyphRefElement|SVGGlyphElement|SVGGElement|SVGForeignObjectElement|SVGFontFaceUriElement|SVGFontFaceSrcElement|SVGFontFaceNameElement|SVGFontFaceFormatElement|SVGFontFaceElement|SVGFontElement|SVGFilterElement|SVGFETurbulenceElement|SVGFETileElement|SVGFESpotLightElement|SVGFESpecularLightingElement|SVGFEPointLightElement|SVGFEOffsetElement|SVGFEMorphologyElement|SVGFEMergeNodeElement|SVGFEMergeElement|SVGFEImageElement|SVGFEGaussianBlurElement|SVGFEFloodElement|SVGFEDropShadowElement|SVGFEDistantLightElement|SVGFEDisplacementMapElement|SVGFEDiffuseLightingElement|SVGFEConvolveMatrixElement|SVGFECompositeElement|SVGFEComponentTransferElement|SVGFEColorMatrixElement|SVGFEBlendElement|SVGEllipseElement|SVGDescElement|SVGDefsElement|SVGCursorElement|SVGClipPathElement|SVGCircleElement|SVGAltGlyphItemElement|SVGAltGlyphDefElement|SVGAElement'].join('|');
  var v6/*class(_MediaElementImpl)*/ = 'HTMLMediaElement|HTMLVideoElement|HTMLAudioElement';
  var v7/*class(_ElementImpl)*/ = [v5/*class(_SVGElementImpl)*/,v6/*class(_MediaElementImpl)*/,'Element|HTMLUnknownElement|HTMLUListElement|HTMLTrackElement|HTMLTitleElement|HTMLTextAreaElement|HTMLTableSectionElement|HTMLTableRowElement|HTMLTableElement|HTMLTableColElement|HTMLTableCellElement|HTMLTableCaptionElement|HTMLStyleElement|HTMLSpanElement|HTMLSourceElement|HTMLShadowElement|HTMLSelectElement|HTMLScriptElement|HTMLQuoteElement|HTMLProgressElement|HTMLPreElement|HTMLParamElement|HTMLParagraphElement|HTMLOutputElement|HTMLOptionElement|HTMLOptGroupElement|HTMLObjectElement|HTMLOListElement|HTMLModElement|HTMLMeterElement|HTMLMetaElement|HTMLMenuElement|HTMLMarqueeElement|HTMLMapElement|HTMLLinkElement|HTMLLegendElement|HTMLLabelElement|HTMLLIElement|HTMLKeygenElement|HTMLInputElement|HTMLImageElement|HTMLIFrameElement|HTMLHtmlElement|HTMLHeadingElement|HTMLHeadElement|HTMLHRElement|HTMLFrameSetElement|HTMLFrameElement|HTMLFormElement|HTMLFontElement|HTMLFieldSetElement|HTMLEmbedElement|HTMLDivElement|HTMLDirectoryElement|HTMLDetailsElement|HTMLDListElement|HTMLContentElement|HTMLCanvasElement|HTMLButtonElement|HTMLBodyElement|HTMLBaseFontElement|HTMLBaseElement|HTMLBRElement|HTMLAreaElement|HTMLAppletElement|HTMLAnchorElement|HTMLElement'].join('|');
  var v8/*class(_DocumentFragmentImpl)*/ = 'DocumentFragment|ShadowRoot';
  var v9/*class(_DocumentImpl)*/ = 'HTMLDocument|SVGDocument';
  var v10/*class(_CharacterDataImpl)*/ = 'CharacterData|Text|CDATASection|Comment';
  var v11/*class(_WorkerContextImpl)*/ = 'WorkerContext|SharedWorkerContext|DedicatedWorkerContext';
  var v12/*class(_NodeImpl)*/ = [v7/*class(_ElementImpl)*/,v8/*class(_DocumentFragmentImpl)*/,v9/*class(_DocumentImpl)*/,v10/*class(_CharacterDataImpl)*/,'Node|ProcessingInstruction|Notation|EntityReference|Entity|DocumentType|Attr'].join('|');
  var v13/*class(_MediaStreamImpl)*/ = 'MediaStream|LocalMediaStream';
  var v14/*class(_IDBRequestImpl)*/ = 'IDBRequest|IDBVersionChangeRequest';
  var v15/*class(_AbstractWorkerImpl)*/ = 'AbstractWorker|Worker|SharedWorker';
  var v16/*class(_UIEventImpl)*/ = 'UIEvent|WheelEvent|TouchEvent|TextEvent|SVGZoomEvent|MouseEvent|KeyboardEvent|CompositionEvent';
  var v17/*class(_ProgressEventImpl)*/ = 'ProgressEvent|XMLHttpRequestProgressEvent';
  var table = [
    // [dynamic-dispatch-tag, tags of classes implementing dynamic-dispatch-tag]
    ['SVGGradientElement', v2/*class(_SVGGradientElementImpl)*/],
    ['Uint8Array', 'Uint8Array|Uint8ClampedArray'],
    ['HTMLDocument', v9/*class(_DocumentImpl)*/],
    ['CSSValueList', 'CSSValueList|WebKitCSSFilterValue|WebKitCSSTransformValue'],
    ['MediaStream', v13/*class(_MediaStreamImpl)*/],
    ['CSSRule', 'CSSRule|WebKitCSSRegionRule|CSSUnknownRule|CSSStyleRule|CSSPageRule|CSSMediaRule|WebKitCSSKeyframesRule|WebKitCSSKeyframeRule|CSSImportRule|CSSFontFaceRule|CSSCharsetRule'],
    ['UIEvent', v16/*class(_UIEventImpl)*/],
    ['WorkerContext', v11/*class(_WorkerContextImpl)*/],
    ['HTMLCollection', 'HTMLCollection|HTMLOptionsCollection'],
    ['SVGTextPositioningElement', v0/*class(_SVGTextPositioningElementImpl)*/],
    ['SVGTextContentElement', v1/*class(_SVGTextContentElementImpl)*/],
    ['SVGComponentTransferFunctionElement', v3/*class(_SVGComponentTransferFunctionElementImpl)*/],
    ['SVGAnimationElement', v4/*class(_SVGAnimationElementImpl)*/],
    ['SVGElement', v5/*class(_SVGElementImpl)*/],
    ['HTMLMediaElement', v6/*class(_MediaElementImpl)*/],
    ['Element', v7/*class(_ElementImpl)*/],
    ['DocumentFragment', v8/*class(_DocumentFragmentImpl)*/],
    ['CharacterData', v10/*class(_CharacterDataImpl)*/],
    ['Node', v12/*class(_NodeImpl)*/],
    ['IDBRequest', v14/*class(_IDBRequestImpl)*/],
    ['AbstractWorker', v15/*class(_AbstractWorkerImpl)*/],
    ['EventTarget', [v11/*class(_WorkerContextImpl)*/,v12/*class(_NodeImpl)*/,v13/*class(_MediaStreamImpl)*/,v14/*class(_IDBRequestImpl)*/,v15/*class(_AbstractWorkerImpl)*/,'EventTarget|XMLHttpRequestUpload|XMLHttpRequest|DOMWindow|WebSocket|TextTrackList|TextTrackCue|TextTrack|SpeechRecognition|PeerConnection00|Notification|MessagePort|MediaController|IDBTransaction|IDBDatabase|FileWriter|FileReader|EventSource|DeprecatedPeerConnection|DOMApplicationCache|BatteryManager|AudioContext'].join('|')],
    ['StyleSheet', 'StyleSheet|CSSStyleSheet'],
    ['Entry', 'Entry|FileEntry|DirectoryEntry'],
    ['SVGStylable', 'SVGStylable|SVGFilterPrimitiveStandardAttributes'],
    ['ProgressEvent', v17/*class(_ProgressEventImpl)*/],
    ['DOMTokenList', 'DOMTokenList|DOMSettableTokenList'],
    ['Event', [v16/*class(_UIEventImpl)*/,v17/*class(_ProgressEventImpl)*/,'Event|WebGLContextEvent|WebKitTransitionEvent|TrackEvent|StorageEvent|SpeechRecognitionEvent|SpeechInputEvent|PopStateEvent|PageTransitionEvent|OverflowEvent|OfflineAudioCompletionEvent|MutationEvent|MessageEvent|MediaStreamEvent|MediaKeyEvent|IDBVersionChangeEvent|HashChangeEvent|ErrorEvent|DeviceOrientationEvent|DeviceMotionEvent|CustomEvent|CloseEvent|BeforeLoadEvent|AudioProcessingEvent|WebKitAnimationEvent'].join('|')],
    ['AudioParam', 'AudioParam|AudioGain'],
    ['Blob', 'Blob|File'],
    ['IDBCursor', 'IDBCursor|IDBCursorWithValue'],
    ['EntrySync', 'EntrySync|FileEntrySync|DirectoryEntrySync']];
$.dynamicSetMetadata(table);
})();

})();
if (typeof window != 'undefined' && typeof document != 'undefined' &&
    window.addEventListener && document.readyState == 'loading') {
  window.addEventListener('DOMContentLoaded', function(e) {
    $.main();
  });
} else {
  $.main();
}
function init() {
  Isolate.$isolateProperties = {};
Isolate.$defineClass = function(cls, superclass, constructor, prototype) {
  Isolate.$isolateProperties[cls] = constructor;
  constructor.prototype = prototype;
  if (superclass !== "") {
    Isolate.$pendingClasses[cls] = superclass;
  }
};
Isolate.$pendingClasses = {};
Isolate.$finishClasses = function() {
  var pendingClasses = Isolate.$pendingClasses;
  Isolate.$pendingClasses = {};
  var finishedClasses = {};
  function finishClass(cls) {
    if (finishedClasses[cls]) return;
    finishedClasses[cls] = true;
    var superclass = pendingClasses[cls];
    if (!superclass) return;
    finishClass(superclass);
    var constructor = Isolate.$isolateProperties[cls];
    var superConstructor = Isolate.$isolateProperties[superclass];
    var prototype = constructor.prototype;
    if (prototype.__proto__) {
      prototype.__proto__ = superConstructor.prototype;
      prototype.constructor = constructor;
    } else {
      function tmp() {};
      tmp.prototype = superConstructor.prototype;
      var newPrototype = new tmp();
      constructor.prototype = newPrototype;
      newPrototype.constructor = constructor;
      var hasOwnProperty = Object.prototype.hasOwnProperty;
      for (var member in prototype) {
        if (hasOwnProperty.call(prototype, member)) {
          newPrototype[member] = prototype[member];
        }
      }
    }
  }
  for (var cls in pendingClasses) finishClass(cls);
};
Isolate.$finishIsolateConstructor = function(oldIsolate) {
  var isolateProperties = oldIsolate.$isolateProperties;
  var isolatePrototype = oldIsolate.prototype;
  var str = "{\n";
  str += "var isolateProperties = Isolate.$isolateProperties;\n";
  for (var staticName in isolateProperties) {
    if (Object.prototype.hasOwnProperty.call(isolateProperties, staticName)) {
      str += "this." + staticName + "= isolateProperties." + staticName + ";\n";
    }
  }
  str += "}\n";
  var newIsolate = new Function(str);
  newIsolate.prototype = isolatePrototype;
  isolatePrototype.constructor = newIsolate;
  newIsolate.$isolateProperties = isolateProperties;
  return newIsolate;
};
}
