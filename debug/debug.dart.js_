function $defProp(obj, prop, value) {
  Object.defineProperty(obj, prop,
      {value: value, enumerable: false, writable: true, configurable: true});
}
function $throw(e) {
  // If e is not a value, we can use V8's captureStackTrace utility method.
  // TODO(jmesserly): capture the stack trace on other JS engines.
  if (e && (typeof e == 'object') && Error.captureStackTrace) {
    // TODO(jmesserly): this will clobber the e.stack property
    Error.captureStackTrace(e, $throw);
  }
  throw e;
}
$defProp(Object.prototype, '$index', function(i) {
  $throw(new NoSuchMethodException(this, "operator []", [i]));
});
$defProp(Array.prototype, '$index', function(index) {
  var i = index | 0;
  if (i !== index) {
    throw new IllegalArgumentException('index is not int');
  } else if (i < 0 || i >= this.length) {
    throw new IndexOutOfRangeException(index);
  }
  return this[i];
});
$defProp(String.prototype, '$index', function(i) {
  return this[i];
});
$defProp(Object.prototype, '$setindex', function(i, value) {
  $throw(new NoSuchMethodException(this, "operator []=", [i, value]));
});
$defProp(Array.prototype, '$setindex', function(index, value) {
  var i = index | 0;
  if (i !== index) {
    throw new IllegalArgumentException('index is not int');
  } else if (i < 0 || i >= this.length) {
    throw new IndexOutOfRangeException(index);
  }
  return this[i] = value;
});
function $wrap_call$0(fn) { return fn; }
function $wrap_call$1(fn) { return fn; };
function $wrap_call$2(fn) { return fn; };
function $add$complex$(x, y) {
  if (typeof(x) == 'number') {
    $throw(new IllegalArgumentException(y));
  } else if (typeof(x) == 'string') {
    var str = (y == null) ? 'null' : y.toString();
    if (typeof(str) != 'string') {
      throw new Error("calling toString() on right hand operand of operator " +
      "+ did not return a String");
    }
    return x + str;
  } else if (typeof(x) == 'object') {
    return x.$add(y);
  } else {
    $throw(new NoSuchMethodException(x, "operator +", [y]));
  }
}

function $add$(x, y) {
  if (typeof(x) == 'number' && typeof(y) == 'number') return x + y;
  return $add$complex$(x, y);
}
function $div$complex$(x, y) {
  if (typeof(x) == 'number') {
    $throw(new IllegalArgumentException(y));
  } else if (typeof(x) == 'object') {
    return x.$div(y);
  } else {
    $throw(new NoSuchMethodException(x, "operator /", [y]));
  }
}
function $div$(x, y) {
  if (typeof(x) == 'number' && typeof(y) == 'number') return x / y;
  return $div$complex$(x, y);
}
function $eq$(x, y) {
  if (x == null) return y == null;
  return (typeof(x) != 'object') ? x === y : x.$eq(y);
}
// TODO(jimhug): Should this or should it not match equals?
$defProp(Object.prototype, '$eq', function(other) {
  return this === other;
});
function $gt$complex$(x, y) {
  if (typeof(x) == 'number') {
    $throw(new IllegalArgumentException(y));
  } else if (typeof(x) == 'object') {
    return x.$gt(y);
  } else {
    $throw(new NoSuchMethodException(x, "operator >", [y]));
  }
}
function $gt$(x, y) {
  if (typeof(x) == 'number' && typeof(y) == 'number') return x > y;
  return $gt$complex$(x, y);
}
function $lt$complex$(x, y) {
  if (typeof(x) == 'number') {
    $throw(new IllegalArgumentException(y));
  } else if (typeof(x) == 'object') {
    return x.$lt(y);
  } else {
    $throw(new NoSuchMethodException(x, "operator <", [y]));
  }
}
function $lt$(x, y) {
  if (typeof(x) == 'number' && typeof(y) == 'number') return x < y;
  return $lt$complex$(x, y);
}
function $ne$(x, y) {
  if (x == null) return y != null;
  return (typeof(x) != 'object') ? x !== y : !x.$eq(y);
}
function $sub$complex$(x, y) {
  if (typeof(x) == 'number') {
    $throw(new IllegalArgumentException(y));
  } else if (typeof(x) == 'object') {
    return x.$sub(y);
  } else {
    $throw(new NoSuchMethodException(x, "operator -", [y]));
  }
}
function $sub$(x, y) {
  if (typeof(x) == 'number' && typeof(y) == 'number') return x - y;
  return $sub$complex$(x, y);
}
function $truncdiv$(x, y) {
  if (typeof(x) == 'number') {
    if (typeof(y) == 'number') {
      if (y == 0) $throw(new IntegerDivisionByZeroException());
      var tmp = x / y;
      return (tmp < 0) ? Math.ceil(tmp) : Math.floor(tmp);
    } else {
      $throw(new IllegalArgumentException(y));
    }
  } else if (typeof(x) == 'object') {
    return x.$truncdiv(y);
  } else {
    $throw(new NoSuchMethodException(x, "operator ~/", [y]));
  }
}
$defProp(Object.prototype, '$typeNameOf', (function() {
  function constructorNameWithFallback(obj) {
    var constructor = obj.constructor;
    if (typeof(constructor) == 'function') {
      // The constructor isn't null or undefined at this point. Try
      // to grab hold of its name.
      var name = constructor.name;
      // If the name is a non-empty string, we use that as the type
      // name of this object. On Firefox, we often get 'Object' as
      // the constructor name even for more specialized objects so
      // we have to fall through to the toString() based implementation
      // below in that case.
      if (typeof(name) == 'string' && name && name != 'Object') return name;
    }
    var string = Object.prototype.toString.call(obj);
    return string.substring(8, string.length - 1);
  }

  function chrome$typeNameOf() {
    var name = this.constructor.name;
    if (name == 'Window') return 'DOMWindow';
    if (name == 'CanvasPixelArray') return 'Uint8ClampedArray';
    return name;
  }

  function firefox$typeNameOf() {
    var name = constructorNameWithFallback(this);
    if (name == 'Window') return 'DOMWindow';
    if (name == 'Document') return 'HTMLDocument';
    if (name == 'XMLDocument') return 'Document';
    if (name == 'WorkerMessageEvent') return 'MessageEvent';
    return name;
  }

  function ie$typeNameOf() {
    var name = constructorNameWithFallback(this);
    if (name == 'Window') return 'DOMWindow';
    // IE calls both HTML and XML documents 'Document', so we check for the
    // xmlVersion property, which is the empty string on HTML documents.
    if (name == 'Document' && this.xmlVersion) return 'Document';
    if (name == 'Document') return 'HTMLDocument';
    if (name == 'HTMLTableDataCellElement') return 'HTMLTableCellElement';
    if (name == 'HTMLTableHeaderCellElement') return 'HTMLTableCellElement';
    if (name == 'MSStyleCSSProperties') return 'CSSStyleDeclaration';
    if (name == 'CanvasPixelArray') return 'Uint8ClampedArray';
    if (name == 'HTMLPhraseElement') return 'HTMLElement';
    return name;
  }

  // If we're not in the browser, we're almost certainly running on v8.
  if (typeof(navigator) != 'object') return chrome$typeNameOf;

  var userAgent = navigator.userAgent;
  if (/Chrome|DumpRenderTree/.test(userAgent)) return chrome$typeNameOf;
  if (/Firefox/.test(userAgent)) return firefox$typeNameOf;
  if (/MSIE/.test(userAgent)) return ie$typeNameOf;
  return function() { return constructorNameWithFallback(this); };
})());
$defProp(Object.prototype, "get$typeName", Object.prototype.$typeNameOf);
/** Implements extends for Dart classes on JavaScript prototypes. */
function $inherits(child, parent) {
  if (child.prototype.__proto__) {
    child.prototype.__proto__ = parent.prototype;
  } else {
    function tmp() {};
    tmp.prototype = parent.prototype;
    child.prototype = new tmp();
    child.prototype.constructor = child;
  }
}
function $dynamic(name) {
  var f = Object.prototype[name];
  if (f && f.methods) return f.methods;

  var methods = {};
  if (f) methods.Object = f;
  function $dynamicBind() {
    // Find the target method
    var obj = this;
    var tag = obj.$typeNameOf();
    var method = methods[tag];
    if (!method) {
      var table = $dynamicMetadata;
      for (var i = 0; i < table.length; i++) {
        var entry = table[i];
        if (entry.map.hasOwnProperty(tag)) {
          method = methods[entry.tag];
          if (method) break;
        }
      }
    }
    method = method || methods.Object;

    var proto = Object.getPrototypeOf(obj);

    if (method == null) {
      // Trampoline to throw NoSuchMethodException (TODO: call noSuchMethod).
      method = function(){
        // Exact type check to prevent this code shadowing the dispatcher from a
        // subclass.
        if (Object.getPrototypeOf(this) === proto) {
          // TODO(sra): 'name' is the jsname, should be the Dart name.
          $throw(new NoSuchMethodException(
              obj, name, Array.prototype.slice.call(arguments)));
        }
        return Object.prototype[name].apply(this, arguments);
      };
    }

    if (!proto.hasOwnProperty(name)) {
      $defProp(proto, name, method);
    }

    return method.apply(this, Array.prototype.slice.call(arguments));
  };
  $dynamicBind.methods = methods;
  $defProp(Object.prototype, name, $dynamicBind);
  return methods;
}
if (typeof $dynamicMetadata == 'undefined') $dynamicMetadata = [];
Function.prototype.bind = Function.prototype.bind ||
  function(thisObj) {
    var func = this;
    var funcLength = func.$length || func.length;
    var argsLength = arguments.length;
    if (argsLength > 1) {
      var boundArgs = Array.prototype.slice.call(arguments, 1);
      var bound = function() {
        // Prepend the bound arguments to the current arguments.
        var newArgs = Array.prototype.slice.call(arguments);
        Array.prototype.unshift.apply(newArgs, boundArgs);
        return func.apply(thisObj, newArgs);
      };
      bound.$length = Math.max(0, funcLength - (argsLength - 1));
      return bound;
    } else {
      var bound = function() {
        return func.apply(thisObj, arguments);
      };
      bound.$length = funcLength;
      return bound;
    }
  };
function $dynamicSetMetadata(inputTable) {
  // TODO: Deal with light isolates.
  var table = [];
  for (var i = 0; i < inputTable.length; i++) {
    var tag = inputTable[i][0];
    var tags = inputTable[i][1];
    var map = {};
    var tagNames = tags.split('|');
    for (var j = 0; j < tagNames.length; j++) {
      map[tagNames[j]] = true;
    }
    table.push({tag: tag, tags: tags, map: map});
  }
  $dynamicMetadata = table;
}
$defProp(Object.prototype, "get$dynamic", function() {
  "use strict"; return this;
});
$defProp(Object.prototype, "noSuchMethod", function(name, args) {
  $throw(new NoSuchMethodException(this, name, args));
});
$defProp(Object.prototype, "$dom_addEventListener$3", function($0, $1, $2) {
  return this.noSuchMethod("$dom_addEventListener", [$0, $1, $2]);
});
$defProp(Object.prototype, "$dom_removeEventListener$3", function($0, $1, $2) {
  return this.noSuchMethod("$dom_removeEventListener", [$0, $1, $2]);
});
$defProp(Object.prototype, "add$1", function($0) {
  return this.noSuchMethod("add", [$0]);
});
$defProp(Object.prototype, "clear$0", function() {
  return this.noSuchMethod("clear", []);
});
$defProp(Object.prototype, "contains$1", function($0) {
  return this.noSuchMethod("contains", [$0]);
});
$defProp(Object.prototype, "convert$1", function($0) {
  return this.noSuchMethod("convert", [$0]);
});
$defProp(Object.prototype, "end$0", function() {
  return this.noSuchMethod("end", []);
});
$defProp(Object.prototype, "every$1", function($0) {
  return this.noSuchMethod("every", [$0]);
});
$defProp(Object.prototype, "filter$1", function($0) {
  return this.noSuchMethod("filter", [$0]);
});
$defProp(Object.prototype, "forEach$1", function($0) {
  return this.noSuchMethod("forEach", [$0]);
});
$defProp(Object.prototype, "handler$2", function($0, $1) {
  return this.noSuchMethod("handler", [$0, $1]);
});
$defProp(Object.prototype, "indexOf$1", function($0) {
  return this.noSuchMethod("indexOf", [$0]);
});
$defProp(Object.prototype, "is$Collection", function() {
  return false;
});
$defProp(Object.prototype, "is$Exception", function() {
  return false;
});
$defProp(Object.prototype, "is$IFrameworkContainer", function() {
  return false;
});
$defProp(Object.prototype, "is$IValueConverter", function() {
  return false;
});
$defProp(Object.prototype, "is$List", function() {
  return false;
});
$defProp(Object.prototype, "is$Map", function() {
  return false;
});
$defProp(Object.prototype, "is$RegExp", function() {
  return false;
});
$defProp(Object.prototype, "is$html_Element", function() {
  return false;
});
$defProp(Object.prototype, "postMessage$2", function($0, $1) {
  return this.noSuchMethod("postMessage", [$0, $1]);
});
$defProp(Object.prototype, "remove$0", function() {
  return this.noSuchMethod("remove", []);
});
$defProp(Object.prototype, "remove$1", function($0) {
  return this.noSuchMethod("remove", [$0]);
});
$defProp(Object.prototype, "setProperty$3", function($0, $1, $2) {
  return this.noSuchMethod("setProperty", [$0, $1, $2]);
});
$defProp(Object.prototype, "some$1", function($0) {
  return this.noSuchMethod("some", [$0]);
});
$defProp(Object.prototype, "sort$1", function($0) {
  return this.noSuchMethod("sort", [$0]);
});
$defProp(Object.prototype, "start$0", function() {
  return this.noSuchMethod("start", []);
});
$defProp(Object.prototype, "substring$1", function($0) {
  return this.noSuchMethod("substring", [$0]);
});
$defProp(Object.prototype, "unregister$0", function() {
  return this.noSuchMethod("unregister", []);
});
function IndexOutOfRangeException(_index) {
  this._index = _index;
}
IndexOutOfRangeException.prototype.is$IndexOutOfRangeException = function(){return true};
IndexOutOfRangeException.prototype.is$Exception = function(){return true};
IndexOutOfRangeException.prototype.toString = function() {
  return ("IndexOutOfRangeException: " + this._index);
}
function IllegalAccessException() {

}
IllegalAccessException.prototype.is$Exception = function(){return true};
IllegalAccessException.prototype.toString = function() {
  return "Attempt to modify an immutable object";
}
function NoSuchMethodException(_receiver, _functionName, _arguments, _existingArgumentNames) {
  this._receiver = _receiver;
  this._functionName = _functionName;
  this._arguments = _arguments;
  this._existingArgumentNames = _existingArgumentNames;
}
NoSuchMethodException.prototype.is$NoSuchMethodException = function(){return true};
NoSuchMethodException.prototype.is$Exception = function(){return true};
NoSuchMethodException.prototype.toString = function() {
  var sb = new StringBufferImpl("");
  for (var i = (0);
   i < this._arguments.get$length(); i++) {
    if (i > (0)) {
      sb.add(", ");
    }
    sb.add(this._arguments.$index(i));
  }
  if (null == this._existingArgumentNames) {
    return (("NoSuchMethodException : method not found: '" + this._functionName + "'\n") + ("Receiver: " + this._receiver + "\n") + ("Arguments: [" + sb + "]"));
  }
  else {
    var actualParameters = sb.toString();
    sb = new StringBufferImpl("");
    for (var i = (0);
     i < this._existingArgumentNames.get$length(); i++) {
      if (i > (0)) {
        sb.add(", ");
      }
      sb.add(this._existingArgumentNames.$index(i));
    }
    var formalParameters = sb.toString();
    return ("NoSuchMethodException: incorrect number of arguments passed to " + ("method named '" + this._functionName + "'\nReceiver: " + this._receiver + "\n") + ("Tried calling: " + this._functionName + "(" + actualParameters + ")\n") + ("Found: " + this._functionName + "(" + formalParameters + ")"));
  }
}
function ClosureArgumentMismatchException() {

}
ClosureArgumentMismatchException.prototype.is$Exception = function(){return true};
ClosureArgumentMismatchException.prototype.toString = function() {
  return "Closure argument mismatch";
}
function ObjectNotClosureException() {

}
ObjectNotClosureException.prototype.is$Exception = function(){return true};
ObjectNotClosureException.prototype.toString = function() {
  return "Object is not closure";
}
function IllegalArgumentException(arg) {
  this._arg = arg;
}
IllegalArgumentException.prototype.is$IllegalArgumentException = function(){return true};
IllegalArgumentException.prototype.is$Exception = function(){return true};
IllegalArgumentException.prototype.toString = function() {
  return ("Illegal argument(s): " + this._arg);
}
function StackOverflowException() {

}
StackOverflowException.prototype.is$Exception = function(){return true};
StackOverflowException.prototype.toString = function() {
  return "Stack Overflow";
}
function BadNumberFormatException(_s) {
  this._s = _s;
}
BadNumberFormatException.prototype.is$Exception = function(){return true};
BadNumberFormatException.prototype.toString = function() {
  return ("BadNumberFormatException: '" + this._s + "'");
}
function NullPointerException(functionName, arguments) {
  this.functionName = functionName;
  this.arguments = arguments;
}
NullPointerException.prototype.is$Exception = function(){return true};
NullPointerException.prototype.toString = function() {
  if (this.functionName == null) {
    return this.get$exceptionName();
  }
  else {
    return (("" + this.get$exceptionName() + " : method: '" + this.functionName + "'\n") + "Receiver: null\n" + ("Arguments: " + this.arguments));
  }
}
NullPointerException.prototype.get$exceptionName = function() {
  return "NullPointerException";
}
function NoMoreElementsException() {

}
NoMoreElementsException.prototype.is$Exception = function(){return true};
NoMoreElementsException.prototype.toString = function() {
  return "NoMoreElementsException";
}
function EmptyQueueException() {

}
EmptyQueueException.prototype.is$Exception = function(){return true};
EmptyQueueException.prototype.toString = function() {
  return "EmptyQueueException";
}
function UnsupportedOperationException(_message) {
  this._message = _message;
}
UnsupportedOperationException.prototype.is$Exception = function(){return true};
UnsupportedOperationException.prototype.toString = function() {
  return ("UnsupportedOperationException: " + this._message);
}
function NotImplementedException() {

}
NotImplementedException.prototype.is$Exception = function(){return true};
NotImplementedException.prototype.toString = function() {
  return "NotImplementedException";
}
function IntegerDivisionByZeroException() {

}
IntegerDivisionByZeroException.prototype.is$IntegerDivisionByZeroException = function(){return true};
IntegerDivisionByZeroException.prototype.is$Exception = function(){return true};
IntegerDivisionByZeroException.prototype.toString = function() {
  return "IntegerDivisionByZeroException";
}
Function.prototype.to$call$0 = function() {
  this.call$0 = this._genStub(0);
  this.to$call$0 = function() { return this.call$0; };
  return this.call$0;
};
Function.prototype.call$0 = function() {
  return this.to$call$0()();
};
function to$call$0(f) { return f && f.to$call$0(); }
Function.prototype.to$call$1 = function() {
  this.call$1 = this._genStub(1);
  this.to$call$1 = function() { return this.call$1; };
  return this.call$1;
};
Function.prototype.call$1 = function($0) {
  return this.to$call$1()($0);
};
function to$call$1(f) { return f && f.to$call$1(); }
Function.prototype.to$call$2 = function() {
  this.call$2 = this._genStub(2);
  this.to$call$2 = function() { return this.call$2; };
  return this.call$2;
};
Function.prototype.call$2 = function($0, $1) {
  return this.to$call$2()($0, $1);
};
function to$call$2(f) { return f && f.to$call$2(); }
function FutureNotCompleteException() {

}
FutureNotCompleteException.prototype.is$Exception = function(){return true};
FutureNotCompleteException.prototype.toString = function() {
  return "Exception: future has not been completed";
}
function FutureAlreadyCompleteException() {

}
FutureAlreadyCompleteException.prototype.is$Exception = function(){return true};
FutureAlreadyCompleteException.prototype.toString = function() {
  return "Exception: future already completed";
}
Math.parseInt = function(str) {
    var match = /^\s*[+-]?(?:(0[xX][abcdefABCDEF0-9]+)|\d+)\s*$/.exec(str);
    if (!match) $throw(new BadNumberFormatException(str));
    var isHex = !!match[1];
    var ret = parseInt(str, isHex ? 16 : 10);
    if (isNaN(ret)) $throw(new BadNumberFormatException(str));
    return ret;
}
Math.parseDouble = function(str) {
  var ret = parseFloat(str);
    if (isNaN(ret) && str != 'NaN') $throw(new BadNumberFormatException(str));
    return ret;
}
function Strings() {}
Strings.join = function(strings, separator) {
  return StringBase.join(strings, separator);
}
function print$(obj) {
  return _print(obj);
}
function _print(obj) {
  if (typeof console == 'object') {
    if (obj) obj = obj.toString();
    console.log(obj);
  } else if (typeof write === 'function') {
    write(obj);
    write('\n');
  }
}
function _toDartException(e) {
  function attachStack(dartEx) {
    // TODO(jmesserly): setting the stack property is not a long term solution.
    var stack = e.stack;
    // The stack contains the error message, and the stack is all that is
    // printed (the exception's toString() is never called).  Make the Dart
    // exception's toString() be the dominant message.
    if (typeof stack == 'string') {
      var message = dartEx.toString();
      if (/^(Type|Range)Error:/.test(stack)) {
        // Indent JS message (it can be helpful) so new message stands out.
        stack = '    (' + stack.substring(0, stack.indexOf('\n')) + ')\n' +
                stack.substring(stack.indexOf('\n') + 1);
      }
      stack = message + '\n' + stack;
    }
    dartEx.stack = stack;
    return dartEx;
  }

  if (e instanceof TypeError) {
    switch(e.type) {
      case 'property_not_function':
      case 'called_non_callable':
        if (e.arguments[0] == null) {
          return attachStack(new NullPointerException(null, []));
        } else {
          return attachStack(new ObjectNotClosureException());
        }
        break;
      case 'non_object_property_call':
      case 'non_object_property_load':
        return attachStack(new NullPointerException(null, []));
        break;
      case 'undefined_method':
        var mname = e.arguments[0];
        if (typeof(mname) == 'string' && (mname.indexOf('call$') == 0
            || mname == 'call' || mname == 'apply')) {
          return attachStack(new ObjectNotClosureException());
        } else {
          // TODO(jmesserly): fix noSuchMethod on operators so we don't hit this
          return attachStack(new NoSuchMethodException('', e.arguments[0], []));
        }
        break;
    }
  } else if (e instanceof RangeError) {
    if (e.message.indexOf('call stack') >= 0) {
      return attachStack(new StackOverflowException());
    }
  }
  return e;
}
var ListFactory = Array;
$defProp(ListFactory.prototype, "is$List", function(){return true});
$defProp(ListFactory.prototype, "is$Collection", function(){return true});
ListFactory.ListFactory$from$factory = function(other) {
  var list = [];
  for (var $$i = other.iterator(); $$i.hasNext(); ) {
    var e = $$i.next();
    list.add$1(e);
  }
  return list;
}
$defProp(ListFactory.prototype, "get$length", function() { return this.length; });
$defProp(ListFactory.prototype, "set$length", function(value) { return this.length = value; });
$defProp(ListFactory.prototype, "add", function(value) {
  this.push(value);
});
$defProp(ListFactory.prototype, "addAll", function(collection) {
  for (var $$i = collection.iterator(); $$i.hasNext(); ) {
    var item = $$i.next();
    this.add(item);
  }
});
$defProp(ListFactory.prototype, "clear$_", function() {
  this.set$length((0));
});
$defProp(ListFactory.prototype, "removeLast", function() {
  return this.pop();
});
$defProp(ListFactory.prototype, "last", function() {
  return this.$index(this.get$length() - (1));
});
$defProp(ListFactory.prototype, "getRange", function(start, rangeLength) {
  if (rangeLength == (0)) return [];
  if (rangeLength < (0)) $throw(new IllegalArgumentException("length"));
  if (start < (0) || start + rangeLength > this.get$length()) $throw(new IndexOutOfRangeException(start));
  return this.slice(start, start + rangeLength);
});
$defProp(ListFactory.prototype, "removeRange", function(start, rangeLength) {
  if (rangeLength == (0)) return;
  if (rangeLength < (0)) $throw(new IllegalArgumentException("length"));
  if (start < (0) || start + rangeLength > this.get$length()) $throw(new IndexOutOfRangeException(start));
  this.splice(start, rangeLength);
});
$defProp(ListFactory.prototype, "isEmpty", function() {
  return this.get$length() == (0);
});
$defProp(ListFactory.prototype, "iterator", function() {
  return new ListIterator(this);
});
$defProp(ListFactory.prototype, "toString", function() {
  return Collections.collectionToString(this);
});
$defProp(ListFactory.prototype, "add$1", ListFactory.prototype.add);
$defProp(ListFactory.prototype, "clear$0", ListFactory.prototype.clear$_);
$defProp(ListFactory.prototype, "every$1", function($0) {
  return this.every(to$call$1($0));
});
$defProp(ListFactory.prototype, "filter$1", function($0) {
  return this.filter(to$call$1($0));
});
$defProp(ListFactory.prototype, "forEach$1", function($0) {
  return this.forEach(to$call$1($0));
});
$defProp(ListFactory.prototype, "indexOf$1", ListFactory.prototype.indexOf);
$defProp(ListFactory.prototype, "some$1", function($0) {
  return this.some(to$call$1($0));
});
$defProp(ListFactory.prototype, "sort$1", function($0) {
  return this.sort(to$call$2($0));
});
function ListIterator(array) {
  this._array = array;
  this._pos = (0);
}
ListIterator.prototype.hasNext = function() {
  return this._array.get$length() > this._pos;
}
ListIterator.prototype.next = function() {
  if (!this.hasNext()) {
    $throw(const$0001);
  }
  return this._array.$index(this._pos++);
}
$inherits(ImmutableList, ListFactory);
function ImmutableList(length) {
  Array.call(this, length);
}
ImmutableList.ImmutableList$from$factory = function(other) {
  return _constList(other);
}
ImmutableList.prototype.get$length = function() {
  return this.length;
}
ImmutableList.prototype.set$length = function(length) {
  $throw(const$0005);
}
ImmutableList.prototype.$setindex = function(index, value) {
  $throw(const$0005);
}
ImmutableList.prototype.removeRange = function(start, length) {
  $throw(const$0005);
}
ImmutableList.prototype.sort = function(compare) {
  $throw(const$0005);
}
ImmutableList.prototype.add = function(element) {
  $throw(const$0005);
}
ImmutableList.prototype.addAll = function(elements) {
  $throw(const$0005);
}
ImmutableList.prototype.clear$_ = function() {
  $throw(const$0005);
}
ImmutableList.prototype.removeLast = function() {
  $throw(const$0005);
}
ImmutableList.prototype.toString = function() {
  return Collections.collectionToString(this);
}
ImmutableList.prototype.add$1 = ImmutableList.prototype.add;
ImmutableList.prototype.clear$0 = ImmutableList.prototype.clear$_;
ImmutableList.prototype.sort$1 = function($0) {
  return this.sort(to$call$2($0));
};
function ImmutableMap(keyValuePairs) {
  this._internal = _map(keyValuePairs);
}
ImmutableMap.prototype.is$Map = function(){return true};
ImmutableMap.prototype.$index = function(key) {
  return this._internal.$index(key);
}
ImmutableMap.prototype.isEmpty = function() {
  return this._internal.isEmpty();
}
ImmutableMap.prototype.get$length = function() {
  return this._internal.get$length();
}
ImmutableMap.prototype.forEach = function(f) {
  this._internal.forEach$1(f);
}
ImmutableMap.prototype.containsKey = function(key) {
  return this._internal.containsKey(key);
}
ImmutableMap.prototype.$setindex = function(key, value) {
  $throw(const$0005);
}
ImmutableMap.prototype.clear$_ = function() {
  $throw(const$0005);
}
ImmutableMap.prototype.remove = function(key) {
  $throw(const$0005);
}
ImmutableMap.prototype.toString = function() {
  return Maps.mapToString(this);
}
ImmutableMap.prototype.clear$0 = ImmutableMap.prototype.clear$_;
ImmutableMap.prototype.forEach$1 = function($0) {
  return this.forEach(to$call$2($0));
};
ImmutableMap.prototype.remove$1 = ImmutableMap.prototype.remove;
function JSSyntaxRegExp(pattern, multiLine, ignoreCase) {
  JSSyntaxRegExp._create$ctor.call(this, pattern, $add$(($eq$(multiLine, true) ? "m" : ""), ($eq$(ignoreCase, true) ? "i" : "")));
}
JSSyntaxRegExp._create$ctor = function(pattern, flags) {
  this.re = new RegExp(pattern, flags);
      this.pattern = pattern;
      this.multiLine = this.re.multiline;
      this.ignoreCase = this.re.ignoreCase;
}
JSSyntaxRegExp._create$ctor.prototype = JSSyntaxRegExp.prototype;
JSSyntaxRegExp.prototype.is$RegExp = function(){return true};
JSSyntaxRegExp.prototype.firstMatch = function(str) {
  var m = this._exec(str);
  return m == null ? null : new MatchImplementation(this.pattern, str, this._matchStart(m), this.get$_lastIndex(), m);
}
JSSyntaxRegExp.prototype._exec = function(str) {
  return this.re.exec(str);
}
JSSyntaxRegExp.prototype._matchStart = function(m) {
  return m.index;
}
JSSyntaxRegExp.prototype.get$_lastIndex = function() {
  return this.re.lastIndex;
}
JSSyntaxRegExp.prototype.hasMatch = function(str) {
  return this.re.test(str);
}
JSSyntaxRegExp.prototype.allMatches = function(str) {
  return new _AllMatchesIterable(this, str);
}
JSSyntaxRegExp.prototype.get$_global = function() {
  return new JSSyntaxRegExp._create$ctor(this.pattern, $add$($add$("g", (this.multiLine ? "m" : "")), (this.ignoreCase ? "i" : "")));
}
function MatchImplementation(pattern, str, _start, _end, _groups) {
  this.pattern = pattern;
  this.str = str;
  this._start = _start;
  this._end = _end;
  this._groups = _groups;
}
MatchImplementation.prototype.start = function() {
  return this._start;
}
MatchImplementation.prototype.end = function() {
  return this._end;
}
MatchImplementation.prototype.group = function(groupIndex) {
  return this._groups.$index(groupIndex);
}
MatchImplementation.prototype.$index = function(groupIndex) {
  return this._groups.$index(groupIndex);
}
MatchImplementation.prototype.end$0 = MatchImplementation.prototype.end;
MatchImplementation.prototype.start$0 = MatchImplementation.prototype.start;
function _AllMatchesIterable(_re, _str) {
  this._re = _re;
  this._str = _str;
}
_AllMatchesIterable.prototype.iterator = function() {
  return new _AllMatchesIterator(this._re, this._str);
}
function _AllMatchesIterator(re, _str) {
  this._str = _str;
  this._done = false;
  this._re = re.get$_global();
}
_AllMatchesIterator.prototype.next = function() {
  if (!this.hasNext()) {
    $throw(const$0001);
  }
  var result = this._next;
  this._next = null;
  return result;
}
_AllMatchesIterator.prototype.hasNext = function() {
  if (this._done) {
    return false;
  }
  else if (this._next != null) {
    return true;
  }
  this._next = this._re.firstMatch(this._str);
  if (this._next == null) {
    this._done = true;
    return false;
  }
  else {
    return true;
  }
}
var NumImplementation = Number;
NumImplementation.prototype.round = function() {
  'use strict'; return Math.round(this);
}
NumImplementation.prototype.hashCode = function() {
  'use strict'; return this & 0x1FFFFFFF;
}
NumImplementation.prototype.toInt = function() {
  
    'use strict';
    if (isNaN(this)) $throw(new BadNumberFormatException("NaN"));
    if ((this == Infinity) || (this == -Infinity)) {
      $throw(new BadNumberFormatException("Infinity"));
    }
    var truncated = (this < 0) ? Math.ceil(this) : Math.floor(this);
    if (truncated == -0.0) return 0;
    return truncated;
}
NumImplementation.prototype.toStringAsPrecision = function(precision) {
  'use strict'; return this.toPrecision(precision)
}
function ExceptionImplementation(msg) {
  this._msg = msg;
}
ExceptionImplementation.prototype.is$Exception = function(){return true};
ExceptionImplementation.prototype.toString = function() {
  return (null == this._msg) ? "Exception" : ("Exception: " + this._msg);
}
function Collections() {}
Collections.collectionToString = function(c) {
  var result = new StringBufferImpl("");
  Collections._emitCollection(c, result, new Array());
  return result.toString();
}
Collections._emitCollection = function(c, result, visiting) {
  visiting.add(c);
  var isList = !!(c && c.is$List());
  result.add(isList ? "[" : "{");
  var first = true;
  for (var $$i = c.iterator(); $$i.hasNext(); ) {
    var e = $$i.next();
    if (!first) {
      result.add(", ");
    }
    first = false;
    Collections._emitObject(e, result, visiting);
  }
  result.add(isList ? "]" : "}");
  visiting.removeLast();
}
Collections._emitObject = function(o, result, visiting) {
  if (!!(o && o.is$Collection())) {
    if (Collections._containsRef(visiting, o)) {
      result.add(!!(o && o.is$List()) ? "[...]" : "{...}");
    }
    else {
      Collections._emitCollection(o, result, visiting);
    }
  }
  else if (!!(o && o.is$Map())) {
    if (Collections._containsRef(visiting, o)) {
      result.add("{...}");
    }
    else {
      Maps._emitMap(o, result, visiting);
    }
  }
  else {
    result.add($eq$(o) ? "null" : o);
  }
}
Collections._containsRef = function(c, ref) {
  for (var $$i = c.iterator(); $$i.hasNext(); ) {
    var e = $$i.next();
    if ((null == e ? null == (ref) : e === ref)) return true;
  }
  return false;
}
function FutureImpl() {
  this._isComplete = false;
  this._exceptionHandled = false;
  this._listeners = [];
  this._exceptionHandlers = [];
}
FutureImpl.prototype.get$value = function() {
  if (!this.get$isComplete()) {
    $throw(new FutureNotCompleteException());
  }
  if (null != this._exception) {
    $throw(this._exception);
  }
  return this._value;
}
FutureImpl.prototype.get$isComplete = function() {
  return this._isComplete;
}
FutureImpl.prototype.get$hasValue = function() {
  return this.get$isComplete() && null == this._exception;
}
FutureImpl.prototype.then = function(onComplete) {
  if (this.get$hasValue()) {
    onComplete(this.get$value());
  }
  else if (!this.get$isComplete()) {
    this._listeners.add(onComplete);
  }
  else if (!this._exceptionHandled) {
    $throw(this._exception);
  }
}
FutureImpl.prototype._complete = function() {
  this._isComplete = true;
  if (null != this._exception) {
    var $$list = this._exceptionHandlers;
    for (var $$i = $$list.iterator(); $$i.hasNext(); ) {
      var handler = $$i.next();
      if ($eq$(handler.call$1(this._exception), true)) {
        this._exceptionHandled = true;
        break;
      }
    }
  }
  if (this.get$hasValue()) {
    var $$list = this._listeners;
    for (var $$i = $$list.iterator(); $$i.hasNext(); ) {
      var listener = $$i.next();
      listener.call$1(this.get$value());
    }
  }
  else {
    if (!this._exceptionHandled && this._listeners.get$length() > (0)) {
      $throw(this._exception);
    }
  }
}
FutureImpl.prototype._setValue = function(value) {
  if (this._isComplete) {
    $throw(new FutureAlreadyCompleteException());
  }
  this._value = value;
  this._complete();
}
FutureImpl.prototype._setException = function(exception) {
  if (null == exception) {
    $throw(new IllegalArgumentException(null));
  }
  if (this._isComplete) {
    $throw(new FutureAlreadyCompleteException());
  }
  this._exception = exception;
  this._complete();
}
function CompleterImpl() {
  this._futureImpl = new FutureImpl();
}
CompleterImpl.prototype.get$future = function() {
  return this._futureImpl;
}
CompleterImpl.prototype.complete = function(value) {
  this._futureImpl._setValue(value);
}
CompleterImpl.prototype.completeException = function(exception) {
  this._futureImpl._setException(exception);
}
$inherits(CompleterImpl_ElementRect, CompleterImpl);
function CompleterImpl_ElementRect() {
  this._futureImpl = new FutureImpl();
}
function HashMapImplementation() {
  this._numberOfEntries = (0);
  this._numberOfDeleted = (0);
  this._loadLimit = HashMapImplementation._computeLoadLimit((8));
  this._keys = new Array((8));
  this._values = new Array((8));
}
HashMapImplementation.prototype.is$Map = function(){return true};
HashMapImplementation._computeLoadLimit = function(capacity) {
  return $truncdiv$((capacity * (3)), (4));
}
HashMapImplementation._firstProbe = function(hashCode, length) {
  return hashCode & (length - (1));
}
HashMapImplementation._nextProbe = function(currentProbe, numberOfProbes, length) {
  return (currentProbe + numberOfProbes) & (length - (1));
}
HashMapImplementation.prototype._probeForAdding = function(key) {
  var hash = HashMapImplementation._firstProbe(key.hashCode(), this._keys.get$length());
  var numberOfProbes = (1);
  var initialHash = hash;
  var insertionIndex = (-1);
  while (true) {
    var existingKey = this._keys.$index(hash);
    if (null == existingKey) {
      if (insertionIndex < (0)) return hash;
      return insertionIndex;
    }
    else if ($eq$(existingKey, key)) {
      return hash;
    }
    else if ((insertionIndex < (0)) && ((null == const$0000 ? null == (existingKey) : const$0000 === existingKey))) {
      insertionIndex = hash;
    }
    hash = HashMapImplementation._nextProbe(hash, numberOfProbes++, this._keys.get$length());
  }
}
HashMapImplementation.prototype._probeForLookup = function(key) {
  var hash = HashMapImplementation._firstProbe(key.hashCode(), this._keys.get$length());
  var numberOfProbes = (1);
  var initialHash = hash;
  while (true) {
    var existingKey = this._keys.$index(hash);
    if (null == existingKey) return (-1);
    if ($eq$(existingKey, key)) return hash;
    hash = HashMapImplementation._nextProbe(hash, numberOfProbes++, this._keys.get$length());
  }
}
HashMapImplementation.prototype._ensureCapacity = function() {
  var newNumberOfEntries = this._numberOfEntries + (1);
  if (newNumberOfEntries >= this._loadLimit) {
    this._grow(this._keys.get$length() * (2));
    return;
  }
  var capacity = this._keys.get$length();
  var numberOfFreeOrDeleted = capacity - newNumberOfEntries;
  var numberOfFree = numberOfFreeOrDeleted - this._numberOfDeleted;
  if (this._numberOfDeleted > numberOfFree) {
    this._grow(this._keys.get$length());
  }
}
HashMapImplementation._isPowerOfTwo = function(x) {
  return ((x & (x - (1))) == (0));
}
HashMapImplementation.prototype._grow = function(newCapacity) {
  var capacity = this._keys.get$length();
  this._loadLimit = HashMapImplementation._computeLoadLimit(newCapacity);
  var oldKeys = this._keys;
  var oldValues = this._values;
  this._keys = new Array(newCapacity);
  this._values = new Array(newCapacity);
  for (var i = (0);
   i < capacity; i++) {
    var key = oldKeys.$index(i);
    if (null == key || (null == key ? null == (const$0000) : key === const$0000)) {
      continue;
    }
    var value = oldValues.$index(i);
    var newIndex = this._probeForAdding(key);
    this._keys.$setindex(newIndex, key);
    this._values.$setindex(newIndex, value);
  }
  this._numberOfDeleted = (0);
}
HashMapImplementation.prototype.clear$_ = function() {
  this._numberOfEntries = (0);
  this._numberOfDeleted = (0);
  var length = this._keys.get$length();
  for (var i = (0);
   i < length; i++) {
    this._keys.$setindex(i);
    this._values.$setindex(i);
  }
}
HashMapImplementation.prototype.$setindex = function(key, value) {
  var $0;
  this._ensureCapacity();
  var index = this._probeForAdding(key);
  if ((null == this._keys.$index(index)) || ((($0 = this._keys.$index(index)) == null ? null == (const$0000) : $0 === const$0000))) {
    this._numberOfEntries++;
  }
  this._keys.$setindex(index, key);
  this._values.$setindex(index, value);
}
HashMapImplementation.prototype.$index = function(key) {
  var index = this._probeForLookup(key);
  if (index < (0)) return null;
  return this._values.$index(index);
}
HashMapImplementation.prototype.remove = function(key) {
  var index = this._probeForLookup(key);
  if (index >= (0)) {
    this._numberOfEntries--;
    var value = this._values.$index(index);
    this._values.$setindex(index);
    this._keys.$setindex(index, const$0000);
    this._numberOfDeleted++;
    return value;
  }
  return null;
}
HashMapImplementation.prototype.isEmpty = function() {
  return this._numberOfEntries == (0);
}
HashMapImplementation.prototype.get$length = function() {
  return this._numberOfEntries;
}
HashMapImplementation.prototype.forEach = function(f) {
  var length = this._keys.get$length();
  for (var i = (0);
   i < length; i++) {
    var key = this._keys.$index(i);
    if ((null != key) && ((null == key ? null != (const$0000) : key !== const$0000))) {
      f(key, this._values.$index(i));
    }
  }
}
HashMapImplementation.prototype.getKeys = function() {
  var list = new Array(this.get$length());
  var i = (0);
  this.forEach(function _(key, value) {
    list.$setindex(i++, key);
  }
  );
  return list;
}
HashMapImplementation.prototype.containsKey = function(key) {
  return (this._probeForLookup(key) != (-1));
}
HashMapImplementation.prototype.toString = function() {
  return Maps.mapToString(this);
}
HashMapImplementation.prototype.clear$0 = HashMapImplementation.prototype.clear$_;
HashMapImplementation.prototype.forEach$1 = function($0) {
  return this.forEach(to$call$2($0));
};
HashMapImplementation.prototype.remove$1 = HashMapImplementation.prototype.remove;
$inherits(HashMapImplementation_AttachedFrameworkProperty$HashMap_FrameworkObject$Dynamic, HashMapImplementation);
function HashMapImplementation_AttachedFrameworkProperty$HashMap_FrameworkObject$Dynamic() {
  this._numberOfEntries = (0);
  this._numberOfDeleted = (0);
  this._loadLimit = HashMapImplementation._computeLoadLimit((8));
  this._keys = new Array((8));
  this._values = new Array((8));
}
HashMapImplementation_AttachedFrameworkProperty$HashMap_FrameworkObject$Dynamic.prototype.clear$0 = HashMapImplementation_AttachedFrameworkProperty$HashMap_FrameworkObject$Dynamic.prototype.clear$_;
HashMapImplementation_AttachedFrameworkProperty$HashMap_FrameworkObject$Dynamic.prototype.remove$1 = HashMapImplementation_AttachedFrameworkProperty$HashMap_FrameworkObject$Dynamic.prototype.remove;
$inherits(HashMapImplementation_FrameworkElement$FrameworkElement, HashMapImplementation);
function HashMapImplementation_FrameworkElement$FrameworkElement() {
  this._numberOfEntries = (0);
  this._numberOfDeleted = (0);
  this._loadLimit = HashMapImplementation._computeLoadLimit((8));
  this._keys = new Array((8));
  this._values = new Array((8));
}
$inherits(HashMapImplementation_FrameworkElement$Dynamic, HashMapImplementation);
function HashMapImplementation_FrameworkElement$Dynamic() {
  this._numberOfEntries = (0);
  this._numberOfDeleted = (0);
  this._loadLimit = HashMapImplementation._computeLoadLimit((8));
  this._keys = new Array((8));
  this._values = new Array((8));
}
$inherits(HashMapImplementation_FrameworkProperty$BindingData, HashMapImplementation);
function HashMapImplementation_FrameworkProperty$BindingData() {
  this._numberOfEntries = (0);
  this._numberOfDeleted = (0);
  this._loadLimit = HashMapImplementation._computeLoadLimit((8));
  this._keys = new Array((8));
  this._values = new Array((8));
}
HashMapImplementation_FrameworkProperty$BindingData.prototype.clear$0 = HashMapImplementation_FrameworkProperty$BindingData.prototype.clear$_;
HashMapImplementation_FrameworkProperty$BindingData.prototype.remove$1 = HashMapImplementation_FrameworkProperty$BindingData.prototype.remove;
$inherits(HashMapImplementation_FrameworkProperty$FrameworkProperty, HashMapImplementation);
function HashMapImplementation_FrameworkProperty$FrameworkProperty() {
  this._numberOfEntries = (0);
  this._numberOfDeleted = (0);
  this._loadLimit = HashMapImplementation._computeLoadLimit((8));
  this._keys = new Array((8));
  this._values = new Array((8));
}
$inherits(HashMapImplementation_FrameworkProperty$dart_core_String, HashMapImplementation);
function HashMapImplementation_FrameworkProperty$dart_core_String() {
  this._numberOfEntries = (0);
  this._numberOfDeleted = (0);
  this._loadLimit = HashMapImplementation._computeLoadLimit((8));
  this._keys = new Array((8));
  this._values = new Array((8));
}
HashMapImplementation_FrameworkProperty$dart_core_String.prototype.clear$0 = HashMapImplementation_FrameworkProperty$dart_core_String.prototype.clear$_;
HashMapImplementation_FrameworkProperty$dart_core_String.prototype.remove$1 = HashMapImplementation_FrameworkProperty$dart_core_String.prototype.remove;
$inherits(HashMapImplementation_Dynamic$DoubleLinkedQueueEntry_KeyValuePair, HashMapImplementation);
function HashMapImplementation_Dynamic$DoubleLinkedQueueEntry_KeyValuePair() {
  this._numberOfEntries = (0);
  this._numberOfDeleted = (0);
  this._loadLimit = HashMapImplementation._computeLoadLimit((8));
  this._keys = new Array((8));
  this._values = new Array((8));
}
HashMapImplementation_Dynamic$DoubleLinkedQueueEntry_KeyValuePair.prototype.clear$0 = HashMapImplementation_Dynamic$DoubleLinkedQueueEntry_KeyValuePair.prototype.clear$_;
HashMapImplementation_Dynamic$DoubleLinkedQueueEntry_KeyValuePair.prototype.remove$1 = HashMapImplementation_Dynamic$DoubleLinkedQueueEntry_KeyValuePair.prototype.remove;
$inherits(HashMapImplementation_dart_core_String$FrameworkObject, HashMapImplementation);
function HashMapImplementation_dart_core_String$FrameworkObject() {
  this._numberOfEntries = (0);
  this._numberOfDeleted = (0);
  this._loadLimit = HashMapImplementation._computeLoadLimit((8));
  this._keys = new Array((8));
  this._values = new Array((8));
}
HashMapImplementation_dart_core_String$FrameworkObject.prototype.clear$0 = HashMapImplementation_dart_core_String$FrameworkObject.prototype.clear$_;
HashMapImplementation_dart_core_String$FrameworkObject.prototype.remove$1 = HashMapImplementation_dart_core_String$FrameworkObject.prototype.remove;
$inherits(HashMapImplementation_dart_core_String$FrameworkResource, HashMapImplementation);
function HashMapImplementation_dart_core_String$FrameworkResource() {
  this._numberOfEntries = (0);
  this._numberOfDeleted = (0);
  this._loadLimit = HashMapImplementation._computeLoadLimit((8));
  this._keys = new Array((8));
  this._values = new Array((8));
}
HashMapImplementation_dart_core_String$FrameworkResource.prototype.clear$0 = HashMapImplementation_dart_core_String$FrameworkResource.prototype.clear$_;
HashMapImplementation_dart_core_String$FrameworkResource.prototype.remove$1 = HashMapImplementation_dart_core_String$FrameworkResource.prototype.remove;
$inherits(HashMapImplementation_dart_core_String$StyleSetter, HashMapImplementation);
function HashMapImplementation_dart_core_String$StyleSetter() {
  this._numberOfEntries = (0);
  this._numberOfDeleted = (0);
  this._loadLimit = HashMapImplementation._computeLoadLimit((8));
  this._keys = new Array((8));
  this._values = new Array((8));
}
HashMapImplementation_dart_core_String$StyleSetter.prototype.clear$0 = HashMapImplementation_dart_core_String$StyleSetter.prototype.clear$_;
HashMapImplementation_dart_core_String$StyleSetter.prototype.remove$1 = HashMapImplementation_dart_core_String$StyleSetter.prototype.remove;
$inherits(HashMapImplementation_dart_core_String$_CssAnimationObject, HashMapImplementation);
function HashMapImplementation_dart_core_String$_CssAnimationObject() {
  this._numberOfEntries = (0);
  this._numberOfDeleted = (0);
  this._loadLimit = HashMapImplementation._computeLoadLimit((8));
  this._keys = new Array((8));
  this._values = new Array((8));
}
$inherits(HashMapImplementation_dart_core_String$Dynamic, HashMapImplementation);
function HashMapImplementation_dart_core_String$Dynamic() {
  this._numberOfEntries = (0);
  this._numberOfDeleted = (0);
  this._loadLimit = HashMapImplementation._computeLoadLimit((8));
  this._keys = new Array((8));
  this._values = new Array((8));
}
HashMapImplementation_dart_core_String$Dynamic.prototype.clear$0 = HashMapImplementation_dart_core_String$Dynamic.prototype.clear$_;
HashMapImplementation_dart_core_String$Dynamic.prototype.remove$1 = HashMapImplementation_dart_core_String$Dynamic.prototype.remove;
$inherits(HashMapImplementation_dart_core_String$dart_core_String, HashMapImplementation);
function HashMapImplementation_dart_core_String$dart_core_String() {
  this._numberOfEntries = (0);
  this._numberOfDeleted = (0);
  this._loadLimit = HashMapImplementation._computeLoadLimit((8));
  this._keys = new Array((8));
  this._values = new Array((8));
}
HashMapImplementation_dart_core_String$dart_core_String.prototype.clear$0 = HashMapImplementation_dart_core_String$dart_core_String.prototype.clear$_;
HashMapImplementation_dart_core_String$dart_core_String.prototype.remove$1 = HashMapImplementation_dart_core_String$dart_core_String.prototype.remove;
function HashSetImplementation() {
  this._backingMap = new HashMapImplementation();
}
HashSetImplementation.prototype.is$Collection = function(){return true};
HashSetImplementation.prototype.clear$_ = function() {
  this._backingMap.clear$_();
}
HashSetImplementation.prototype.add = function(value) {
  this._backingMap.$setindex(value, value);
}
HashSetImplementation.prototype.contains = function(value) {
  return this._backingMap.containsKey(value);
}
HashSetImplementation.prototype.remove = function(value) {
  if (!this._backingMap.containsKey(value)) return false;
  this._backingMap.remove(value);
  return true;
}
HashSetImplementation.prototype.addAll = function(collection) {
  var $this = this;
  collection.forEach$1(function _(value) {
    $this.add(value);
  }
  );
}
HashSetImplementation.prototype.forEach = function(f) {
  this._backingMap.forEach(function _(key, value) {
    f(key);
  }
  );
}
HashSetImplementation.prototype.filter = function(f) {
  var result = new HashSetImplementation();
  this._backingMap.forEach(function _(key, value) {
    if (f(key)) result.add(key);
  }
  );
  return result;
}
HashSetImplementation.prototype.every = function(f) {
  var keys = this._backingMap.getKeys();
  return keys.every$1(f);
}
HashSetImplementation.prototype.some = function(f) {
  var keys = this._backingMap.getKeys();
  return keys.some$1(f);
}
HashSetImplementation.prototype.isEmpty = function() {
  return this._backingMap.isEmpty();
}
HashSetImplementation.prototype.get$length = function() {
  return this._backingMap.get$length();
}
HashSetImplementation.prototype.iterator = function() {
  return new HashSetIterator(this);
}
HashSetImplementation.prototype.toString = function() {
  return Collections.collectionToString(this);
}
HashSetImplementation.prototype.add$1 = HashSetImplementation.prototype.add;
HashSetImplementation.prototype.clear$0 = HashSetImplementation.prototype.clear$_;
HashSetImplementation.prototype.contains$1 = HashSetImplementation.prototype.contains;
HashSetImplementation.prototype.every$1 = function($0) {
  return this.every(to$call$1($0));
};
HashSetImplementation.prototype.filter$1 = function($0) {
  return this.filter(to$call$1($0));
};
HashSetImplementation.prototype.forEach$1 = function($0) {
  return this.forEach(to$call$1($0));
};
HashSetImplementation.prototype.remove$1 = HashSetImplementation.prototype.remove;
HashSetImplementation.prototype.some$1 = function($0) {
  return this.some(to$call$1($0));
};
$inherits(HashSetImplementation_FrameworkElement, HashSetImplementation);
function HashSetImplementation_FrameworkElement() {
  this._backingMap = new HashMapImplementation_FrameworkElement$FrameworkElement();
}
HashSetImplementation_FrameworkElement.prototype.contains$1 = HashSetImplementation_FrameworkElement.prototype.contains;
HashSetImplementation_FrameworkElement.prototype.every$1 = function($0) {
  return this.every(to$call$1($0));
};
HashSetImplementation_FrameworkElement.prototype.forEach$1 = function($0) {
  return this.forEach(to$call$1($0));
};
HashSetImplementation_FrameworkElement.prototype.remove$1 = HashSetImplementation_FrameworkElement.prototype.remove;
HashSetImplementation_FrameworkElement.prototype.some$1 = function($0) {
  return this.some(to$call$1($0));
};
$inherits(HashSetImplementation_FrameworkProperty, HashSetImplementation);
function HashSetImplementation_FrameworkProperty() {
  this._backingMap = new HashMapImplementation_FrameworkProperty$FrameworkProperty();
}
HashSetImplementation_FrameworkProperty.prototype.contains$1 = HashSetImplementation_FrameworkProperty.prototype.contains;
HashSetImplementation_FrameworkProperty.prototype.every$1 = function($0) {
  return this.every(to$call$1($0));
};
HashSetImplementation_FrameworkProperty.prototype.forEach$1 = function($0) {
  return this.forEach(to$call$1($0));
};
HashSetImplementation_FrameworkProperty.prototype.remove$1 = HashSetImplementation_FrameworkProperty.prototype.remove;
HashSetImplementation_FrameworkProperty.prototype.some$1 = function($0) {
  return this.some(to$call$1($0));
};
$inherits(HashSetImplementation_dart_core_String, HashSetImplementation);
function HashSetImplementation_dart_core_String() {
  this._backingMap = new HashMapImplementation_dart_core_String$dart_core_String();
}
HashSetImplementation_dart_core_String.prototype.contains$1 = HashSetImplementation_dart_core_String.prototype.contains;
HashSetImplementation_dart_core_String.prototype.every$1 = function($0) {
  return this.every(to$call$1($0));
};
HashSetImplementation_dart_core_String.prototype.forEach$1 = function($0) {
  return this.forEach(to$call$1($0));
};
HashSetImplementation_dart_core_String.prototype.remove$1 = HashSetImplementation_dart_core_String.prototype.remove;
HashSetImplementation_dart_core_String.prototype.some$1 = function($0) {
  return this.some(to$call$1($0));
};
function HashSetIterator(set_) {
  this._nextValidIndex = (-1);
  this._entries = set_._backingMap._keys;
  this._advance();
}
HashSetIterator.prototype.hasNext = function() {
  var $0;
  if (this._nextValidIndex >= this._entries.get$length()) return false;
  if ((($0 = this._entries.$index(this._nextValidIndex)) == null ? null == (const$0000) : $0 === const$0000)) {
    this._advance();
  }
  return this._nextValidIndex < this._entries.get$length();
}
HashSetIterator.prototype.next = function() {
  if (!this.hasNext()) {
    $throw(const$0001);
  }
  var res = this._entries.$index(this._nextValidIndex);
  this._advance();
  return res;
}
HashSetIterator.prototype._advance = function() {
  var length = this._entries.get$length();
  var entry;
  var deletedKey = const$0000;
  do {
    if (++this._nextValidIndex >= length) break;
    entry = this._entries.$index(this._nextValidIndex);
  }
  while ((null == entry) || ((null == entry ? null == (deletedKey) : entry === deletedKey)))
}
function _DeletedKeySentinel() {

}
function KeyValuePair(key, value) {
  this.key$_ = key;
  this.value = value;
}
KeyValuePair.prototype.get$value = function() { return this.value; };
KeyValuePair.prototype.set$value = function(value) { return this.value = value; };
function LinkedHashMapImplementation() {
  this._map = new HashMapImplementation_Dynamic$DoubleLinkedQueueEntry_KeyValuePair();
  this._list = new DoubleLinkedQueue_KeyValuePair();
}
LinkedHashMapImplementation.prototype.is$Map = function(){return true};
LinkedHashMapImplementation.prototype.$setindex = function(key, value) {
  if (this._map.containsKey(key)) {
    this._map.$index(key).get$element().set$value(value);
  }
  else {
    this._list.addLast(new KeyValuePair(key, value));
    this._map.$setindex(key, this._list.lastEntry());
  }
}
LinkedHashMapImplementation.prototype.$index = function(key) {
  var entry = this._map.$index(key);
  if (null == entry) return null;
  return entry.get$element().get$value();
}
LinkedHashMapImplementation.prototype.remove = function(key) {
  var entry = this._map.remove(key);
  if (null == entry) return null;
  entry.remove();
  return entry.get$element().get$value();
}
LinkedHashMapImplementation.prototype.forEach = function(f) {
  this._list.forEach(function _(entry) {
    f(entry.key$_, entry.value);
  }
  );
}
LinkedHashMapImplementation.prototype.containsKey = function(key) {
  return this._map.containsKey(key);
}
LinkedHashMapImplementation.prototype.get$length = function() {
  return this._map.get$length();
}
LinkedHashMapImplementation.prototype.isEmpty = function() {
  return this.get$length() == (0);
}
LinkedHashMapImplementation.prototype.clear$_ = function() {
  this._map.clear$_();
  this._list.clear$_();
}
LinkedHashMapImplementation.prototype.toString = function() {
  return Maps.mapToString(this);
}
LinkedHashMapImplementation.prototype.clear$0 = LinkedHashMapImplementation.prototype.clear$_;
LinkedHashMapImplementation.prototype.forEach$1 = function($0) {
  return this.forEach(to$call$2($0));
};
LinkedHashMapImplementation.prototype.remove$1 = LinkedHashMapImplementation.prototype.remove;
function Maps() {}
Maps.mapToString = function(m) {
  var result = new StringBufferImpl("");
  Maps._emitMap(m, result, new Array());
  return result.toString();
}
Maps._emitMap = function(m, result, visiting) {
  visiting.add(m);
  result.add("{");
  var first = true;
  m.forEach$1((function (k, v) {
    if (!first) {
      result.add(", ");
    }
    first = false;
    Collections._emitObject(k, result, visiting);
    result.add(": ");
    Collections._emitObject(v, result, visiting);
  })
  );
  result.add("}");
  visiting.removeLast();
}
function DoubleLinkedQueueEntry(e) {
  this._element = e;
}
DoubleLinkedQueueEntry.prototype._link = function(p, n) {
  this._next = n;
  this._previous = p;
  p._next = this;
  n._previous = this;
}
DoubleLinkedQueueEntry.prototype.append = function(e) {
  new DoubleLinkedQueueEntry(e)._link(this, this._next);
}
DoubleLinkedQueueEntry.prototype.prepend = function(e) {
  new DoubleLinkedQueueEntry(e)._link(this._previous, this);
}
DoubleLinkedQueueEntry.prototype.remove = function() {
  this._previous._next = this._next;
  this._next._previous = this._previous;
  this._next = null;
  this._previous = null;
  return this._element;
}
DoubleLinkedQueueEntry.prototype._asNonSentinelEntry = function() {
  return this;
}
DoubleLinkedQueueEntry.prototype.previousEntry = function() {
  return this._previous._asNonSentinelEntry();
}
DoubleLinkedQueueEntry.prototype.get$element = function() {
  return this._element;
}
DoubleLinkedQueueEntry.prototype.remove$0 = DoubleLinkedQueueEntry.prototype.remove;
$inherits(DoubleLinkedQueueEntry_XmlElement, DoubleLinkedQueueEntry);
function DoubleLinkedQueueEntry_XmlElement(e) {
  this._element = e;
}
$inherits(DoubleLinkedQueueEntry__XmlToken, DoubleLinkedQueueEntry);
function DoubleLinkedQueueEntry__XmlToken(e) {
  this._element = e;
}
$inherits(DoubleLinkedQueueEntry_KeyValuePair, DoubleLinkedQueueEntry);
function DoubleLinkedQueueEntry_KeyValuePair(e) {
  this._element = e;
}
DoubleLinkedQueueEntry_KeyValuePair.prototype.remove$0 = DoubleLinkedQueueEntry_KeyValuePair.prototype.remove;
$inherits(_DoubleLinkedQueueEntrySentinel, DoubleLinkedQueueEntry);
function _DoubleLinkedQueueEntrySentinel() {
  DoubleLinkedQueueEntry.call(this, null);
  this._link(this, this);
}
_DoubleLinkedQueueEntrySentinel.prototype.remove = function() {
  $throw(const$0003);
}
_DoubleLinkedQueueEntrySentinel.prototype._asNonSentinelEntry = function() {
  return null;
}
_DoubleLinkedQueueEntrySentinel.prototype.get$element = function() {
  $throw(const$0003);
}
_DoubleLinkedQueueEntrySentinel.prototype.remove$0 = _DoubleLinkedQueueEntrySentinel.prototype.remove;
$inherits(_DoubleLinkedQueueEntrySentinel_XmlElement, _DoubleLinkedQueueEntrySentinel);
function _DoubleLinkedQueueEntrySentinel_XmlElement() {
  DoubleLinkedQueueEntry_XmlElement.call(this, null);
  this._link(this, this);
}
$inherits(_DoubleLinkedQueueEntrySentinel__XmlToken, _DoubleLinkedQueueEntrySentinel);
function _DoubleLinkedQueueEntrySentinel__XmlToken() {
  DoubleLinkedQueueEntry__XmlToken.call(this, null);
  this._link(this, this);
}
$inherits(_DoubleLinkedQueueEntrySentinel_KeyValuePair, _DoubleLinkedQueueEntrySentinel);
function _DoubleLinkedQueueEntrySentinel_KeyValuePair() {
  DoubleLinkedQueueEntry_KeyValuePair.call(this, null);
  this._link(this, this);
}
function DoubleLinkedQueue() {
  this._sentinel = new _DoubleLinkedQueueEntrySentinel();
}
DoubleLinkedQueue.prototype.is$Collection = function(){return true};
DoubleLinkedQueue.prototype.addLast = function(value) {
  this._sentinel.prepend(value);
}
DoubleLinkedQueue.prototype.addFirst = function(value) {
  this._sentinel.append(value);
}
DoubleLinkedQueue.prototype.add = function(value) {
  this.addLast(value);
}
DoubleLinkedQueue.prototype.addAll = function(collection) {
  for (var $$i = collection.iterator(); $$i.hasNext(); ) {
    var e = $$i.next();
    this.add(e);
  }
}
DoubleLinkedQueue.prototype.removeFirst = function() {
  return this._sentinel._next.remove();
}
DoubleLinkedQueue.prototype.first = function() {
  return this._sentinel._next.get$element();
}
DoubleLinkedQueue.prototype.lastEntry = function() {
  return this._sentinel.previousEntry();
}
DoubleLinkedQueue.prototype.get$length = function() {
  var counter = (0);
  this.forEach(function _(element) {
    counter++;
  }
  );
  return counter;
}
DoubleLinkedQueue.prototype.isEmpty = function() {
  var $0;
  return ((($0 = this._sentinel._next) == null ? null == (this._sentinel) : $0 === this._sentinel));
}
DoubleLinkedQueue.prototype.clear$_ = function() {
  this._sentinel._next = this._sentinel;
  this._sentinel._previous = this._sentinel;
}
DoubleLinkedQueue.prototype.forEach = function(f) {
  var entry = this._sentinel._next;
  while ((null == entry ? null != (this._sentinel) : entry !== this._sentinel)) {
    var nextEntry = entry._next;
    f(entry._element);
    entry = nextEntry;
  }
}
DoubleLinkedQueue.prototype.every = function(f) {
  var entry = this._sentinel._next;
  while ((null == entry ? null != (this._sentinel) : entry !== this._sentinel)) {
    var nextEntry = entry._next;
    if (!f(entry._element)) return false;
    entry = nextEntry;
  }
  return true;
}
DoubleLinkedQueue.prototype.some = function(f) {
  var entry = this._sentinel._next;
  while ((null == entry ? null != (this._sentinel) : entry !== this._sentinel)) {
    var nextEntry = entry._next;
    if (f(entry._element)) return true;
    entry = nextEntry;
  }
  return false;
}
DoubleLinkedQueue.prototype.filter = function(f) {
  var other = new DoubleLinkedQueue();
  var entry = this._sentinel._next;
  while ((null == entry ? null != (this._sentinel) : entry !== this._sentinel)) {
    var nextEntry = entry._next;
    if (f(entry._element)) other.addLast(entry._element);
    entry = nextEntry;
  }
  return other;
}
DoubleLinkedQueue.prototype.iterator = function() {
  return new _DoubleLinkedQueueIterator(this._sentinel);
}
DoubleLinkedQueue.prototype.toString = function() {
  return Collections.collectionToString(this);
}
DoubleLinkedQueue.prototype.add$1 = DoubleLinkedQueue.prototype.add;
DoubleLinkedQueue.prototype.clear$0 = DoubleLinkedQueue.prototype.clear$_;
DoubleLinkedQueue.prototype.every$1 = function($0) {
  return this.every(to$call$1($0));
};
DoubleLinkedQueue.prototype.filter$1 = function($0) {
  return this.filter(to$call$1($0));
};
DoubleLinkedQueue.prototype.forEach$1 = function($0) {
  return this.forEach(to$call$1($0));
};
DoubleLinkedQueue.prototype.some$1 = function($0) {
  return this.some(to$call$1($0));
};
$inherits(DoubleLinkedQueue_XmlElement, DoubleLinkedQueue);
function DoubleLinkedQueue_XmlElement() {
  this._sentinel = new _DoubleLinkedQueueEntrySentinel_XmlElement();
}
DoubleLinkedQueue_XmlElement.prototype.every$1 = function($0) {
  return this.every(to$call$1($0));
};
DoubleLinkedQueue_XmlElement.prototype.forEach$1 = function($0) {
  return this.forEach(to$call$1($0));
};
DoubleLinkedQueue_XmlElement.prototype.some$1 = function($0) {
  return this.some(to$call$1($0));
};
$inherits(DoubleLinkedQueue__XmlToken, DoubleLinkedQueue);
function DoubleLinkedQueue__XmlToken() {
  this._sentinel = new _DoubleLinkedQueueEntrySentinel__XmlToken();
}
DoubleLinkedQueue__XmlToken.prototype.every$1 = function($0) {
  return this.every(to$call$1($0));
};
DoubleLinkedQueue__XmlToken.prototype.forEach$1 = function($0) {
  return this.forEach(to$call$1($0));
};
DoubleLinkedQueue__XmlToken.prototype.some$1 = function($0) {
  return this.some(to$call$1($0));
};
$inherits(DoubleLinkedQueue_KeyValuePair, DoubleLinkedQueue);
function DoubleLinkedQueue_KeyValuePair() {
  this._sentinel = new _DoubleLinkedQueueEntrySentinel_KeyValuePair();
}
DoubleLinkedQueue_KeyValuePair.prototype.clear$0 = DoubleLinkedQueue_KeyValuePair.prototype.clear$_;
DoubleLinkedQueue_KeyValuePair.prototype.every$1 = function($0) {
  return this.every(to$call$1($0));
};
DoubleLinkedQueue_KeyValuePair.prototype.forEach$1 = function($0) {
  return this.forEach(to$call$1($0));
};
DoubleLinkedQueue_KeyValuePair.prototype.some$1 = function($0) {
  return this.some(to$call$1($0));
};
function _DoubleLinkedQueueIterator(_sentinel) {
  this._sentinel = _sentinel;
  this._currentEntry = this._sentinel;
}
_DoubleLinkedQueueIterator.prototype.hasNext = function() {
  var $0;
  return (($0 = this._currentEntry._next) == null ? null != (this._sentinel) : $0 !== this._sentinel);
}
_DoubleLinkedQueueIterator.prototype.next = function() {
  if (!this.hasNext()) {
    $throw(const$0001);
  }
  this._currentEntry = this._currentEntry._next;
  return this._currentEntry.get$element();
}
function StringBufferImpl(content) {
  this.clear$_();
  this.add(content);
}
StringBufferImpl.prototype.get$length = function() {
  return this._length;
}
StringBufferImpl.prototype.isEmpty = function() {
  return this._length == (0);
}
StringBufferImpl.prototype.add = function(obj) {
  var str = obj.toString();
  if (null == str || str.isEmpty()) return this;
  this._buffer.add(str);
  this._length = this._length + str.length;
  return this;
}
StringBufferImpl.prototype.addAll = function(objects) {
  for (var $$i = objects.iterator(); $$i.hasNext(); ) {
    var obj = $$i.next();
    this.add(obj);
  }
  return this;
}
StringBufferImpl.prototype.clear$_ = function() {
  this._buffer = new Array();
  this._length = (0);
  return this;
}
StringBufferImpl.prototype.toString = function() {
  if (this._buffer.get$length() == (0)) return "";
  if (this._buffer.get$length() == (1)) return this._buffer.$index((0));
  var result = StringBase.concatAll(this._buffer);
  this._buffer.clear$_();
  this._buffer.add(result);
  return result;
}
StringBufferImpl.prototype.add$1 = StringBufferImpl.prototype.add;
StringBufferImpl.prototype.clear$0 = StringBufferImpl.prototype.clear$_;
function StringBase() {}
StringBase.join = function(strings, separator) {
  if (strings.get$length() == (0)) return "";
  var s = strings.$index((0));
  for (var i = (1);
   i < strings.get$length(); i++) {
    s = $add$($add$(s, separator), strings.$index(i));
  }
  return s;
}
StringBase.concatAll = function(strings) {
  return StringBase.join(strings, "");
}
var StringImplementation = String;
StringImplementation.prototype.get$length = function() { return this.length; };
StringImplementation.prototype.endsWith = function(other) {
    'use strict';
    if (other.length > this.length) return false;
    return other == this.substring(this.length - other.length);
}
StringImplementation.prototype.startsWith = function(other) {
    'use strict';
    if (other.length > this.length) return false;
    return other == this.substring(0, other.length);
}
StringImplementation.prototype.isEmpty = function() {
  return this.length == (0);
}
StringImplementation.prototype.contains = function(pattern, startIndex) {
  'use strict'; return this.indexOf(pattern, startIndex) >= 0;
}
StringImplementation.prototype._replaceRegExp = function(from, to) {
  'use strict';return this.replace(from.re, to);
}
StringImplementation.prototype._replaceAll = function(from, to) {
  'use strict';
  from = new RegExp(from.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&"), 'g');
  to = to.replace(/\$/g, '$$$$'); // Escape sequences are fun!
  return this.replace(from, to);
}
StringImplementation.prototype.replaceAll = function(from, to) {
  if ((typeof(from) == 'string')) return this._replaceAll(from, to);
  if (!!(from && from.is$RegExp())) return this._replaceRegExp(from.get$dynamic().get$_global(), to);
  var buffer = new StringBufferImpl("");
  var lastMatchEnd = (0);
  var $$list = from.allMatches(this);
  for (var $$i = $$list.iterator(); $$i.hasNext(); ) {
    var match = $$i.next();
    buffer.add$1(this.substring(lastMatchEnd, match.start$0()));
    buffer.add$1(to);
    lastMatchEnd = match.end$0();
  }
  buffer.add$1(this.substring(lastMatchEnd));
}
StringImplementation.prototype.split$_ = function(pattern) {
  if ((typeof(pattern) == 'string')) return this._split(pattern);
  if (!!(pattern && pattern.is$RegExp())) return this._splitRegExp(pattern);
  $throw("String.split(Pattern) unimplemented.");
}
StringImplementation.prototype._split = function(pattern) {
  'use strict'; return this.split(pattern);
}
StringImplementation.prototype._splitRegExp = function(pattern) {
  'use strict'; return this.split(pattern.re);
}
StringImplementation.prototype.allMatches = function(str) {
  $throw("String.allMatches(String str) unimplemented.");
}
StringImplementation.prototype.hashCode = function() {
      'use strict';
      var hash = 0;
      for (var i = 0; i < this.length; i++) {
        hash = 0x1fffffff & (hash + this.charCodeAt(i));
        hash = 0x1fffffff & (hash + ((0x0007ffff & hash) << 10));
        hash ^= hash >> 6;
      }

      hash = 0x1fffffff & (hash + ((0x03ffffff & hash) << 3));
      hash ^= hash >> 11;
      return 0x1fffffff & (hash + ((0x00003fff & hash) << 15));
}
StringImplementation.prototype.contains$1 = StringImplementation.prototype.contains;
StringImplementation.prototype.indexOf$1 = StringImplementation.prototype.indexOf;
StringImplementation.prototype.substring$1 = StringImplementation.prototype.substring;
$inherits(_ArgumentMismatchException, ClosureArgumentMismatchException);
function _ArgumentMismatchException(_message) {
  this._dart_coreimpl_message = _message;
  ClosureArgumentMismatchException.call(this);
}
_ArgumentMismatchException.prototype.toString = function() {
  return ("Closure argument mismatch: " + this._dart_coreimpl_message);
}
var _FunctionImplementation = Function;
_FunctionImplementation.prototype._genStub = function(argsLength, names) {
      // Fast path #1: if no named arguments and arg count matches.
      var thisLength = this.$length || this.length;
      if (thisLength == argsLength && !names) {
        return this;
      }

      var paramsNamed = this.$optional ? (this.$optional.length / 2) : 0;
      var paramsBare = thisLength - paramsNamed;
      var argsNamed = names ? names.length : 0;
      var argsBare = argsLength - argsNamed;

      // Check we got the right number of arguments
      if (argsBare < paramsBare || argsLength > thisLength ||
          argsNamed > paramsNamed) {
        return function() {
          $throw(new _ArgumentMismatchException(
            'Wrong number of arguments to function. Expected ' + paramsBare +
            ' positional arguments and at most ' + paramsNamed +
            ' named arguments, but got ' + argsBare +
            ' positional arguments and ' + argsNamed + ' named arguments.'));
        };
      }

      // First, fill in all of the default values
      var p = new Array(paramsBare);
      if (paramsNamed) {
        p = p.concat(this.$optional.slice(paramsNamed));
      }
      // Fill in positional args
      var a = new Array(argsLength);
      for (var i = 0; i < argsBare; i++) {
        p[i] = a[i] = '$' + i;
      }
      // Then overwrite with supplied values for optional args
      var lastParameterIndex;
      var namesInOrder = true;
      for (var i = 0; i < argsNamed; i++) {
        var name = names[i];
        a[i + argsBare] = name;
        var j = this.$optional.indexOf(name);
        if (j < 0 || j >= paramsNamed) {
          return function() {
            $throw(new _ArgumentMismatchException(
              'Named argument "' + name + '" was not expected by function.' +
              ' Did you forget to mark the function parameter [optional]?'));
          };
        } else if (lastParameterIndex && lastParameterIndex > j) {
          namesInOrder = false;
        }
        p[j + paramsBare] = name;
        lastParameterIndex = j;
      }

      if (thisLength == argsLength && namesInOrder) {
        // Fast path #2: named arguments, but they're in order and all supplied.
        return this;
      }

      // Note: using Function instead of 'eval' to get a clean scope.
      // TODO(jmesserly): evaluate the performance of these stubs.
      var f = 'function(' + a.join(',') + '){return $f(' + p.join(',') + ');}';
      return new Function('$f', 'return ' + f + '').call(null, this);
    
}
function _constList(other) {
  
    other.__proto__ = ImmutableList.prototype;
    return other;
}
function _map(itemsAndKeys) {
  var ret = new LinkedHashMapImplementation();
  for (var i = (0);
   i < itemsAndKeys.get$length(); ) {
    ret.$setindex(itemsAndKeys.$index(i++), itemsAndKeys.$index(i++));
  }
  return ret;
}
function _constMap(itemsAndKeys) {
  return new ImmutableMap(itemsAndKeys);
}
$dynamic("$dom_addEventListener$3").EventTarget = function($0, $1, $2) {
  if (Object.getPrototypeOf(this).hasOwnProperty("$dom_addEventListener$3")) {
    return this.addEventListener($0, $wrap_call$1(to$call$1($1)), $2);
  }
  return Object.prototype.$dom_addEventListener$3.call(this, $0, $1, $2);
};
$dynamic("$dom_removeEventListener$3").EventTarget = function($0, $1, $2) {
  if (Object.getPrototypeOf(this).hasOwnProperty("$dom_removeEventListener$3")) {
    return this.removeEventListener($0, $wrap_call$1(to$call$1($1)), $2);
  }
  return Object.prototype.$dom_removeEventListener$3.call(this, $0, $1, $2);
};
$dynamic("get$nodes").Node = function() {
  return new _ChildNodeListLazy(this);
}
$dynamic("remove").Node = function() {
  if ($ne$(this.get$parent())) {
    var parent = this.get$parent();
    parent.removeChild(this);
  }
  return this;
}
$dynamic("replaceWith").Node = function(otherNode) {
  try {
    var parent = this.get$parent();
    parent.replaceChild(otherNode, this);
  } catch (e) {
    e = _toDartException(e);
  }
  ;
  return this;
}
$dynamic("get$$$dom_attributes").Node = function() {
  return this.attributes;
}
$dynamic("get$$$dom_childNodes").Node = function() {
  return this.childNodes;
}
$dynamic("get$parent").Node = function() {
  return this.parentNode;
}
$dynamic("get$text").Node = function() {
  return this.textContent;
}
$dynamic("set$text").Node = function(value) {
  this.textContent = value;
}
$dynamic("$dom_addEventListener$3").Node = function($0, $1, $2) {
  return this.addEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$dynamic("$dom_removeEventListener$3").Node = function($0, $1, $2) {
  return this.removeEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$dynamic("contains$1").Node = function($0) {
  return this.contains($0);
};
$dynamic("remove$0").Node = function() {
  return this.remove();
};
$dynamic("is$html_Element").Element = function(){return true};
$dynamic("get$attributes").Element = function() {
  return new _ElementAttributeMap(this);
}
$dynamic("get$elements").Element = function() {
  return new _ChildrenElementList._wrap$ctor(this);
}
$dynamic("get$rect").Element = function() {
  var $this = this;
  return _createMeasurementFuture((function () {
    return new _ElementRectImpl($this);
  })
  , new CompleterImpl_ElementRect());
}
$dynamic("get$on").Element = function() {
  return new _ElementEventsImpl(this);
}
$dynamic("get$$$dom_children").Element = function() {
  return this.children;
}
$dynamic("get$$$dom_className").Element = function() {
  return this.className;
}
$dynamic("set$$$dom_className").Element = function(value) {
  this.className = value;
}
$dynamic("get$$$dom_clientHeight").Element = function() {
  return this.clientHeight;
}
$dynamic("get$$$dom_clientLeft").Element = function() {
  return this.clientLeft;
}
$dynamic("get$$$dom_clientTop").Element = function() {
  return this.clientTop;
}
$dynamic("get$$$dom_clientWidth").Element = function() {
  return this.clientWidth;
}
$dynamic("get$$$dom_firstElementChild").Element = function() {
  return this.firstElementChild;
}
$dynamic("set$innerHTML").Element = function(value) { return this.innerHTML = value; };
$dynamic("get$$$dom_lastElementChild").Element = function() {
  return this.lastElementChild;
}
$dynamic("get$$$dom_offsetHeight").Element = function() {
  return this.offsetHeight;
}
$dynamic("get$$$dom_offsetLeft").Element = function() {
  return this.offsetLeft;
}
$dynamic("get$$$dom_offsetTop").Element = function() {
  return this.offsetTop;
}
$dynamic("get$$$dom_offsetWidth").Element = function() {
  return this.offsetWidth;
}
$dynamic("get$$$dom_scrollHeight").Element = function() {
  return this.scrollHeight;
}
$dynamic("get$$$dom_scrollLeft").Element = function() {
  return this.scrollLeft;
}
$dynamic("get$$$dom_scrollTop").Element = function() {
  return this.scrollTop;
}
$dynamic("get$$$dom_scrollWidth").Element = function() {
  return this.scrollWidth;
}
$dynamic("get$style").Element = function() { return this.style; };
$dynamic("get$tagName").Element = function() { return this.tagName; };
$dynamic("get$blur").Element = function() {
  return this.blur.bind(this);
}
$dynamic("get$click").Element = function() {
  return this.click.bind(this);
}
$dynamic("get$focus").Element = function() {
  return this.focus.bind(this);
}
$dynamic("$dom_addEventListener$3").AbstractWorker = function($0, $1, $2) {
  return this.addEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$dynamic("$dom_removeEventListener$3").AbstractWorker = function($0, $1, $2) {
  return this.removeEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
function _EventsImpl(_ptr) {
  this._ptr = _ptr;
}
_EventsImpl.prototype.$index = function(type) {
  return this._get(type.toLowerCase());
}
_EventsImpl.prototype._get = function(type) {
  return new _EventListenerListImpl(this._ptr, type);
}
$inherits(_AbstractWorkerEventsImpl, _EventsImpl);
function _AbstractWorkerEventsImpl() {}
$dynamic("get$name").HTMLAnchorElement = function() { return this.name; };
$dynamic("set$name").HTMLAnchorElement = function(value) { return this.name = value; };
$dynamic("get$name").WebKitAnimation = function() { return this.name; };
$dynamic("set$cancelBubble").Event = function(value) { return this.cancelBubble = value; };
$dynamic("get$cancelable").Event = function() { return this.cancelable; };
$dynamic("get$length").WebKitAnimationList = function() { return this.length; };
$dynamic("get$height").HTMLAppletElement = function() { return this.height; };
$dynamic("set$height").HTMLAppletElement = function(value) { return this.height = value; };
$dynamic("get$name").HTMLAppletElement = function() { return this.name; };
$dynamic("set$name").HTMLAppletElement = function(value) { return this.name = value; };
$dynamic("get$width").HTMLAppletElement = function() { return this.width; };
$dynamic("set$width").HTMLAppletElement = function(value) { return this.width = value; };
$dynamic("get$name").Attr = function() { return this.name; };
$dynamic("get$value").Attr = function() { return this.value; };
$dynamic("set$value").Attr = function(value) { return this.value = value; };
$dynamic("get$length").AudioBuffer = function() { return this.length; };
$inherits(_AudioContextEventsImpl, _EventsImpl);
function _AudioContextEventsImpl() {}
$dynamic("get$on").HTMLMediaElement = function() {
  return new _MediaElementEventsImpl(this);
}
$dynamic("get$name").AudioParam = function() { return this.name; };
$dynamic("get$value").AudioParam = function() { return this.value; };
$dynamic("set$value").AudioParam = function(value) { return this.value = value; };
$dynamic("get$color").HTMLBaseFontElement = function() { return this.color; };
$dynamic("set$color").HTMLBaseFontElement = function(value) { return this.color = value; };
$dynamic("$dom_addEventListener$3").BatteryManager = function($0, $1, $2) {
  return this.addEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$dynamic("$dom_removeEventListener$3").BatteryManager = function($0, $1, $2) {
  return this.removeEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$inherits(_BatteryManagerEventsImpl, _EventsImpl);
function _BatteryManagerEventsImpl() {}
$dynamic("get$on").HTMLBodyElement = function() {
  return new _BodyElementEventsImpl(this);
}
$dynamic("get$background").HTMLBodyElement = function() { return this.background; };
$dynamic("set$background").HTMLBodyElement = function(value) { return this.background = value; };
$inherits(_ElementEventsImpl, _EventsImpl);
function _ElementEventsImpl(_ptr) {
  _EventsImpl.call(this, _ptr);
}
_ElementEventsImpl.prototype.get$blur = function() {
  return this._get("blur");
}
_ElementEventsImpl.prototype.get$change = function() {
  return this._get("change");
}
_ElementEventsImpl.prototype.get$click = function() {
  return this._get("click");
}
_ElementEventsImpl.prototype.get$focus = function() {
  return this._get("focus");
}
_ElementEventsImpl.prototype.get$keyUp = function() {
  return this._get("keyup");
}
_ElementEventsImpl.prototype.get$mouseDown = function() {
  return this._get("mousedown");
}
_ElementEventsImpl.prototype.get$mouseMove = function() {
  return this._get("mousemove");
}
_ElementEventsImpl.prototype.get$mouseOut = function() {
  return this._get("mouseout");
}
_ElementEventsImpl.prototype.get$mouseOver = function() {
  return this._get("mouseover");
}
_ElementEventsImpl.prototype.get$mouseUp = function() {
  return this._get("mouseup");
}
$inherits(_BodyElementEventsImpl, _ElementEventsImpl);
function _BodyElementEventsImpl(_ptr) {
  _ElementEventsImpl.call(this, _ptr);
}
_BodyElementEventsImpl.prototype.get$blur = function() {
  return this._get("blur");
}
_BodyElementEventsImpl.prototype.get$focus = function() {
  return this._get("focus");
}
$dynamic("get$name").HTMLButtonElement = function() { return this.name; };
$dynamic("set$name").HTMLButtonElement = function(value) { return this.name = value; };
$dynamic("get$value").HTMLButtonElement = function() { return this.value; };
$dynamic("set$value").HTMLButtonElement = function(value) { return this.value = value; };
$dynamic("get$length").CharacterData = function() { return this.length; };
$dynamic("get$name").WebKitCSSKeyframesRule = function() { return this.name; };
$dynamic("set$name").WebKitCSSKeyframesRule = function(value) { return this.name = value; };
$dynamic("get$length").CSSRuleList = function() { return this.length; };
$dynamic("get$length").CSSStyleDeclaration = function() { return this.length; };
$dynamic("get$background").CSSStyleDeclaration = function() {
  return this.getPropertyValue("background");
}
$dynamic("set$background").CSSStyleDeclaration = function(value) {
  this.setProperty("background", value, "");
}
$dynamic("set$borderBottom").CSSStyleDeclaration = function(value) {
  this.setProperty("border-bottom", value, "");
}
$dynamic("get$borderColor").CSSStyleDeclaration = function() {
  return this.getPropertyValue("border-color");
}
$dynamic("set$borderColor").CSSStyleDeclaration = function(value) {
  this.setProperty("border-color", value, "");
}
$dynamic("set$borderLeft").CSSStyleDeclaration = function(value) {
  this.setProperty("border-left", value, "");
}
$dynamic("set$borderRadius").CSSStyleDeclaration = function(value) {
  this.setProperty("border-radius", value, "");
}
$dynamic("set$borderRight").CSSStyleDeclaration = function(value) {
  this.setProperty("border-right", value, "");
}
$dynamic("set$borderTop").CSSStyleDeclaration = function(value) {
  this.setProperty("border-top", value, "");
}
$dynamic("get$bottom").CSSStyleDeclaration = function() {
  return this.getPropertyValue("bottom");
}
$dynamic("set$boxOrient").CSSStyleDeclaration = function(value) {
  this.setProperty(("" + get$$_browserPrefix() + "box-orient"), value, "");
}
$dynamic("get$color").CSSStyleDeclaration = function() {
  return this.getPropertyValue("color");
}
$dynamic("set$color").CSSStyleDeclaration = function(value) {
  this.setProperty("color", value, "");
}
$dynamic("get$content").CSSStyleDeclaration = function() {
  return this.getPropertyValue("content");
}
$dynamic("set$cursor").CSSStyleDeclaration = function(value) {
  this.setProperty("cursor", value, "");
}
$dynamic("get$display").CSSStyleDeclaration = function() {
  return this.getPropertyValue("display");
}
$dynamic("set$display").CSSStyleDeclaration = function(value) {
  this.setProperty("display", value, "");
}
$dynamic("set$flexAlign").CSSStyleDeclaration = function(value) {
  this.setProperty(("" + get$$_browserPrefix() + "flex-align"), value, "");
}
$dynamic("set$flexFlow").CSSStyleDeclaration = function(value) {
  this.setProperty(("" + get$$_browserPrefix() + "flex-flow"), value, "");
}
$dynamic("set$flexPack").CSSStyleDeclaration = function(value) {
  this.setProperty(("" + get$$_browserPrefix() + "flex-pack"), value, "");
}
$dynamic("set$fontFamily").CSSStyleDeclaration = function(value) {
  this.setProperty("font-family", value, "");
}
$dynamic("set$fontSize").CSSStyleDeclaration = function(value) {
  this.setProperty("font-size", value, "");
}
$dynamic("get$height").CSSStyleDeclaration = function() {
  return this.getPropertyValue("height");
}
$dynamic("set$height").CSSStyleDeclaration = function(value) {
  this.setProperty("height", value, "");
}
$dynamic("get$left").CSSStyleDeclaration = function() {
  return this.getPropertyValue("left");
}
$dynamic("get$margin").CSSStyleDeclaration = function() {
  return this.getPropertyValue("margin");
}
$dynamic("set$margin").CSSStyleDeclaration = function(value) {
  this.setProperty("margin", value, "");
}
$dynamic("set$maxHeight").CSSStyleDeclaration = function(value) {
  this.setProperty("max-height", value, "");
}
$dynamic("set$maxWidth").CSSStyleDeclaration = function(value) {
  this.setProperty("max-width", value, "");
}
$dynamic("set$minHeight").CSSStyleDeclaration = function(value) {
  this.setProperty("min-height", value, "");
}
$dynamic("set$minWidth").CSSStyleDeclaration = function(value) {
  this.setProperty("min-width", value, "");
}
$dynamic("set$opacity").CSSStyleDeclaration = function(value) {
  this.setProperty("opacity", value, "");
}
$dynamic("set$overflow").CSSStyleDeclaration = function(value) {
  this.setProperty("overflow", value, "");
}
$dynamic("set$overflowX").CSSStyleDeclaration = function(value) {
  this.setProperty("overflow-x", value, "");
}
$dynamic("set$overflowY").CSSStyleDeclaration = function(value) {
  this.setProperty("overflow-y", value, "");
}
$dynamic("get$padding").CSSStyleDeclaration = function() {
  return this.getPropertyValue("padding");
}
$dynamic("set$padding").CSSStyleDeclaration = function(value) {
  this.setProperty("padding", value, "");
}
$dynamic("set$position").CSSStyleDeclaration = function(value) {
  this.setProperty("position", value, "");
}
$dynamic("get$right").CSSStyleDeclaration = function() {
  return this.getPropertyValue("right");
}
$dynamic("set$textDecoration").CSSStyleDeclaration = function(value) {
  this.setProperty("text-decoration", value, "");
}
$dynamic("get$top").CSSStyleDeclaration = function() {
  return this.getPropertyValue("top");
}
$dynamic("set$visibility").CSSStyleDeclaration = function(value) {
  this.setProperty("visibility", value, "");
}
$dynamic("get$width").CSSStyleDeclaration = function() {
  return this.getPropertyValue("width");
}
$dynamic("set$width").CSSStyleDeclaration = function(value) {
  this.setProperty("width", value, "");
}
$dynamic("set$zIndex").CSSStyleDeclaration = function(value) {
  this.setProperty("z-index", value, "");
}
$dynamic("setProperty$3").CSSStyleDeclaration = function($0, $1, $2) {
  return this.setProperty($0, $1, $2);
};
$dynamic("get$length").CSSValueList = function() { return this.length; };
$dynamic("get$height").HTMLCanvasElement = function() { return this.height; };
$dynamic("set$height").HTMLCanvasElement = function(value) { return this.height = value; };
$dynamic("get$width").HTMLCanvasElement = function() { return this.width; };
$dynamic("set$width").HTMLCanvasElement = function(value) { return this.width = value; };
$dynamic("get$bottom").ClientRect = function() { return this.bottom; };
$dynamic("get$height").ClientRect = function() { return this.height; };
$dynamic("get$left").ClientRect = function() { return this.left; };
$dynamic("get$right").ClientRect = function() { return this.right; };
$dynamic("get$top").ClientRect = function() { return this.top; };
$dynamic("get$width").ClientRect = function() { return this.width; };
$dynamic("get$length").ClientRectList = function() { return this.length; };
$dynamic("get$pageX").UIEvent = function() { return this.pageX; };
$dynamic("get$pageY").UIEvent = function() { return this.pageY; };
var _ConsoleImpl = (typeof console == 'undefined' ? {} : console);
_ConsoleImpl.get$time = function() {
  return this.time.bind(this);
}
$dynamic("$dom_addEventListener$3").DOMApplicationCache = function($0, $1, $2) {
  return this.addEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$dynamic("$dom_removeEventListener$3").DOMApplicationCache = function($0, $1, $2) {
  return this.removeEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$inherits(_DOMApplicationCacheEventsImpl, _EventsImpl);
function _DOMApplicationCacheEventsImpl() {}
$dynamic("get$name").DOMException = function() { return this.name; };
$dynamic("get$name").DOMFileSystem = function() { return this.name; };
$dynamic("get$name").DOMFileSystemSync = function() { return this.name; };
$dynamic("get$length").DOMMimeTypeArray = function() { return this.length; };
$dynamic("get$length").DOMPlugin = function() { return this.length; };
$dynamic("get$name").DOMPlugin = function() { return this.name; };
$dynamic("get$length").DOMPluginArray = function() { return this.length; };
$dynamic("get$length").DOMTokenList = function() { return this.length; };
$dynamic("add$1").DOMTokenList = function($0) {
  return this.add($0);
};
$dynamic("contains$1").DOMTokenList = function($0) {
  return this.contains($0);
};
$dynamic("remove$1").DOMTokenList = function($0) {
  return this.remove($0);
};
$dynamic("get$value").DOMSettableTokenList = function() { return this.value; };
$dynamic("set$value").DOMSettableTokenList = function(value) { return this.value = value; };
$dynamic("is$List").DOMStringList = function(){return true};
$dynamic("is$Collection").DOMStringList = function(){return true};
$dynamic("get$length").DOMStringList = function() { return this.length; };
$dynamic("$index").DOMStringList = function(index) {
  return this[index];
}
$dynamic("$setindex").DOMStringList = function(index, value) {
  $throw(new UnsupportedOperationException("Cannot assign element of immutable List."));
}
$dynamic("iterator").DOMStringList = function() {
  return new _FixedSizeListIterator_dart_core_String(this);
}
$dynamic("add").DOMStringList = function(value) {
  $throw(new UnsupportedOperationException("Cannot add to immutable List."));
}
$dynamic("addAll").DOMStringList = function(collection) {
  $throw(new UnsupportedOperationException("Cannot add to immutable List."));
}
$dynamic("forEach").DOMStringList = function(f) {
  return _Collections.forEach(this, f);
}
$dynamic("filter").DOMStringList = function(f) {
  return _Collections.filter(this, [], f);
}
$dynamic("every").DOMStringList = function(f) {
  return _Collections.every(this, f);
}
$dynamic("some").DOMStringList = function(f) {
  return _Collections.some(this, f);
}
$dynamic("isEmpty").DOMStringList = function() {
  return this.length == (0);
}
$dynamic("sort").DOMStringList = function(compare) {
  $throw(new UnsupportedOperationException("Cannot sort immutable List."));
}
$dynamic("indexOf").DOMStringList = function(element, start) {
  return _Lists.indexOf(this, element, start, this.length);
}
$dynamic("last").DOMStringList = function() {
  return this.$index(this.length - (1));
}
$dynamic("removeLast").DOMStringList = function() {
  $throw(new UnsupportedOperationException("Cannot removeLast on immutable List."));
}
$dynamic("removeRange").DOMStringList = function(start, rangeLength) {
  $throw(new UnsupportedOperationException("Cannot removeRange on immutable List."));
}
$dynamic("getRange").DOMStringList = function(start, rangeLength) {
  return _Lists.getRange(this, start, rangeLength, []);
}
$dynamic("add$1").DOMStringList = function($0) {
  return this.add($0);
};
$dynamic("contains$1").DOMStringList = function($0) {
  return this.contains($0);
};
$dynamic("every$1").DOMStringList = function($0) {
  return this.every($wrap_call$1(to$call$1($0)));
};
$dynamic("filter$1").DOMStringList = function($0) {
  return this.filter($wrap_call$1(to$call$1($0)));
};
$dynamic("forEach$1").DOMStringList = function($0) {
  return this.forEach($wrap_call$1(to$call$1($0)));
};
$dynamic("indexOf$1").DOMStringList = function($0) {
  return this.indexOf($0, (0));
};
$dynamic("some$1").DOMStringList = function($0) {
  return this.some($wrap_call$1(to$call$1($0)));
};
$dynamic("sort$1").DOMStringList = function($0) {
  return this.sort($wrap_call$2(to$call$2($0)));
};
$dynamic("get$length").DataTransferItemList = function() { return this.length; };
$dynamic("add$1").DataTransferItemList = function($0) {
  return this.add($0);
};
$dynamic("clear$0").DataTransferItemList = function() {
  return this.clear();
};
$dynamic("$dom_addEventListener$3").WorkerContext = function($0, $1, $2) {
  return this.addEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$dynamic("$dom_removeEventListener$3").WorkerContext = function($0, $1, $2) {
  return this.removeEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$dynamic("postMessage$2").DedicatedWorkerContext = function($0, $1) {
  return this.postMessage($0, $1);
};
$inherits(_WorkerContextEventsImpl, _EventsImpl);
function _WorkerContextEventsImpl() {}
$inherits(_DedicatedWorkerContextEventsImpl, _WorkerContextEventsImpl);
function _DedicatedWorkerContextEventsImpl() {}
$dynamic("$dom_addEventListener$3").DeprecatedPeerConnection = function($0, $1, $2) {
  return this.addEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$dynamic("$dom_removeEventListener$3").DeprecatedPeerConnection = function($0, $1, $2) {
  return this.removeEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$inherits(_DeprecatedPeerConnectionEventsImpl, _EventsImpl);
function _DeprecatedPeerConnectionEventsImpl() {}
$dynamic("get$name").Entry = function() { return this.name; };
$dynamic("remove$1").Entry = function($0) {
  return this.remove($wrap_call$0(to$call$0($0)), $wrap_call$1(to$call$1(null)));
};
$dynamic("get$name").EntrySync = function() { return this.name; };
$dynamic("remove$0").EntrySync = function() {
  return this.remove();
};
$dynamic("is$html_Element").HTMLDocument = function(){return true};
$dynamic("get$on").HTMLDocument = function() {
  return new _DocumentEventsImpl(this);
}
$dynamic("get$window").HTMLDocument = function() {
  return this.defaultView;
}
$dynamic("query").HTMLDocument = function(selectors) {
  if (const$0196.hasMatch(selectors)) {
    return this.getElementById(selectors.substring((1)));
  }
  return this.$dom_querySelector(selectors);
}
$dynamic("$dom_querySelector").HTMLDocument = function(selectors) {
  return this.querySelector(selectors);
}
$inherits(_DocumentEventsImpl, _ElementEventsImpl);
function _DocumentEventsImpl(_ptr) {
  _ElementEventsImpl.call(this, _ptr);
}
_DocumentEventsImpl.prototype.get$blur = function() {
  return this._get("blur");
}
_DocumentEventsImpl.prototype.get$change = function() {
  return this._get("change");
}
_DocumentEventsImpl.prototype.get$click = function() {
  return this._get("click");
}
_DocumentEventsImpl.prototype.get$focus = function() {
  return this._get("focus");
}
_DocumentEventsImpl.prototype.get$keyUp = function() {
  return this._get("keyup");
}
_DocumentEventsImpl.prototype.get$mouseDown = function() {
  return this._get("mousedown");
}
_DocumentEventsImpl.prototype.get$mouseMove = function() {
  return this._get("mousemove");
}
_DocumentEventsImpl.prototype.get$mouseOut = function() {
  return this._get("mouseout");
}
_DocumentEventsImpl.prototype.get$mouseOver = function() {
  return this._get("mouseover");
}
_DocumentEventsImpl.prototype.get$mouseUp = function() {
  return this._get("mouseup");
}
function FilteredElementList(node) {
  this._childNodes = node.get$nodes();
  this._node = node;
}
FilteredElementList.prototype.is$List = function(){return true};
FilteredElementList.prototype.is$Collection = function(){return true};
FilteredElementList.prototype.get$_filtered = function() {
  return ListFactory.ListFactory$from$factory(this._childNodes.filter$1((function (n) {
    return !!(n && n.is$html_Element());
  })
  ));
}
FilteredElementList.prototype.get$first = function() {
  var $$list = this._childNodes;
  for (var $$i = $$list.iterator(); $$i.hasNext(); ) {
    var node = $$i.next();
    if (!!(node && node.is$html_Element())) {
      return node;
    }
  }
  return null;
}
FilteredElementList.prototype.forEach = function(f) {
  this.get$_filtered().forEach$1(f);
}
FilteredElementList.prototype.$setindex = function(index, value) {
  this.$index(index).replaceWith(value);
}
FilteredElementList.prototype.add = function(value) {
  this._childNodes.add(value);
}
FilteredElementList.prototype.get$add = function() {
  return this.add.bind(this);
}
FilteredElementList.prototype.addAll = function(collection) {
  collection.forEach$1(this.get$add());
}
FilteredElementList.prototype.sort = function(compare) {
  $throw(const$0236);
}
FilteredElementList.prototype.removeRange = function(start, rangeLength) {
  this.get$_filtered().getRange(start, rangeLength).forEach$1((function (el) {
    return el.remove$0();
  })
  );
}
FilteredElementList.prototype.clear$_ = function() {
  this._childNodes.clear$_();
}
FilteredElementList.prototype.removeLast = function() {
  var result = this.last();
  if ($ne$(result)) {
    result.remove$0();
  }
  return result;
}
FilteredElementList.prototype.filter = function(f) {
  return this.get$_filtered().filter$1(f);
}
FilteredElementList.prototype.every = function(f) {
  return this.get$_filtered().every$1(f);
}
FilteredElementList.prototype.some = function(f) {
  return this.get$_filtered().some$1(f);
}
FilteredElementList.prototype.isEmpty = function() {
  return this.get$_filtered().isEmpty();
}
FilteredElementList.prototype.get$length = function() {
  return this.get$_filtered().get$length();
}
FilteredElementList.prototype.$index = function(index) {
  return this.get$_filtered().$index(index);
}
FilteredElementList.prototype.iterator = function() {
  return this.get$_filtered().iterator();
}
FilteredElementList.prototype.getRange = function(start, rangeLength) {
  return this.get$_filtered().getRange(start, rangeLength);
}
FilteredElementList.prototype.indexOf = function(element, start) {
  return this.get$_filtered().indexOf(element, start);
}
FilteredElementList.prototype.last = function() {
  return this.get$_filtered().last();
}
FilteredElementList.prototype.add$1 = FilteredElementList.prototype.add;
FilteredElementList.prototype.clear$0 = FilteredElementList.prototype.clear$_;
FilteredElementList.prototype.every$1 = function($0) {
  return this.every($wrap_call$1(to$call$1($0)));
};
FilteredElementList.prototype.filter$1 = function($0) {
  return this.filter($wrap_call$1(to$call$1($0)));
};
FilteredElementList.prototype.forEach$1 = function($0) {
  return this.forEach($wrap_call$1(to$call$1($0)));
};
FilteredElementList.prototype.indexOf$1 = function($0) {
  return this.indexOf($0, (0));
};
FilteredElementList.prototype.some$1 = function($0) {
  return this.some($wrap_call$1(to$call$1($0)));
};
FilteredElementList.prototype.sort$1 = function($0) {
  return this.sort($wrap_call$2(to$call$2($0)));
};
function EmptyElementRect() {
  this.client = const$0009;
  this.offset = const$0009;
  this.scroll = const$0009;
  this.bounding = const$0009;
  this.clientRects = const$0010;
}
EmptyElementRect.prototype.get$bounding = function() { return this.bounding; };
$dynamic("is$html_Element").DocumentFragment = function(){return true};
$dynamic("get$elements").DocumentFragment = function() {
  if (this._elements == null) {
    this._elements = new FilteredElementList(this);
  }
  return this._elements;
}
$dynamic("set$innerHTML").DocumentFragment = function(value) {
  this.get$nodes().clear$_();
  var e = _ElementFactoryProvider.Element$tag$factory("div");
  e.set$innerHTML(value);
  var nodes = ListFactory.ListFactory$from$factory(e.get$nodes());
  this.get$nodes().addAll(nodes);
}
$dynamic("get$rect").DocumentFragment = function() {
  return _createMeasurementFuture((function () {
    return const$0011;
  })
  , new CompleterImpl_ElementRect());
}
$dynamic("get$tagName").DocumentFragment = function() {
  return "";
}
$dynamic("get$parent").DocumentFragment = function() {
  return null;
}
$dynamic("get$attributes").DocumentFragment = function() {
  return const$0006;
}
$dynamic("get$style").DocumentFragment = function() {
  return _ElementFactoryProvider.Element$tag$factory("div").get$style();
}
$dynamic("blur").DocumentFragment = function() {

}
$dynamic("get$blur").DocumentFragment = function() {
  return this.blur.bind(this);
}
$dynamic("focus").DocumentFragment = function() {

}
$dynamic("get$focus").DocumentFragment = function() {
  return this.focus.bind(this);
}
$dynamic("click").DocumentFragment = function() {

}
$dynamic("get$click").DocumentFragment = function() {
  return this.click.bind(this);
}
$dynamic("get$on").DocumentFragment = function() {
  return new _ElementEventsImpl(this);
}
$dynamic("get$name").DocumentType = function() { return this.name; };
_ChildrenElementList._wrap$ctor = function(element) {
  this._childElements = element.get$$$dom_children();
  this._html_element = element;
}
_ChildrenElementList._wrap$ctor.prototype = _ChildrenElementList.prototype;
function _ChildrenElementList() {}
_ChildrenElementList.prototype.is$List = function(){return true};
_ChildrenElementList.prototype.is$Collection = function(){return true};
_ChildrenElementList.prototype._toList = function() {
  var output = new Array(this._childElements.get$length());
  for (var i = (0), len = this._childElements.get$length();
   i < len; i++) {
    output.$setindex(i, this._childElements.$index(i));
  }
  return output;
}
_ChildrenElementList.prototype.get$first = function() {
  return this._html_element.get$$$dom_firstElementChild();
}
_ChildrenElementList.prototype.forEach = function(f) {
  var $$list = this._childElements;
  for (var $$i = $$list.iterator(); $$i.hasNext(); ) {
    var element = $$i.next();
    f(element);
  }
}
_ChildrenElementList.prototype.filter = function(f) {
  var output = [];
  this.forEach((function (element) {
    if (f(element)) {
      output.add$1(element);
    }
  })
  );
  return new _FrozenElementList._wrap$ctor(output);
}
_ChildrenElementList.prototype.every = function(f) {
  for (var $$i = this.iterator(); $$i.hasNext(); ) {
    var element = $$i.next();
    if (!f(element)) {
      return false;
    }
  }
  ;
  return true;
}
_ChildrenElementList.prototype.some = function(f) {
  for (var $$i = this.iterator(); $$i.hasNext(); ) {
    var element = $$i.next();
    if (f(element)) {
      return true;
    }
  }
  ;
  return false;
}
_ChildrenElementList.prototype.isEmpty = function() {
  return this._html_element.get$$$dom_firstElementChild() == null;
}
_ChildrenElementList.prototype.get$length = function() {
  return this._childElements.get$length();
}
_ChildrenElementList.prototype.$index = function(index) {
  return this._childElements.$index(index);
}
_ChildrenElementList.prototype.$setindex = function(index, value) {
  this._html_element.replaceChild(value, this._childElements.$index(index));
}
_ChildrenElementList.prototype.add = function(value) {
  this._html_element.appendChild(value);
  return value;
}
_ChildrenElementList.prototype.iterator = function() {
  return this._toList().iterator();
}
_ChildrenElementList.prototype.addAll = function(collection) {
  for (var $$i = collection.iterator(); $$i.hasNext(); ) {
    var element = $$i.next();
    this._html_element.appendChild(element);
  }
}
_ChildrenElementList.prototype.sort = function(compare) {
  $throw(const$0236);
}
_ChildrenElementList.prototype.removeRange = function(start, rangeLength) {
  $throw(const$0014);
}
_ChildrenElementList.prototype.getRange = function(start, rangeLength) {
  return new _FrozenElementList._wrap$ctor(_Lists.getRange(this, start, rangeLength, []));
}
_ChildrenElementList.prototype.indexOf = function(element, start) {
  return _Lists.indexOf(this, element, start, this.get$length());
}
_ChildrenElementList.prototype.clear$_ = function() {
  this._html_element.set$text("");
}
_ChildrenElementList.prototype.removeLast = function() {
  var result = this.last();
  if ($ne$(result)) {
    this._html_element.removeChild(result);
  }
  return result;
}
_ChildrenElementList.prototype.last = function() {
  return this._html_element.get$$$dom_lastElementChild();
}
_ChildrenElementList.prototype.add$1 = _ChildrenElementList.prototype.add;
_ChildrenElementList.prototype.clear$0 = _ChildrenElementList.prototype.clear$_;
_ChildrenElementList.prototype.every$1 = function($0) {
  return this.every($wrap_call$1(to$call$1($0)));
};
_ChildrenElementList.prototype.filter$1 = function($0) {
  return this.filter($wrap_call$1(to$call$1($0)));
};
_ChildrenElementList.prototype.forEach$1 = function($0) {
  return this.forEach($wrap_call$1(to$call$1($0)));
};
_ChildrenElementList.prototype.indexOf$1 = function($0) {
  return this.indexOf($0, (0));
};
_ChildrenElementList.prototype.some$1 = function($0) {
  return this.some($wrap_call$1(to$call$1($0)));
};
_ChildrenElementList.prototype.sort$1 = function($0) {
  return this.sort($wrap_call$2(to$call$2($0)));
};
_FrozenElementList._wrap$ctor = function(_nodeList) {
  this._nodeList = _nodeList;
}
_FrozenElementList._wrap$ctor.prototype = _FrozenElementList.prototype;
function _FrozenElementList() {}
_FrozenElementList.prototype.is$List = function(){return true};
_FrozenElementList.prototype.is$Collection = function(){return true};
_FrozenElementList.prototype.get$first = function() {
  return this._nodeList.$index((0));
}
_FrozenElementList.prototype.forEach = function(f) {
  for (var $$i = this.iterator(); $$i.hasNext(); ) {
    var el = $$i.next();
    f(el);
  }
}
_FrozenElementList.prototype.filter = function(f) {
  var out = new _ElementList([]);
  for (var $$i = this.iterator(); $$i.hasNext(); ) {
    var el = $$i.next();
    if (f(el)) out.add$1(el);
  }
  return out;
}
_FrozenElementList.prototype.every = function(f) {
  for (var $$i = this.iterator(); $$i.hasNext(); ) {
    var element = $$i.next();
    if (!f(element)) {
      return false;
    }
  }
  ;
  return true;
}
_FrozenElementList.prototype.some = function(f) {
  for (var $$i = this.iterator(); $$i.hasNext(); ) {
    var element = $$i.next();
    if (f(element)) {
      return true;
    }
  }
  ;
  return false;
}
_FrozenElementList.prototype.isEmpty = function() {
  return this._nodeList.isEmpty();
}
_FrozenElementList.prototype.get$length = function() {
  return this._nodeList.get$length();
}
_FrozenElementList.prototype.$index = function(index) {
  return this._nodeList.$index(index);
}
_FrozenElementList.prototype.$setindex = function(index, value) {
  $throw(const$0004);
}
_FrozenElementList.prototype.add = function(value) {
  $throw(const$0004);
}
_FrozenElementList.prototype.iterator = function() {
  return new _FrozenElementListIterator(this);
}
_FrozenElementList.prototype.addAll = function(collection) {
  $throw(const$0004);
}
_FrozenElementList.prototype.sort = function(compare) {
  $throw(const$0004);
}
_FrozenElementList.prototype.removeRange = function(start, rangeLength) {
  $throw(const$0004);
}
_FrozenElementList.prototype.getRange = function(start, rangeLength) {
  return new _FrozenElementList._wrap$ctor(this._nodeList.getRange(start, rangeLength));
}
_FrozenElementList.prototype.indexOf = function(element, start) {
  return this._nodeList.indexOf(element, start);
}
_FrozenElementList.prototype.clear$_ = function() {
  $throw(const$0004);
}
_FrozenElementList.prototype.removeLast = function() {
  $throw(const$0004);
}
_FrozenElementList.prototype.last = function() {
  return this._nodeList.last();
}
_FrozenElementList.prototype.add$1 = _FrozenElementList.prototype.add;
_FrozenElementList.prototype.clear$0 = _FrozenElementList.prototype.clear$_;
_FrozenElementList.prototype.every$1 = function($0) {
  return this.every($wrap_call$1(to$call$1($0)));
};
_FrozenElementList.prototype.filter$1 = function($0) {
  return this.filter($wrap_call$1(to$call$1($0)));
};
_FrozenElementList.prototype.forEach$1 = function($0) {
  return this.forEach($wrap_call$1(to$call$1($0)));
};
_FrozenElementList.prototype.indexOf$1 = function($0) {
  return this.indexOf($0, (0));
};
_FrozenElementList.prototype.some$1 = function($0) {
  return this.some($wrap_call$1(to$call$1($0)));
};
_FrozenElementList.prototype.sort$1 = function($0) {
  return this.sort($wrap_call$2(to$call$2($0)));
};
function _FrozenElementListIterator(_list) {
  this._html_index = (0);
  this._html_list = _list;
}
_FrozenElementListIterator.prototype.next = function() {
  if (!this.hasNext()) {
    $throw(const$0001);
  }
  return this._html_list.$index(this._html_index++);
}
_FrozenElementListIterator.prototype.hasNext = function() {
  return this._html_index < this._html_list.get$length();
}
function _ListWrapper() {}
_ListWrapper.prototype.is$List = function(){return true};
_ListWrapper.prototype.is$Collection = function(){return true};
_ListWrapper.prototype.iterator = function() {
  return this._html_list.iterator();
}
_ListWrapper.prototype.forEach = function(f) {
  return this._html_list.forEach$1(f);
}
_ListWrapper.prototype.filter = function(f) {
  return this._html_list.filter$1(f);
}
_ListWrapper.prototype.every = function(f) {
  return this._html_list.every$1(f);
}
_ListWrapper.prototype.some = function(f) {
  return this._html_list.some$1(f);
}
_ListWrapper.prototype.isEmpty = function() {
  return this._html_list.isEmpty();
}
_ListWrapper.prototype.get$length = function() {
  return this._html_list.get$length();
}
_ListWrapper.prototype.$index = function(index) {
  return this._html_list.$index(index);
}
_ListWrapper.prototype.$setindex = function(index, value) {
  this._html_list.$setindex(index, value);
}
_ListWrapper.prototype.add = function(value) {
  return this._html_list.add(value);
}
_ListWrapper.prototype.addAll = function(collection) {
  return this._html_list.addAll(collection);
}
_ListWrapper.prototype.sort = function(compare) {
  return this._html_list.sort$1(compare);
}
_ListWrapper.prototype.indexOf = function(element, start) {
  return this._html_list.indexOf(element, start);
}
_ListWrapper.prototype.clear$_ = function() {
  return this._html_list.clear$_();
}
_ListWrapper.prototype.removeLast = function() {
  return this._html_list.removeLast();
}
_ListWrapper.prototype.last = function() {
  return this._html_list.last();
}
_ListWrapper.prototype.getRange = function(start, rangeLength) {
  return this._html_list.getRange(start, rangeLength);
}
_ListWrapper.prototype.removeRange = function(start, rangeLength) {
  return this._html_list.removeRange(start, rangeLength);
}
_ListWrapper.prototype.get$first = function() {
  return this._html_list.$index((0));
}
_ListWrapper.prototype.add$1 = _ListWrapper.prototype.add;
_ListWrapper.prototype.clear$0 = _ListWrapper.prototype.clear$_;
_ListWrapper.prototype.every$1 = function($0) {
  return this.every($wrap_call$1(to$call$1($0)));
};
_ListWrapper.prototype.filter$1 = function($0) {
  return this.filter($wrap_call$1(to$call$1($0)));
};
_ListWrapper.prototype.forEach$1 = function($0) {
  return this.forEach($wrap_call$1(to$call$1($0)));
};
_ListWrapper.prototype.indexOf$1 = function($0) {
  return this.indexOf($0, (0));
};
_ListWrapper.prototype.some$1 = function($0) {
  return this.some($wrap_call$1(to$call$1($0)));
};
_ListWrapper.prototype.sort$1 = function($0) {
  return this.sort($wrap_call$2(to$call$2($0)));
};
$inherits(_ListWrapper_Element, _ListWrapper);
function _ListWrapper_Element(_list) {
  this._html_list = _list;
}
_ListWrapper_Element.prototype.add$1 = _ListWrapper_Element.prototype.add;
_ListWrapper_Element.prototype.clear$0 = _ListWrapper_Element.prototype.clear$_;
_ListWrapper_Element.prototype.every$1 = function($0) {
  return this.every($wrap_call$1(to$call$1($0)));
};
_ListWrapper_Element.prototype.forEach$1 = function($0) {
  return this.forEach($wrap_call$1(to$call$1($0)));
};
_ListWrapper_Element.prototype.indexOf$1 = function($0) {
  return this.indexOf($0, (0));
};
_ListWrapper_Element.prototype.some$1 = function($0) {
  return this.some($wrap_call$1(to$call$1($0)));
};
_ListWrapper_Element.prototype.sort$1 = function($0) {
  return this.sort($wrap_call$2(to$call$2($0)));
};
$inherits(_ElementList, _ListWrapper_Element);
function _ElementList(list) {
  _ListWrapper_Element.call(this, list);
}
_ElementList.prototype.filter = function(f) {
  return new _ElementList(_ListWrapper_Element.prototype.filter.call(this, f));
}
_ElementList.prototype.getRange = function(start, rangeLength) {
  return new _ElementList(_ListWrapper_Element.prototype.getRange.call(this, start, rangeLength));
}
_ElementList.prototype.filter$1 = function($0) {
  return this.filter($wrap_call$1(to$call$1($0)));
};
function _ElementAttributeMap(_element) {
  this._html_element = _element;
}
_ElementAttributeMap.prototype.is$Map = function(){return true};
_ElementAttributeMap.prototype.containsKey = function(key) {
  return this._html_element.hasAttribute(key);
}
_ElementAttributeMap.prototype.$index = function(key) {
  return this._html_element.getAttribute(key);
}
_ElementAttributeMap.prototype.$setindex = function(key, value) {
  this._html_element.setAttribute(key, ("" + value));
}
_ElementAttributeMap.prototype.remove = function(key) {
  var value = this._html_element.getAttribute(key);
  this._html_element.removeAttribute(key);
  return value;
}
_ElementAttributeMap.prototype.clear$_ = function() {
  var attributes = this._html_element.get$$$dom_attributes();
  for (var i = attributes.get$length() - (1);
   i >= (0); i--) {
    this.remove(attributes.$index(i).get$name());
  }
}
_ElementAttributeMap.prototype.forEach = function(f) {
  var attributes = this._html_element.get$$$dom_attributes();
  for (var i = (0), len = attributes.get$length();
   i < len; i++) {
    var item = attributes.$index(i);
    f(item.get$name(), item.get$value());
  }
}
_ElementAttributeMap.prototype.get$length = function() {
  return this._html_element.get$$$dom_attributes().length;
}
_ElementAttributeMap.prototype.isEmpty = function() {
  return this.get$length() == (0);
}
_ElementAttributeMap.prototype.clear$0 = _ElementAttributeMap.prototype.clear$_;
_ElementAttributeMap.prototype.forEach$1 = function($0) {
  return this.forEach($wrap_call$2(to$call$2($0)));
};
_ElementAttributeMap.prototype.remove$1 = _ElementAttributeMap.prototype.remove;
function _DataAttributeMap() {}
_DataAttributeMap.prototype.is$Map = function(){return true};
_DataAttributeMap.prototype.containsKey = function(key) {
  return this.$$dom_attributes.containsKey(this._attr(key));
}
_DataAttributeMap.prototype.$index = function(key) {
  return this.$$dom_attributes.$index(this._attr(key));
}
_DataAttributeMap.prototype.$setindex = function(key, value) {
  this.$$dom_attributes.$setindex(this._attr(key), ("" + value));
}
_DataAttributeMap.prototype.remove = function(key) {
  return this.$$dom_attributes.remove(this._attr(key));
}
_DataAttributeMap.prototype.clear$_ = function() {
  var $$list = this.getKeys();
  for (var $$i = $$list.iterator(); $$i.hasNext(); ) {
    var key = $$i.next();
    this.remove(key);
  }
}
_DataAttributeMap.prototype.forEach = function(f) {
  var $this = this;
  this.$$dom_attributes.forEach$1((function (key, value) {
    if ($this._matches(key)) {
      f($this._strip(key), value);
    }
  })
  );
}
_DataAttributeMap.prototype.getKeys = function() {
  var $this = this;
  var keys = new Array();
  this.$$dom_attributes.forEach$1((function (key, value) {
    if ($this._matches(key)) {
      keys.add$1($this._strip(key));
    }
  })
  );
  return keys;
}
_DataAttributeMap.prototype.get$length = function() {
  return this.getKeys().get$length();
}
_DataAttributeMap.prototype.isEmpty = function() {
  return this.get$length() == (0);
}
_DataAttributeMap.prototype._attr = function(key) {
  return ("data-" + key);
}
_DataAttributeMap.prototype._matches = function(key) {
  return key.startsWith("data-");
}
_DataAttributeMap.prototype._strip = function(key) {
  return key.substring((5));
}
_DataAttributeMap.prototype.clear$0 = _DataAttributeMap.prototype.clear$_;
_DataAttributeMap.prototype.forEach$1 = function($0) {
  return this.forEach($wrap_call$2(to$call$2($0)));
};
_DataAttributeMap.prototype.remove$1 = _DataAttributeMap.prototype.remove;
function _CssClassSet() {}
_CssClassSet.prototype.is$Collection = function(){return true};
_CssClassSet.prototype.toString = function() {
  return this._formatSet(this._read());
}
_CssClassSet.prototype.iterator = function() {
  return this._read().iterator();
}
_CssClassSet.prototype.forEach = function(f) {
  this._read().forEach$1(f);
}
_CssClassSet.prototype.filter = function(f) {
  return this._read().filter$1(f);
}
_CssClassSet.prototype.every = function(f) {
  return this._read().every$1(f);
}
_CssClassSet.prototype.some = function(f) {
  return this._read().some$1(f);
}
_CssClassSet.prototype.isEmpty = function() {
  return this._read().isEmpty();
}
_CssClassSet.prototype.get$length = function() {
  return this._read().get$length();
}
_CssClassSet.prototype.contains = function(value) {
  return this._read().contains(value);
}
_CssClassSet.prototype.add = function(value) {
  this._modify((function (s) {
    return s.add$1(value);
  })
  );
}
_CssClassSet.prototype.remove = function(value) {
  var s = this._read();
  var result = s.remove(value);
  this._write(s);
  return result;
}
_CssClassSet.prototype.addAll = function(collection) {
  this._modify((function (s) {
    return s.addAll(collection);
  })
  );
}
_CssClassSet.prototype.clear$_ = function() {
  this._modify((function (s) {
    return s.clear$0();
  })
  );
}
_CssClassSet.prototype._modify = function(f) {
  var s = this._read();
  f(s);
  this._write(s);
}
_CssClassSet.prototype._read = function() {
  var s = new HashSetImplementation_dart_core_String();
  var $$list = this._classname().split$_(" ");
  for (var $$i = $$list.iterator(); $$i.hasNext(); ) {
    var name = $$i.next();
    var trimmed = name.trim();
    if (!trimmed.isEmpty()) {
      s.add(trimmed);
    }
  }
  return s;
}
_CssClassSet.prototype._classname = function() {
  return this._html_element.get$$$dom_className();
}
_CssClassSet.prototype._write = function(s) {
  this._html_element.set$$$dom_className(this._formatSet(s));
}
_CssClassSet.prototype._formatSet = function(s) {
  var list = ListFactory.ListFactory$from$factory(s);
  return Strings.join(list, " ");
}
_CssClassSet.prototype.add$1 = _CssClassSet.prototype.add;
_CssClassSet.prototype.clear$0 = _CssClassSet.prototype.clear$_;
_CssClassSet.prototype.contains$1 = _CssClassSet.prototype.contains;
_CssClassSet.prototype.every$1 = function($0) {
  return this.every($wrap_call$1(to$call$1($0)));
};
_CssClassSet.prototype.filter$1 = function($0) {
  return this.filter($wrap_call$1(to$call$1($0)));
};
_CssClassSet.prototype.forEach$1 = function($0) {
  return this.forEach($wrap_call$1(to$call$1($0)));
};
_CssClassSet.prototype.remove$1 = _CssClassSet.prototype.remove;
_CssClassSet.prototype.some$1 = function($0) {
  return this.some($wrap_call$1(to$call$1($0)));
};
function _SimpleClientRect(left, top, width, height) {
  this.left = left;
  this.top = top;
  this.width = width;
  this.height = height;
}
_SimpleClientRect.prototype.get$left = function() { return this.left; };
_SimpleClientRect.prototype.get$top = function() { return this.top; };
_SimpleClientRect.prototype.get$width = function() { return this.width; };
_SimpleClientRect.prototype.get$height = function() { return this.height; };
_SimpleClientRect.prototype.get$right = function() {
  return this.left + this.width;
}
_SimpleClientRect.prototype.get$bottom = function() {
  return this.top + this.height;
}
_SimpleClientRect.prototype.$eq = function(other) {
  return null != other && this.left == other.left && this.top == other.top && this.width == other.width && this.height == other.height;
}
_SimpleClientRect.prototype.toString = function() {
  return ("(" + this.left + ", " + this.top + ", " + this.width + ", " + this.height + ")");
}
function _ElementRectImpl(element) {
  this.client = new _SimpleClientRect(element.get$$$dom_clientLeft(), element.get$$$dom_clientTop(), element.get$$$dom_clientWidth(), element.get$$$dom_clientHeight());
  this.offset = new _SimpleClientRect(element.get$$$dom_offsetLeft(), element.get$$$dom_offsetTop(), element.get$$$dom_offsetWidth(), element.get$$$dom_offsetHeight());
  this.scroll = new _SimpleClientRect(element.get$$$dom_scrollLeft(), element.get$$$dom_scrollTop(), element.get$$$dom_scrollWidth(), element.get$$$dom_scrollHeight());
  this._boundingClientRect = element.getBoundingClientRect();
  this._clientRects = element.getClientRects();
}
_ElementRectImpl.prototype.get$bounding = function() {
  return this._boundingClientRect;
}
function _ElementFactoryProvider() {}
_ElementFactoryProvider.Element$html$factory = function(html) {
  var parentTag = "div";
  var tag;
  var match = const$0197.firstMatch(html);
  if (null != match) {
    tag = match.group((1)).toLowerCase();
    if (const$0198.containsKey(tag)) {
      parentTag = const$0198.$index(tag);
    }
  }
  var temp = _ElementFactoryProvider.Element$tag$factory(parentTag);
  temp.set$innerHTML(html);
  var element;
  if (temp.get$elements().get$length() == (1)) {
    element = temp.get$elements().get$first();
  }
  else if (parentTag == "html" && temp.get$elements().get$length() == (2)) {
    element = temp.get$elements().$index(tag == "head" ? (0) : (1));
  }
  else {
    $throw(new IllegalArgumentException($add$(("HTML had " + temp.get$elements().get$length() + " "), "top level elements but 1 expected")));
  }
  element.remove();
  return element;
}
_ElementFactoryProvider.Element$tag$factory = function(tag) {
  return document.createElement(tag)
}
$dynamic("get$height").HTMLEmbedElement = function() { return this.height; };
$dynamic("set$height").HTMLEmbedElement = function(value) { return this.height = value; };
$dynamic("get$name").HTMLEmbedElement = function() { return this.name; };
$dynamic("set$name").HTMLEmbedElement = function(value) { return this.name = value; };
$dynamic("get$width").HTMLEmbedElement = function() { return this.width; };
$dynamic("set$width").HTMLEmbedElement = function(value) { return this.width = value; };
$dynamic("get$length").EntryArray = function() { return this.length; };
$dynamic("get$length").EntryArraySync = function() { return this.length; };
$dynamic("get$name").EventException = function() { return this.name; };
$dynamic("$dom_addEventListener$3").EventSource = function($0, $1, $2) {
  return this.addEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$dynamic("$dom_removeEventListener$3").EventSource = function($0, $1, $2) {
  return this.removeEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$inherits(_EventSourceEventsImpl, _EventsImpl);
function _EventSourceEventsImpl() {}
function _EventListenerListImpl(_ptr, _type) {
  this._ptr = _ptr;
  this._html_type = _type;
}
_EventListenerListImpl.prototype.add = function(listener, useCapture) {
  this._add(listener, useCapture);
  return this;
}
_EventListenerListImpl.prototype.remove = function(listener, useCapture) {
  this._remove(listener, useCapture);
  return this;
}
_EventListenerListImpl.prototype._add = function(listener, useCapture) {
  this._ptr.$dom_addEventListener$3(this._html_type, listener, useCapture);
}
_EventListenerListImpl.prototype._remove = function(listener, useCapture) {
  this._ptr.$dom_removeEventListener$3(this._html_type, listener, useCapture);
}
_EventListenerListImpl.prototype.add$1 = function($0) {
  return this.add($wrap_call$1(to$call$1($0)), false);
};
_EventListenerListImpl.prototype.remove$1 = function($0) {
  return this.remove($wrap_call$1(to$call$1($0)), false);
};
$dynamic("get$name").HTMLFieldSetElement = function() { return this.name; };
$dynamic("set$name").HTMLFieldSetElement = function(value) { return this.name = value; };
$dynamic("get$name").File = function() { return this.name; };
$dynamic("get$name").FileException = function() { return this.name; };
$dynamic("is$List").FileList = function(){return true};
$dynamic("is$Collection").FileList = function(){return true};
$dynamic("get$length").FileList = function() { return this.length; };
$dynamic("$index").FileList = function(index) {
  return this[index];
}
$dynamic("$setindex").FileList = function(index, value) {
  $throw(new UnsupportedOperationException("Cannot assign element of immutable List."));
}
$dynamic("iterator").FileList = function() {
  return new _FixedSizeListIterator_html_File(this);
}
$dynamic("add").FileList = function(value) {
  $throw(new UnsupportedOperationException("Cannot add to immutable List."));
}
$dynamic("addAll").FileList = function(collection) {
  $throw(new UnsupportedOperationException("Cannot add to immutable List."));
}
$dynamic("forEach").FileList = function(f) {
  return _Collections.forEach(this, f);
}
$dynamic("filter").FileList = function(f) {
  return _Collections.filter(this, [], f);
}
$dynamic("every").FileList = function(f) {
  return _Collections.every(this, f);
}
$dynamic("some").FileList = function(f) {
  return _Collections.some(this, f);
}
$dynamic("isEmpty").FileList = function() {
  return this.length == (0);
}
$dynamic("sort").FileList = function(compare) {
  $throw(new UnsupportedOperationException("Cannot sort immutable List."));
}
$dynamic("indexOf").FileList = function(element, start) {
  return _Lists.indexOf(this, element, start, this.length);
}
$dynamic("last").FileList = function() {
  return this.$index(this.length - (1));
}
$dynamic("removeLast").FileList = function() {
  $throw(new UnsupportedOperationException("Cannot removeLast on immutable List."));
}
$dynamic("removeRange").FileList = function(start, rangeLength) {
  $throw(new UnsupportedOperationException("Cannot removeRange on immutable List."));
}
$dynamic("getRange").FileList = function(start, rangeLength) {
  return _Lists.getRange(this, start, rangeLength, []);
}
$dynamic("add$1").FileList = function($0) {
  return this.add($0);
};
$dynamic("every$1").FileList = function($0) {
  return this.every($wrap_call$1(to$call$1($0)));
};
$dynamic("filter$1").FileList = function($0) {
  return this.filter($wrap_call$1(to$call$1($0)));
};
$dynamic("forEach$1").FileList = function($0) {
  return this.forEach($wrap_call$1(to$call$1($0)));
};
$dynamic("indexOf$1").FileList = function($0) {
  return this.indexOf($0, (0));
};
$dynamic("some$1").FileList = function($0) {
  return this.some($wrap_call$1(to$call$1($0)));
};
$dynamic("sort$1").FileList = function($0) {
  return this.sort($wrap_call$2(to$call$2($0)));
};
$dynamic("$dom_addEventListener$3").FileReader = function($0, $1, $2) {
  return this.addEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$dynamic("$dom_removeEventListener$3").FileReader = function($0, $1, $2) {
  return this.removeEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$inherits(_FileReaderEventsImpl, _EventsImpl);
function _FileReaderEventsImpl() {}
$dynamic("get$length").FileWriter = function() { return this.length; };
$dynamic("$dom_addEventListener$3").FileWriter = function($0, $1, $2) {
  return this.addEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$dynamic("$dom_removeEventListener$3").FileWriter = function($0, $1, $2) {
  return this.removeEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$inherits(_FileWriterEventsImpl, _EventsImpl);
function _FileWriterEventsImpl() {}
$dynamic("get$length").FileWriterSync = function() { return this.length; };
$dynamic("is$List").Float32Array = function(){return true};
$dynamic("is$Collection").Float32Array = function(){return true};
$dynamic("get$length").Float32Array = function() { return this.length; };
$dynamic("$index").Float32Array = function(index) {
  return this[index];
}
$dynamic("$setindex").Float32Array = function(index, value) {
  this[index] = value
}
$dynamic("iterator").Float32Array = function() {
  return new _FixedSizeListIterator_num(this);
}
$dynamic("add").Float32Array = function(value) {
  $throw(new UnsupportedOperationException("Cannot add to immutable List."));
}
$dynamic("addAll").Float32Array = function(collection) {
  $throw(new UnsupportedOperationException("Cannot add to immutable List."));
}
$dynamic("forEach").Float32Array = function(f) {
  return _Collections.forEach(this, f);
}
$dynamic("filter").Float32Array = function(f) {
  return _Collections.filter(this, [], f);
}
$dynamic("every").Float32Array = function(f) {
  return _Collections.every(this, f);
}
$dynamic("some").Float32Array = function(f) {
  return _Collections.some(this, f);
}
$dynamic("isEmpty").Float32Array = function() {
  return this.length == (0);
}
$dynamic("sort").Float32Array = function(compare) {
  $throw(new UnsupportedOperationException("Cannot sort immutable List."));
}
$dynamic("indexOf").Float32Array = function(element, start) {
  return _Lists.indexOf(this, element, start, this.length);
}
$dynamic("last").Float32Array = function() {
  return this.$index(this.length - (1));
}
$dynamic("removeLast").Float32Array = function() {
  $throw(new UnsupportedOperationException("Cannot removeLast on immutable List."));
}
$dynamic("removeRange").Float32Array = function(start, rangeLength) {
  $throw(new UnsupportedOperationException("Cannot removeRange on immutable List."));
}
$dynamic("getRange").Float32Array = function(start, rangeLength) {
  return _Lists.getRange(this, start, rangeLength, []);
}
$dynamic("add$1").Float32Array = function($0) {
  return this.add($0);
};
$dynamic("every$1").Float32Array = function($0) {
  return this.every($wrap_call$1(to$call$1($0)));
};
$dynamic("filter$1").Float32Array = function($0) {
  return this.filter($wrap_call$1(to$call$1($0)));
};
$dynamic("forEach$1").Float32Array = function($0) {
  return this.forEach($wrap_call$1(to$call$1($0)));
};
$dynamic("indexOf$1").Float32Array = function($0) {
  return this.indexOf($0, (0));
};
$dynamic("some$1").Float32Array = function($0) {
  return this.some($wrap_call$1(to$call$1($0)));
};
$dynamic("sort$1").Float32Array = function($0) {
  return this.sort($wrap_call$2(to$call$2($0)));
};
$dynamic("is$List").Float64Array = function(){return true};
$dynamic("is$Collection").Float64Array = function(){return true};
$dynamic("get$length").Float64Array = function() { return this.length; };
$dynamic("$index").Float64Array = function(index) {
  return this[index];
}
$dynamic("$setindex").Float64Array = function(index, value) {
  this[index] = value
}
$dynamic("iterator").Float64Array = function() {
  return new _FixedSizeListIterator_num(this);
}
$dynamic("add").Float64Array = function(value) {
  $throw(new UnsupportedOperationException("Cannot add to immutable List."));
}
$dynamic("addAll").Float64Array = function(collection) {
  $throw(new UnsupportedOperationException("Cannot add to immutable List."));
}
$dynamic("forEach").Float64Array = function(f) {
  return _Collections.forEach(this, f);
}
$dynamic("filter").Float64Array = function(f) {
  return _Collections.filter(this, [], f);
}
$dynamic("every").Float64Array = function(f) {
  return _Collections.every(this, f);
}
$dynamic("some").Float64Array = function(f) {
  return _Collections.some(this, f);
}
$dynamic("isEmpty").Float64Array = function() {
  return this.length == (0);
}
$dynamic("sort").Float64Array = function(compare) {
  $throw(new UnsupportedOperationException("Cannot sort immutable List."));
}
$dynamic("indexOf").Float64Array = function(element, start) {
  return _Lists.indexOf(this, element, start, this.length);
}
$dynamic("last").Float64Array = function() {
  return this.$index(this.length - (1));
}
$dynamic("removeLast").Float64Array = function() {
  $throw(new UnsupportedOperationException("Cannot removeLast on immutable List."));
}
$dynamic("removeRange").Float64Array = function(start, rangeLength) {
  $throw(new UnsupportedOperationException("Cannot removeRange on immutable List."));
}
$dynamic("getRange").Float64Array = function(start, rangeLength) {
  return _Lists.getRange(this, start, rangeLength, []);
}
$dynamic("add$1").Float64Array = function($0) {
  return this.add($0);
};
$dynamic("every$1").Float64Array = function($0) {
  return this.every($wrap_call$1(to$call$1($0)));
};
$dynamic("filter$1").Float64Array = function($0) {
  return this.filter($wrap_call$1(to$call$1($0)));
};
$dynamic("forEach$1").Float64Array = function($0) {
  return this.forEach($wrap_call$1(to$call$1($0)));
};
$dynamic("indexOf$1").Float64Array = function($0) {
  return this.indexOf($0, (0));
};
$dynamic("some$1").Float64Array = function($0) {
  return this.some($wrap_call$1(to$call$1($0)));
};
$dynamic("sort$1").Float64Array = function($0) {
  return this.sort($wrap_call$2(to$call$2($0)));
};
$dynamic("get$color").HTMLFontElement = function() { return this.color; };
$dynamic("set$color").HTMLFontElement = function(value) { return this.color = value; };
$dynamic("get$length").HTMLFormElement = function() { return this.length; };
$dynamic("get$name").HTMLFormElement = function() { return this.name; };
$dynamic("set$name").HTMLFormElement = function(value) { return this.name = value; };
$dynamic("get$height").HTMLFrameElement = function() { return this.height; };
$dynamic("get$name").HTMLFrameElement = function() { return this.name; };
$dynamic("set$name").HTMLFrameElement = function(value) { return this.name = value; };
$dynamic("get$width").HTMLFrameElement = function() { return this.width; };
$dynamic("get$on").HTMLFrameSetElement = function() {
  return new _FrameSetElementEventsImpl(this);
}
$inherits(_FrameSetElementEventsImpl, _ElementEventsImpl);
function _FrameSetElementEventsImpl(_ptr) {
  _ElementEventsImpl.call(this, _ptr);
}
_FrameSetElementEventsImpl.prototype.get$blur = function() {
  return this._get("blur");
}
_FrameSetElementEventsImpl.prototype.get$focus = function() {
  return this._get("focus");
}
$dynamic("get$width").HTMLHRElement = function() { return this.width; };
$dynamic("set$width").HTMLHRElement = function(value) { return this.width = value; };
$dynamic("get$length").HTMLAllCollection = function() { return this.length; };
$dynamic("is$List").HTMLCollection = function(){return true};
$dynamic("is$Collection").HTMLCollection = function(){return true};
$dynamic("get$length").HTMLCollection = function() { return this.length; };
$dynamic("$index").HTMLCollection = function(index) {
  return this[index];
}
$dynamic("$setindex").HTMLCollection = function(index, value) {
  $throw(new UnsupportedOperationException("Cannot assign element of immutable List."));
}
$dynamic("iterator").HTMLCollection = function() {
  return new _FixedSizeListIterator_html_Node(this);
}
$dynamic("add").HTMLCollection = function(value) {
  $throw(new UnsupportedOperationException("Cannot add to immutable List."));
}
$dynamic("addAll").HTMLCollection = function(collection) {
  $throw(new UnsupportedOperationException("Cannot add to immutable List."));
}
$dynamic("forEach").HTMLCollection = function(f) {
  return _Collections.forEach(this, f);
}
$dynamic("filter").HTMLCollection = function(f) {
  return _Collections.filter(this, [], f);
}
$dynamic("every").HTMLCollection = function(f) {
  return _Collections.every(this, f);
}
$dynamic("some").HTMLCollection = function(f) {
  return _Collections.some(this, f);
}
$dynamic("isEmpty").HTMLCollection = function() {
  return this.get$length() == (0);
}
$dynamic("sort").HTMLCollection = function(compare) {
  $throw(new UnsupportedOperationException("Cannot sort immutable List."));
}
$dynamic("indexOf").HTMLCollection = function(element, start) {
  return _Lists.indexOf(this, element, start, this.get$length());
}
$dynamic("last").HTMLCollection = function() {
  return this.$index(this.get$length() - (1));
}
$dynamic("removeLast").HTMLCollection = function() {
  $throw(new UnsupportedOperationException("Cannot removeLast on immutable List."));
}
$dynamic("removeRange").HTMLCollection = function(start, rangeLength) {
  $throw(new UnsupportedOperationException("Cannot removeRange on immutable List."));
}
$dynamic("getRange").HTMLCollection = function(start, rangeLength) {
  return _Lists.getRange(this, start, rangeLength, []);
}
$dynamic("add$1").HTMLCollection = function($0) {
  return this.add($0);
};
$dynamic("every$1").HTMLCollection = function($0) {
  return this.every($wrap_call$1(to$call$1($0)));
};
$dynamic("filter$1").HTMLCollection = function($0) {
  return this.filter($wrap_call$1(to$call$1($0)));
};
$dynamic("forEach$1").HTMLCollection = function($0) {
  return this.forEach($wrap_call$1(to$call$1($0)));
};
$dynamic("indexOf$1").HTMLCollection = function($0) {
  return this.indexOf($0, (0));
};
$dynamic("some$1").HTMLCollection = function($0) {
  return this.some($wrap_call$1(to$call$1($0)));
};
$dynamic("sort$1").HTMLCollection = function($0) {
  return this.sort($wrap_call$2(to$call$2($0)));
};
$dynamic("get$length").HTMLOptionsCollection = function() {
  return this.length;
}
$dynamic("get$selectedIndex").HTMLOptionsCollection = function() { return this.selectedIndex; };
$dynamic("remove$1").HTMLOptionsCollection = function($0) {
  return this.remove($0);
};
$dynamic("get$length").History = function() { return this.length; };
$dynamic("get$value").IDBCursorWithValue = function() { return this.value; };
$dynamic("get$name").IDBDatabase = function() { return this.name; };
$dynamic("$dom_addEventListener$3").IDBDatabase = function($0, $1, $2) {
  return this.addEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$dynamic("$dom_removeEventListener$3").IDBDatabase = function($0, $1, $2) {
  return this.removeEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$inherits(_IDBDatabaseEventsImpl, _EventsImpl);
function _IDBDatabaseEventsImpl() {}
$dynamic("get$name").IDBDatabaseException = function() { return this.name; };
$dynamic("get$name").IDBIndex = function() { return this.name; };
$dynamic("get$name").IDBObjectStore = function() { return this.name; };
$dynamic("add$1").IDBObjectStore = function($0) {
  return this.add($0);
};
$dynamic("clear$0").IDBObjectStore = function() {
  return this.clear();
};
$dynamic("$dom_addEventListener$3").IDBRequest = function($0, $1, $2) {
  if (Object.getPrototypeOf(this).hasOwnProperty("$dom_addEventListener$3")) {
    return this.addEventListener($0, $wrap_call$1(to$call$1($1)), $2);
  }
  return Object.prototype.$dom_addEventListener$3.call(this, $0, $1, $2);
};
$dynamic("$dom_removeEventListener$3").IDBRequest = function($0, $1, $2) {
  if (Object.getPrototypeOf(this).hasOwnProperty("$dom_removeEventListener$3")) {
    return this.removeEventListener($0, $wrap_call$1(to$call$1($1)), $2);
  }
  return Object.prototype.$dom_removeEventListener$3.call(this, $0, $1, $2);
};
$inherits(_IDBRequestEventsImpl, _EventsImpl);
function _IDBRequestEventsImpl() {}
$dynamic("$dom_addEventListener$3").IDBTransaction = function($0, $1, $2) {
  return this.addEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$dynamic("$dom_removeEventListener$3").IDBTransaction = function($0, $1, $2) {
  return this.removeEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$inherits(_IDBTransactionEventsImpl, _EventsImpl);
function _IDBTransactionEventsImpl() {}
$dynamic("$dom_addEventListener$3").IDBVersionChangeRequest = function($0, $1, $2) {
  return this.addEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$dynamic("$dom_removeEventListener$3").IDBVersionChangeRequest = function($0, $1, $2) {
  return this.removeEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$inherits(_IDBVersionChangeRequestEventsImpl, _IDBRequestEventsImpl);
function _IDBVersionChangeRequestEventsImpl() {}
$dynamic("get$height").HTMLIFrameElement = function() { return this.height; };
$dynamic("set$height").HTMLIFrameElement = function(value) { return this.height = value; };
$dynamic("get$name").HTMLIFrameElement = function() { return this.name; };
$dynamic("set$name").HTMLIFrameElement = function(value) { return this.name = value; };
$dynamic("get$width").HTMLIFrameElement = function() { return this.width; };
$dynamic("set$width").HTMLIFrameElement = function(value) { return this.width = value; };
$dynamic("get$height").ImageData = function() { return this.height; };
$dynamic("get$width").ImageData = function() { return this.width; };
$dynamic("get$height").HTMLImageElement = function() { return this.height; };
$dynamic("set$height").HTMLImageElement = function(value) { return this.height = value; };
$dynamic("get$name").HTMLImageElement = function() { return this.name; };
$dynamic("set$name").HTMLImageElement = function(value) { return this.name = value; };
$dynamic("get$width").HTMLImageElement = function() { return this.width; };
$dynamic("set$width").HTMLImageElement = function(value) { return this.width = value; };
$dynamic("get$x").HTMLImageElement = function() { return this.x; };
$dynamic("get$y").HTMLImageElement = function() { return this.y; };
$dynamic("get$on").HTMLInputElement = function() {
  return new _InputElementEventsImpl(this);
}
$dynamic("get$height").HTMLInputElement = function() { return this.height; };
$dynamic("set$height").HTMLInputElement = function(value) { return this.height = value; };
$dynamic("get$name").HTMLInputElement = function() { return this.name; };
$dynamic("set$name").HTMLInputElement = function(value) { return this.name = value; };
$dynamic("get$value").HTMLInputElement = function() { return this.value; };
$dynamic("set$value").HTMLInputElement = function(value) { return this.value = value; };
$dynamic("get$width").HTMLInputElement = function() { return this.width; };
$dynamic("set$width").HTMLInputElement = function(value) { return this.width = value; };
$inherits(_InputElementEventsImpl, _ElementEventsImpl);
function _InputElementEventsImpl(_ptr) {
  _ElementEventsImpl.call(this, _ptr);
}
$dynamic("is$List").Int16Array = function(){return true};
$dynamic("is$Collection").Int16Array = function(){return true};
$dynamic("get$length").Int16Array = function() { return this.length; };
$dynamic("$index").Int16Array = function(index) {
  return this[index];
}
$dynamic("$setindex").Int16Array = function(index, value) {
  this[index] = value
}
$dynamic("iterator").Int16Array = function() {
  return new _FixedSizeListIterator_int(this);
}
$dynamic("add").Int16Array = function(value) {
  $throw(new UnsupportedOperationException("Cannot add to immutable List."));
}
$dynamic("addAll").Int16Array = function(collection) {
  $throw(new UnsupportedOperationException("Cannot add to immutable List."));
}
$dynamic("forEach").Int16Array = function(f) {
  return _Collections.forEach(this, f);
}
$dynamic("filter").Int16Array = function(f) {
  return _Collections.filter(this, [], f);
}
$dynamic("every").Int16Array = function(f) {
  return _Collections.every(this, f);
}
$dynamic("some").Int16Array = function(f) {
  return _Collections.some(this, f);
}
$dynamic("isEmpty").Int16Array = function() {
  return this.length == (0);
}
$dynamic("sort").Int16Array = function(compare) {
  $throw(new UnsupportedOperationException("Cannot sort immutable List."));
}
$dynamic("indexOf").Int16Array = function(element, start) {
  return _Lists.indexOf(this, element, start, this.length);
}
$dynamic("last").Int16Array = function() {
  return this.$index(this.length - (1));
}
$dynamic("removeLast").Int16Array = function() {
  $throw(new UnsupportedOperationException("Cannot removeLast on immutable List."));
}
$dynamic("removeRange").Int16Array = function(start, rangeLength) {
  $throw(new UnsupportedOperationException("Cannot removeRange on immutable List."));
}
$dynamic("getRange").Int16Array = function(start, rangeLength) {
  return _Lists.getRange(this, start, rangeLength, []);
}
$dynamic("add$1").Int16Array = function($0) {
  return this.add($0);
};
$dynamic("every$1").Int16Array = function($0) {
  return this.every($wrap_call$1(to$call$1($0)));
};
$dynamic("filter$1").Int16Array = function($0) {
  return this.filter($wrap_call$1(to$call$1($0)));
};
$dynamic("forEach$1").Int16Array = function($0) {
  return this.forEach($wrap_call$1(to$call$1($0)));
};
$dynamic("indexOf$1").Int16Array = function($0) {
  return this.indexOf($0, (0));
};
$dynamic("some$1").Int16Array = function($0) {
  return this.some($wrap_call$1(to$call$1($0)));
};
$dynamic("sort$1").Int16Array = function($0) {
  return this.sort($wrap_call$2(to$call$2($0)));
};
$dynamic("is$List").Int32Array = function(){return true};
$dynamic("is$Collection").Int32Array = function(){return true};
$dynamic("get$length").Int32Array = function() { return this.length; };
$dynamic("$index").Int32Array = function(index) {
  return this[index];
}
$dynamic("$setindex").Int32Array = function(index, value) {
  this[index] = value
}
$dynamic("iterator").Int32Array = function() {
  return new _FixedSizeListIterator_int(this);
}
$dynamic("add").Int32Array = function(value) {
  $throw(new UnsupportedOperationException("Cannot add to immutable List."));
}
$dynamic("addAll").Int32Array = function(collection) {
  $throw(new UnsupportedOperationException("Cannot add to immutable List."));
}
$dynamic("forEach").Int32Array = function(f) {
  return _Collections.forEach(this, f);
}
$dynamic("filter").Int32Array = function(f) {
  return _Collections.filter(this, [], f);
}
$dynamic("every").Int32Array = function(f) {
  return _Collections.every(this, f);
}
$dynamic("some").Int32Array = function(f) {
  return _Collections.some(this, f);
}
$dynamic("isEmpty").Int32Array = function() {
  return this.length == (0);
}
$dynamic("sort").Int32Array = function(compare) {
  $throw(new UnsupportedOperationException("Cannot sort immutable List."));
}
$dynamic("indexOf").Int32Array = function(element, start) {
  return _Lists.indexOf(this, element, start, this.length);
}
$dynamic("last").Int32Array = function() {
  return this.$index(this.length - (1));
}
$dynamic("removeLast").Int32Array = function() {
  $throw(new UnsupportedOperationException("Cannot removeLast on immutable List."));
}
$dynamic("removeRange").Int32Array = function(start, rangeLength) {
  $throw(new UnsupportedOperationException("Cannot removeRange on immutable List."));
}
$dynamic("getRange").Int32Array = function(start, rangeLength) {
  return _Lists.getRange(this, start, rangeLength, []);
}
$dynamic("add$1").Int32Array = function($0) {
  return this.add($0);
};
$dynamic("every$1").Int32Array = function($0) {
  return this.every($wrap_call$1(to$call$1($0)));
};
$dynamic("filter$1").Int32Array = function($0) {
  return this.filter($wrap_call$1(to$call$1($0)));
};
$dynamic("forEach$1").Int32Array = function($0) {
  return this.forEach($wrap_call$1(to$call$1($0)));
};
$dynamic("indexOf$1").Int32Array = function($0) {
  return this.indexOf($0, (0));
};
$dynamic("some$1").Int32Array = function($0) {
  return this.some($wrap_call$1(to$call$1($0)));
};
$dynamic("sort$1").Int32Array = function($0) {
  return this.sort($wrap_call$2(to$call$2($0)));
};
$dynamic("is$List").Int8Array = function(){return true};
$dynamic("is$Collection").Int8Array = function(){return true};
$dynamic("get$length").Int8Array = function() { return this.length; };
$dynamic("$index").Int8Array = function(index) {
  return this[index];
}
$dynamic("$setindex").Int8Array = function(index, value) {
  this[index] = value
}
$dynamic("iterator").Int8Array = function() {
  return new _FixedSizeListIterator_int(this);
}
$dynamic("add").Int8Array = function(value) {
  $throw(new UnsupportedOperationException("Cannot add to immutable List."));
}
$dynamic("addAll").Int8Array = function(collection) {
  $throw(new UnsupportedOperationException("Cannot add to immutable List."));
}
$dynamic("forEach").Int8Array = function(f) {
  return _Collections.forEach(this, f);
}
$dynamic("filter").Int8Array = function(f) {
  return _Collections.filter(this, [], f);
}
$dynamic("every").Int8Array = function(f) {
  return _Collections.every(this, f);
}
$dynamic("some").Int8Array = function(f) {
  return _Collections.some(this, f);
}
$dynamic("isEmpty").Int8Array = function() {
  return this.length == (0);
}
$dynamic("sort").Int8Array = function(compare) {
  $throw(new UnsupportedOperationException("Cannot sort immutable List."));
}
$dynamic("indexOf").Int8Array = function(element, start) {
  return _Lists.indexOf(this, element, start, this.length);
}
$dynamic("last").Int8Array = function() {
  return this.$index(this.length - (1));
}
$dynamic("removeLast").Int8Array = function() {
  $throw(new UnsupportedOperationException("Cannot removeLast on immutable List."));
}
$dynamic("removeRange").Int8Array = function(start, rangeLength) {
  $throw(new UnsupportedOperationException("Cannot removeRange on immutable List."));
}
$dynamic("getRange").Int8Array = function(start, rangeLength) {
  return _Lists.getRange(this, start, rangeLength, []);
}
$dynamic("add$1").Int8Array = function($0) {
  return this.add($0);
};
$dynamic("every$1").Int8Array = function($0) {
  return this.every($wrap_call$1(to$call$1($0)));
};
$dynamic("filter$1").Int8Array = function($0) {
  return this.filter($wrap_call$1(to$call$1($0)));
};
$dynamic("forEach$1").Int8Array = function($0) {
  return this.forEach($wrap_call$1(to$call$1($0)));
};
$dynamic("indexOf$1").Int8Array = function($0) {
  return this.indexOf($0, (0));
};
$dynamic("some$1").Int8Array = function($0) {
  return this.some($wrap_call$1(to$call$1($0)));
};
$dynamic("sort$1").Int8Array = function($0) {
  return this.sort($wrap_call$2(to$call$2($0)));
};
$dynamic("$dom_addEventListener$3").JavaScriptAudioNode = function($0, $1, $2) {
  return this.addEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$dynamic("$dom_removeEventListener$3").JavaScriptAudioNode = function($0, $1, $2) {
  return this.removeEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$inherits(_JavaScriptAudioNodeEventsImpl, _EventsImpl);
function _JavaScriptAudioNodeEventsImpl() {}
$dynamic("get$name").HTMLKeygenElement = function() { return this.name; };
$dynamic("set$name").HTMLKeygenElement = function(value) { return this.name = value; };
$dynamic("get$value").HTMLLIElement = function() { return this.value; };
$dynamic("set$value").HTMLLIElement = function(value) { return this.value = value; };
$dynamic("$dom_addEventListener$3").MediaStream = function($0, $1, $2) {
  return this.addEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$dynamic("$dom_removeEventListener$3").MediaStream = function($0, $1, $2) {
  return this.removeEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$dynamic("get$name").HTMLMapElement = function() { return this.name; };
$dynamic("set$name").HTMLMapElement = function(value) { return this.name = value; };
$dynamic("get$height").HTMLMarqueeElement = function() { return this.height; };
$dynamic("set$height").HTMLMarqueeElement = function(value) { return this.height = value; };
$dynamic("get$width").HTMLMarqueeElement = function() { return this.width; };
$dynamic("set$width").HTMLMarqueeElement = function(value) { return this.width = value; };
$dynamic("start$0").HTMLMarqueeElement = function() {
  return this.start();
};
$dynamic("$dom_addEventListener$3").MediaController = function($0, $1, $2) {
  return this.addEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$dynamic("$dom_removeEventListener$3").MediaController = function($0, $1, $2) {
  return this.removeEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$inherits(_MediaElementEventsImpl, _ElementEventsImpl);
function _MediaElementEventsImpl(_ptr) {
  _ElementEventsImpl.call(this, _ptr);
}
$dynamic("is$List").MediaList = function(){return true};
$dynamic("is$Collection").MediaList = function(){return true};
$dynamic("get$length").MediaList = function() { return this.length; };
$dynamic("$index").MediaList = function(index) {
  return this[index];
}
$dynamic("$setindex").MediaList = function(index, value) {
  $throw(new UnsupportedOperationException("Cannot assign element of immutable List."));
}
$dynamic("iterator").MediaList = function() {
  return new _FixedSizeListIterator_dart_core_String(this);
}
$dynamic("add").MediaList = function(value) {
  $throw(new UnsupportedOperationException("Cannot add to immutable List."));
}
$dynamic("addAll").MediaList = function(collection) {
  $throw(new UnsupportedOperationException("Cannot add to immutable List."));
}
$dynamic("forEach").MediaList = function(f) {
  return _Collections.forEach(this, f);
}
$dynamic("filter").MediaList = function(f) {
  return _Collections.filter(this, [], f);
}
$dynamic("every").MediaList = function(f) {
  return _Collections.every(this, f);
}
$dynamic("some").MediaList = function(f) {
  return _Collections.some(this, f);
}
$dynamic("isEmpty").MediaList = function() {
  return this.length == (0);
}
$dynamic("sort").MediaList = function(compare) {
  $throw(new UnsupportedOperationException("Cannot sort immutable List."));
}
$dynamic("indexOf").MediaList = function(element, start) {
  return _Lists.indexOf(this, element, start, this.length);
}
$dynamic("last").MediaList = function() {
  return this.$index(this.length - (1));
}
$dynamic("removeLast").MediaList = function() {
  $throw(new UnsupportedOperationException("Cannot removeLast on immutable List."));
}
$dynamic("removeRange").MediaList = function(start, rangeLength) {
  $throw(new UnsupportedOperationException("Cannot removeRange on immutable List."));
}
$dynamic("getRange").MediaList = function(start, rangeLength) {
  return _Lists.getRange(this, start, rangeLength, []);
}
$dynamic("add$1").MediaList = function($0) {
  return this.add($0);
};
$dynamic("every$1").MediaList = function($0) {
  return this.every($wrap_call$1(to$call$1($0)));
};
$dynamic("filter$1").MediaList = function($0) {
  return this.filter($wrap_call$1(to$call$1($0)));
};
$dynamic("forEach$1").MediaList = function($0) {
  return this.forEach($wrap_call$1(to$call$1($0)));
};
$dynamic("indexOf$1").MediaList = function($0) {
  return this.indexOf($0, (0));
};
$dynamic("some$1").MediaList = function($0) {
  return this.some($wrap_call$1(to$call$1($0)));
};
$dynamic("sort$1").MediaList = function($0) {
  return this.sort($wrap_call$2(to$call$2($0)));
};
$inherits(_MediaStreamEventsImpl, _EventsImpl);
function _MediaStreamEventsImpl() {}
$dynamic("get$length").MediaStreamList = function() { return this.length; };
$dynamic("get$length").MediaStreamTrackList = function() { return this.length; };
$dynamic("$dom_addEventListener$3").MessagePort = function($0, $1, $2) {
  return this.addEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$dynamic("$dom_removeEventListener$3").MessagePort = function($0, $1, $2) {
  return this.removeEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$dynamic("postMessage$2").MessagePort = function($0, $1) {
  return this.postMessage($0, $1);
};
$dynamic("start$0").MessagePort = function() {
  return this.start();
};
$inherits(_MessagePortEventsImpl, _EventsImpl);
function _MessagePortEventsImpl() {}
$dynamic("get$content").HTMLMetaElement = function() { return this.content; };
$dynamic("get$name").HTMLMetaElement = function() { return this.name; };
$dynamic("set$name").HTMLMetaElement = function(value) { return this.name = value; };
$dynamic("get$value").HTMLMeterElement = function() { return this.value; };
$dynamic("set$value").HTMLMeterElement = function(value) { return this.value = value; };
$dynamic("get$x").MouseEvent = function() { return this.x; };
$dynamic("get$y").MouseEvent = function() { return this.y; };
$dynamic("is$List").NamedNodeMap = function(){return true};
$dynamic("is$Collection").NamedNodeMap = function(){return true};
$dynamic("get$length").NamedNodeMap = function() { return this.length; };
$dynamic("$index").NamedNodeMap = function(index) {
  return this[index];
}
$dynamic("$setindex").NamedNodeMap = function(index, value) {
  $throw(new UnsupportedOperationException("Cannot assign element of immutable List."));
}
$dynamic("iterator").NamedNodeMap = function() {
  return new _FixedSizeListIterator_html_Node(this);
}
$dynamic("add").NamedNodeMap = function(value) {
  $throw(new UnsupportedOperationException("Cannot add to immutable List."));
}
$dynamic("addAll").NamedNodeMap = function(collection) {
  $throw(new UnsupportedOperationException("Cannot add to immutable List."));
}
$dynamic("forEach").NamedNodeMap = function(f) {
  return _Collections.forEach(this, f);
}
$dynamic("filter").NamedNodeMap = function(f) {
  return _Collections.filter(this, [], f);
}
$dynamic("every").NamedNodeMap = function(f) {
  return _Collections.every(this, f);
}
$dynamic("some").NamedNodeMap = function(f) {
  return _Collections.some(this, f);
}
$dynamic("isEmpty").NamedNodeMap = function() {
  return this.length == (0);
}
$dynamic("sort").NamedNodeMap = function(compare) {
  $throw(new UnsupportedOperationException("Cannot sort immutable List."));
}
$dynamic("indexOf").NamedNodeMap = function(element, start) {
  return _Lists.indexOf(this, element, start, this.length);
}
$dynamic("last").NamedNodeMap = function() {
  return this.$index(this.length - (1));
}
$dynamic("removeLast").NamedNodeMap = function() {
  $throw(new UnsupportedOperationException("Cannot removeLast on immutable List."));
}
$dynamic("removeRange").NamedNodeMap = function(start, rangeLength) {
  $throw(new UnsupportedOperationException("Cannot removeRange on immutable List."));
}
$dynamic("getRange").NamedNodeMap = function(start, rangeLength) {
  return _Lists.getRange(this, start, rangeLength, []);
}
$dynamic("add$1").NamedNodeMap = function($0) {
  return this.add($0);
};
$dynamic("every$1").NamedNodeMap = function($0) {
  return this.every($wrap_call$1(to$call$1($0)));
};
$dynamic("filter$1").NamedNodeMap = function($0) {
  return this.filter($wrap_call$1(to$call$1($0)));
};
$dynamic("forEach$1").NamedNodeMap = function($0) {
  return this.forEach($wrap_call$1(to$call$1($0)));
};
$dynamic("indexOf$1").NamedNodeMap = function($0) {
  return this.indexOf($0, (0));
};
$dynamic("some$1").NamedNodeMap = function($0) {
  return this.some($wrap_call$1(to$call$1($0)));
};
$dynamic("sort$1").NamedNodeMap = function($0) {
  return this.sort($wrap_call$2(to$call$2($0)));
};
function _ChildNodeListLazy(_this) {
  this._this = _this;
}
_ChildNodeListLazy.prototype.is$List = function(){return true};
_ChildNodeListLazy.prototype.is$Collection = function(){return true};
_ChildNodeListLazy.prototype.last = function() {
  return this._this.lastChild;
}
_ChildNodeListLazy.prototype.add = function(value) {
  this._this.appendChild(value);
}
_ChildNodeListLazy.prototype.addAll = function(collection) {
  for (var $$i = collection.iterator(); $$i.hasNext(); ) {
    var node = $$i.next();
    this._this.appendChild(node);
  }
}
_ChildNodeListLazy.prototype.removeLast = function() {
  var result = this.last();
  if ($ne$(result)) {
    this._this.removeChild(result);
  }
  return result;
}
_ChildNodeListLazy.prototype.clear$_ = function() {
  this._this.set$text("");
}
_ChildNodeListLazy.prototype.$setindex = function(index, value) {
  this._this.replaceChild(value, this.$index(index));
}
_ChildNodeListLazy.prototype.iterator = function() {
  return this._this.get$$$dom_childNodes().iterator();
}
_ChildNodeListLazy.prototype.forEach = function(f) {
  return _Collections.forEach(this, f);
}
_ChildNodeListLazy.prototype.filter = function(f) {
  return new _NodeListWrapper(_Collections.filter(this, [], f));
}
_ChildNodeListLazy.prototype.every = function(f) {
  return _Collections.every(this, f);
}
_ChildNodeListLazy.prototype.some = function(f) {
  return _Collections.some(this, f);
}
_ChildNodeListLazy.prototype.isEmpty = function() {
  return this.get$length() == (0);
}
_ChildNodeListLazy.prototype.sort = function(compare) {
  $throw(new UnsupportedOperationException("Cannot sort immutable List."));
}
_ChildNodeListLazy.prototype.indexOf = function(element, start) {
  return _Lists.indexOf(this, element, start, this.get$length());
}
_ChildNodeListLazy.prototype.removeRange = function(start, rangeLength) {
  $throw(new UnsupportedOperationException("Cannot removeRange on immutable List."));
}
_ChildNodeListLazy.prototype.getRange = function(start, rangeLength) {
  return new _NodeListWrapper(_Lists.getRange(this, start, rangeLength, []));
}
_ChildNodeListLazy.prototype.get$length = function() {
  return this._this.get$$$dom_childNodes().length;
}
_ChildNodeListLazy.prototype.$index = function(index) {
  return this._this.get$$$dom_childNodes().$index(index);
}
_ChildNodeListLazy.prototype.add$1 = _ChildNodeListLazy.prototype.add;
_ChildNodeListLazy.prototype.clear$0 = _ChildNodeListLazy.prototype.clear$_;
_ChildNodeListLazy.prototype.every$1 = function($0) {
  return this.every($wrap_call$1(to$call$1($0)));
};
_ChildNodeListLazy.prototype.filter$1 = function($0) {
  return this.filter($wrap_call$1(to$call$1($0)));
};
_ChildNodeListLazy.prototype.forEach$1 = function($0) {
  return this.forEach($wrap_call$1(to$call$1($0)));
};
_ChildNodeListLazy.prototype.indexOf$1 = function($0) {
  return this.indexOf($0, (0));
};
_ChildNodeListLazy.prototype.some$1 = function($0) {
  return this.some($wrap_call$1(to$call$1($0)));
};
_ChildNodeListLazy.prototype.sort$1 = function($0) {
  return this.sort($wrap_call$2(to$call$2($0)));
};
$inherits(_ListWrapper_Node, _ListWrapper);
function _ListWrapper_Node(_list) {
  this._html_list = _list;
}
_ListWrapper_Node.prototype.add$1 = _ListWrapper_Node.prototype.add;
_ListWrapper_Node.prototype.clear$0 = _ListWrapper_Node.prototype.clear$_;
_ListWrapper_Node.prototype.every$1 = function($0) {
  return this.every($wrap_call$1(to$call$1($0)));
};
_ListWrapper_Node.prototype.forEach$1 = function($0) {
  return this.forEach($wrap_call$1(to$call$1($0)));
};
_ListWrapper_Node.prototype.indexOf$1 = function($0) {
  return this.indexOf($0, (0));
};
_ListWrapper_Node.prototype.some$1 = function($0) {
  return this.some($wrap_call$1(to$call$1($0)));
};
_ListWrapper_Node.prototype.sort$1 = function($0) {
  return this.sort($wrap_call$2(to$call$2($0)));
};
$inherits(_NodeListWrapper, _ListWrapper_Node);
function _NodeListWrapper(list) {
  _ListWrapper_Node.call(this, list);
}
_NodeListWrapper.prototype.filter = function(f) {
  return new _NodeListWrapper(this._html_list.filter$1(f));
}
_NodeListWrapper.prototype.getRange = function(start, rangeLength) {
  return new _NodeListWrapper(this._html_list.getRange(start, rangeLength));
}
_NodeListWrapper.prototype.filter$1 = function($0) {
  return this.filter($wrap_call$1(to$call$1($0)));
};
$dynamic("is$List").NodeList = function(){return true};
$dynamic("is$Collection").NodeList = function(){return true};
$dynamic("iterator").NodeList = function() {
  return new _FixedSizeListIterator_html_Node(this);
}
$dynamic("add").NodeList = function(value) {
  this._html_parent.appendChild(value);
}
$dynamic("addAll").NodeList = function(collection) {
  for (var $$i = collection.iterator(); $$i.hasNext(); ) {
    var node = $$i.next();
    this._html_parent.appendChild(node);
  }
}
$dynamic("removeLast").NodeList = function() {
  var result = this.last();
  if ($ne$(result)) {
    this._html_parent.removeChild(result);
  }
  return result;
}
$dynamic("clear$_").NodeList = function() {
  this._html_parent.set$text("");
}
$dynamic("$setindex").NodeList = function(index, value) {
  this._html_parent.replaceChild(value, this.$index(index));
}
$dynamic("forEach").NodeList = function(f) {
  return _Collections.forEach(this, f);
}
$dynamic("filter").NodeList = function(f) {
  return new _NodeListWrapper(_Collections.filter(this, [], f));
}
$dynamic("every").NodeList = function(f) {
  return _Collections.every(this, f);
}
$dynamic("some").NodeList = function(f) {
  return _Collections.some(this, f);
}
$dynamic("isEmpty").NodeList = function() {
  return this.length == (0);
}
$dynamic("sort").NodeList = function(compare) {
  $throw(new UnsupportedOperationException("Cannot sort immutable List."));
}
$dynamic("indexOf").NodeList = function(element, start) {
  return _Lists.indexOf(this, element, start, this.length);
}
$dynamic("last").NodeList = function() {
  return this.$index(this.length - (1));
}
$dynamic("removeRange").NodeList = function(start, rangeLength) {
  $throw(new UnsupportedOperationException("Cannot removeRange on immutable List."));
}
$dynamic("getRange").NodeList = function(start, rangeLength) {
  return new _NodeListWrapper(_Lists.getRange(this, start, rangeLength, []));
}
$dynamic("get$length").NodeList = function() { return this.length; };
$dynamic("$index").NodeList = function(index) {
  return this[index];
}
$dynamic("add$1").NodeList = function($0) {
  return this.add($0);
};
$dynamic("clear$0").NodeList = function() {
  return this.clear$_();
};
$dynamic("every$1").NodeList = function($0) {
  return this.every($wrap_call$1(to$call$1($0)));
};
$dynamic("filter$1").NodeList = function($0) {
  return this.filter($wrap_call$1(to$call$1($0)));
};
$dynamic("forEach$1").NodeList = function($0) {
  return this.forEach($wrap_call$1(to$call$1($0)));
};
$dynamic("indexOf$1").NodeList = function($0) {
  return this.indexOf($0, (0));
};
$dynamic("some$1").NodeList = function($0) {
  return this.some($wrap_call$1(to$call$1($0)));
};
$dynamic("sort$1").NodeList = function($0) {
  return this.sort($wrap_call$2(to$call$2($0)));
};
$dynamic("$dom_addEventListener$3").Notification = function($0, $1, $2) {
  return this.addEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$dynamic("$dom_removeEventListener$3").Notification = function($0, $1, $2) {
  return this.removeEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$inherits(_NotificationEventsImpl, _EventsImpl);
function _NotificationEventsImpl() {}
_NotificationEventsImpl.prototype.get$click = function() {
  return this._get("click");
}
_NotificationEventsImpl.prototype.get$display = function() {
  return this._get("display");
}
$dynamic("get$height").HTMLObjectElement = function() { return this.height; };
$dynamic("set$height").HTMLObjectElement = function(value) { return this.height = value; };
$dynamic("get$name").HTMLObjectElement = function() { return this.name; };
$dynamic("set$name").HTMLObjectElement = function(value) { return this.name = value; };
$dynamic("get$width").HTMLObjectElement = function() { return this.width; };
$dynamic("set$width").HTMLObjectElement = function(value) { return this.width = value; };
$dynamic("get$name").OperationNotAllowedException = function() { return this.name; };
$dynamic("get$value").HTMLOptionElement = function() { return this.value; };
$dynamic("set$value").HTMLOptionElement = function(value) { return this.value = value; };
$dynamic("get$name").HTMLOutputElement = function() { return this.name; };
$dynamic("set$name").HTMLOutputElement = function(value) { return this.name = value; };
$dynamic("get$value").HTMLOutputElement = function() { return this.value; };
$dynamic("set$value").HTMLOutputElement = function(value) { return this.value = value; };
$dynamic("get$name").HTMLParamElement = function() { return this.name; };
$dynamic("set$name").HTMLParamElement = function(value) { return this.name = value; };
$dynamic("get$value").HTMLParamElement = function() { return this.value; };
$dynamic("set$value").HTMLParamElement = function(value) { return this.value = value; };
$dynamic("$dom_addEventListener$3").PeerConnection00 = function($0, $1, $2) {
  return this.addEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$dynamic("$dom_removeEventListener$3").PeerConnection00 = function($0, $1, $2) {
  return this.removeEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$inherits(_PeerConnection00EventsImpl, _EventsImpl);
function _PeerConnection00EventsImpl() {}
$dynamic("get$x").WebKitPoint = function() { return this.x; };
$dynamic("get$y").WebKitPoint = function() { return this.y; };
$dynamic("get$width").HTMLPreElement = function() { return this.width; };
$dynamic("set$width").HTMLPreElement = function(value) { return this.width = value; };
$dynamic("get$value").HTMLProgressElement = function() { return this.value; };
$dynamic("set$value").HTMLProgressElement = function(value) { return this.value = value; };
$dynamic("get$value").RadioNodeList = function() { return this.value; };
$dynamic("set$value").RadioNodeList = function(value) { return this.value = value; };
$dynamic("get$name").RangeException = function() { return this.name; };
$dynamic("get$bottom").Rect = function() { return this.bottom; };
$dynamic("get$left").Rect = function() { return this.left; };
$dynamic("get$right").Rect = function() { return this.right; };
$dynamic("get$top").Rect = function() { return this.top; };
$dynamic("get$length").SQLResultSetRowList = function() { return this.length; };
$dynamic("get$elements").SVGElement = function() {
  return new FilteredElementList(this);
}
$dynamic("set$elements").SVGElement = function(value) {
  var elements = this.get$elements();
  elements.clear$0();
  elements.addAll(value);
}
$dynamic("set$innerHTML").SVGElement = function(svg) {
  var container = _ElementFactoryProvider.Element$tag$factory("div");
  container.set$innerHTML(("<svg version=\"1.1\">" + svg + "</svg>"));
  this.set$elements(container.get$elements().get$first().get$elements());
}
$dynamic("get$x").SVGTextPositioningElement = function() { return this.x; };
$dynamic("get$y").SVGTextPositioningElement = function() { return this.y; };
$dynamic("get$value").SVGAngle = function() { return this.value; };
$dynamic("set$value").SVGAngle = function(value) { return this.value = value; };
$dynamic("get$x").SVGCursorElement = function() { return this.x; };
$dynamic("get$y").SVGCursorElement = function() { return this.y; };
$inherits(_AttributeClassSet, _CssClassSet);
function _AttributeClassSet() {}
_AttributeClassSet.prototype._write = function(s) {
  this._html_element.get$attributes().$setindex("class", this._formatSet(s));
}
$inherits(_SVGElementInstanceEventsImpl, _EventsImpl);
function _SVGElementInstanceEventsImpl() {}
_SVGElementInstanceEventsImpl.prototype.get$blur = function() {
  return this._get("blur");
}
_SVGElementInstanceEventsImpl.prototype.get$change = function() {
  return this._get("change");
}
_SVGElementInstanceEventsImpl.prototype.get$click = function() {
  return this._get("click");
}
_SVGElementInstanceEventsImpl.prototype.get$focus = function() {
  return this._get("focus");
}
_SVGElementInstanceEventsImpl.prototype.get$keyUp = function() {
  return this._get("keyup");
}
_SVGElementInstanceEventsImpl.prototype.get$mouseDown = function() {
  return this._get("mousedown");
}
_SVGElementInstanceEventsImpl.prototype.get$mouseMove = function() {
  return this._get("mousemove");
}
_SVGElementInstanceEventsImpl.prototype.get$mouseOut = function() {
  return this._get("mouseout");
}
_SVGElementInstanceEventsImpl.prototype.get$mouseOver = function() {
  return this._get("mouseover");
}
_SVGElementInstanceEventsImpl.prototype.get$mouseUp = function() {
  return this._get("mouseup");
}
$dynamic("get$length").SVGElementInstanceList = function() { return this.length; };
$dynamic("get$name").SVGException = function() { return this.name; };
$dynamic("get$height").SVGFEBlendElement = function() { return this.height; };
$dynamic("get$width").SVGFEBlendElement = function() { return this.width; };
$dynamic("get$x").SVGFEBlendElement = function() { return this.x; };
$dynamic("get$y").SVGFEBlendElement = function() { return this.y; };
$dynamic("get$height").SVGFEColorMatrixElement = function() { return this.height; };
$dynamic("get$width").SVGFEColorMatrixElement = function() { return this.width; };
$dynamic("get$x").SVGFEColorMatrixElement = function() { return this.x; };
$dynamic("get$y").SVGFEColorMatrixElement = function() { return this.y; };
$dynamic("get$height").SVGFEComponentTransferElement = function() { return this.height; };
$dynamic("get$width").SVGFEComponentTransferElement = function() { return this.width; };
$dynamic("get$x").SVGFEComponentTransferElement = function() { return this.x; };
$dynamic("get$y").SVGFEComponentTransferElement = function() { return this.y; };
$dynamic("get$height").SVGFECompositeElement = function() { return this.height; };
$dynamic("get$width").SVGFECompositeElement = function() { return this.width; };
$dynamic("get$x").SVGFECompositeElement = function() { return this.x; };
$dynamic("get$y").SVGFECompositeElement = function() { return this.y; };
$dynamic("get$height").SVGFEConvolveMatrixElement = function() { return this.height; };
$dynamic("get$width").SVGFEConvolveMatrixElement = function() { return this.width; };
$dynamic("get$x").SVGFEConvolveMatrixElement = function() { return this.x; };
$dynamic("get$y").SVGFEConvolveMatrixElement = function() { return this.y; };
$dynamic("get$height").SVGFEDiffuseLightingElement = function() { return this.height; };
$dynamic("get$width").SVGFEDiffuseLightingElement = function() { return this.width; };
$dynamic("get$x").SVGFEDiffuseLightingElement = function() { return this.x; };
$dynamic("get$y").SVGFEDiffuseLightingElement = function() { return this.y; };
$dynamic("get$height").SVGFEDisplacementMapElement = function() { return this.height; };
$dynamic("get$width").SVGFEDisplacementMapElement = function() { return this.width; };
$dynamic("get$x").SVGFEDisplacementMapElement = function() { return this.x; };
$dynamic("get$y").SVGFEDisplacementMapElement = function() { return this.y; };
$dynamic("get$height").SVGFEDropShadowElement = function() { return this.height; };
$dynamic("get$width").SVGFEDropShadowElement = function() { return this.width; };
$dynamic("get$x").SVGFEDropShadowElement = function() { return this.x; };
$dynamic("get$y").SVGFEDropShadowElement = function() { return this.y; };
$dynamic("get$height").SVGFEFloodElement = function() { return this.height; };
$dynamic("get$width").SVGFEFloodElement = function() { return this.width; };
$dynamic("get$x").SVGFEFloodElement = function() { return this.x; };
$dynamic("get$y").SVGFEFloodElement = function() { return this.y; };
$dynamic("get$height").SVGFEGaussianBlurElement = function() { return this.height; };
$dynamic("get$width").SVGFEGaussianBlurElement = function() { return this.width; };
$dynamic("get$x").SVGFEGaussianBlurElement = function() { return this.x; };
$dynamic("get$y").SVGFEGaussianBlurElement = function() { return this.y; };
$dynamic("get$height").SVGFEImageElement = function() { return this.height; };
$dynamic("get$width").SVGFEImageElement = function() { return this.width; };
$dynamic("get$x").SVGFEImageElement = function() { return this.x; };
$dynamic("get$y").SVGFEImageElement = function() { return this.y; };
$dynamic("get$height").SVGFEMergeElement = function() { return this.height; };
$dynamic("get$width").SVGFEMergeElement = function() { return this.width; };
$dynamic("get$x").SVGFEMergeElement = function() { return this.x; };
$dynamic("get$y").SVGFEMergeElement = function() { return this.y; };
$dynamic("get$height").SVGFEMorphologyElement = function() { return this.height; };
$dynamic("get$width").SVGFEMorphologyElement = function() { return this.width; };
$dynamic("get$x").SVGFEMorphologyElement = function() { return this.x; };
$dynamic("get$y").SVGFEMorphologyElement = function() { return this.y; };
$dynamic("get$height").SVGFEOffsetElement = function() { return this.height; };
$dynamic("get$width").SVGFEOffsetElement = function() { return this.width; };
$dynamic("get$x").SVGFEOffsetElement = function() { return this.x; };
$dynamic("get$y").SVGFEOffsetElement = function() { return this.y; };
$dynamic("get$x").SVGFEPointLightElement = function() { return this.x; };
$dynamic("get$y").SVGFEPointLightElement = function() { return this.y; };
$dynamic("get$height").SVGFESpecularLightingElement = function() { return this.height; };
$dynamic("get$width").SVGFESpecularLightingElement = function() { return this.width; };
$dynamic("get$x").SVGFESpecularLightingElement = function() { return this.x; };
$dynamic("get$y").SVGFESpecularLightingElement = function() { return this.y; };
$dynamic("get$x").SVGFESpotLightElement = function() { return this.x; };
$dynamic("get$y").SVGFESpotLightElement = function() { return this.y; };
$dynamic("get$height").SVGFETileElement = function() { return this.height; };
$dynamic("get$width").SVGFETileElement = function() { return this.width; };
$dynamic("get$x").SVGFETileElement = function() { return this.x; };
$dynamic("get$y").SVGFETileElement = function() { return this.y; };
$dynamic("get$height").SVGFETurbulenceElement = function() { return this.height; };
$dynamic("get$width").SVGFETurbulenceElement = function() { return this.width; };
$dynamic("get$x").SVGFETurbulenceElement = function() { return this.x; };
$dynamic("get$y").SVGFETurbulenceElement = function() { return this.y; };
$dynamic("get$height").SVGFilterElement = function() { return this.height; };
$dynamic("get$width").SVGFilterElement = function() { return this.width; };
$dynamic("get$x").SVGFilterElement = function() { return this.x; };
$dynamic("get$y").SVGFilterElement = function() { return this.y; };
$dynamic("get$height").SVGFilterPrimitiveStandardAttributes = function() { return this.height; };
$dynamic("get$width").SVGFilterPrimitiveStandardAttributes = function() { return this.width; };
$dynamic("get$x").SVGFilterPrimitiveStandardAttributes = function() { return this.x; };
$dynamic("get$y").SVGFilterPrimitiveStandardAttributes = function() { return this.y; };
$dynamic("get$height").SVGForeignObjectElement = function() { return this.height; };
$dynamic("get$width").SVGForeignObjectElement = function() { return this.width; };
$dynamic("get$x").SVGForeignObjectElement = function() { return this.x; };
$dynamic("get$y").SVGForeignObjectElement = function() { return this.y; };
$dynamic("get$x").SVGGlyphRefElement = function() { return this.x; };
$dynamic("get$y").SVGGlyphRefElement = function() { return this.y; };
$dynamic("get$height").SVGImageElement = function() { return this.height; };
$dynamic("get$width").SVGImageElement = function() { return this.width; };
$dynamic("get$x").SVGImageElement = function() { return this.x; };
$dynamic("get$y").SVGImageElement = function() { return this.y; };
$dynamic("get$value").SVGLength = function() { return this.value; };
$dynamic("set$value").SVGLength = function(value) { return this.value = value; };
$dynamic("clear$0").SVGLengthList = function() {
  return this.clear();
};
$dynamic("get$height").SVGMaskElement = function() { return this.height; };
$dynamic("get$width").SVGMaskElement = function() { return this.width; };
$dynamic("get$x").SVGMaskElement = function() { return this.x; };
$dynamic("get$y").SVGMaskElement = function() { return this.y; };
$dynamic("get$value").SVGNumber = function() { return this.value; };
$dynamic("set$value").SVGNumber = function(value) { return this.value = value; };
$dynamic("clear$0").SVGNumberList = function() {
  return this.clear();
};
$dynamic("get$uri").SVGPaint = function() { return this.uri; };
$dynamic("get$x").SVGPathSegArcAbs = function() { return this.x; };
$dynamic("get$y").SVGPathSegArcAbs = function() { return this.y; };
$dynamic("get$x").SVGPathSegArcRel = function() { return this.x; };
$dynamic("get$y").SVGPathSegArcRel = function() { return this.y; };
$dynamic("get$x").SVGPathSegCurvetoCubicAbs = function() { return this.x; };
$dynamic("get$y").SVGPathSegCurvetoCubicAbs = function() { return this.y; };
$dynamic("get$x").SVGPathSegCurvetoCubicRel = function() { return this.x; };
$dynamic("get$y").SVGPathSegCurvetoCubicRel = function() { return this.y; };
$dynamic("get$x").SVGPathSegCurvetoCubicSmoothAbs = function() { return this.x; };
$dynamic("get$y").SVGPathSegCurvetoCubicSmoothAbs = function() { return this.y; };
$dynamic("get$x").SVGPathSegCurvetoCubicSmoothRel = function() { return this.x; };
$dynamic("get$y").SVGPathSegCurvetoCubicSmoothRel = function() { return this.y; };
$dynamic("get$x").SVGPathSegCurvetoQuadraticAbs = function() { return this.x; };
$dynamic("get$y").SVGPathSegCurvetoQuadraticAbs = function() { return this.y; };
$dynamic("get$x").SVGPathSegCurvetoQuadraticRel = function() { return this.x; };
$dynamic("get$y").SVGPathSegCurvetoQuadraticRel = function() { return this.y; };
$dynamic("get$x").SVGPathSegCurvetoQuadraticSmoothAbs = function() { return this.x; };
$dynamic("get$y").SVGPathSegCurvetoQuadraticSmoothAbs = function() { return this.y; };
$dynamic("get$x").SVGPathSegCurvetoQuadraticSmoothRel = function() { return this.x; };
$dynamic("get$y").SVGPathSegCurvetoQuadraticSmoothRel = function() { return this.y; };
$dynamic("get$x").SVGPathSegLinetoAbs = function() { return this.x; };
$dynamic("get$y").SVGPathSegLinetoAbs = function() { return this.y; };
$dynamic("get$x").SVGPathSegLinetoHorizontalAbs = function() { return this.x; };
$dynamic("get$x").SVGPathSegLinetoHorizontalRel = function() { return this.x; };
$dynamic("get$x").SVGPathSegLinetoRel = function() { return this.x; };
$dynamic("get$y").SVGPathSegLinetoRel = function() { return this.y; };
$dynamic("get$y").SVGPathSegLinetoVerticalAbs = function() { return this.y; };
$dynamic("get$y").SVGPathSegLinetoVerticalRel = function() { return this.y; };
$dynamic("clear$0").SVGPathSegList = function() {
  return this.clear();
};
$dynamic("get$x").SVGPathSegMovetoAbs = function() { return this.x; };
$dynamic("get$y").SVGPathSegMovetoAbs = function() { return this.y; };
$dynamic("get$x").SVGPathSegMovetoRel = function() { return this.x; };
$dynamic("get$y").SVGPathSegMovetoRel = function() { return this.y; };
$dynamic("get$height").SVGPatternElement = function() { return this.height; };
$dynamic("get$width").SVGPatternElement = function() { return this.width; };
$dynamic("get$x").SVGPatternElement = function() { return this.x; };
$dynamic("get$y").SVGPatternElement = function() { return this.y; };
$dynamic("get$x").SVGPoint = function() { return this.x; };
$dynamic("get$y").SVGPoint = function() { return this.y; };
$dynamic("clear$0").SVGPointList = function() {
  return this.clear();
};
$dynamic("get$height").SVGRect = function() { return this.height; };
$dynamic("set$height").SVGRect = function(value) { return this.height = value; };
$dynamic("get$width").SVGRect = function() { return this.width; };
$dynamic("set$width").SVGRect = function(value) { return this.width = value; };
$dynamic("get$x").SVGRect = function() { return this.x; };
$dynamic("get$y").SVGRect = function() { return this.y; };
$dynamic("get$height").SVGRectElement = function() { return this.height; };
$dynamic("get$width").SVGRectElement = function() { return this.width; };
$dynamic("get$x").SVGRectElement = function() { return this.x; };
$dynamic("get$y").SVGRectElement = function() { return this.y; };
$dynamic("get$height").SVGSVGElement = function() { return this.height; };
$dynamic("get$width").SVGSVGElement = function() { return this.width; };
$dynamic("get$x").SVGSVGElement = function() { return this.x; };
$dynamic("get$y").SVGSVGElement = function() { return this.y; };
$dynamic("clear$0").SVGStringList = function() {
  return this.clear();
};
$dynamic("clear$0").SVGTransformList = function() {
  return this.clear();
};
$dynamic("get$height").SVGUseElement = function() { return this.height; };
$dynamic("get$width").SVGUseElement = function() { return this.width; };
$dynamic("get$x").SVGUseElement = function() { return this.x; };
$dynamic("get$y").SVGUseElement = function() { return this.y; };
$dynamic("get$height").Screen = function() { return this.height; };
$dynamic("get$width").Screen = function() { return this.width; };
$dynamic("get$children").ScriptProfileNode = function() { return this.children; };
$dynamic("get$length").HTMLSelectElement = function() { return this.length; };
$dynamic("get$name").HTMLSelectElement = function() { return this.name; };
$dynamic("set$name").HTMLSelectElement = function(value) { return this.name = value; };
$dynamic("get$selectedIndex").HTMLSelectElement = function() { return this.selectedIndex; };
$dynamic("get$value").HTMLSelectElement = function() { return this.value; };
$dynamic("set$value").HTMLSelectElement = function(value) { return this.value = value; };
$dynamic("set$innerHTML").ShadowRoot = function(value) { return this.innerHTML = value; };
$dynamic("get$name").SharedWorkerContext = function() { return this.name; };
$inherits(_SharedWorkerContextEventsImpl, _WorkerContextEventsImpl);
function _SharedWorkerContextEventsImpl() {}
$dynamic("get$length").SpeechGrammarList = function() { return this.length; };
$dynamic("get$length").SpeechInputResultList = function() { return this.length; };
$dynamic("$dom_addEventListener$3").SpeechRecognition = function($0, $1, $2) {
  return this.addEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$dynamic("$dom_removeEventListener$3").SpeechRecognition = function($0, $1, $2) {
  return this.removeEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$dynamic("start$0").SpeechRecognition = function() {
  return this.start();
};
$inherits(_SpeechRecognitionEventsImpl, _EventsImpl);
function _SpeechRecognitionEventsImpl() {}
$dynamic("get$length").SpeechRecognitionResult = function() { return this.length; };
$dynamic("get$length").SpeechRecognitionResultList = function() { return this.length; };
$dynamic("is$Map").Storage = function(){return true};
$dynamic("containsKey").Storage = function(key) {
  return this.getItem(key) != null;
}
$dynamic("$index").Storage = function(key) {
  return this.getItem(key);
}
$dynamic("$setindex").Storage = function(key, value) {
  return this.setItem(key, value);
}
$dynamic("remove").Storage = function(key) {
  var value = this.$index(key);
  this.removeItem(key);
  return value;
}
$dynamic("clear$_").Storage = function() {
  return this.clear();
}
$dynamic("forEach").Storage = function(f) {
  for (var i = (0);
   true; i = $add$(i, (1))) {
    var key = this.key(i);
    if ($eq$(key)) return;
    f(key, this.$index(key));
  }
}
$dynamic("get$length").Storage = function() {
  return this.get$$$dom_length();
}
$dynamic("isEmpty").Storage = function() {
  return this.key((0)) == null;
}
$dynamic("get$$$dom_length").Storage = function() {
  return this.length;
}
$dynamic("clear$0").Storage = function() {
  return this.clear$_();
};
$dynamic("forEach$1").Storage = function($0) {
  return this.forEach($wrap_call$2(to$call$2($0)));
};
$dynamic("remove$1").Storage = function($0) {
  return this.remove($0);
};
$dynamic("is$List").StyleSheetList = function(){return true};
$dynamic("is$Collection").StyleSheetList = function(){return true};
$dynamic("get$length").StyleSheetList = function() { return this.length; };
$dynamic("$index").StyleSheetList = function(index) {
  return this[index];
}
$dynamic("$setindex").StyleSheetList = function(index, value) {
  $throw(new UnsupportedOperationException("Cannot assign element of immutable List."));
}
$dynamic("iterator").StyleSheetList = function() {
  return new _FixedSizeListIterator_html_StyleSheet(this);
}
$dynamic("add").StyleSheetList = function(value) {
  $throw(new UnsupportedOperationException("Cannot add to immutable List."));
}
$dynamic("addAll").StyleSheetList = function(collection) {
  $throw(new UnsupportedOperationException("Cannot add to immutable List."));
}
$dynamic("forEach").StyleSheetList = function(f) {
  return _Collections.forEach(this, f);
}
$dynamic("filter").StyleSheetList = function(f) {
  return _Collections.filter(this, [], f);
}
$dynamic("every").StyleSheetList = function(f) {
  return _Collections.every(this, f);
}
$dynamic("some").StyleSheetList = function(f) {
  return _Collections.some(this, f);
}
$dynamic("isEmpty").StyleSheetList = function() {
  return this.length == (0);
}
$dynamic("sort").StyleSheetList = function(compare) {
  $throw(new UnsupportedOperationException("Cannot sort immutable List."));
}
$dynamic("indexOf").StyleSheetList = function(element, start) {
  return _Lists.indexOf(this, element, start, this.length);
}
$dynamic("last").StyleSheetList = function() {
  return this.$index(this.length - (1));
}
$dynamic("removeLast").StyleSheetList = function() {
  $throw(new UnsupportedOperationException("Cannot removeLast on immutable List."));
}
$dynamic("removeRange").StyleSheetList = function(start, rangeLength) {
  $throw(new UnsupportedOperationException("Cannot removeRange on immutable List."));
}
$dynamic("getRange").StyleSheetList = function(start, rangeLength) {
  return _Lists.getRange(this, start, rangeLength, []);
}
$dynamic("add$1").StyleSheetList = function($0) {
  return this.add($0);
};
$dynamic("every$1").StyleSheetList = function($0) {
  return this.every($wrap_call$1(to$call$1($0)));
};
$dynamic("filter$1").StyleSheetList = function($0) {
  return this.filter($wrap_call$1(to$call$1($0)));
};
$dynamic("forEach$1").StyleSheetList = function($0) {
  return this.forEach($wrap_call$1(to$call$1($0)));
};
$dynamic("indexOf$1").StyleSheetList = function($0) {
  return this.indexOf($0, (0));
};
$dynamic("some$1").StyleSheetList = function($0) {
  return this.some($wrap_call$1(to$call$1($0)));
};
$dynamic("sort$1").StyleSheetList = function($0) {
  return this.sort($wrap_call$2(to$call$2($0)));
};
$dynamic("get$height").HTMLTableCellElement = function() { return this.height; };
$dynamic("set$height").HTMLTableCellElement = function(value) { return this.height = value; };
$dynamic("get$width").HTMLTableCellElement = function() { return this.width; };
$dynamic("set$width").HTMLTableCellElement = function(value) { return this.width = value; };
$dynamic("get$width").HTMLTableColElement = function() { return this.width; };
$dynamic("set$width").HTMLTableColElement = function(value) { return this.width = value; };
$dynamic("get$width").HTMLTableElement = function() { return this.width; };
$dynamic("set$width").HTMLTableElement = function(value) { return this.width = value; };
$dynamic("get$name").HTMLTextAreaElement = function() { return this.name; };
$dynamic("set$name").HTMLTextAreaElement = function(value) { return this.name = value; };
$dynamic("get$value").HTMLTextAreaElement = function() { return this.value; };
$dynamic("set$value").HTMLTextAreaElement = function(value) { return this.value = value; };
$dynamic("get$width").TextMetrics = function() { return this.width; };
$dynamic("$dom_addEventListener$3").TextTrack = function($0, $1, $2) {
  return this.addEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$dynamic("$dom_removeEventListener$3").TextTrack = function($0, $1, $2) {
  return this.removeEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$inherits(_TextTrackEventsImpl, _EventsImpl);
function _TextTrackEventsImpl() {}
$dynamic("set$position").TextTrackCue = function(value) { return this.position = value; };
$dynamic("get$text").TextTrackCue = function() { return this.text; };
$dynamic("set$text").TextTrackCue = function(value) { return this.text = value; };
$dynamic("$dom_addEventListener$3").TextTrackCue = function($0, $1, $2) {
  return this.addEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$dynamic("$dom_removeEventListener$3").TextTrackCue = function($0, $1, $2) {
  return this.removeEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$inherits(_TextTrackCueEventsImpl, _EventsImpl);
function _TextTrackCueEventsImpl() {}
$dynamic("get$length").TextTrackCueList = function() { return this.length; };
$dynamic("get$length").TextTrackList = function() { return this.length; };
$dynamic("$dom_addEventListener$3").TextTrackList = function($0, $1, $2) {
  return this.addEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$dynamic("$dom_removeEventListener$3").TextTrackList = function($0, $1, $2) {
  return this.removeEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$inherits(_TextTrackListEventsImpl, _EventsImpl);
function _TextTrackListEventsImpl() {}
$dynamic("get$length").TimeRanges = function() { return this.length; };
$dynamic("get$pageX").Touch = function() { return this.pageX; };
$dynamic("get$pageY").Touch = function() { return this.pageY; };
$dynamic("is$List").TouchList = function(){return true};
$dynamic("is$Collection").TouchList = function(){return true};
$dynamic("get$length").TouchList = function() { return this.length; };
$dynamic("$index").TouchList = function(index) {
  return this[index];
}
$dynamic("$setindex").TouchList = function(index, value) {
  $throw(new UnsupportedOperationException("Cannot assign element of immutable List."));
}
$dynamic("iterator").TouchList = function() {
  return new _FixedSizeListIterator_html_Touch(this);
}
$dynamic("add").TouchList = function(value) {
  $throw(new UnsupportedOperationException("Cannot add to immutable List."));
}
$dynamic("addAll").TouchList = function(collection) {
  $throw(new UnsupportedOperationException("Cannot add to immutable List."));
}
$dynamic("forEach").TouchList = function(f) {
  return _Collections.forEach(this, f);
}
$dynamic("filter").TouchList = function(f) {
  return _Collections.filter(this, [], f);
}
$dynamic("every").TouchList = function(f) {
  return _Collections.every(this, f);
}
$dynamic("some").TouchList = function(f) {
  return _Collections.some(this, f);
}
$dynamic("isEmpty").TouchList = function() {
  return this.length == (0);
}
$dynamic("sort").TouchList = function(compare) {
  $throw(new UnsupportedOperationException("Cannot sort immutable List."));
}
$dynamic("indexOf").TouchList = function(element, start) {
  return _Lists.indexOf(this, element, start, this.length);
}
$dynamic("last").TouchList = function() {
  return this.$index(this.length - (1));
}
$dynamic("removeLast").TouchList = function() {
  $throw(new UnsupportedOperationException("Cannot removeLast on immutable List."));
}
$dynamic("removeRange").TouchList = function(start, rangeLength) {
  $throw(new UnsupportedOperationException("Cannot removeRange on immutable List."));
}
$dynamic("getRange").TouchList = function(start, rangeLength) {
  return _Lists.getRange(this, start, rangeLength, []);
}
$dynamic("add$1").TouchList = function($0) {
  return this.add($0);
};
$dynamic("every$1").TouchList = function($0) {
  return this.every($wrap_call$1(to$call$1($0)));
};
$dynamic("filter$1").TouchList = function($0) {
  return this.filter($wrap_call$1(to$call$1($0)));
};
$dynamic("forEach$1").TouchList = function($0) {
  return this.forEach($wrap_call$1(to$call$1($0)));
};
$dynamic("indexOf$1").TouchList = function($0) {
  return this.indexOf($0, (0));
};
$dynamic("some$1").TouchList = function($0) {
  return this.some($wrap_call$1(to$call$1($0)));
};
$dynamic("sort$1").TouchList = function($0) {
  return this.sort($wrap_call$2(to$call$2($0)));
};
$dynamic("is$List").Uint16Array = function(){return true};
$dynamic("is$Collection").Uint16Array = function(){return true};
$dynamic("get$length").Uint16Array = function() { return this.length; };
$dynamic("$index").Uint16Array = function(index) {
  return this[index];
}
$dynamic("$setindex").Uint16Array = function(index, value) {
  this[index] = value
}
$dynamic("iterator").Uint16Array = function() {
  return new _FixedSizeListIterator_int(this);
}
$dynamic("add").Uint16Array = function(value) {
  $throw(new UnsupportedOperationException("Cannot add to immutable List."));
}
$dynamic("addAll").Uint16Array = function(collection) {
  $throw(new UnsupportedOperationException("Cannot add to immutable List."));
}
$dynamic("forEach").Uint16Array = function(f) {
  return _Collections.forEach(this, f);
}
$dynamic("filter").Uint16Array = function(f) {
  return _Collections.filter(this, [], f);
}
$dynamic("every").Uint16Array = function(f) {
  return _Collections.every(this, f);
}
$dynamic("some").Uint16Array = function(f) {
  return _Collections.some(this, f);
}
$dynamic("isEmpty").Uint16Array = function() {
  return this.length == (0);
}
$dynamic("sort").Uint16Array = function(compare) {
  $throw(new UnsupportedOperationException("Cannot sort immutable List."));
}
$dynamic("indexOf").Uint16Array = function(element, start) {
  return _Lists.indexOf(this, element, start, this.length);
}
$dynamic("last").Uint16Array = function() {
  return this.$index(this.length - (1));
}
$dynamic("removeLast").Uint16Array = function() {
  $throw(new UnsupportedOperationException("Cannot removeLast on immutable List."));
}
$dynamic("removeRange").Uint16Array = function(start, rangeLength) {
  $throw(new UnsupportedOperationException("Cannot removeRange on immutable List."));
}
$dynamic("getRange").Uint16Array = function(start, rangeLength) {
  return _Lists.getRange(this, start, rangeLength, []);
}
$dynamic("add$1").Uint16Array = function($0) {
  return this.add($0);
};
$dynamic("every$1").Uint16Array = function($0) {
  return this.every($wrap_call$1(to$call$1($0)));
};
$dynamic("filter$1").Uint16Array = function($0) {
  return this.filter($wrap_call$1(to$call$1($0)));
};
$dynamic("forEach$1").Uint16Array = function($0) {
  return this.forEach($wrap_call$1(to$call$1($0)));
};
$dynamic("indexOf$1").Uint16Array = function($0) {
  return this.indexOf($0, (0));
};
$dynamic("some$1").Uint16Array = function($0) {
  return this.some($wrap_call$1(to$call$1($0)));
};
$dynamic("sort$1").Uint16Array = function($0) {
  return this.sort($wrap_call$2(to$call$2($0)));
};
$dynamic("is$List").Uint32Array = function(){return true};
$dynamic("is$Collection").Uint32Array = function(){return true};
$dynamic("get$length").Uint32Array = function() { return this.length; };
$dynamic("$index").Uint32Array = function(index) {
  return this[index];
}
$dynamic("$setindex").Uint32Array = function(index, value) {
  this[index] = value
}
$dynamic("iterator").Uint32Array = function() {
  return new _FixedSizeListIterator_int(this);
}
$dynamic("add").Uint32Array = function(value) {
  $throw(new UnsupportedOperationException("Cannot add to immutable List."));
}
$dynamic("addAll").Uint32Array = function(collection) {
  $throw(new UnsupportedOperationException("Cannot add to immutable List."));
}
$dynamic("forEach").Uint32Array = function(f) {
  return _Collections.forEach(this, f);
}
$dynamic("filter").Uint32Array = function(f) {
  return _Collections.filter(this, [], f);
}
$dynamic("every").Uint32Array = function(f) {
  return _Collections.every(this, f);
}
$dynamic("some").Uint32Array = function(f) {
  return _Collections.some(this, f);
}
$dynamic("isEmpty").Uint32Array = function() {
  return this.length == (0);
}
$dynamic("sort").Uint32Array = function(compare) {
  $throw(new UnsupportedOperationException("Cannot sort immutable List."));
}
$dynamic("indexOf").Uint32Array = function(element, start) {
  return _Lists.indexOf(this, element, start, this.length);
}
$dynamic("last").Uint32Array = function() {
  return this.$index(this.length - (1));
}
$dynamic("removeLast").Uint32Array = function() {
  $throw(new UnsupportedOperationException("Cannot removeLast on immutable List."));
}
$dynamic("removeRange").Uint32Array = function(start, rangeLength) {
  $throw(new UnsupportedOperationException("Cannot removeRange on immutable List."));
}
$dynamic("getRange").Uint32Array = function(start, rangeLength) {
  return _Lists.getRange(this, start, rangeLength, []);
}
$dynamic("add$1").Uint32Array = function($0) {
  return this.add($0);
};
$dynamic("every$1").Uint32Array = function($0) {
  return this.every($wrap_call$1(to$call$1($0)));
};
$dynamic("filter$1").Uint32Array = function($0) {
  return this.filter($wrap_call$1(to$call$1($0)));
};
$dynamic("forEach$1").Uint32Array = function($0) {
  return this.forEach($wrap_call$1(to$call$1($0)));
};
$dynamic("indexOf$1").Uint32Array = function($0) {
  return this.indexOf($0, (0));
};
$dynamic("some$1").Uint32Array = function($0) {
  return this.some($wrap_call$1(to$call$1($0)));
};
$dynamic("sort$1").Uint32Array = function($0) {
  return this.sort($wrap_call$2(to$call$2($0)));
};
$dynamic("is$List").Uint8Array = function(){return true};
$dynamic("is$Collection").Uint8Array = function(){return true};
$dynamic("get$length").Uint8Array = function() { return this.length; };
$dynamic("$index").Uint8Array = function(index) {
  return this[index];
}
$dynamic("$setindex").Uint8Array = function(index, value) {
  this[index] = value
}
$dynamic("iterator").Uint8Array = function() {
  return new _FixedSizeListIterator_int(this);
}
$dynamic("add").Uint8Array = function(value) {
  $throw(new UnsupportedOperationException("Cannot add to immutable List."));
}
$dynamic("addAll").Uint8Array = function(collection) {
  $throw(new UnsupportedOperationException("Cannot add to immutable List."));
}
$dynamic("forEach").Uint8Array = function(f) {
  return _Collections.forEach(this, f);
}
$dynamic("filter").Uint8Array = function(f) {
  return _Collections.filter(this, [], f);
}
$dynamic("every").Uint8Array = function(f) {
  return _Collections.every(this, f);
}
$dynamic("some").Uint8Array = function(f) {
  return _Collections.some(this, f);
}
$dynamic("isEmpty").Uint8Array = function() {
  return this.length == (0);
}
$dynamic("sort").Uint8Array = function(compare) {
  $throw(new UnsupportedOperationException("Cannot sort immutable List."));
}
$dynamic("indexOf").Uint8Array = function(element, start) {
  return _Lists.indexOf(this, element, start, this.length);
}
$dynamic("last").Uint8Array = function() {
  return this.$index(this.length - (1));
}
$dynamic("removeLast").Uint8Array = function() {
  $throw(new UnsupportedOperationException("Cannot removeLast on immutable List."));
}
$dynamic("removeRange").Uint8Array = function(start, rangeLength) {
  $throw(new UnsupportedOperationException("Cannot removeRange on immutable List."));
}
$dynamic("getRange").Uint8Array = function(start, rangeLength) {
  return _Lists.getRange(this, start, rangeLength, []);
}
$dynamic("add$1").Uint8Array = function($0) {
  return this.add($0);
};
$dynamic("every$1").Uint8Array = function($0) {
  return this.every($wrap_call$1(to$call$1($0)));
};
$dynamic("filter$1").Uint8Array = function($0) {
  return this.filter($wrap_call$1(to$call$1($0)));
};
$dynamic("forEach$1").Uint8Array = function($0) {
  return this.forEach($wrap_call$1(to$call$1($0)));
};
$dynamic("indexOf$1").Uint8Array = function($0) {
  return this.indexOf($0, (0));
};
$dynamic("some$1").Uint8Array = function($0) {
  return this.some($wrap_call$1(to$call$1($0)));
};
$dynamic("sort$1").Uint8Array = function($0) {
  return this.sort($wrap_call$2(to$call$2($0)));
};
$dynamic("get$height").HTMLVideoElement = function() { return this.height; };
$dynamic("set$height").HTMLVideoElement = function(value) { return this.height = value; };
$dynamic("get$width").HTMLVideoElement = function() { return this.width; };
$dynamic("set$width").HTMLVideoElement = function(value) { return this.width = value; };
$dynamic("get$name").WebGLActiveInfo = function() { return this.name; };
$dynamic("$dom_addEventListener$3").WebSocket = function($0, $1, $2) {
  return this.addEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$dynamic("$dom_removeEventListener$3").WebSocket = function($0, $1, $2) {
  return this.removeEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$inherits(_WebSocketEventsImpl, _EventsImpl);
function _WebSocketEventsImpl() {}
$dynamic("get$x").WheelEvent = function() { return this.x; };
$dynamic("get$y").WheelEvent = function() { return this.y; };
$dynamic("get$_top").DOMWindow = function() {
  return this.top;
}
$dynamic("get$top").DOMWindow = function() {
  return _DOMWindowCrossFrameImpl._createSafe(this.get$_top());
}
$dynamic("requestLayoutFrame").DOMWindow = function(callback) {
  _addMeasurementFrameCallback(callback);
}
$dynamic("requestAnimationFrame$_").DOMWindow = function(callback) {
  this._ensureRequestAnimationFrame();
  return this.requestAnimationFrame(callback);
}
$dynamic("_ensureRequestAnimationFrame").DOMWindow = function() {
     if (this.requestAnimationFrame && this.cancelAnimationFrame) return;
     var vendors = ['ms', 'moz', 'webkit', 'o'];
     for (var i = 0; i < vendors.length && !this.requestAnimationFrame; ++i) {
       this.requestAnimationFrame = this[vendors[i] + 'RequestAnimationFrame'];
       this.cancelAnimationFrame =
           this[vendors[i]+'CancelAnimationFrame'] ||
           this[vendors[i]+'CancelRequestAnimationFrame'];
     }
     if (this.requestAnimationFrame && this.cancelAnimationFrame) return;
     this.requestAnimationFrame = function(callback) {
         return window.setTimeout(callback, 16 /* 16ms ~= 60fps */);
     };
     this.cancelAnimationFrame = function(id) { clearTimeout(id); }
}
$dynamic("get$on").DOMWindow = function() {
  return new _WindowEventsImpl(this);
}
$dynamic("get$length").DOMWindow = function() { return this.length; };
$dynamic("get$name").DOMWindow = function() { return this.name; };
$dynamic("set$name").DOMWindow = function(value) { return this.name = value; };
$dynamic("get$parent").DOMWindow = function() { return this.parent; };
$dynamic("get$blur").DOMWindow = function() {
  return this.blur.bind(this);
}
$dynamic("get$focus").DOMWindow = function() {
  return this.focus.bind(this);
}
$dynamic("$dom_addEventListener$3").DOMWindow = function($0, $1, $2) {
  return this.addEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$dynamic("$dom_removeEventListener$3").DOMWindow = function($0, $1, $2) {
  return this.removeEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$dynamic("postMessage$2").DOMWindow = function($0, $1) {
  return this.postMessage($0, $1);
};
$inherits(_WindowEventsImpl, _EventsImpl);
function _WindowEventsImpl(_ptr) {
  _EventsImpl.call(this, _ptr);
}
_WindowEventsImpl.prototype.get$blur = function() {
  return this._get("blur");
}
_WindowEventsImpl.prototype.get$change = function() {
  return this._get("change");
}
_WindowEventsImpl.prototype.get$click = function() {
  return this._get("click");
}
_WindowEventsImpl.prototype.get$focus = function() {
  return this._get("focus");
}
_WindowEventsImpl.prototype.get$keyUp = function() {
  return this._get("keyup");
}
_WindowEventsImpl.prototype.get$message = function() {
  return this._get("message");
}
_WindowEventsImpl.prototype.get$mouseDown = function() {
  return this._get("mousedown");
}
_WindowEventsImpl.prototype.get$mouseMove = function() {
  return this._get("mousemove");
}
_WindowEventsImpl.prototype.get$mouseOut = function() {
  return this._get("mouseout");
}
_WindowEventsImpl.prototype.get$mouseOver = function() {
  return this._get("mouseover");
}
_WindowEventsImpl.prototype.get$mouseUp = function() {
  return this._get("mouseup");
}
_WindowEventsImpl.prototype.get$resize = function() {
  return this._get("resize");
}
$dynamic("postMessage$2").Worker = function($0, $1) {
  return this.postMessage($0, $1);
};
$inherits(_WorkerEventsImpl, _AbstractWorkerEventsImpl);
function _WorkerEventsImpl() {}
$dynamic("$dom_addEventListener$3").XMLHttpRequest = function($0, $1, $2) {
  return this.addEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$dynamic("$dom_removeEventListener$3").XMLHttpRequest = function($0, $1, $2) {
  return this.removeEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$inherits(_XMLHttpRequestEventsImpl, _EventsImpl);
function _XMLHttpRequestEventsImpl() {}
$dynamic("get$name").XMLHttpRequestException = function() { return this.name; };
$dynamic("$dom_addEventListener$3").XMLHttpRequestUpload = function($0, $1, $2) {
  return this.addEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$dynamic("$dom_removeEventListener$3").XMLHttpRequestUpload = function($0, $1, $2) {
  return this.removeEventListener($0, $wrap_call$1(to$call$1($1)), $2);
};
$inherits(_XMLHttpRequestUploadEventsImpl, _EventsImpl);
function _XMLHttpRequestUploadEventsImpl() {}
$dynamic("get$name").XPathException = function() { return this.name; };
function _AudioElementFactoryProvider() {}
function _CSSMatrixFactoryProvider() {}
function _DOMParserFactoryProvider() {}
function _DOMURLFactoryProvider() {}
function _DeprecatedPeerConnectionFactoryProvider() {}
function _EventSourceFactoryProvider() {}
function _FileReaderFactoryProvider() {}
function _FileReaderSyncFactoryProvider() {}
function _IceCandidateFactoryProvider() {}
function _MediaControllerFactoryProvider() {}
function _MediaStreamFactoryProvider() {}
function _MessageChannelFactoryProvider() {}
function _NotificationFactoryProvider() {}
function _OptionElementFactoryProvider() {}
function _PeerConnection00FactoryProvider() {}
function _SessionDescriptionFactoryProvider() {}
function _ShadowRootFactoryProvider() {}
function _SharedWorkerFactoryProvider() {}
function _SpeechGrammarFactoryProvider() {}
function _SpeechGrammarListFactoryProvider() {}
function _SpeechRecognitionFactoryProvider() {}
function _TextTrackCueFactoryProvider() {}
function _WorkerFactoryProvider() {}
function _XMLHttpRequestFactoryProvider() {}
function _XMLSerializerFactoryProvider() {}
function _XPathEvaluatorFactoryProvider() {}
function _XSLTProcessorFactoryProvider() {}
function _Elements() {}
function _Collections() {}
_Collections.forEach = function(iterable, f) {
  for (var $$i = iterable.iterator(); $$i.hasNext(); ) {
    var e = $$i.next();
    f(e);
  }
}
_Collections.some = function(iterable, f) {
  for (var $$i = iterable.iterator(); $$i.hasNext(); ) {
    var e = $$i.next();
    if (f(e)) return true;
  }
  return false;
}
_Collections.every = function(iterable, f) {
  for (var $$i = iterable.iterator(); $$i.hasNext(); ) {
    var e = $$i.next();
    if (!f(e)) return false;
  }
  return true;
}
_Collections.filter = function(source, destination, f) {
  for (var $$i = source.iterator(); $$i.hasNext(); ) {
    var e = $$i.next();
    if (f(e)) destination.add(e);
  }
  return destination;
}
function _XMLHttpRequestUtils() {}
function _MeasurementRequest(computeValue, completer) {
  this.exception = false;
  this.computeValue = computeValue;
  this.completer = completer;
}
_MeasurementRequest.prototype.get$value = function() { return this.value; };
_MeasurementRequest.prototype.set$value = function(value) { return this.value = value; };
function _EventFactoryProvider() {}
function _MouseEventFactoryProvider() {}
function _CSSStyleDeclarationFactoryProvider() {}
function _DocumentFragmentFactoryProvider() {}
function _SVGElementFactoryProvider() {}
function _SVGSVGElementFactoryProvider() {}
function _DOMWindowCrossFrameImpl(_window) {
  this._window = _window;
}
_DOMWindowCrossFrameImpl.prototype.get$length = function() {
  return this._window.length;
}
_DOMWindowCrossFrameImpl.prototype.get$parent = function() {
  return _DOMWindowCrossFrameImpl._createSafe(this._window.parent);
}
_DOMWindowCrossFrameImpl.prototype.get$top = function() {
  return _DOMWindowCrossFrameImpl._createSafe(this._window.get$top());
}
_DOMWindowCrossFrameImpl.prototype.focus = function() {
  return this._window.focus();
}
_DOMWindowCrossFrameImpl.prototype.get$focus = function() {
  return this.focus.bind(this);
}
_DOMWindowCrossFrameImpl.prototype.blur = function() {
  return this._window.blur();
}
_DOMWindowCrossFrameImpl.prototype.get$blur = function() {
  return this.blur.bind(this);
}
_DOMWindowCrossFrameImpl.prototype.postMessage = function(message, targetOrigin, messagePorts) {
  if (messagePorts == null) {
    this._window.postMessage(message, targetOrigin);
  }
  else {
    this._window.postMessage(message, targetOrigin, messagePorts);
  }
}
_DOMWindowCrossFrameImpl._createSafe = function(w) {
  if ((null == w ? null == (get$$window()) : w === get$$window())) {
    return w;
  }
  else {
    return new _DOMWindowCrossFrameImpl(w);
  }
}
_DOMWindowCrossFrameImpl.prototype.postMessage$2 = _DOMWindowCrossFrameImpl.prototype.postMessage;
function _AudioContextFactoryProvider() {}
function _PointFactoryProvider() {}
_PointFactoryProvider.Point$factory = function(x, y) {
  return new WebKitPoint(x, y);
}
function _WebSocketFactoryProvider() {}
function _TextFactoryProvider() {}
function _IDBKeyRangeFactoryProvider() {}
function _TypedArrayFactoryProvider() {}
function Testing() {}
function _Device() {}
_Device.get$userAgent = function() {
  return get$$window().navigator.userAgent;
}
_Device.get$isFirefox = function() {
  return _Device.get$userAgent().contains("Firefox", (0));
}
function _VariableSizeListIterator() {}
_VariableSizeListIterator.prototype.hasNext = function() {
  return this._html_array.get$length() > this._html_pos;
}
_VariableSizeListIterator.prototype.next = function() {
  if (!this.hasNext()) {
    $throw(const$0001);
  }
  return this._html_array.$index(this._html_pos++);
}
$inherits(_FixedSizeListIterator, _VariableSizeListIterator);
function _FixedSizeListIterator() {}
_FixedSizeListIterator.prototype.hasNext = function() {
  return this._html_length > this._html_pos;
}
$inherits(_VariableSizeListIterator_dart_core_String, _VariableSizeListIterator);
function _VariableSizeListIterator_dart_core_String(array) {
  this._html_array = array;
  this._html_pos = (0);
}
$inherits(_FixedSizeListIterator_dart_core_String, _FixedSizeListIterator);
function _FixedSizeListIterator_dart_core_String(array) {
  this._html_length = array.get$length();
  _VariableSizeListIterator_dart_core_String.call(this, array);
}
$inherits(_VariableSizeListIterator_int, _VariableSizeListIterator);
function _VariableSizeListIterator_int(array) {
  this._html_array = array;
  this._html_pos = (0);
}
$inherits(_FixedSizeListIterator_int, _FixedSizeListIterator);
function _FixedSizeListIterator_int(array) {
  this._html_length = array.get$length();
  _VariableSizeListIterator_int.call(this, array);
}
$inherits(_VariableSizeListIterator_num, _VariableSizeListIterator);
function _VariableSizeListIterator_num(array) {
  this._html_array = array;
  this._html_pos = (0);
}
$inherits(_FixedSizeListIterator_num, _FixedSizeListIterator);
function _FixedSizeListIterator_num(array) {
  this._html_length = array.get$length();
  _VariableSizeListIterator_num.call(this, array);
}
$inherits(_VariableSizeListIterator_html_File, _VariableSizeListIterator);
function _VariableSizeListIterator_html_File(array) {
  this._html_array = array;
  this._html_pos = (0);
}
$inherits(_FixedSizeListIterator_html_File, _FixedSizeListIterator);
function _FixedSizeListIterator_html_File(array) {
  this._html_length = array.get$length();
  _VariableSizeListIterator_html_File.call(this, array);
}
$inherits(_VariableSizeListIterator_html_Node, _VariableSizeListIterator);
function _VariableSizeListIterator_html_Node(array) {
  this._html_array = array;
  this._html_pos = (0);
}
$inherits(_FixedSizeListIterator_html_Node, _FixedSizeListIterator);
function _FixedSizeListIterator_html_Node(array) {
  this._html_length = array.get$length();
  _VariableSizeListIterator_html_Node.call(this, array);
}
$inherits(_VariableSizeListIterator_html_StyleSheet, _VariableSizeListIterator);
function _VariableSizeListIterator_html_StyleSheet(array) {
  this._html_array = array;
  this._html_pos = (0);
}
$inherits(_FixedSizeListIterator_html_StyleSheet, _FixedSizeListIterator);
function _FixedSizeListIterator_html_StyleSheet(array) {
  this._html_length = array.get$length();
  _VariableSizeListIterator_html_StyleSheet.call(this, array);
}
$inherits(_VariableSizeListIterator_html_Touch, _VariableSizeListIterator);
function _VariableSizeListIterator_html_Touch(array) {
  this._html_array = array;
  this._html_pos = (0);
}
$inherits(_FixedSizeListIterator_html_Touch, _FixedSizeListIterator);
function _FixedSizeListIterator_html_Touch(array) {
  this._html_length = array.get$length();
  _VariableSizeListIterator_html_Touch.call(this, array);
}
function _Lists() {}
_Lists.indexOf = function(a, element, startIndex, endIndex) {
  if (startIndex >= a.get$length()) {
    return (-1);
  }
  if (startIndex < (0)) {
    startIndex = (0);
  }
  for (var i = startIndex;
   i < endIndex; i++) {
    if ($eq$(a.$index(i), element)) {
      return i;
    }
  }
  return (-1);
}
_Lists.getRange = function(a, start, length, accumulator) {
  if (length < (0)) $throw(new IllegalArgumentException("length"));
  if (start < (0)) $throw(new IndexOutOfRangeException(start));
  var end = start + length;
  if (end > a.get$length()) $throw(new IndexOutOfRangeException(end));
  for (var i = start;
   i < end; i++) {
    accumulator.add(a.$index(i));
  }
  return accumulator;
}
function get$$window() {
  return window;
}
function get$$document() {
  return document;
}
var _cachedBrowserPrefix;
function get$$_browserPrefix() {
  if (null == $globals._cachedBrowserPrefix) {
    if (_Device.get$isFirefox()) {
      $globals._cachedBrowserPrefix = "-moz-";
    }
    else {
      $globals._cachedBrowserPrefix = "-webkit-";
    }
  }
  return $globals._cachedBrowserPrefix;
}
var _pendingRequests;
var _pendingMeasurementFrameCallbacks;
function _maybeScheduleMeasurementFrame() {
  if ($globals._nextMeasurementFrameScheduled) return;
  $globals._nextMeasurementFrameScheduled = true;
  if ($globals._firstMeasurementRequest) {
    get$$window().get$on().get$message().add((function (e) {
      return _completeMeasurementFutures();
    })
    , false);
    $globals._firstMeasurementRequest = false;
  }
  get$$window().postMessage$2("DART-MEASURE", "*");
}
function _addMeasurementFrameCallback(callback) {
  if (null == $globals._pendingMeasurementFrameCallbacks) {
    $globals._pendingMeasurementFrameCallbacks = [];
    _maybeScheduleMeasurementFrame();
  }
  $globals._pendingMeasurementFrameCallbacks.add(callback);
}
function _createMeasurementFuture(computeValue, completer) {
  if (null == $globals._pendingRequests) {
    $globals._pendingRequests = [];
    _maybeScheduleMeasurementFrame();
  }
  $globals._pendingRequests.add(new _MeasurementRequest(computeValue, completer));
  return completer.get$future();
}
function _completeMeasurementFutures() {
  if ($eq$($globals._nextMeasurementFrameScheduled, false)) {
    return;
  }
  $globals._nextMeasurementFrameScheduled = false;
  if (null != $globals._pendingRequests) {
    var $$list = $globals._pendingRequests;
    for (var $$i = $$list.iterator(); $$i.hasNext(); ) {
      var request = $$i.next();
      try {
        request.value = request.computeValue();
      } catch (e) {
        e = _toDartException(e);
        request.value = e;
        request.exception = true;
      }
    }
  }
  var completedRequests = $globals._pendingRequests;
  var readyMeasurementFrameCallbacks = $globals._pendingMeasurementFrameCallbacks;
  $globals._pendingRequests = null;
  $globals._pendingMeasurementFrameCallbacks = null;
  if (null != completedRequests) {
    for (var $$i = completedRequests.iterator(); $$i.hasNext(); ) {
      var request = $$i.next();
      if (request.exception) {
        request.completer.completeException(request.value);
      }
      else {
        request.completer.complete(request.value);
      }
    }
  }
  if (null != readyMeasurementFrameCallbacks) {
    for (var $$i = readyMeasurementFrameCallbacks.iterator(); $$i.hasNext(); ) {
      var handler = $$i.next();
      handler();
    }
  }
}
function XML() {}
XML.parse = function(xml, withQuirks) {
  return XmlParser._parse(xml.trim(), withQuirks);
}
function XmlNode(type) {
  this.type = type;
}
XmlNode.prototype.get$parent = function() { return this.parent; };
XmlNode.prototype.set$parent = function(value) { return this.parent = value; };
XmlNode.prototype.remove = function() {
  if (this.parent == null) return;
  var i = this.parent._children.indexOf(this);
  if ($eq$(i, (-1))) {
    $throw(const$0215);
  }
  this.parent._children._removeRange(i, (1));
}
XmlNode.prototype.toString = function() {
  var s = new StringBufferImpl("");
  XmlNode._stringifyInternal(s, this, (0));
  return s.toString();
}
XmlNode._stringifyInternal = function(b, n, indent) {
  switch (n.type) {
    case const$0216:

      b.add(("\r" + XmlNode._space(indent) + "<" + n.get$dynamic().get$name()));
      if (n.get$dynamic().get$namespaces().get$length() > (0)) {
        n.get$dynamic().get$namespaces().forEach$1((function (k, v) {
          return b.add(new XmlNamespace(k, v).toString());
        })
        );
      }
      if (n.get$dynamic().get$attributes().get$length() > (0)) {
        n.get$dynamic().get$attributes().forEach$1((function (k, v) {
          return b.add(new XmlAttribute(k, v).toString());
        })
        );
      }
      b.add(">");
      if (n.get$dynamic().get$hasChildren()) {
        n.get$dynamic().get$children().forEach$1((function (e) {
          return XmlNode._stringifyInternal(b, e, indent + (3));
        })
        );
      }
      if (n.get$dynamic().get$children().get$length() > (0)) {
        b.add(("\r" + XmlNode._space(indent) + "</" + n.get$dynamic().get$name() + ">"));
      }
      else {
        b.add(("</" + n.get$dynamic().get$name() + ">"));
      }
      break;

    case const$0217:
    case const$0218:

      b.add(n.toString());
      break;

    case const$0219:

      b.add(("\r" + XmlNode._space(indent) + n));
      break;

    case const$0220:
    case const$0214:

      b.add(("\r" + n));
      break;

  }
}
XmlNode._space = function(amount) {
  var s = new StringBufferImpl("");
  for (var i = (0);
   i < amount; i++) {
    s.add(" ");
  }
  return s.toString();
}
XmlNode.prototype.remove$0 = XmlNode.prototype.remove;
$inherits(XmlElement, XmlNode);
function XmlElement(name, elements) {
  this.name = name;
  this._children = new XmlCollection_XmlNode._internal$ctor();
  this._attributes = new HashMapImplementation();
  this._namespaces = new HashMapImplementation();
  XmlNode.call(this, const$0216);
  this.addChildren(elements);
}
XmlElement.prototype.get$name = function() { return this.name; };
XmlElement.prototype.get$text = function() {
  var tNodes = this._children.filter((function (el) {
    return (el instanceof XmlText);
  })
  );
  if (tNodes.isEmpty()) return "";
  var s = new StringBufferImpl("");
  tNodes.forEach$1((function (n) {
    return s.add$1(n.get$text());
  })
  );
  return s.toString();
}
XmlElement.prototype.get$namespaces = function() {
  return this._namespaces;
}
XmlElement.prototype.get$attributes = function() {
  return this._attributes;
}
XmlElement.prototype.get$children = function() {
  return this._children;
}
XmlElement.prototype.get$namespacesInScope = function() {
  var l = [];
  this._namespaces.forEach$1((function (nname, uri) {
    l.add(new XmlNamespace(nname, uri));
  })
  );
  if (this.parent != null && (this.parent instanceof XmlElement)) {
    l.addAll(this.parent.get$namespacesInScope());
  }
  return l;
}
XmlElement.prototype.isNamespaceInScope = function(namespace) {
  return this.get$namespacesInScope().some$1((function (ns) {
    return ns.get$name() == namespace;
  })
  );
}
XmlElement.prototype.get$hasChildren = function() {
  return !this._children.isEmpty();
}
XmlElement.prototype.addChild = function(element) {
  if ((element instanceof XmlAttribute)) {
    this.get$attributes().$setindex(element.get$dynamic().get$name(), element.get$dynamic().get$value());
    return;
  }
  if ((element instanceof XmlNamespace)) {
    this.get$namespaces().$setindex(element.get$dynamic().get$name(), element.get$dynamic().get$uri());
    return;
  }
  element.parent = this;
  this._children._Xml_add(element);
}
XmlElement.prototype.addChildren = function(elements) {
  var $this = this;
  if (!elements.isEmpty()) {
    elements.forEach$1((function (e) {
      return $this.addChild(e);
    })
    );
  }
}
XmlParser._internal$ctor = function(_xml, _withQuirks) {
  this._xml = _xml;
  this._withQuirks = _withQuirks;
  this._scopes = new DoubleLinkedQueue_XmlElement();
}
XmlParser._internal$ctor.prototype = XmlParser.prototype;
function XmlParser() {}
XmlParser._parse = function(xml, withQuirks) {
  if (xml.isEmpty()) {
    $throw(const$0204);
  }
  var p = new XmlParser._internal$ctor(xml, withQuirks);
  var t = new XmlTokenizer(p._xml);
  p._parseElement(t);
  return p._Xml_root;
}
XmlParser.prototype._parseElement = function(t) {
  var tok = t.next();
  while (tok != null) {
    switch (tok.kind) {
      case (12):

        this._parseComment(t);
        break;

      case (14):

        this._parseCDATA(t);
        break;

      case (16):

        this._parsePI(t);
        break;

      case (1):

        this._parseTag(t);
        break;

      case (4):

        if (this._scopes.isEmpty()) {
          $throw(const$0225);
        }
        else {
          this._parseTextNode(t, tok._Xml_str);
          this._parseTag(t);
        }
        break;

    }
    tok = t.next();
  }
  if (!this._scopes.isEmpty()) {
    $throw(const$0226);
  }
}
XmlParser.prototype._parsePI = function(t) {
  if (this._scopes.isEmpty()) {
    $throw(const$0221);
  }
  var next = t.next();
  this._assertKind(next, (4));
  var data = next._Xml_str;
  next = t.next();
  this._assertKind(next, (17));
  this._peek().addChild(new XmlProcessingInstruction(data));
}
XmlParser.prototype._parseCDATA = function(t) {
  if (this._scopes.isEmpty()) {
    $throw(const$0213);
  }
  var next = t.next();
  this._assertKind(next, (4));
  var data = next._Xml_str;
  next = t.next();
  this._assertKind(next, (15));
  this._peek().addChild(new XmlCDATA(data));
}
XmlParser.prototype._parseComment = function(t) {
  var next = t.next();
  this._assertKind(next, (4));
  next = t.next();
  this._assertKind(next, (13));
}
XmlParser.prototype._parseTag = function(t) {
  var next = t.next();
  if (next.kind == (7)) {
    next = t.next();
    this._assertKind(next, (4));
    var name = next._Xml_str;
    next = t.next();
    if (next.kind == (6)) {
      next = t.next();
      this._assertKind(next, (4), "Namespace prefix must pair with an tag name: (<myNamespace:tagName ...)");
      name = ("" + name + ":" + next._Xml_str);
      next = t.next();
    }
    if (this._peek().name != name) {
      $throw(new XmlException.withDebug$ctor((("Expected closing tag \"" + this._peek().name + "\"") + (" but found \"" + name + "\" instead.")), this._xml, next._location));
    }
    this._assertKind(next, (2));
    this._pop();
    return;
  }
  this._assertKind(next, (4));
  var name = next._Xml_str;
  next = t.next();
  if (next.kind == (6)) {
    next = t.next();
    this._assertKind(next, (4), "Namespace prefix must pair with an tag name: (<myNamespace:tagName ...)");
    name = ("" + name + ":" + next._Xml_str);
  }
  var newElement = new XmlElement(name, const$0222);
  if (this._Xml_root == null) {
    this._Xml_root = newElement;
    this._push(this._Xml_root);
  }
  else {
    this._peek().addChild(newElement);
    this._push(newElement);
  }
  if (this._peek().name.contains(":")) {
    var ns = this._peek().name.split$_(":").$index((0));
    if (!this._peek().isNamespaceInScope(ns)) {
      $throw(new XmlException.withDebug$ctor((("Namespace \"" + ns + "\" is") + " not declared in scope."), this._xml, next._location));
    }
    next = t.next();
  }
  while (next != null) {
    switch (next.kind) {
      case (18):

        this._parseNamespace(t);
        break;

      case (4):

        this._parseAttribute(t, next._Xml_str);
        break;

      case (2):

        this._parseElement(t);
        return;

      case (7):

        next = t.next();
        this._assertKind(next, (2));
        this._pop();
        return;

      default:

        $throw(new XmlException.withDebug$ctor(("Invalid xml " + next + " found at this location."), this._xml, next._location));

    }
    next = t.next();
    if (next == null) {
      $throw(const$0224);
    }
  }
}
XmlParser.prototype._parseTextNode = function(t, text) {
  var $this = this;
  var s = new StringBufferImpl("");
  function writeStringNode() {
    var string = s.toString();
    if (!string.isEmpty()) $this._peek().addChild(new XmlText(s.toString()));
  }
  s.add(text);
  var next = t.next();
  while (next.kind != (1)) {
    switch (next.kind) {
      case (12):

        writeStringNode();
        this._parseComment(t);
        s = new StringBufferImpl("");
        break;

      case (14):

        writeStringNode();
        this._parseCDATA(t);
        s = new StringBufferImpl("");
        break;

      case (16):

        writeStringNode();
        this._parsePI(t);
        s = new StringBufferImpl("");
        break;

      default:

        s.add(next.toStringLiteral());
        break;

    }
    next = t.next();
    if (next == null) {
      $throw(const$0223);
    }
  }
  writeStringNode();
}
XmlParser.prototype._parseNamespace = function(t) {
  var $this = this;
  var el = this._peek();
  function setNamespace(name, uri) {
    el.get$namespaces().$setindex(name, uri);
  }
  var next = t.next();
  this._assertKind(next, (4), "Must declare namespace name.");
  var name = next._Xml_str;
  next = t.next();
  this._assertKind(next, (8), "Must have an = after a namespace name.");
  next = t.next();
  function quotesRequired() {
    $this._assertKind(next, (9), "Quotes are required around attribute values.");
    var s = new StringBufferImpl("");
    var qkind = next.quoteKind;
    do {
      next = t.next();
      if (next == null) {
        $throw(const$0223);
      }
      if (next.kind != (9)) {
        s.add(next.toStringLiteral());
      }
      else {
        if (next.quoteKind != qkind) {
          s.add(next.toStringLiteral());
        }
        else {
          qkind = (-1);
        }
      }
    }
    while (qkind != (-1))
    setNamespace(name, s.toString());
  }
  if (this._withQuirks) {
    if (next.kind == (4)) {
      setNamespace(name, next._Xml_str);
    }
    else if (next.kind == (9)) {
      quotesRequired();
    }
  }
  else {
    quotesRequired();
  }
}
XmlParser.prototype._parseAttribute = function(t, attributeName) {
  var $this = this;
  var el = this._peek();
  function setAttribute(name, value) {
    el.get$attributes().$setindex(name, value);
  }
  var next = t.next();
  if (next.kind == (6)) {
    next = t.next();
    this._assertKind(next, (4), "Namespace prefix must pair with an attribute name: (myNamespace:myattribute=\"...\")");
    if (!el.isNamespaceInScope(attributeName)) {
      $throw(new XmlException.withDebug$ctor((("Namespace \"" + attributeName + "\" is") + " not declared in scope."), this._xml, next._location));
    }
    attributeName = ("" + attributeName + ":" + next._Xml_str);
    next = t.next();
  }
  this._assertKind(next, (8), "Must have an = after an attribute name.");
  next = t.next();
  function quotesRequired() {
    $this._assertKind(next, (9), "Quotes are required around attribute values.");
    var s = new StringBufferImpl("");
    var qkind = next.quoteKind;
    do {
      next = t.next();
      if (next == null) {
        $throw(const$0223);
      }
      if (next.kind != (9)) {
        s.add(next.toStringLiteral());
      }
      else {
        if (next.quoteKind != qkind) {
          s.add(next.toStringLiteral());
        }
        else {
          qkind = (-1);
        }
      }
    }
    while (qkind != (-1))
    setAttribute(attributeName, s.toString());
  }
  if (this._withQuirks) {
    if (next.kind == (4)) {
      setAttribute(attributeName, next._Xml_str);
    }
    else if (next.kind == (9)) {
      quotesRequired();
    }
  }
  else {
    quotesRequired();
  }
}
XmlParser.prototype._push = function(element) {
  this._scopes.addFirst(element);
}
XmlParser.prototype._pop = function() {
  this._scopes.removeFirst();
}
XmlParser.prototype._peek = function() {
  return this._scopes.first();
}
XmlParser.prototype._assertKind = function(tok, matchID, info) {
  var match = _XmlToken._XmlToken$factory(matchID);
  var msg = ("Expected " + match + ", but found " + tok + ". " + (info == null ? "" : ("\r" + info)));
  if (tok.kind != match.kind) {
    $throw(new XmlException.withDebug$ctor(msg, this._xml, tok._location));
  }
}
function XmlTokenizer(_xml) {
  this._xml = _xml;
  this._i = (0);
  this._tq = new DoubleLinkedQueue__XmlToken();
  this._Xml_length = this._xml.length;
}
XmlTokenizer.prototype.next = function() {
  var $this = this;
  function addToQueue(token) {
    token._location = $this._i;
    $this._tq.addLast(token);
  }
  function getNextToken() {
    return $this._tq.isEmpty() ? null : $this._tq.removeFirst();
  }
  function peekUntil(chars) {
    var z = $this._i;
    while (z < $this._Xml_length && $eq$(chars.indexOf$1($this._xml.charCodeAt(z)), (-1))) {
      z++;
    }
    return $this._xml.charCodeAt(z);
  }
  function matchWord(word) {
    var z = $this._i;
    for (var ii = (0);
     ii < word.length; ii++) {
      if ($this._xml.charCodeAt(z) != word.charCodeAt(ii)) return (-1);
      z++;
    }
    return z - (1);
  }
  function nextNonWhitespace(from) {
    while (XmlTokenizer.isWhitespace($this._xml.charCodeAt(from))) {
      from++;
    }
    return from;
  }
  function nextWhitespace(from) {
    while (!XmlTokenizer.isWhitespace($this._xml.charCodeAt(from))) {
      from++;
    }
    return from;
  }
  if (!this._tq.isEmpty()) return getNextToken();
  while (this._i < this._Xml_length && XmlTokenizer.isWhitespace(this._xml.charCodeAt(this._i))) {
    this._i++;
  }
  if (this._i == this._Xml_length) return null;
  var char = this._xml.charCodeAt(this._i);
  switch (char) {
    case (33):

      this._i++;
      addToQueue(_XmlToken._XmlToken$factory((5)));
      break;

    case (58):

      this._i++;
      addToQueue(_XmlToken._XmlToken$factory((6)));
      break;

    case (47):

      this._i++;
      addToQueue(_XmlToken._XmlToken$factory((7)));
      break;

    case (60):

      var specialTags = const$0205;
      var found = "";
      var endIndex = (-1);
      for (var $$i = specialTags.iterator(); $$i.hasNext(); ) {
        var tag = $$i.next();
        var m = matchWord(tag);
        if ($ne$(m, (-1))) {
          found = tag;
          endIndex = m;
          break;
        }
      }
      switch (found) {
        case specialTags.$index((0)):

          addToQueue(_XmlToken._XmlToken$factory((12)));
          this._i = $add$(endIndex, (1));
          var endComment = this._xml.indexOf("-->", this._i);
          var nestedTest = this._xml.indexOf("<!--", this._i);
          if ($eq$(endComment, (-1))) {
            $throw(const$0206);
          }
          if ($ne$(nestedTest, (-1)) && $lt$(nestedTest, endComment)) {
            $throw(const$0207);
          }
          addToQueue(_XmlToken._XmlToken$string$factory(this._xml.substring(this._i, endComment)));
          addToQueue(_XmlToken._XmlToken$factory((13)));
          this._i = $add$(endComment, (3));
          break;

        case specialTags.$index((1)):

          addToQueue(_XmlToken._XmlToken$factory((14)));
          this._i = $add$(endIndex, (1));
          var endCDATA = this._xml.indexOf("]]>", this._i);
          var nestedTest = this._xml.indexOf("<![CDATA[", this._i);
          if ($eq$(endCDATA, (-1))) {
            $throw(const$0208);
          }
          if ($ne$(nestedTest, (-1)) && $lt$(nestedTest, endCDATA)) {
            $throw(const$0209);
          }
          addToQueue(_XmlToken._XmlToken$string$factory(this._xml.substring(this._i, endCDATA).trim()));
          addToQueue(_XmlToken._XmlToken$factory((15)));
          this._i = $add$(endCDATA, (3));
          break;

        case specialTags.$index((2)):

          addToQueue(_XmlToken._XmlToken$factory((16)));
          this._i = $add$(endIndex, (1));
          var endPI = this._xml.indexOf("?>", this._i);
          var nestedTest = this._xml.indexOf("<?", this._i);
          if ($eq$(endPI, (-1))) {
            $throw(const$0210);
          }
          if ($ne$(nestedTest, (-1)) && $lt$(nestedTest, endPI)) {
            $throw(const$0211);
          }
          addToQueue(_XmlToken._XmlToken$string$factory(this._xml.substring(this._i, endPI).trim()));
          addToQueue(_XmlToken._XmlToken$factory((17)));
          this._i = $add$(endPI, (2));
          break;

        case specialTags.$index((3)):

          addToQueue(_XmlToken._XmlToken$factory((1)));
          addToQueue(_XmlToken._XmlToken$factory((7)));
          this._i = $add$(endIndex, (1));
          break;

        default:

          this._i++;
          addToQueue(_XmlToken._XmlToken$factory((1)));
          this._i = nextNonWhitespace(this._i);
          var c = peekUntil([(32), (58), (62)]);
          if (c == (32)) {
            var _ii = this._i;
            this._i = nextWhitespace(_ii);
            addToQueue(_XmlToken._XmlToken$string$factory(this._xml.substring(_ii, this._i)));
            this._i = nextNonWhitespace(this._i);
          }
          else if (c == (58)) {
            var _ii = this._i;
            this._i = this._xml.indexOf(":", _ii) + (1);
            addToQueue(_XmlToken._XmlToken$string$factory(this._xml.substring(_ii, this._i - (1))));
            addToQueue(_XmlToken._XmlToken$factory((6)));
            _ii = nextWhitespace(this._i);
            addToQueue(_XmlToken._XmlToken$string$factory(this._xml.substring(this._i, _ii)));
            this._i = nextNonWhitespace(_ii);
          }
          break;

      }
      break;

    case (62):

      this._i++;
      addToQueue(_XmlToken._XmlToken$factory((2)));
      break;

    case (61):

      this._i++;
      addToQueue(_XmlToken._XmlToken$factory((8)));
      break;

    case (34):

      this._i++;
      addToQueue(_XmlToken._XmlToken$quote$factory((34)));
      break;

    case (39):

      this._i++;
      addToQueue(_XmlToken._XmlToken$quote$factory((39)));
      break;

    default:

      var m = matchWord("xmlns:");
      if ($ne$(m, (-1))) {
        this._i = $add$(m, (1));
        addToQueue(_XmlToken._XmlToken$factory((18)));
      }
      else {
        var s = new StringBufferImpl("");
        while (this._i < this._Xml_length && !XmlTokenizer.isReserved(this._xml.charCodeAt(this._i))) {
          s.add(this._xml.substring(this._i, this._i + (1)));
          this._i++;
        }
        addToQueue(_XmlToken._XmlToken$string$factory(s.toString().trim()));
      }
      break;

  }
  return getNextToken();
}
XmlTokenizer.isReserved = function(c) {
  return $gt$(const$0212.indexOf$1(c), (-1));
}
XmlTokenizer.isWhitespace = function(c) {
  return c == (32) || c == (9) || c == (10) || c == (13);
}
_XmlToken._internal$ctor = function(kind, _str, quoteKind) {
  this.kind = kind;
  this._Xml_str = _str;
  this.quoteKind = quoteKind;
}
_XmlToken._internal$ctor.prototype = _XmlToken.prototype;
function _XmlToken() {}
_XmlToken._XmlToken$string$factory = function(s) {
  return new _XmlToken._internal$ctor((4), s, (-1));
}
_XmlToken._XmlToken$quote$factory = function(quoteKind) {
  return new _XmlToken._internal$ctor((9), "", quoteKind);
}
_XmlToken._XmlToken$factory = function(kind) {
  return new _XmlToken._internal$ctor(kind, "", (-1));
}
_XmlToken.prototype.toString = function() {
  switch (this.kind) {
    case (16):

      return "(<?)";

    case (17):

      return "(?>)";

    case (11):

      return "(-)";

    case (1):

      return "(<)";

    case (2):

      return "(>)";

    case (3):

      return "(?)";

    case (4):

      return ("STRING(" + this._Xml_str + ")");

    case (5):

      return "(!)";

    case (6):

      return "(:)";

    case (7):

      return "(/)";

    case (8):

      return "(=)";

    case (9):

      return "(\")";

    case (12):

      return "(<!--)";

    case (13):

      return "(-->)";

    case (14):

      return "(<![CDATA[)";

    case (15):

      return "(]]>)";

    case (18):

      return "xmlns:";

    case (10):

      return "INVALID()";

  }
}
_XmlToken.prototype.toStringLiteral = function() {
  switch (this.kind) {
    case (18):

      return "xmlns:";

    case (2):

      return ">";

    case (1):

      return "<";

    case (3):

      return "?";

    case (4):

      return this._Xml_str;

    case (5):

      return "!";

    case (6):

      return ":";

    case (7):

      return "/";

    case (8):

      return "=";

    case (9):

      return this.quoteKind == (34) ? "\"" : "'";

    case (10):

      return "INVALID()";

    default:

      $throw(new XmlException(("String literal unavailable for " + this)));

  }
}
function XmlNodeType(_type) {
  this._Xml_type = _type;
}
XmlNodeType.prototype.toString = function() {
  return this._Xml_type;
}
$inherits(XmlText, XmlNode);
function XmlText(text) {
  this.text = text;
  XmlNode.call(this, const$0219);
}
XmlText.prototype.get$text = function() { return this.text; };
XmlText.prototype.toString = function() {
  return this.text;
}
$inherits(XmlAttribute, XmlNode);
function XmlAttribute(name, value) {
  this.name = name;
  this.value = value;
  XmlNode.call(this, const$0218);
}
XmlAttribute.prototype.get$name = function() { return this.name; };
XmlAttribute.prototype.get$value = function() { return this.value; };
XmlAttribute.prototype.toString = function() {
  return this.value.contains("\"") ? (" " + this.name + "='" + this.value + "'") : (" " + this.name + "=\"" + this.value + "\"");
}
function XmlException(msg) {
  this.msg = msg;
  this.debugXml = "";
  this.errorLocation = (0);
}
XmlException.withDebug$ctor = function(msg, debugXml, errorLocation) {
  this.msg = msg;
  this.debugXml = debugXml;
  this.errorLocation = errorLocation;
}
XmlException.withDebug$ctor.prototype = XmlException.prototype;
XmlException.prototype.is$Exception = function(){return true};
XmlException.prototype.toString = function() {
  if (this.debugXml == "") return ("Xml Exception: " + this.msg);
  var s = new StringBufferImpl("");
  s.add(("Xml Exception: " + this.msg));
  s.add("\r");
  var bLoc = (this.errorLocation < (41)) ? (0) : this.errorLocation - (40);
  var aLoc = (this.errorLocation > this.debugXml.length - (41)) ? this.debugXml.length - (1) : this.errorLocation + (40);
  s.add(this.debugXml.substring(bLoc, aLoc));
  return s.toString();
}
$inherits(XmlCDATA, XmlNode);
function XmlCDATA(text) {
  this.text = text;
  XmlNode.call(this, const$0214);
}
XmlCDATA.prototype.get$text = function() { return this.text; };
XmlCDATA.prototype.toString = function() {
  return ("<![CDATA[\r" + this.text + "\r]]>");
}
$inherits(XmlProcessingInstruction, XmlNode);
function XmlProcessingInstruction(text) {
  this.text = text;
  XmlNode.call(this, const$0220);
}
XmlProcessingInstruction.prototype.get$text = function() { return this.text; };
XmlProcessingInstruction.prototype.toString = function() {
  return ("<?\r" + this.text + "\r?>");
}
XmlCollection._from$ctor = function(list) {
  this._collection = new Array();
  this._collection.addAll(list);
}
XmlCollection._from$ctor.prototype = XmlCollection.prototype;
function XmlCollection() {}
XmlCollection.prototype.is$Collection = function(){return true};
XmlCollection.prototype.indexOf = function(element) {
  return this._collection.indexOf$1(element);
}
XmlCollection.prototype.$index = function(index) {
  return this._collection.$index(index);
}
XmlCollection.prototype._Xml_add = function(element) {
  return this._collection.add(element);
}
XmlCollection.prototype._removeRange = function(start, length) {
  return this._collection.removeRange(start, length);
}
XmlCollection.prototype.forEach = function(f) {
  return this._collection.forEach$1(f);
}
XmlCollection.prototype.filter = function(f) {
  return new XmlCollection._from$ctor(this._collection.filter$1(f));
}
XmlCollection.prototype.every = function(f) {
  return this._collection.every$1(f);
}
XmlCollection.prototype.some = function(f) {
  return this._collection.some$1(f);
}
XmlCollection.prototype.isEmpty = function() {
  return this._collection.isEmpty();
}
XmlCollection.prototype.get$length = function() {
  return this._collection.get$length();
}
XmlCollection.prototype.iterator = function() {
  return this._collection.iterator();
}
XmlCollection.prototype.toString = function() {
  return this._collection.toString();
}
XmlCollection.prototype.every$1 = function($0) {
  return this.every(to$call$1($0));
};
XmlCollection.prototype.filter$1 = function($0) {
  return this.filter(to$call$1($0));
};
XmlCollection.prototype.forEach$1 = function($0) {
  return this.forEach(to$call$1($0));
};
XmlCollection.prototype.indexOf$1 = XmlCollection.prototype.indexOf;
XmlCollection.prototype.some$1 = function($0) {
  return this.some(to$call$1($0));
};
$inherits(XmlCollection_XmlNode, XmlCollection);
XmlCollection_XmlNode._internal$ctor = function() {
  this._collection = new Array();
}
XmlCollection_XmlNode._internal$ctor.prototype = XmlCollection_XmlNode.prototype;
function XmlCollection_XmlNode() {}
XmlCollection_XmlNode.prototype.every$1 = function($0) {
  return this.every(to$call$1($0));
};
XmlCollection_XmlNode.prototype.forEach$1 = function($0) {
  return this.forEach(to$call$1($0));
};
XmlCollection_XmlNode.prototype.indexOf$1 = XmlCollection_XmlNode.prototype.indexOf;
XmlCollection_XmlNode.prototype.some$1 = function($0) {
  return this.some(to$call$1($0));
};
$inherits(XmlNamespace, XmlNode);
function XmlNamespace(name, uri) {
  this.name = name;
  this.uri = uri;
  XmlNode.call(this, const$0217);
}
XmlNamespace.prototype.get$name = function() { return this.name; };
XmlNamespace.prototype.get$uri = function() { return this.uri; };
XmlNamespace.prototype.toString = function() {
  return this.uri.contains("\"") ? (" xmlns:" + this.name + "='" + this.uri + "'") : (" xmlns:" + this.name + "=\"" + this.uri + "\"");
}
function HashableObject() {
  var $0;
  this._assignedHash = ($globals.HashableObject__hashNum = ($0 = $globals.HashableObject__hashNum) + (1), $0);
}
HashableObject.prototype.hashCode = function() {
  return this._assignedHash;
}
HashableObject.prototype.toString = function() {
  return this.get$type();
}
$inherits(BuckshotObject, HashableObject);
function BuckshotObject() {
  this._stateBag = new HashMapImplementation_dart_core_String$Dynamic();
  this._bindings = new Array();
  this._frameworkProperties = new HashSetImplementation_FrameworkProperty();
  HashableObject.call(this);
}
BuckshotObject.prototype.get$_stateBag = function() { return this._stateBag; };
BuckshotObject.prototype.get$isContainer = function() {
  return !!(this && this.is$IFrameworkContainer());
}
BuckshotObject.prototype.hasProperty = function(propertyName) {
  return this._frameworkProperties.some$1((function (p) {
    return p.propertyName.toLowerCase() == propertyName.toLowerCase();
  })
  );
}
BuckshotObject.prototype._getPropertyByName = function(propertyName) {
  var result = this._frameworkProperties.filter$1((function (p) {
    return p.propertyName.toLowerCase() == propertyName.toLowerCase();
  })
  );
  if (result.get$length() == (0)) return null;
  return result.iterator().next();
}
BuckshotObject.prototype.resolveProperty = function(propertyNameChain) {
  return BuckshotObject._resolvePropertyInternal(this, propertyNameChain.trim().split$_("."));
}
BuckshotObject.prototype.resolveFirstProperty = function(propertyNameChain) {
  return BuckshotObject._resolvePropertyInternal(this, [propertyNameChain.trim().split$_(".").$index((0))]);
}
BuckshotObject._resolvePropertyInternal = function(currentObject, propertyChain) {
  var prop = currentObject._getPropertyByName(propertyChain.$index((0)));
  if (prop == null) {
    db(("err: " + propertyChain.$index((0))));
    $throw(new FrameworkPropertyResolutionException(("Unable to resolve FrameworkProperty: \"" + propertyChain.$index((0)) + "\".")));
  }
  if (!((prop.get$value() instanceof BuckshotObject)) && propertyChain.get$length() > (1)) $throw(const$0053);
  if (!((prop.get$value() instanceof BuckshotObject)) || propertyChain.get$length() == (1)) return prop;
  return BuckshotObject._resolvePropertyInternal(prop.get$value(), propertyChain.getRange((1), propertyChain.get$length() - (1)));
}
BuckshotObject.prototype.get$type = function() {
  return "BuckshotObject";
}
$inherits(FrameworkObject, BuckshotObject);
function FrameworkObject() {
  this._watchingMeasurement = false;
  this._isLoaded = false;
  this._dataContextUpdated = false;
  this.lateBindings = new HashMapImplementation_FrameworkProperty$BindingData();
  this.loaded = new _FrameworkEventImplementation_EventArgs();
  this.unloaded = new _FrameworkEventImplementation_EventArgs();
  this.attachedPropertyChanged = new _FrameworkEventImplementation_AttachedPropertyChangedEventArgs();
  BuckshotObject.call(this);
  this.applyVisualTemplate();
  if (this._component == null) this.CreateElement();
  _Dom.appendBuckshotClass(this._component, "frameworkobject");
  this._initFrameworkObjectProperties();
  this._initFrameworkObjectEvents();
}
FrameworkObject.prototype.get$_component = function() { return this._component; };
FrameworkObject.prototype.get$_isLoaded = function() { return this._isLoaded; };
FrameworkObject.prototype.get$lateBindings = function() { return this.lateBindings; };
FrameworkObject.prototype.get$rawElement = function() {
  return this._component;
}
FrameworkObject.prototype.get$attachedPropertyChanged = function() { return this.attachedPropertyChanged; };
FrameworkObject.prototype.makeMe = function() {
  return new FrameworkObject();
}
FrameworkObject.prototype.get$isContainer = function() {
  return this._stateBag.containsKey("CONTAINER_CONTEXT");
}
FrameworkObject.prototype._initFrameworkObjectProperties = function() {
  var $this = this;
  this.nameProperty = new FrameworkProperty(this, "name", (function (value) {
    if ($ne$($this.nameProperty.get$previousValue())) {
      $throw(new BuckshotException((("Attempted to assign name \"" + value + "\"") + (" to element that already has a name \"" + $this.nameProperty.get$previousValue() + "\"") + " assigned.")));
    }
    if (value != null) {
      get$$buckshot().namedElements.$setindex(value, $this);
      if ($this._component != null) $this._component.get$attributes().$setindex("ID", value);
    }
  })
  );
  this.dataContextProperty = new FrameworkProperty(this, "dataContext", (function (value) {

  })
  );
}
FrameworkObject.prototype._startWatchMeasurement = function() {
  var $this = this;
  this._watchingMeasurement = true;
  function watchIt(time) {
    if (!$this._watchingMeasurement) return;
    $this._component.get$rect().then((function (m) {
      $this.mostRecentMeasurement = m;
      if ($this._previousMeasurement == null) {
        $this.measurementChanged.invoke($this, new MeasurementChangedEventArgs(m, m));
      }
      else {
        if ($ne$($this._previousMeasurement.get$bounding().get$left(), m.get$bounding().get$left()) || $ne$($this._previousMeasurement.get$bounding().get$top(), m.get$bounding().get$top()) || $ne$($this._previousMeasurement.get$bounding().get$width(), m.get$bounding().get$width()) || $ne$($this._previousMeasurement.get$bounding().get$height(), m.get$bounding().get$height()) || $this._previousMeasurement.client.left != m.client.left || $this._previousMeasurement.client.top != m.client.top || $this._previousMeasurement.client.width != m.client.width || $this._previousMeasurement.client.height != m.client.height || $this._previousMeasurement.offset.left != m.offset.left || $this._previousMeasurement.offset.top != m.offset.top || $this._previousMeasurement.offset.width != m.offset.width || $this._previousMeasurement.offset.height != m.offset.height || $this._previousMeasurement.scroll.left != m.scroll.left || $this._previousMeasurement.scroll.top != m.scroll.top || $this._previousMeasurement.scroll.width != m.scroll.width || $this._previousMeasurement.scroll.height != m.scroll.height) {
          $this.measurementChanged.invoke($this, new MeasurementChangedEventArgs($this._previousMeasurement, m));
        }
      }
      $this._previousMeasurement = m;
      $this._animationFrameID = get$$window().requestAnimationFrame$_($wrap_call$1(watchIt));
    })
    );
  }
  this._animationFrameID = get$$window().requestAnimationFrame$_($wrap_call$1(watchIt));
}
FrameworkObject.prototype._stopWatchMeasurement = function() {
  if (this._animationFrameID != null) get$$window().webkitCancelAnimationFrame(this._animationFrameID);
  this._previousMeasurement = null;
  this._watchingMeasurement = false;
}
FrameworkObject.prototype._initFrameworkObjectEvents = function() {
  var $this = this;
  this.measurementChanged = new _FrameworkEventImplementation_MeasurementChangedEventArgs._watchFirstAndLast$ctor((function () {
    return $this._startWatchMeasurement();
  })
  , (function () {
    return $this._stopWatchMeasurement();
  })
  );
}
FrameworkObject.prototype.addToLayoutTree = function(parentElement) {
  parentElement._component.get$elements().add(this._component);
  this.set$parent(parentElement);
  if (!parentElement._isLoaded) return;
  this._onAddedToDOM();
}
FrameworkObject.prototype._onAddedToDOM = function() {
  var $0;
  this.updateDataContext();
  this._isLoaded = true;
  this.get$parent().updateLayout();
  this.onLoaded();
  this.loaded.invoke(this, new EventArgs());
  if (!(this && this.is$IFrameworkContainer())) return;
  if (!!(($0 = this.get$dynamic().get$content()) && $0.is$List())) {
    this.get$dynamic().get$content().forEach$1((function (child) {
      return child._onAddedToDOM();
    })
    );
  }
  else if ((this.get$dynamic().get$content() instanceof FrameworkElement)) {
    this.get$dynamic().get$content()._onAddedToDOM();
  }
}
FrameworkObject.prototype.onLoaded = function() {

}
FrameworkObject.prototype.onUnloaded = function() {

}
FrameworkObject.prototype.updateDataContext = function() {
  if (this._dataContextUpdated) return;
  this._dataContextUpdated = true;
  var dc = this.resolveDataContext();
  if ($eq$(dc)) return;
  this.lateBindings.forEach$1((function (p, bd) {
    if (bd.dataContextPath == "") {
      new _BindingImplementation(dc, p, const$0016, const$0017);
    }
    else {
      if (!((dc.get$value() instanceof BuckshotObject))) $throw(new BuckshotException(("Datacontext binding attempted to" + (" resolve properties '" + bd.dataContextPath + "'") + " on non-BuckshotObject type.")));
      if (bd.converter != null) new _BindingImplementation(dc.get$value().resolveProperty(bd.dataContextPath), p, bd.bindingMode, bd.converter);
      else new _BindingImplementation(dc.get$value().resolveProperty(bd.dataContextPath), p, bd.bindingMode, const$0017);
    }
  })
  );
}
FrameworkObject.prototype.removeFromLayoutTree = function() {
  this._component.remove();
  var p = this.get$parent();
  this.set$parent(null);
  if (!p.get$_isLoaded()) return;
  this._onRemoveFromDOM();
}
FrameworkObject.prototype._onRemoveFromDOM = function() {
  var $0;
  this._isLoaded = false;
  this.onUnloaded();
  this.unloaded.invoke(this, new EventArgs());
  if (!(this && this.is$IFrameworkContainer())) return;
  if (!!(($0 = this.get$dynamic().get$content()) && $0.is$List())) {
    this.get$dynamic().get$content().forEach$1((function (child) {
      return child._onRemoveFromDOM();
    })
    );
  }
  else if ((this.get$dynamic().get$content() instanceof FrameworkElement)) {
    this.get$dynamic().get$content()._onRemoveFromDOM();
  }
}
FrameworkObject.prototype.updateMeasurement = function() {
  var $this = this;
  this._component.get$rect().then((function (r) {
    $this.mostRecentMeasurement = r;
  })
  );
}
FrameworkObject.prototype.resolveDataContext = function() {
  if ($ne$(this.get$dataContext())) return this.dataContextProperty;
  if (this.get$parent() == null) return null;
  return this.get$parent().resolveDataContext();
}
FrameworkObject.prototype.get$name = function() {
  return getValue(this.nameProperty);
}
FrameworkObject.prototype.set$name = function(value) {
  return setValue(this.nameProperty, value);
}
FrameworkObject.prototype.get$parent = function() {
  return this._parent;
}
FrameworkObject.prototype.set$parent = function(value) {
  var $0;
  return (this._parent = ($0 = value), $0);
}
FrameworkObject.prototype.get$dataContext = function() {
  return getValue(this.dataContextProperty);
}
FrameworkObject.prototype.set$dataContext = function(value) {
  return setValue(this.dataContextProperty, value);
}
FrameworkObject.prototype.applyVisualTemplate = function() {
  this.CreateElement();
}
FrameworkObject.setAttachedValue = function(element, property, value) {
  var aDepInfo = get$$buckshot()._attachedProperties.$index(property);
  if ($eq$(aDepInfo.$index(element), value)) return;
  var oldValue = aDepInfo.$index(element);
  aDepInfo.$setindex(element, value);
  element.attachedPropertyChanged.invoke(element, new AttachedPropertyChangedEventArgs(element, property, value));
  property.propertyChanging.invoke(property, new PropertyChangingEventArgs(oldValue, value));
}
FrameworkObject.getAttachedValue = function(element, property) {
  if (property == null) return null;
  var aDepInfo = get$$buckshot()._attachedProperties.$index(property);
  return (aDepInfo.containsKey(element)) ? aDepInfo.$index(element) : null;
}
FrameworkObject.prototype.CreateElement = function() {
  this._component = _Dom.createByTag("div");
}
FrameworkObject.prototype.updateLayout = function() {

}
FrameworkObject.prototype.get$type = function() {
  return "FrameworkObject";
}
$inherits(ViewModelBase, FrameworkObject);
function ViewModelBase() {
  FrameworkObject.call(this);
}
$inherits(_BindingImplementation, BuckshotObject);
function _BindingImplementation(_fromProperty, _toProperty, bindingMode, converter) {
  var $0;
  this.bindingSet = false;
  this._fromProperty = _fromProperty;
  this._toProperty = _toProperty;
  this.bindingMode = bindingMode;
  this.converter = converter;
  BuckshotObject.call(this);
  if (this._fromProperty == null || this._toProperty == null) $throw(const$0012);
  if ((($0 = this._fromProperty) == null ? null == (this._toProperty) : $0 === this._toProperty)) $throw(const$0012);
  this._registerBinding();
}
_BindingImplementation.loose$ctor = function(_fromProperty, _toProperty, bindingMode, converter) {
  var $0;
  this.bindingSet = false;
  this._fromProperty = _fromProperty;
  this._toProperty = _toProperty;
  this.bindingMode = bindingMode;
  this.converter = converter;
  BuckshotObject.call(this);
  if (this._fromProperty == null || this._toProperty == null) return;
  if ((($0 = this._fromProperty) == null ? null == (this._toProperty) : $0 === this._toProperty)) $throw(const$0012);
  this._registerBinding();
}
_BindingImplementation.loose$ctor.prototype = _BindingImplementation.prototype;
_BindingImplementation.prototype.get$bindingMode = function() { return this.bindingMode; };
_BindingImplementation.prototype.set$bindingMode = function(value) { return this.bindingMode = value; };
_BindingImplementation.prototype.get$converter = function() { return this.converter; };
_BindingImplementation.prototype.get$_fromProperty = function() { return this._fromProperty; };
_BindingImplementation.prototype.get$_toProperty = function() { return this._toProperty; };
_BindingImplementation.prototype.makeMe = function() {
  return null;
}
_BindingImplementation.prototype._registerBinding = function() {
  this.bindingSet = true;
  if ($eq$(this.bindingMode, const$0015)) {
    this._fromProperty.sourceObject._bindings.add(this);
    var other = new _BindingImplementation.loose$ctor(this._toProperty, this._fromProperty, const$0016, const$0017);
    this._twoWayPartner = other;
    other._twoWayPartner = this;
    this._toProperty.sourceObject._bindings.last().get$dynamic().set$bindingMode(const$0015);
  }
  else {
    this._fromProperty.sourceObject._bindings.add(this);
    _BindingImplementation._executeBindingsFor(this._fromProperty);
  }
}
_BindingImplementation.prototype.unregister = function() {
  if (!this.bindingSet) return;
  this.bindingSet = false;
  var i = this._fromProperty.sourceObject._bindings.indexOf(this, (0));
  if (i == (-1)) $throw(const$0012);
  this._fromProperty.sourceObject._bindings.removeRange(i, (1));
  if ($ne$(this.bindingMode, const$0015)) return;
  this._twoWayPartner.bindingSet = false;
  var pi = this._twoWayPartner._fromProperty.sourceObject._bindings.indexOf(this._twoWayPartner, (0));
  if (pi == (-1)) $throw(const$0012);
  this._twoWayPartner._fromProperty.sourceObject._bindings.removeRange(pi, (1));
}
_BindingImplementation._executeBindingsFor = function(property) {
  var $$list = property.sourceObject._bindings;
  for (var $$i = $$list.iterator(); $$i.hasNext(); ) {
    var binding = $$i.next();
    setValue(binding.get$_toProperty(), binding.get$converter().convert$1(getValue(binding.get$_fromProperty())));
    if ($eq$(binding.get$bindingMode(), const$0013)) binding.unregister$0();
  }
}
_BindingImplementation.prototype.get$type = function() {
  return "Binding";
}
_BindingImplementation.prototype.unregister$0 = _BindingImplementation.prototype.unregister;
function _DefaultConverter() {

}
_DefaultConverter.prototype.is$IValueConverter = function(){return true};
_DefaultConverter.prototype.convert = function(value, parameter) {
  return value;
}
_DefaultConverter.prototype.convert$1 = _DefaultConverter.prototype.convert;
function BindingMode(_val) {
  this._val = _val;
}
BindingMode.prototype.toString = function() {
  switch (this._val) {
    case (1):

      return "OneWay";

    case (2):

      return "TwoWay";

    case (3):

      return "OneTime";

    default:

      return "";

  }
}
function BindingData(dataContextPath, converter, bindingMode) {
  this.dataContextPath = dataContextPath;
  this.converter = converter;
  this.bindingMode = bindingMode;
}
BindingData.prototype.get$converter = function() { return this.converter; };
BindingData.prototype.get$bindingMode = function() { return this.bindingMode; };
$inherits(_FrameworkEventImplementation, BuckshotObject);
function _FrameworkEventImplementation() {
  this._handlers = new Array();
  this._gotFirstSubscriberCallback = null;
  this._lostLastSubscriberCallback = null;
  BuckshotObject.call(this);
}
_FrameworkEventImplementation.prototype.makeMe = function() {
  return null;
}
_FrameworkEventImplementation.prototype.get$hasHandlers = function() {
  return !this._handlers.isEmpty();
}
_FrameworkEventImplementation.prototype.register = function(handler) {
  var hr = new EventHandlerReference(to$call$2(handler));
  this._handlers.add(hr);
  if (this._gotFirstSubscriberCallback != null && this._handlers.get$length() == (1)) {
    this._gotFirstSubscriberCallback.call$0();
  }
  return hr;
}
_FrameworkEventImplementation.prototype.unregister = function(handlerReference) {
  var i = this._handlers.indexOf(handlerReference, (0));
  if (i < (0)) return;
  this._handlers.removeRange(i, (1));
  if (this._lostLastSubscriberCallback != null && this._handlers.isEmpty()) {
    this._lostLastSubscriberCallback.call$0();
  }
}
_FrameworkEventImplementation.prototype.$add = function(handler) {
  return this.register(handler);
}
_FrameworkEventImplementation.prototype.$sub = function(handlerReference) {
  return this.unregister(handlerReference);
}
_FrameworkEventImplementation.prototype.invoke = function(sender, args) {
  return this._handlers.forEach$1((function (handlerReference) {
    return handlerReference.handler$2(sender, args);
  })
  );
}
_FrameworkEventImplementation.prototype.get$type = function() {
  return "FrameworkEvent";
}
$inherits(_FrameworkEventImplementation_AttachedPropertyChangedEventArgs, _FrameworkEventImplementation);
function _FrameworkEventImplementation_AttachedPropertyChangedEventArgs() {
  this._handlers = new Array();
  this._gotFirstSubscriberCallback = null;
  this._lostLastSubscriberCallback = null;
  BuckshotObject.call(this);
}
$inherits(_FrameworkEventImplementation_EventArgs, _FrameworkEventImplementation);
_FrameworkEventImplementation_EventArgs._watchFirstAndLast$ctor = function(_gotFirstSubscriberCallback, _lostLastSubscriberCallback) {
  this._gotFirstSubscriberCallback = _gotFirstSubscriberCallback;
  this._lostLastSubscriberCallback = _lostLastSubscriberCallback;
  this._handlers = new Array();
  BuckshotObject.call(this);
}
_FrameworkEventImplementation_EventArgs._watchFirstAndLast$ctor.prototype = _FrameworkEventImplementation_EventArgs.prototype;
function _FrameworkEventImplementation_EventArgs() {
  this._handlers = new Array();
  this._gotFirstSubscriberCallback = null;
  this._lostLastSubscriberCallback = null;
  BuckshotObject.call(this);
}
$inherits(_FrameworkEventImplementation_ItemCreatedEventArgs, _FrameworkEventImplementation);
function _FrameworkEventImplementation_ItemCreatedEventArgs() {
  this._handlers = new Array();
  this._gotFirstSubscriberCallback = null;
  this._lostLastSubscriberCallback = null;
  BuckshotObject.call(this);
}
$inherits(_FrameworkEventImplementation_ListChangedEventArgs_ActionBase, _FrameworkEventImplementation);
function _FrameworkEventImplementation_ListChangedEventArgs_ActionBase() {
  this._handlers = new Array();
  this._gotFirstSubscriberCallback = null;
  this._lostLastSubscriberCallback = null;
  BuckshotObject.call(this);
}
$inherits(_FrameworkEventImplementation_ListChangedEventArgs_ColumnDefinition, _FrameworkEventImplementation);
function _FrameworkEventImplementation_ListChangedEventArgs_ColumnDefinition() {
  this._handlers = new Array();
  this._gotFirstSubscriberCallback = null;
  this._lostLastSubscriberCallback = null;
  BuckshotObject.call(this);
}
$inherits(_FrameworkEventImplementation_ListChangedEventArgs_DropDownListItem, _FrameworkEventImplementation);
function _FrameworkEventImplementation_ListChangedEventArgs_DropDownListItem() {
  this._handlers = new Array();
  this._gotFirstSubscriberCallback = null;
  this._lostLastSubscriberCallback = null;
  BuckshotObject.call(this);
}
$inherits(_FrameworkEventImplementation_ListChangedEventArgs_FrameworkElement, _FrameworkEventImplementation);
function _FrameworkEventImplementation_ListChangedEventArgs_FrameworkElement() {
  this._handlers = new Array();
  this._gotFirstSubscriberCallback = null;
  this._lostLastSubscriberCallback = null;
  BuckshotObject.call(this);
}
$inherits(_FrameworkEventImplementation_ListChangedEventArgs_FrameworkResource, _FrameworkEventImplementation);
function _FrameworkEventImplementation_ListChangedEventArgs_FrameworkResource() {
  this._handlers = new Array();
  this._gotFirstSubscriberCallback = null;
  this._lostLastSubscriberCallback = null;
  BuckshotObject.call(this);
}
$inherits(_FrameworkEventImplementation_ListChangedEventArgs_RowDefinition, _FrameworkEventImplementation);
function _FrameworkEventImplementation_ListChangedEventArgs_RowDefinition() {
  this._handlers = new Array();
  this._gotFirstSubscriberCallback = null;
  this._lostLastSubscriberCallback = null;
  BuckshotObject.call(this);
}
$inherits(_FrameworkEventImplementation_ListChangedEventArgs_StyleSetter, _FrameworkEventImplementation);
function _FrameworkEventImplementation_ListChangedEventArgs_StyleSetter() {
  this._handlers = new Array();
  this._gotFirstSubscriberCallback = null;
  this._lostLastSubscriberCallback = null;
  BuckshotObject.call(this);
}
$inherits(_FrameworkEventImplementation_MeasurementChangedEventArgs, _FrameworkEventImplementation);
_FrameworkEventImplementation_MeasurementChangedEventArgs._watchFirstAndLast$ctor = function(_gotFirstSubscriberCallback, _lostLastSubscriberCallback) {
  this._gotFirstSubscriberCallback = _gotFirstSubscriberCallback;
  this._lostLastSubscriberCallback = _lostLastSubscriberCallback;
  this._handlers = new Array();
  BuckshotObject.call(this);
}
_FrameworkEventImplementation_MeasurementChangedEventArgs._watchFirstAndLast$ctor.prototype = _FrameworkEventImplementation_MeasurementChangedEventArgs.prototype;
function _FrameworkEventImplementation_MeasurementChangedEventArgs() {}
$inherits(_FrameworkEventImplementation_MouseEventArgs, _FrameworkEventImplementation);
_FrameworkEventImplementation_MouseEventArgs._watchFirstAndLast$ctor = function(_gotFirstSubscriberCallback, _lostLastSubscriberCallback) {
  this._gotFirstSubscriberCallback = _gotFirstSubscriberCallback;
  this._lostLastSubscriberCallback = _lostLastSubscriberCallback;
  this._handlers = new Array();
  BuckshotObject.call(this);
}
_FrameworkEventImplementation_MouseEventArgs._watchFirstAndLast$ctor.prototype = _FrameworkEventImplementation_MouseEventArgs.prototype;
function _FrameworkEventImplementation_MouseEventArgs() {}
$inherits(_FrameworkEventImplementation_PropertyChangingEventArgs, _FrameworkEventImplementation);
function _FrameworkEventImplementation_PropertyChangingEventArgs() {
  this._handlers = new Array();
  this._gotFirstSubscriberCallback = null;
  this._lostLastSubscriberCallback = null;
  BuckshotObject.call(this);
}
$inherits(_FrameworkEventImplementation_SelectedItemChangedEventArgs_DropDownListItem, _FrameworkEventImplementation);
function _FrameworkEventImplementation_SelectedItemChangedEventArgs_DropDownListItem() {
  this._handlers = new Array();
  this._gotFirstSubscriberCallback = null;
  this._lostLastSubscriberCallback = null;
  BuckshotObject.call(this);
}
$inherits(_FrameworkEventImplementation_SelectedItemChangedEventArgs, _FrameworkEventImplementation);
function _FrameworkEventImplementation_SelectedItemChangedEventArgs() {
  this._handlers = new Array();
  this._gotFirstSubscriberCallback = null;
  this._lostLastSubscriberCallback = null;
  BuckshotObject.call(this);
}
$inherits(_FrameworkEventImplementation_TextChangedEventArgs, _FrameworkEventImplementation);
function _FrameworkEventImplementation_TextChangedEventArgs() {
  this._handlers = new Array();
  this._gotFirstSubscriberCallback = null;
  this._lostLastSubscriberCallback = null;
  BuckshotObject.call(this);
}
$inherits(EventHandlerReference, HashableObject);
function EventHandlerReference(handler) {
  this.handler = handler;
  HashableObject.call(this);
}
EventHandlerReference.prototype.get$type = function() {
  return "EventHandlerReference";
}
EventHandlerReference.prototype.handler$2 = function($0, $1) {
  return this.handler($0, $1);
};
$inherits(EventArgs, BuckshotObject);
function EventArgs() {
  BuckshotObject.call(this);
}
EventArgs.prototype.makeMe = function() {
  return new EventArgs();
}
EventArgs.prototype.get$type = function() {
  return "EventArgs";
}
$inherits(AttachedPropertyChangedEventArgs, EventArgs);
function AttachedPropertyChangedEventArgs(element, property, value) {
  this.element = element;
  this.property = property;
  this.value = value;
  EventArgs.call(this);
}
AttachedPropertyChangedEventArgs.prototype.get$property = function() { return this.property; };
AttachedPropertyChangedEventArgs.prototype.get$element = function() { return this.element; };
AttachedPropertyChangedEventArgs.prototype.get$value = function() { return this.value; };
$inherits(RoutedEventArgs, EventArgs);
function RoutedEventArgs() {
  this.cancelBubble = false;
  EventArgs.call(this);
}
RoutedEventArgs.prototype.set$cancelBubble = function(value) { return this.cancelBubble = value; };
$inherits(MouseEventArgs, RoutedEventArgs);
function MouseEventArgs(mouseX, mouseY, windowX, windowY) {
  this.mouseX = mouseX;
  this.mouseY = mouseY;
  this.windowX = windowX;
  this.windowY = windowY;
  RoutedEventArgs.call(this);
}
MouseEventArgs.prototype.get$type = function() {
  return "MouseEventArgs";
}
$inherits(PropertyChangingEventArgs, EventArgs);
function PropertyChangingEventArgs(oldValue, newValue) {
  this.oldValue = oldValue;
  this.newValue = newValue;
  EventArgs.call(this);
}
$inherits(ListChangedEventArgs, EventArgs);
function ListChangedEventArgs(oldItems, newItems) {
  this.oldItems = oldItems;
  this.newItems = newItems;
  EventArgs.call(this);
}
ListChangedEventArgs.prototype.makeMe = function() {
  return null;
}
ListChangedEventArgs.prototype.get$type = function() {
  return "ListChangedEventArgs";
}
$inherits(SelectedItemChangedEventArgs, EventArgs);
function SelectedItemChangedEventArgs(selectedItem) {
  this.selectedItem = selectedItem;
  EventArgs.call(this);
}
SelectedItemChangedEventArgs.prototype.makeMe = function() {
  return null;
}
$inherits(SelectedItemChangedEventArgs_DropDownListItem, SelectedItemChangedEventArgs);
function SelectedItemChangedEventArgs_DropDownListItem(selectedItem) {
  this.selectedItem = selectedItem;
  EventArgs.call(this);
}
$inherits(MeasurementChangedEventArgs, EventArgs);
function MeasurementChangedEventArgs(oldMeasurement, newMeasurement) {
  this.oldMeasurement = oldMeasurement;
  this.newMeasurement = newMeasurement;
  EventArgs.call(this);
}
MeasurementChangedEventArgs.prototype.makeMe = function() {
  return null;
}
MeasurementChangedEventArgs.prototype.get$type = function() {
  return "MeasurementChangedEventArgs";
}
function Thickness(uniformThickness) {
  this.left = uniformThickness;
  this.right = uniformThickness;
  this.top = uniformThickness;
  this.bottom = uniformThickness;
}
Thickness.specified$ctor = function(top, right, bottom, left) {
  this.top = top;
  this.right = right;
  this.bottom = bottom;
  this.left = left;
}
Thickness.specified$ctor.prototype = Thickness.prototype;
Thickness.widthheight$ctor = function(width, height) {
  this.left = width;
  this.right = width;
  this.top = height;
  this.bottom = height;
}
Thickness.widthheight$ctor.prototype = Thickness.prototype;
Thickness.prototype.get$bottom = function() { return this.bottom; };
Thickness.prototype.get$left = function() { return this.left; };
Thickness.prototype.get$right = function() { return this.right; };
Thickness.prototype.get$top = function() { return this.top; };
Thickness.prototype.toString = function() {
  return ("" + this.top + " " + this.right + " " + this.bottom + " " + this.left);
}
function Visibility(_str) {
  this._Buckshot_Client_str = _str;
}
Visibility.prototype.toString = function() {
  return this._Buckshot_Client_str;
}
function Orientation(_str) {
  this._Buckshot_Client_str = _str;
}
Orientation.prototype.toString = function() {
  return this._Buckshot_Client_str;
}
function Colors(_hex, _name) {
  this._hex = _hex;
  this._name = _name;
}
Colors.prototype.toString = function() {
  return this._hex;
}
Colors.prototype.get$name = function() {
  return this._name;
}
function Cursors(_str) {
  this._Buckshot_Client_str = _str;
}
Cursors.prototype.toString = function() {
  return this._Buckshot_Client_str;
}
function StringToCursorConverter() {

}
StringToCursorConverter.prototype.is$IValueConverter = function(){return true};
StringToCursorConverter.prototype.convert = function(value, parameter) {
  if (!((typeof(value) == 'string'))) return value;
  switch (value) {
    case "Auto":

      return const$0032;

    case "Crosshair":

      return const$0033;

    case "Default":
    case "Arrow":

      return const$0034;

    case "ResizeE":

      return const$0035;

    case "Help":

      return const$0036;

    case "Move":

      return const$0037;

    case "ResizeN":

      return const$0038;

    case "ResizeNE":

      return const$0039;

    case "ResizeNW":

      return const$0040;

    case "Pointer":

      return const$0041;

    case "Progress":

      return const$0042;

    case "ResizeS":

      return const$0043;

    case "ResizeSE":

      return const$0044;

    case "ResizeSW":

      return const$0045;

    case "Text":

      return const$0046;

    case "Wait":

      return const$0047;

    case "Inherit":

      return const$0048;

    default:

      $throw(const$0012);

  }
}
StringToCursorConverter.prototype.convert$1 = StringToCursorConverter.prototype.convert;
function LinearGradientDirection(_str) {
  this._Buckshot_Client_str = _str;
}
LinearGradientDirection.prototype.toString = function() {
  return this._Buckshot_Client_str;
}
function StringToLinearGradientDirectionConverter() {

}
StringToLinearGradientDirectionConverter.prototype.is$IValueConverter = function(){return true};
StringToLinearGradientDirectionConverter.prototype.convert = function(value, parameter) {
  if (!((typeof(value) == 'string'))) return value;
  switch (value) {
    case "vertical":

      return const$0230;

    case "horizontal":

      return const$0229;

  }
}
StringToLinearGradientDirectionConverter.prototype.convert$1 = StringToLinearGradientDirectionConverter.prototype.convert;
function RadialGradientDrawMode(_str) {
  this._Buckshot_Client_str = _str;
}
RadialGradientDrawMode.prototype.toString = function() {
  return this._Buckshot_Client_str;
}
function GridUnitType(_val) {
  this._val = _val;
}
GridUnitType.prototype.toString = function() {
  switch (this._val) {
    case (1):

      return "star";

    case (2):

      return "pixel";

    case (3):

      return "auto";

    default:

      $throw(const$0012);

  }
}
function HorizontalAlignment(_str) {
  this._Buckshot_Client_str = _str;
}
HorizontalAlignment.prototype.asString = function() {
  return this._Buckshot_Client_str;
}
HorizontalAlignment.prototype.toString = function() {
  return this.asString();
}
function VerticalAlignment(_str) {
  this._Buckshot_Client_str = _str;
}
VerticalAlignment.prototype.toString = function() {
  return this._Buckshot_Client_str;
}
$inherits(FrameworkElement, FrameworkObject);
function FrameworkElement() {
  this._templateBindings = new HashMapImplementation_FrameworkProperty$dart_core_String();
  this._transitionProperties = new HashMapImplementation_dart_core_String$dart_core_String();
  FrameworkObject.call(this);
  _Dom.appendBuckshotClass(this._component, "frameworkelement");
  this._style = new _StyleTemplateImplementation();
  this._initFrameworkProperties();
  this._component.get$attributes().$setindex("data-buckshot-element", this.get$type());
  this._component.get$attributes().$setindex("data-buckshot-id", ("" + this.hashCode()));
  this._initFrameworkEvents();
}
FrameworkElement.prototype.get$_templateBindings = function() { return this._templateBindings; };
FrameworkElement.prototype.get$click = function() { return this.click; };
FrameworkElement.prototype.get$mouseMove = function() { return this.mouseMove; };
FrameworkElement.prototype.get$mouseDown = function() { return this.mouseDown; };
FrameworkElement.prototype.get$mouseUp = function() { return this.mouseUp; };
FrameworkElement.prototype.makeMe = function() {
  return new FrameworkElement();
}
FrameworkElement.prototype._initFrameworkProperties = function() {
  var $this = this;
  function doTransform(e) {
    _Dom.setXPCSS(e._component, "transform", ("translateX(" + getValue($this.translateXProperty) + "px) translateY(" + getValue($this.translateYProperty) + "px) translateZ(" + getValue($this.translateZProperty) + "px)\r\n           scaleX(" + getValue($this.scaleXProperty) + ") scaleY(" + getValue($this.scaleYProperty) + ") scaleZ(" + getValue($this.scaleZProperty) + ") \r\n           rotateX(" + getValue($this.rotateXProperty) + "deg) rotateY(" + getValue($this.rotateYProperty) + "deg) rotateZ(" + getValue($this.rotateZProperty) + "deg)\r\n        "));
  }
  this.actionsProperty = new FrameworkProperty(this, "actions", (function (aList) {
    if ($this.actionsProperty != null) {
      $throw(const$0012);
    }
    $add$(aList.listChanged, (function (_, args) {
      if (args.oldItems.get$length() > (0)) $throw(const$0012);
      args.newItems.forEach$1((function (action) {
        setValue(action._sourceProperty, $this);
      })
      );
    })
    );
  })
  , new ObservableList_ActionBase());
  this.perspectiveProperty = new FrameworkProperty(this, "perspective", (function (value) {
    _Dom.setXPCSS($this._component, "perspective", ("" + value));
  })
  , null, const$0019);
  this.translateXProperty = new AnimatingFrameworkProperty(this, "translateX", (function (value) {
    doTransform($this);
  })
  , "transform", null, const$0019);
  this.translateYProperty = new AnimatingFrameworkProperty(this, "translateY", (function (value) {
    doTransform($this);
  })
  , "transform", null, const$0019);
  this.translateZProperty = new AnimatingFrameworkProperty(this, "translateZ", (function (value) {
    doTransform($this);
  })
  , "transform", null, const$0019);
  this.scaleXProperty = new AnimatingFrameworkProperty(this, "scaleX", (function (value) {
    doTransform($this);
  })
  , "transform", null, const$0019);
  this.scaleYProperty = new AnimatingFrameworkProperty(this, "scaleY", (function (value) {
    doTransform($this);
  })
  , "transform", null, const$0019);
  this.scaleZProperty = new AnimatingFrameworkProperty(this, "scaleZ", (function (value) {
    doTransform($this);
  })
  , "transform", null, const$0019);
  this.rotateXProperty = new AnimatingFrameworkProperty(this, "rotateX", (function (value) {
    doTransform($this);
  })
  , "transform", null, const$0019);
  this.rotateYProperty = new AnimatingFrameworkProperty(this, "rotateY", (function (value) {
    doTransform($this);
  })
  , "transform", null, const$0019);
  this.rotateZProperty = new AnimatingFrameworkProperty(this, "rotateZ", (function (value) {
    doTransform($this);
  })
  , "transform", null, const$0019);
  this.transformOriginXProperty = new FrameworkProperty(this, "transformOriginX", (function (value) {
    _Dom.setXPCSS($this._component, "transform-origin", ("" + getValue($this.transformOriginXProperty) + "% " + getValue($this.transformOriginYProperty) + "% " + getValue($this.transformOriginZProperty) + "px"));
  })
  , null, const$0019);
  this.transformOriginYProperty = new FrameworkProperty(this, "transformOriginY", (function (value) {
    _Dom.setXPCSS($this._component, "transform-origin", ("" + getValue($this.transformOriginXProperty) + "% " + getValue($this.transformOriginYProperty) + "% " + getValue($this.transformOriginZProperty) + "px"));
  })
  , null, const$0019);
  this.transformOriginZProperty = new FrameworkProperty(this, "transformOriginZ", (function (value) {
    _Dom.setXPCSS($this._component, "transform-origin", ("" + getValue($this.transformOriginXProperty) + "% " + getValue($this.transformOriginYProperty) + "% " + getValue($this.transformOriginZProperty) + "px"));
  })
  , null, const$0019);
  this.opacityProperty = new AnimatingFrameworkProperty(this, "opacity", (function (value) {
    if ($lt$(value, (0.0))) value = (0.0);
    if ($gt$(value, (1.0))) value = (1.0);
    $this._component.get$style().set$opacity(value.toStringAsPrecision((2)));
  })
  , "opacity", null, const$0019);
  this.visibilityProperty = new AnimatingFrameworkProperty(this, "visibility", (function (value) {
    if ($eq$(value, const$0020)) {
      $this._component.get$style().set$visibility(("" + value));
      $this._component.get$style().set$display($eq$($this._stateBag.$index("display")) ? "inherit" : $this._stateBag.$index("display"));
      $this._stateBag.remove("display");
    }
    else {
      $this._stateBag.$setindex("display", $this._component.get$style().get$display());
      $this._component.get$style().set$visibility(("" + value));
      $this._component.get$style().set$display("none");
    }
  })
  , "visibility", null, const$0022);
  this.zOrderProperty = new FrameworkProperty(this, "zOrder", (function (value) {
    $this._component.get$style().set$zIndex(value.toInt().toString());
  })
  , null, const$0019);
  this.marginProperty = new FrameworkProperty(this, "margin", (function (value) {
    $this._component.get$style().set$margin(("" + value.top + "px " + value.right + "px " + value.bottom + "px " + value.left + "px"));
    if ($this.get$parent() != null) $this.get$parent().updateLayout();
  })
  , new Thickness((0)), const$0031);
  this.actualWidthProperty = new FrameworkProperty(this, "actualWidth", (function (_) {

  })
  );
  this.actualHeightProperty = new FrameworkProperty(this, "actualHeight", (function (_) {

  })
  );
  this.widthProperty = new FrameworkProperty(this, "width", (function (value) {
    return $this.calculateWidth(value);
  })
  , "auto", const$0019);
  this.heightProperty = new FrameworkProperty(this, "height", (function (value) {
    return $this.calculateHeight(value);
  })
  , "auto", const$0019);
  this.minHeightProperty = new FrameworkProperty(this, "minHeight", (function (value) {
    $this._component.get$style().set$minHeight(("" + value + "px"));
  })
  , null, const$0019);
  this.maxHeightProperty = new FrameworkProperty(this, "maxHeight", (function (value) {
    $this._component.get$style().set$maxHeight(("" + value + "px"));
  })
  , null, const$0019);
  this.minWidthProperty = new FrameworkProperty(this, "minWidth", (function (value) {
    $this._component.get$style().set$minWidth(("" + value + "px"));
  })
  , null, const$0019);
  this.maxWidthProperty = new FrameworkProperty(this, "maxWidth", (function (value) {
    $this._component.get$style().set$maxWidth(("" + value + "px"));
  })
  , null, const$0019);
  this.cursorProperty = new FrameworkProperty(this, "cursor", (function (value) {
    $this._component.get$style().set$cursor(value._Buckshot_Client_str);
  })
  , null, const$0049);
  this.tagProperty = new FrameworkProperty(this, "tag", (function (value) {

  })
  );
  this.horizontalAlignmentProperty = new FrameworkProperty(this, "horizontalAlignment", (function (value) {
    $this.get$updateMeasurementAsync().then((function (_) {
      if ($this.get$parent() != null) $this.get$parent().updateLayout();
    })
    );
  })
  , const$0024, const$0050);
  this.verticalAlignmentProperty = new FrameworkProperty(this, "verticalAlignment", (function (value) {
    $this.get$updateMeasurementAsync().then((function (_) {
      if ($this.get$parent() != null) $this.get$parent().updateLayout();
    })
    );
  })
  , const$0027, const$0051);
  this.styleProperty = new FrameworkProperty(this, "style", (function (value) {
    if (value == null) {
      $this._style._unregisterElement($this);
      $this.styleProperty._previousValue = $this._style;
      $this._style = new _StyleTemplateImplementation();
      $this.styleProperty.set$value($this._style);
    }
    else {
      if ($this._style != null) $this._style._unregisterElement($this);
      value._registerElement($this);
      $this._style = value;
    }
  })
  , new _StyleTemplateImplementation());
}
FrameworkElement.prototype.get$actualWidth = function() {
  return getValue(this.actualWidthProperty);
}
FrameworkElement.prototype.get$actualHeight = function() {
  return getValue(this.actualHeightProperty);
}
FrameworkElement.prototype.set$opacity = function(value) {
  return setValue(this.opacityProperty, value);
}
FrameworkElement.prototype.set$visibility = function(value) {
  return setValue(this.visibilityProperty, value);
}
FrameworkElement.prototype.get$margin = function() {
  return getValue(this.marginProperty);
}
FrameworkElement.prototype.set$margin = function(value) {
  return setValue(this.marginProperty, value);
}
FrameworkElement.prototype.get$width = function() {
  return getValue(this.widthProperty);
}
FrameworkElement.prototype.set$width = function(value) {
  return setValue(this.widthProperty, value);
}
FrameworkElement.prototype.get$height = function() {
  return getValue(this.heightProperty);
}
FrameworkElement.prototype.set$height = function(value) {
  return setValue(this.heightProperty, value);
}
FrameworkElement.prototype.get$minWidth = function() {
  return getValue(this.minWidthProperty);
}
FrameworkElement.prototype.set$minWidth = function(value) {
  return setValue(this.minWidthProperty, value);
}
FrameworkElement.prototype.get$maxWidth = function() {
  return getValue(this.maxWidthProperty);
}
FrameworkElement.prototype.set$maxWidth = function(value) {
  return setValue(this.maxWidthProperty, value);
}
FrameworkElement.prototype.get$minHeight = function() {
  return getValue(this.minHeightProperty);
}
FrameworkElement.prototype.set$minHeight = function(value) {
  return setValue(this.minHeightProperty, value);
}
FrameworkElement.prototype.get$maxHeight = function() {
  return getValue(this.maxHeightProperty);
}
FrameworkElement.prototype.set$maxHeight = function(value) {
  return setValue(this.maxHeightProperty, value);
}
FrameworkElement.prototype.set$cursor = function(value) {
  return setValue(this.cursorProperty, value);
}
FrameworkElement.prototype.get$verticalAlignment = function() {
  return getValue(this.verticalAlignmentProperty);
}
FrameworkElement.prototype.get$horizontalAlignment = function() {
  return getValue(this.horizontalAlignmentProperty);
}
FrameworkElement.prototype.calculateWidth = function(value) {
  var $this = this;
  if ($eq$(value, "auto")) {
    this._component.get$style().set$width("auto");
    this.get$updateMeasurementAsync().then((function (_) {
      if (!!($this && $this.is$IFrameworkContainer())) {
        $this.updateLayout();
      }
      else {
        if ($this.get$parent() != null) $this.get$parent().updateLayout();
      }
    })
    );
    return;
  }
  if (this.get$minWidth() != null && $lt$(value, this.get$minWidth())) {
    this.set$width(this.get$minWidth());
  }
  if (this.get$maxWidth() != null && $gt$(value, this.get$maxWidth())) {
    this.set$width(this.get$maxWidth());
  }
  this._component.get$style().set$width(("" + value + "px"));
  this.get$updateMeasurementAsync().then((function (_) {
    if (!!($this && $this.is$IFrameworkContainer())) {
      $this.updateLayout();
    }
    else {
      if ($this.get$parent() != null) $this.get$parent().updateLayout();
    }
  })
  );
}
FrameworkElement.prototype.calculateHeight = function(value) {
  var $this = this;
  if ($eq$(value, "auto")) {
    this._component.get$style().set$height("auto");
    this.get$updateMeasurementAsync().then((function (_) {
      if (!!($this && $this.is$IFrameworkContainer())) {
        $this.updateLayout();
      }
      else {
        if ($this.get$parent() != null) $this.get$parent().updateLayout();
      }
    })
    );
    return;
  }
  if (this.get$minHeight() != null && $lt$(value, this.get$minHeight())) {
    this.set$height(this.get$minHeight());
  }
  if (this.get$maxHeight() != null && $gt$(value, this.get$maxHeight())) {
    this.set$height(this.get$maxHeight());
  }
  this._component.get$style().set$height(("" + value + "px"));
  this.get$updateMeasurementAsync().then((function (_) {
    if (!!($this && $this.is$IFrameworkContainer())) {
      $this.updateLayout();
    }
    else {
      if ($this.get$parent() != null) $this.get$parent().updateLayout();
    }
  })
  );
}
FrameworkElement.prototype.get$updateMeasurementAsync = function() {
  var $this = this;
  var c = new CompleterImpl();
  this.get$rawElement().get$rect().then((function (r) {
    setValue($this.actualWidthProperty, r.get$bounding().get$width());
    setValue($this.actualHeightProperty, r.get$bounding().get$height());
    $this.mostRecentMeasurement = r;
    c.complete(r);
  })
  );
  return c.get$future();
}
FrameworkElement.prototype._initFrameworkEvents = function() {
  var $this = this;
  function mouseUpHandler(e) {
    if (!$this.mouseUp.get$hasHandlers()) return;
    e.stopPropagation();
    var p = get$$document().get$window().webkitConvertPointFromPageToNode($this._component, _PointFactoryProvider.Point$factory(e.get$pageX(), e.get$pageY()));
    $this.mouseUp.invoke($this, new MouseEventArgs(p.get$x(), p.get$y(), e.get$pageX(), e.get$pageY()));
  }
  this.mouseUp = new _FrameworkEventImplementation_MouseEventArgs._watchFirstAndLast$ctor((function () {
    return $this._component.get$on().get$mouseUp().add$1(mouseUpHandler);
  })
  , (function () {
    return $this._component.get$on().get$mouseUp().remove$1(mouseUpHandler);
  })
  );
  function mouseDownHandler(e) {
    $this._component.focus();
    if (!$this.mouseDown.get$hasHandlers()) return;
    e.stopPropagation();
    var p = get$$document().get$window().webkitConvertPointFromPageToNode($this._component, _PointFactoryProvider.Point$factory(e.get$pageX(), e.get$pageY()));
    $this.mouseDown.invoke($this, new MouseEventArgs(p.get$x(), p.get$y(), e.get$pageX(), e.get$pageY()));
  }
  this.mouseDown = new _FrameworkEventImplementation_MouseEventArgs._watchFirstAndLast$ctor((function () {
    return $this._component.get$on().get$mouseDown().add$1(mouseDownHandler);
  })
  , (function () {
    return $this._component.get$on().get$mouseDown().remove$1(mouseDownHandler);
  })
  );
  function mouseMoveHandler(e) {
    if (!$this.mouseMove.get$hasHandlers()) return;
    e.stopPropagation();
    var p = get$$document().get$window().webkitConvertPointFromPageToNode($this._component, _PointFactoryProvider.Point$factory(e.get$pageX(), e.get$pageY()));
    $this.mouseMove.invoke($this, new MouseEventArgs(p.get$x(), p.get$y(), e.get$pageX(), e.get$pageY()));
  }
  this.mouseMove = new _FrameworkEventImplementation_MouseEventArgs._watchFirstAndLast$ctor((function () {
    return $this._component.get$on().get$mouseMove().add$1(mouseMoveHandler);
  })
  , (function () {
    return $this._component.get$on().get$mouseMove().remove$1(mouseMoveHandler);
  })
  );
  function clickHandler(e) {
    $this._component.focus();
    if (!$this.click.get$hasHandlers()) return;
    e.stopPropagation();
    var p = get$$document().get$window().webkitConvertPointFromPageToNode($this._component, _PointFactoryProvider.Point$factory(e.get$pageX(), e.get$pageY()));
    $this.click.invoke($this, new MouseEventArgs(p.get$x(), p.get$y(), e.get$pageX(), e.get$pageY()));
  }
  this.click = new _FrameworkEventImplementation_MouseEventArgs._watchFirstAndLast$ctor((function () {
    return $this._component.get$on().get$click().add$1(clickHandler);
  })
  , (function () {
    return $this._component.get$on().get$click().remove$1(clickHandler);
  })
  );
  function gotFocusHandler(e) {
    if (!$this.gotFocus.get$hasHandlers()) return;
    e.stopPropagation();
    $this.gotFocus.invoke($this, new EventArgs());
  }
  this.gotFocus = new _FrameworkEventImplementation_EventArgs._watchFirstAndLast$ctor((function () {
    return $this._component.get$on().get$focus().add$1(gotFocusHandler);
  })
  , (function () {
    return $this._component.get$on().get$focus().remove$1(gotFocusHandler);
  })
  );
  function lostFocusHandler(e) {
    if (!$this.lostFocus.get$hasHandlers()) return;
    e.stopPropagation();
    $this.lostFocus.invoke($this, new EventArgs());
  }
  this.lostFocus = new _FrameworkEventImplementation_EventArgs._watchFirstAndLast$ctor((function () {
    return $this._component.get$on().get$blur().add$1(lostFocusHandler);
  })
  , (function () {
    return $this._component.get$on().get$blur().remove$1(lostFocusHandler);
  })
  );
  var isMouseReallyOut = true;
  function mouseEnterHandler(e) {
    if (!$this.mouseEnter.get$hasHandlers()) return;
    e.stopPropagation();
    if (isMouseReallyOut && $this.mouseLeave.get$hasHandlers()) {
      isMouseReallyOut = false;
      $this.mouseEnter.invoke($this, new EventArgs());
    }
    else if (!$this.mouseLeave.get$hasHandlers()) {
      $this.mouseEnter.invoke($this, new EventArgs());
    }
  }
  this.mouseEnter = new _FrameworkEventImplementation_EventArgs._watchFirstAndLast$ctor((function () {
    return $this._component.get$on().get$mouseOver().add($wrap_call$1(mouseEnterHandler), false);
  })
  , (function () {
    return $this._component.get$on().get$mouseOver().remove($wrap_call$1(mouseEnterHandler), false);
  })
  );
  function mouseLeaveHandler(e) {
    if (!$this.mouseLeave.get$hasHandlers()) return;
    e.stopPropagation();
    $this._component.get$rect().then((function (r) {
      var p = get$$document().get$window().webkitConvertPointFromPageToNode($this._component, _PointFactoryProvider.Point$factory(e.get$pageX(), e.get$pageY()));
      if ($gt$(p.get$x(), (-1)) && $gt$(p.get$y(), (-1)) && $lt$(p.get$x(), r.get$bounding().get$width()) && $lt$(p.get$y(), r.get$bounding().get$height())) {
        isMouseReallyOut = false;
        return;
      }
      isMouseReallyOut = true;
      $this.mouseLeave.invoke($this, new EventArgs());
    })
    );
  }
  this.mouseLeave = new _FrameworkEventImplementation_EventArgs._watchFirstAndLast$ctor((function () {
    return $this._component.get$on().get$mouseOut().add($wrap_call$1(mouseLeaveHandler), false);
  })
  , (function () {
    return $this._component.get$on().get$mouseOut().remove($wrap_call$1(mouseLeaveHandler), false);
  })
  );
}
FrameworkElement.prototype.CreateElement = function() {
  this._component = _Dom.createByTag("div");
}
FrameworkElement.prototype.updateLayout = function() {

}
FrameworkElement.prototype.get$type = function() {
  return "FrameworkElement";
}
$inherits(Panel, FrameworkElement);
function Panel() {
  var $this = this;
  this.children = new ObservableList_FrameworkElement();
  FrameworkElement.call(this);
  _Dom.appendBuckshotClass(this._component, "panel");
  this._stateBag.$setindex("CONTAINER_CONTEXT", this.children);
  this.backgroundProperty = new FrameworkProperty(this, "background", (function (value) {
    if (value == null) {
      $this._component.get$style().set$background("None");
      return;
    }
    value.renderBrush($this._component);
  })
  , null, const$0194);
  $add$(this.children.listChanged, (function (_, args) {
    return $this.onChildrenChanging(args);
  })
  );
}
Panel.prototype.is$IFrameworkContainer = function(){return true};
Panel.prototype.get$children = function() { return this.children; };
Panel.prototype.onChildrenChanging = function(args) {
  var $this = this;
  args.oldItems.forEach$1((function (item) {
    item.set$parent(null);
  })
  );
  args.newItems.forEach$1((function (item) {
    if ($ne$(item.get$parent())) {
      $throw(const$0012);
    }
    item.set$parent($this);
  })
  );
}
Panel.prototype.get$content = function() {
  return this.children;
}
Panel.prototype.get$background = function() {
  return getValue(this.backgroundProperty);
}
Panel.prototype.set$background = function(value) {
  return setValue(this.backgroundProperty, value);
}
Panel.prototype.get$type = function() {
  return "Panel";
}
Panel.prototype.CreateElement = function() {
  this._component = _Dom.createByTag("div");
  this._component.get$style().set$overflow("hidden");
}
$inherits(StackPanel, Panel);
function StackPanel() {
  var $this = this;
  Panel.call(this);
  _Dom.appendBuckshotClass(this._component, "stackpanel");
  this.orientationProperty = new FrameworkProperty(this, "orientation", (function (value) {
    _Dom.setFlexBoxOrientation($this, value);
    if ($eq$(value, const$0200)) {
      $this._component.get$style().set$flexFlow("column");
    }
    else {
      $this._component.get$style().set$flexFlow("row");
    }
  })
  , const$0200, new StringToOrientationConverter());
}
StackPanel.prototype.makeMe = function() {
  return new StackPanel();
}
StackPanel.prototype.onChildrenChanging = function(args) {
  var $this = this;
  Panel.prototype.onChildrenChanging.call(this, args);
  if (!args.oldItems.isEmpty()) {
    args.oldItems.forEach$1((function (element) {
      element.removeFromLayoutTree();
      element._containerParent = null;
    })
    );
  }
  if (!args.newItems.isEmpty()) {
    args.newItems.forEach$1((function (element) {
      element.addToLayoutTree($this);
      element._containerParent = $this;
    })
    );
  }
}
StackPanel.prototype.get$orientation = function() {
  return getValue(this.orientationProperty);
}
StackPanel.prototype.CreateElement = function() {
  this._component = _Dom.createByTag("div");
  _Dom.makeFlexBox(this);
  this._component.get$style().set$flexFlow("column");
  this._component.get$style().set$overflow("hidden");
}
StackPanel.prototype.updateLayout = function() {
  if ($eq$(this.get$orientation(), const$0200)) {
    this.children.forEach((function (child) {
      _Dom.setHorizontalItemFlexAlignment(child, child.get$horizontalAlignment());
    })
    );
  }
  else {
    this.children.forEach((function (child) {
      _Dom.setVerticalItemFlexAlignment(child, child.get$verticalAlignment());
    })
    );
  }
}
StackPanel.prototype.get$type = function() {
  return "StackPanel";
}
$inherits(TextBlock, FrameworkElement);
function TextBlock() {
  FrameworkElement.call(this);
  _Dom.appendBuckshotClass(this._component, "textblock");
  this._initTextBlockProperties();
  this._stateBag.$setindex("CONTAINER_CONTEXT", this.textProperty);
}
TextBlock.prototype.makeMe = function() {
  return new TextBlock();
}
TextBlock.prototype._initTextBlockProperties = function() {
  var $this = this;
  this.backgroundProperty = new FrameworkProperty(this, "background", (function (value) {
    if (value == null) {
      $this._component.get$style().set$background("None");
      return;
    }
    value.renderBrush($this._component);
  })
  , null, const$0194);
  this.foregroundProperty = new FrameworkProperty(this, "foreground", (function (value) {
    $this._component.get$style().set$color(value.get$color().toString());
  })
  , new SolidColorBrush(new Color.predefined$ctor(const$0062)), const$0194);
  this.textProperty = new FrameworkProperty(this, "text", (function (value) {
    $this._component.set$text(("" + value));
  })
  );
  this.fontSizeProperty = new FrameworkProperty(this, "fontSize", (function (value) {
    $this._component.get$style().set$fontSize(("" + value.toString() + "px"));
  })
  );
  this.fontFamilyProperty = new FrameworkProperty(this, "fontFamily", (function (value) {
    $this._component.get$style().set$fontFamily(value.toString());
  })
  );
}
TextBlock.prototype.set$fontFamily = function(value) {
  return setValue(this.fontFamilyProperty, value);
}
TextBlock.prototype.set$fontSize = function(value) {
  return setValue(this.fontSizeProperty, value);
}
TextBlock.prototype.get$background = function() {
  return getValue(this.backgroundProperty);
}
TextBlock.prototype.set$background = function(value) {
  return setValue(this.backgroundProperty, value);
}
TextBlock.prototype.get$text = function() {
  return getValue(this.textProperty);
}
TextBlock.prototype.set$text = function(value) {
  return setValue(this.textProperty, value);
}
TextBlock.prototype.CreateElement = function() {
  this._component = _Dom.createByTag("p");
}
TextBlock.prototype.updateLayout = function() {

}
TextBlock.prototype.get$type = function() {
  return "TextBlock";
}
$inherits(Border, FrameworkElement);
function Border() {
  FrameworkElement.call(this);
  this._BORDERWIDTHSHIM = ("__border_width_shim_preserved_width__" + this.hashCode());
  _Dom.appendBuckshotClass(this._component, "border");
  this._initBorderProperties();
  this._stateBag.$setindex("CONTAINER_CONTEXT", this.contentProperty);
}
Border.prototype.is$IFrameworkContainer = function(){return true};
Border.prototype.makeMe = function() {
  return new Border();
}
Border.prototype._initBorderProperties = function() {
  var $this = this;
  this.contentProperty = new FrameworkProperty(this, "content", (function (c) {
    if ($ne$($this.contentProperty.get$previousValue())) {
      $this.contentProperty.get$previousValue().removeFromLayoutTree();
    }
    if ($ne$(c)) c.addToLayoutTree($this);
  })
  );
  this.backgroundProperty = new AnimatingFrameworkProperty(this, "background", (function (value) {
    if (value == null) {
      $this._component.get$style().set$background("None");
      return;
    }
    value.renderBrush($this._component);
  })
  , "background", null, const$0194);
  this.paddingProperty = new FrameworkProperty(this, "padding", (function (value) {
    $this._component.get$style().set$padding(("" + value.top + "px " + value.right + "px " + value.bottom + "px " + value.left + "px"));
    $this.updateLayout();
  })
  , new Thickness((0)), const$0031);
  this.cornerRadiusProperty = new AnimatingFrameworkProperty(this, "cornerRadius", (function (value) {
    if ($eq$(value) || $lt$(value, (0))) value = (0);
    $this._component.get$style().set$borderRadius(("" + value + "px"));
  })
  , "border-radius", null, const$0019);
  this.borderColorProperty = new AnimatingFrameworkProperty(this, "borderColor", (function (value) {
    $this._component.get$style().set$borderColor(value.get$color().toString());
  })
  , "border", null, const$0194);
  this.borderThicknessProperty = new FrameworkProperty(this, "borderThickness", (function (value) {
    var color = $this.get$borderColor() != null ? $this._component.get$style().get$borderColor() : const$0054.toString();
    $this._component.get$style().set$borderTop(("solid " + value.get$top() + "px " + color));
    $this._component.get$style().set$borderRight(("solid " + value.get$right() + "px " + color));
    $this._component.get$style().set$borderLeft(("solid " + value.get$left() + "px " + color));
    $this._component.get$style().set$borderBottom(("solid " + value.get$bottom() + "px " + color));
  })
  , new Thickness((0)), const$0031);
  this.horizontalScrollEnabledProperty = new AnimatingFrameworkProperty(this, "horizontalScrollEnabled", (function (value) {
    $this._assignOverflowX(value);
  })
  , "overflow", false, const$0195);
  this.verticalScrollEnabledProperty = new AnimatingFrameworkProperty(this, "verticalScrollEnabled", (function (value) {
    $this._assignOverflowY(value);
  })
  , "overflow", false, const$0195);
}
Border.prototype._assignOverflowX = function(value) {
  if ($eq$(value, true)) {
    this._component.get$style().set$overflowX("auto");
  }
  else {
    this._component.get$style().set$overflowX("hidden");
  }
}
Border.prototype._assignOverflowY = function(value) {
  if ($eq$(value, true)) {
    this._component.get$style().set$overflowY("auto");
  }
  else {
    this._component.get$style().set$overflowY("hidden");
  }
}
Border.prototype.get$background = function() {
  return getValue(this.backgroundProperty);
}
Border.prototype.set$background = function(value) {
  return setValue(this.backgroundProperty, value);
}
Border.prototype.get$padding = function() {
  return getValue(this.paddingProperty);
}
Border.prototype.set$padding = function(value) {
  return setValue(this.paddingProperty, value);
}
Border.prototype.get$borderColor = function() {
  return getValue(this.borderColorProperty);
}
Border.prototype.set$borderColor = function(value) {
  return setValue(this.borderColorProperty, value);
}
Border.prototype.get$content = function() {
  return getValue(this.contentProperty);
}
Border.prototype.set$content = function(value) {
  return setValue(this.contentProperty, value);
}
Border.prototype.CreateElement = function() {
  this._component = _Dom.createByTag("div");
  this._component.get$style().set$overflow("hidden");
  _Dom.makeFlexBox(this);
}
Border.prototype.updateLayout = function() {
  var $this = this;
  if (!this._isLoaded) return;
  if (this.get$content() != null) {
    if (this.get$content().get$horizontalAlignment() != null) {
      if ($eq$(this.get$content().get$horizontalAlignment(), const$0023)) {
        if (!_Dom.attemptSetXPCSS(this.get$content().get$rawElement(), "flex", "1")) {
          this._stateBag.$setindex(this._BORDERWIDTHSHIM, this.get$content().get$rawElement().get$style().get$width());
          if (this._ref == null) {
            this._ref = $add$(this.measurementChanged, (function (source, args) {
              if (!($this.get$content() instanceof Border)) {
                $this.get$content().get$rawElement().get$style().set$width(("" + (args.newMeasurement.client.width - ($this.get$content().get$margin().left + $this.get$content().get$margin().right + $this.get$padding().left + $this.get$padding().right)) + "px"));
              }
              else {
                $this.get$content().get$rawElement().get$style().set$width(("" + ($sub$(args.newMeasurement.client.width, ($add$($add$($add$($add$($add$($this.get$content().get$dynamic().get$padding().get$left(), $this.get$content().get$dynamic().get$padding().get$right()), $this.get$content().get$margin().left), $this.get$content().get$margin().right), $this.get$padding().left), $this.get$padding().right)))) + "px"));
              }
            })
            );
          }
        }
      }
      else {
        if (!_Dom.attemptSetXPCSS(this.get$content().get$rawElement(), "flex", "none")) {
          if (this._ref != null) {
            $sub$(this.measurementChanged, this._ref);
            this._ref = null;
            if (this._stateBag.containsKey(this._BORDERWIDTHSHIM)) {
              this.get$content().get$rawElement().get$style().set$width(this._stateBag.$index(this._BORDERWIDTHSHIM));
            }
          }
        }
        _Dom.setHorizontalFlexBoxAlignment(this, this.get$content().get$horizontalAlignment());
      }
    }
    if (this.get$content().get$verticalAlignment() != null) {
      _Dom.setVerticalFlexBoxAlignment(this, this.get$content().get$verticalAlignment());
    }
  }
}
Border.prototype.get$type = function() {
  return "Border";
}
$inherits(LayoutCanvas, Panel);
function LayoutCanvas() {
  Panel.call(this);
  _Dom.appendBuckshotClass(this._component, "layoutcanvas");
}
LayoutCanvas.prototype.makeMe = function() {
  return new LayoutCanvas();
}
LayoutCanvas.prototype.onChildrenChanging = function(args) {
  var $this = this;
  Panel.prototype.onChildrenChanging.call(this, args);
  args.oldItems.forEach$1((function (element) {
    element.set$margin(element.get$_stateBag().$index("margin"));
    element.get$_stateBag().remove("margin");
    element.get$_component().get$style().set$position("inherit");
    $sub$(element.get$attachedPropertyChanged(), $this.get$_onAttachedPropertyChanging());
  })
  );
  args.newItems.forEach$1((function (element) {
    element.get$_component().get$style().set$position("absolute");
    var l = LayoutCanvas.getLeft(element);
    var t = LayoutCanvas.getTop(element);
    element.get$_stateBag().$setindex("margin", element.get$margin());
    element.set$margin(new Thickness.specified$ctor(t, (0), (0), l));
    $this._component.get$nodes().add(element.get$_component());
    $add$(element.get$attachedPropertyChanged(), $this.get$_onAttachedPropertyChanging());
  })
  );
}
LayoutCanvas.prototype._onAttachedPropertyChanging = function(sender, args) {
  var f = args.property.propertyChangedCallback;
  f.call$2(sender, args.value);
}
LayoutCanvas.prototype.get$_onAttachedPropertyChanging = function() {
  return this._onAttachedPropertyChanging.bind(this);
}
LayoutCanvas.setTop = function(element, value) {
  if (element == null) return;
  if (value < (0)) value = (0);
  if ($globals.LayoutCanvas_topProperty == null) $globals.LayoutCanvas_topProperty = new AttachedFrameworkProperty("top", (function (e, v) {
    e.set$margin(new Thickness.specified$ctor(v, (0), (0), LayoutCanvas.getLeft(e)));
  })
  );
  FrameworkObject.setAttachedValue(element, $globals.LayoutCanvas_topProperty, value);
}
LayoutCanvas.getTop = function(element) {
  if (element == null) return (0);
  var value = FrameworkObject.getAttachedValue(element, $globals.LayoutCanvas_topProperty);
  if ($globals.LayoutCanvas_topProperty == null || $eq$(value)) LayoutCanvas.setTop(element, (0));
  return FrameworkObject.getAttachedValue(element, $globals.LayoutCanvas_topProperty);
}
LayoutCanvas.setLeft = function(element, value) {
  if (element == null) return;
  if (value < (0)) value = (0);
  if ($globals.LayoutCanvas_leftProperty == null) $globals.LayoutCanvas_leftProperty = new AttachedFrameworkProperty("left", (function (e, v) {
    e.set$margin(new Thickness.specified$ctor(LayoutCanvas.getTop(e), (0), (0), v));
  })
  );
  FrameworkObject.setAttachedValue(element, $globals.LayoutCanvas_leftProperty, value);
}
LayoutCanvas.getLeft = function(element) {
  if (element == null) return (0);
  var value = FrameworkObject.getAttachedValue(element, $globals.LayoutCanvas_leftProperty);
  if ($globals.LayoutCanvas_leftProperty == null || $eq$(value)) LayoutCanvas.setLeft(element, (0));
  return FrameworkObject.getAttachedValue(element, $globals.LayoutCanvas_leftProperty);
}
LayoutCanvas.prototype.CreateElement = function() {
  this._component = _Dom.createByTag("div");
  this._component.get$style().set$overflow("hidden");
}
LayoutCanvas.prototype.updateLayout = function() {

}
LayoutCanvas.prototype.get$type = function() {
  return "LayoutCanvas";
}
$inherits(Image, FrameworkElement);
function Image() {
  FrameworkElement.call(this);
  _Dom.appendBuckshotClass(this._component, "image");
  this._initializeImageProperties();
}
Image.prototype.makeMe = function() {
  return new Image();
}
Image.prototype._initializeImageProperties = function() {
  var $this = this;
  this.sourceUriProperty = new FrameworkProperty(this, "sourceUri", (function (value) {
    $this._component.get$attributes().$setindex("src", value.toString());
  })
  );
  this.altProperty = new FrameworkProperty(this, "alt", (function (value) {
    $this._component.get$attributes().$setindex("alt", value.toString());
  })
  , "undefined");
}
Image.prototype.CreateElement = function() {
  this._component = _Dom.createByTag("img");
}
Image.prototype.get$type = function() {
  return "Image";
}
$inherits(RawHtml, FrameworkElement);
function RawHtml() {
  FrameworkElement.call(this);
  _Dom.appendBuckshotClass(this._component, "rawhtml");
  this._initRawHtmlProperties();
}
RawHtml.prototype.makeMe = function() {
  return new RawHtml();
}
RawHtml.prototype._initRawHtmlProperties = function() {
  var $this = this;
  this.htmlStringProperty = new FrameworkProperty(this, "htmlString", (function (value) {
    $this._component.set$innerHTML(value.toString());
  })
  );
}
RawHtml.prototype.CreateElement = function() {
  this._component = _Dom.createByTag("div");
}
RawHtml.prototype.updateLayout = function() {

}
RawHtml.prototype.get$type = function() {
  return "RawHtml";
}
$inherits(Grid, Panel);
function Grid() {
  var $this = this;
  this._internalChildren = new Array();
  Panel.call(this);
  _Dom.appendBuckshotClass(this._component, "grid");
  this.columnDefinitionsProperty = new FrameworkProperty(this, "columnDefinitions", (function (list) {
    $this._updateColumnLayout($this.get$actualWidth());
  })
  , new ObservableList_ColumnDefinition());
  this.rowDefinitionsProperty = new FrameworkProperty(this, "rowDefinitions", (function (list) {
    $this._updateRowLayout($this.get$actualHeight());
  })
  , new ObservableList_RowDefinition());
  $add$(this.children.listChanged, this.get$_onChildrenChanging());
  $add$(this.get$columnDefinitions().listChanged, (function (_, __) {
    return $this._updateColumnLayout($this.get$actualWidth());
  })
  );
  $add$(this.get$rowDefinitions().listChanged, (function (_, __) {
    return $this._updateRowLayout($this.get$actualHeight());
  })
  );
  $add$(this.measurementChanged, (function (_, args) {
    get$$window().requestAnimationFrame$_($wrap_call$1((function (__) {
      return $this.updateLayout();
    })
    ));
  })
  );
}
Grid.prototype.makeMe = function() {
  return new Grid();
}
Grid.prototype.get$columnDefinitions = function() {
  return getValue(this.columnDefinitionsProperty);
}
Grid.prototype.get$rowDefinitions = function() {
  return getValue(this.rowDefinitionsProperty);
}
Grid.prototype._onChildrenChanging = function(_, args) {
  var $this = this;
  args.oldItems.forEach$1((function (item) {
    var p = item.get$parent();
    if ($eq$(p) || !(p instanceof _GridCell)) $throw(new BuckshotException("Deleted element not found in internal Grid collection."));
    item.removeFromLayoutTree();
    p.get$_component().remove();
  })
  );
  args.newItems.forEach$1((function (item) {
    var newGC = new _GridCell();
    newGC.set$content(item);
    $this._internalChildren.add(newGC);
    newGC.addToLayoutTree($this);
  })
  );
  this.updateLayout();
}
Grid.prototype.get$_onChildrenChanging = function() {
  return this._onChildrenChanging.bind(this);
}
Grid.prototype._totalLengthOf = function(definitions) {
  var total = (0);
  definitions.forEach$1((function (item) {
    total += item.get$_adjustedLength();
  })
  );
  return total;
}
Grid.prototype.updateLayout = function() {
  var $this = this;
  this._updateMeasurements();
  get$$window().requestLayoutFrame($wrap_call$0((function () {
    $this._updateRowLayout($this.mostRecentMeasurement.get$bounding().get$height());
    $this._updateColumnLayout($this.mostRecentMeasurement.get$bounding().get$width());
  })
  ));
}
Grid.prototype._updateMeasurements = function() {
  this.updateMeasurement();
  this._internalChildren.forEach$1((function (child) {
    child.get$content().updateMeasurement();
  })
  );
}
Grid.prototype._updateColumnLayout = function(gridWidth) {
  var $this = this;
  if (!this._isLoaded) return;
  if (this.get$columnDefinitions().get$length() == (0)) {
    this._internalChildren.forEach$1((function (child) {
      child.set$margin(new Thickness.specified$ctor(child.get$margin().get$top(), (0), (0), (0)));
      child.get$rawElement().get$style().set$width(("" + gridWidth + "px"));
    })
    );
    return;
  }
  var totalPixelValue = (0);
  var totalStarValue = (0);
  var lastStar = null;
  this.get$columnDefinitions().forEach((function (c) {
    if ($eq$(c.get$width().get$gridUnitType(), const$0201)) {
      c.set$_adjustedLength(c.get$width().get$value());
      totalPixelValue += c.get$width().get$value();
    }
    else if ($eq$(c.get$width().get$gridUnitType(), const$0202)) {
      totalStarValue += c.get$width().get$value();
      lastStar = c;
    }
    else if ($eq$(c.get$width().get$gridUnitType(), const$0203)) {
      var widestAuto = (0);
      $this._internalChildren.filter$1((function (child) {
        return Grid.getColumn(child.get$content()) == $this.get$columnDefinitions().indexOf(c, (0)) && Grid.getColumnSpan(child.get$content()) < (2);
      })
      ).forEach$1((function (child) {
        var childWidth = child.get$content().mostRecentMeasurement.get$bounding().get$width();
        if (childWidth > widestAuto) widestAuto = childWidth;
      })
      );
      c.set$_adjustedLength(widestAuto);
      totalPixelValue += widestAuto;
    }
  })
  );
  var availColWidth = gridWidth - totalPixelValue;
  var ii = (0);
  var totalStarLength = (0);
  this.get$columnDefinitions().forEach((function (c) {
    if ($eq$(c.get$width().get$gridUnitType(), const$0202)) {
      if ((null == c ? null == (lastStar) : c === lastStar)) {
        c.set$_adjustedLength((availColWidth - totalStarLength));
      }
      else {
        c.set$_adjustedLength(((availColWidth * (c.get$width().get$value() / totalStarValue)).round()));
        totalStarLength += c.get$_adjustedLength();
      }
    }
    var id = ii - (1);
    c._adjustedOffset = ii == (0) ? (0) : $this.get$columnDefinitions().$index(id)._adjustedOffset + $this.get$columnDefinitions().$index(id).get$_adjustedLength();
    ii++;
  })
  );
  this._internalChildren.forEach$1((function (child) {
    var colIndex = Grid.getColumn(child.get$content());
    var childColumnSpan = Grid.getColumnSpan(child.get$content());
    child.set$margin(new Thickness.specified$ctor(child.get$margin().get$top(), (0), (0), $this.get$columnDefinitions().$index(colIndex)._adjustedOffset));
    if (childColumnSpan > (1)) {
      if (childColumnSpan > $this.get$columnDefinitions().get$length() - colIndex) childColumnSpan = $this.get$columnDefinitions().get$length() - colIndex;
      child.get$_component().get$style().set$width(("" + $this._totalLengthOf($this.get$columnDefinitions().getRange(colIndex, childColumnSpan)) + "px"));
    }
    else {
      child.get$_component().get$style().set$width(("" + $this.get$columnDefinitions().$index(colIndex).get$_adjustedLength() + "px"));
    }
    child.updateLayout();
  })
  );
}
Grid.prototype._updateRowLayout = function(gridHeight) {
  var $this = this;
  if (!this._isLoaded) return;
  if (this.get$rowDefinitions().get$length() == (0)) {
    this._internalChildren.forEach$1((function (child) {
      child.set$margin(new Thickness.specified$ctor((0), (0), (0), child.get$margin().get$left()));
      child.get$rawElement().get$style().set$height(("" + gridHeight + "px"));
    })
    );
    return;
  }
  var totalPixelValue = (0);
  var totalStarValue = (0);
  var lastStar = null;
  this.get$rowDefinitions().forEach((function (c) {
    if ($eq$(c.get$height().get$gridUnitType(), const$0201)) {
      c.set$_adjustedLength(c.get$height().get$value());
      totalPixelValue += c.get$height().get$value();
    }
    else if ($eq$(c.get$height().get$gridUnitType(), const$0202)) {
      totalStarValue += c.get$height().get$value();
      lastStar = c;
    }
    else if ($eq$(c.get$height().get$gridUnitType(), const$0203)) {
      var widestAuto = (0);
      $this._internalChildren.filter$1((function (child) {
        return Grid.getRow(child.get$content()) == $this.get$rowDefinitions().indexOf(c, (0)) && Grid.getRowSpan(child.get$content()) < (2);
      })
      ).forEach$1((function (child) {
        var childHeight = child.get$content().mostRecentMeasurement.get$bounding().get$height();
        if (childHeight > widestAuto) widestAuto = childHeight;
      })
      );
      c.set$_adjustedLength(widestAuto);
      totalPixelValue += widestAuto;
    }
  })
  );
  var availRowHeight = gridHeight - totalPixelValue;
  var ii = (0);
  var totalStarLength = (0);
  this.get$rowDefinitions().forEach((function (c) {
    if ($eq$(c.get$height().get$gridUnitType(), const$0202)) {
      if ((null == c ? null == (lastStar) : c === lastStar)) {
        c.set$_adjustedLength((availRowHeight - totalStarLength));
      }
      else {
        c.set$_adjustedLength(((availRowHeight * (c.get$height().get$value() / totalStarValue)).round()));
        totalStarLength += c.get$_adjustedLength();
      }
    }
    var id = ii - (1);
    c._adjustedOffset = ii == (0) ? (0) : ($this.get$rowDefinitions().$index(id)._adjustedOffset + $this.get$rowDefinitions().$index(id).get$_adjustedLength());
    ii++;
  })
  );
  this._internalChildren.forEach$1((function (child) {
    var rowIndex = Grid.getRow(child.get$content());
    var childRowSpan = Grid.getRowSpan(child.get$content());
    child.set$margin(new Thickness.specified$ctor($this.get$rowDefinitions().$index(rowIndex)._adjustedOffset, (0), (0), child.get$margin().left));
    if (childRowSpan > (1)) {
      if (childRowSpan > $this.get$rowDefinitions().get$length() - rowIndex) childRowSpan = $this.get$rowDefinitions().get$length() - rowIndex;
      child._component.get$style().set$height(("" + $this._totalLengthOf($this.get$rowDefinitions().getRange(rowIndex, childRowSpan)) + "px"));
    }
    else {
      child._component.get$style().set$height(("" + $this.get$rowDefinitions().$index(rowIndex).get$_adjustedLength() + "px"));
    }
    child.updateLayout();
  })
  );
}
Grid.setColumn = function(element, column) {
  if (element == null) return;
  if (column < (0)) column = (0);
  if ($globals.Grid_columnProperty == null) {
    $globals.Grid_columnProperty = new AttachedFrameworkProperty("column", (function (e, value) {

    })
    );
  }
  FrameworkObject.setAttachedValue(element, $globals.Grid_columnProperty, column);
}
Grid.getColumn = function(element) {
  if (element == null) return (0);
  var value = FrameworkObject.getAttachedValue(element, $globals.Grid_columnProperty);
  if ($globals.Grid_columnProperty == null || $eq$(value)) Grid.setColumn(element, (0));
  return FrameworkObject.getAttachedValue(element, $globals.Grid_columnProperty);
}
Grid.setRow = function(element, row) {
  if (element == null) return;
  if (row < (0)) row = (0);
  if ($globals.Grid_rowProperty == null) {
    $globals.Grid_rowProperty = new AttachedFrameworkProperty("row", (function (e, value) {

    })
    );
  }
  FrameworkObject.setAttachedValue(element, $globals.Grid_rowProperty, row);
}
Grid.getRow = function(element) {
  if (element == null) return (0);
  var value = FrameworkObject.getAttachedValue(element, $globals.Grid_rowProperty);
  if ($globals.Grid_rowProperty == null || $eq$(value)) Grid.setRow(element, (0));
  return FrameworkObject.getAttachedValue(element, $globals.Grid_rowProperty);
}
Grid.setColumnSpan = function(element, columnSpan) {
  if (element == null) return;
  if (columnSpan < (0)) columnSpan = (0);
  if ($globals.Grid_columnSpanProperty == null) {
    $globals.Grid_columnSpanProperty = new AttachedFrameworkProperty("columnSpan", (function (e, value) {

    })
    );
  }
  FrameworkObject.setAttachedValue(element, $globals.Grid_columnSpanProperty, columnSpan);
}
Grid.getColumnSpan = function(element) {
  if (element == null) return (0);
  var value = FrameworkObject.getAttachedValue(element, $globals.Grid_columnSpanProperty);
  if ($globals.Grid_columnSpanProperty == null || $eq$(value)) Grid.setColumnSpan(element, (0));
  return FrameworkObject.getAttachedValue(element, $globals.Grid_columnSpanProperty);
}
Grid.setRowSpan = function(element, rowSpan) {
  if (element == null) return;
  if (rowSpan < (0)) rowSpan = (0);
  if ($globals.Grid_rowSpanProperty == null) {
    $globals.Grid_rowSpanProperty = new AttachedFrameworkProperty("rowSpan", (function (e, value) {

    })
    );
  }
  FrameworkObject.setAttachedValue(element, $globals.Grid_rowSpanProperty, rowSpan);
}
Grid.getRowSpan = function(element) {
  if (element == null) return (0);
  var value = FrameworkObject.getAttachedValue(element, $globals.Grid_rowSpanProperty);
  if ($globals.Grid_rowSpanProperty == null || $eq$(value)) Grid.setRowSpan(element, (0));
  return FrameworkObject.getAttachedValue(element, $globals.Grid_rowSpanProperty);
}
Grid.prototype.get$type = function() {
  return "Grid";
}
$inherits(GridLayoutDefinition, BuckshotObject);
function GridLayoutDefinition() {
  this._adjustedLengthInternal = (0);
  this._adjustedOffset = (0);
  this.maxLength = (32767);
  this.minLength = (0);
  BuckshotObject.call(this);
}
GridLayoutDefinition.prototype.get$_adjustedLength = function() {
  return this._adjustedLengthInternal;
}
GridLayoutDefinition.prototype.set$_adjustedLength = function(value) {
  if (value < this.minLength) value = this.minLength;
  if (value > this.maxLength) value = this.maxLength;
  this._adjustedLengthInternal = value;
}
GridLayoutDefinition.prototype.makeMe = function() {
  return new GridLayoutDefinition();
}
$inherits(RowDefinition, GridLayoutDefinition);
function RowDefinition() {
  this._rowDefinitionChanged = new _FrameworkEventImplementation();
  GridLayoutDefinition.call(this);
  this._initRowDefinitionProperties();
}
RowDefinition.prototype.makeMe = function() {
  return new RowDefinition();
}
RowDefinition.prototype._initRowDefinitionProperties = function() {
  var $this = this;
  this.heightProperty = new FrameworkProperty(this, "height", (function (v) {
    if (v.get$value() < $this.minLength) v.set$value($this.minLength);
    if (v.get$value() > $this.maxLength) v.set$value($this.maxLength);
    $this._Buckshot_Client_value = v;
    $this._rowDefinitionChanged.invoke($this, new EventArgs());
  })
  , new GridLength(), const$0228);
}
RowDefinition.prototype.get$height = function() {
  return getValue(this.heightProperty);
}
RowDefinition.prototype.set$height = function(v) {
  return setValue(this.heightProperty, v);
}
RowDefinition.prototype.get$type = function() {
  return "RowDefinition";
}
$inherits(ColumnDefinition, GridLayoutDefinition);
function ColumnDefinition() {
  this._columnDefinitionChanged = new _FrameworkEventImplementation();
  GridLayoutDefinition.call(this);
  this._initColumnDefinitionProperties();
}
ColumnDefinition.prototype.makeMe = function() {
  return new ColumnDefinition();
}
ColumnDefinition.prototype._initColumnDefinitionProperties = function() {
  var $this = this;
  this.widthProperty = new FrameworkProperty(this, "width", (function (v) {
    if (v.get$value() < $this.minLength) v.set$value($this.minLength);
    if (v.get$value() > $this.maxLength) v.set$value($this.maxLength);
    $this._Buckshot_Client_value = v;
    $this._columnDefinitionChanged.invoke($this, new EventArgs());
  })
  , new GridLength(), const$0228);
}
ColumnDefinition.prototype.get$width = function() {
  return getValue(this.widthProperty);
}
ColumnDefinition.prototype.set$width = function(v) {
  return setValue(this.widthProperty, v);
}
ColumnDefinition.prototype.get$type = function() {
  return "ColumnDefinition";
}
$inherits(_GridCell, FrameworkObject);
function _GridCell() {
  FrameworkObject.call(this);
  _Dom.appendBuckshotClass(this._component, "GridCell");
  this._initGridCellProperties();
  this._stateBag.$setindex("CONTAINER_CONTEXT", this.contentProperty);
}
_GridCell.prototype._initGridCellProperties = function() {
  var $this = this;
  this.contentProperty = new FrameworkProperty(this, "content", (function (c) {
    if ($ne$($this.contentProperty.get$previousValue())) {
      $this.contentProperty.get$previousValue().removeFromLayoutTree();
    }
    if ($ne$(c)) {
      c.addToLayoutTree($this);
    }
  })
  );
  this.marginProperty = new FrameworkProperty(this, "margin", (function (value) {
    $this._component.get$style().set$margin(("" + value.get$top() + "px " + value.get$right() + "px " + value.get$bottom() + "px " + value.get$left() + "px"));
  })
  , new Thickness((0)), const$0031);
}
_GridCell.prototype.get$content = function() {
  return getValue(this.contentProperty);
}
_GridCell.prototype.set$content = function(value) {
  return setValue(this.contentProperty, value);
}
_GridCell.prototype.get$margin = function() {
  return getValue(this.marginProperty);
}
_GridCell.prototype.set$margin = function(value) {
  return setValue(this.marginProperty, value);
}
_GridCell.prototype.updateMeasurement = function() {
  var $this = this;
  this._component.get$rect().then((function (r) {
    $this.mostRecentMeasurement = r;
  })
  );
}
_GridCell.prototype.CreateElement = function() {
  this._component = _Dom.createByTag("div");
  this._component.get$style().set$overflow("hidden");
  this._component.get$style().set$position("absolute");
  _Dom.makeFlexBox(this);
}
_GridCell.prototype.updateLayout = function() {
  var $this = this;
  if (this.get$content() != null) {
    if (this.get$content().get$horizontalAlignment() != null) {
      if ($eq$(this.get$content().get$horizontalAlignment(), const$0023)) {
        if (!_Dom.attemptSetXPCSS(this.get$content().get$rawElement(), "flex", "1")) {
          if (this._ref == null) {
            this._ref = $add$(this.measurementChanged, (function (source, args) {
              if (!($this.get$content() instanceof Border)) {
                $this.get$content().get$rawElement().get$style().set$width(("" + (args.newMeasurement.client.width - ($this.get$content().get$margin().left + $this.get$content().get$margin().right)) + "px"));
              }
              else {
                $this.get$content().get$rawElement().get$style().set$width(("" + ($sub$(args.newMeasurement.client.width, ($add$($add$($add$($this.get$content().get$dynamic().get$padding().get$left(), $this.get$content().get$dynamic().get$padding().get$right()), $this.get$content().get$margin().left), $this.get$content().get$margin().right)))) + "px"));
              }
            })
            );
          }
        }
      }
      else {
        if (!_Dom.attemptSetXPCSS(this.get$content().get$rawElement(), "flex", "none")) {
          if (this._ref != null) {
            $sub$(this.measurementChanged, this._ref);
            this._ref = null;
            this.get$content().get$rawElement().get$style().set$width("auto");
          }
        }
        _Dom.setHorizontalFlexBoxAlignment(this, this.get$content().get$horizontalAlignment());
      }
    }
    if (this.get$content().get$verticalAlignment() != null) {
      _Dom.setVerticalFlexBoxAlignment(this, this.get$content().get$verticalAlignment());
    }
  }
}
_GridCell.prototype.get$type = function() {
  return "_GridCell";
}
$inherits(GridLength, FrameworkObject);
function GridLength() {
  FrameworkObject.call(this);
  this._initGridUnitTypeProperties();
}
GridLength.star$ctor = function(v) {
  FrameworkObject.call(this);
  this._initGridUnitTypeProperties();
  this.set$gridUnitType(const$0202);
  this.set$value(v);
}
GridLength.star$ctor.prototype = GridLength.prototype;
GridLength.auto$ctor = function() {
  FrameworkObject.call(this);
  this._initGridUnitTypeProperties();
}
GridLength.auto$ctor.prototype = GridLength.prototype;
GridLength.pixel$ctor = function(v) {
  FrameworkObject.call(this);
  this._initGridUnitTypeProperties();
  this.set$gridUnitType(const$0201);
  this.set$value(v);
}
GridLength.pixel$ctor.prototype = GridLength.prototype;
GridLength.prototype.get$gridUnitType = function() {
  return getValue(this.gridUnitTypeProperty);
}
GridLength.prototype.set$gridUnitType = function(v) {
  return setValue(this.gridUnitTypeProperty, v);
}
GridLength.prototype.get$value = function() {
  return getValue(this.valueProperty);
}
GridLength.prototype.set$value = function(v) {
  return setValue(this.valueProperty, v);
}
GridLength.prototype._initGridUnitTypeProperties = function() {
  this.gridUnitTypeProperty = new FrameworkProperty(this, "gridUnitType", (function (v) {

  })
  , const$0203);
  this.valueProperty = new FrameworkProperty(this, "value", (function (v) {

  })
  , (-1));
}
GridLength.prototype.get$type = function() {
  return "GridLength";
}
$inherits(CollectionPresenter, FrameworkElement);
function CollectionPresenter() {
  this._pfp = new BuckshotTemplateProvider();
  this.itemCreated = new _FrameworkEventImplementation_ItemCreatedEventArgs();
  FrameworkElement.call(this);
  _Dom.appendBuckshotClass(this._component, "collectionpresenter");
  this._initCollectionPresenterProperties();
}
CollectionPresenter.prototype.is$IFrameworkContainer = function(){return true};
CollectionPresenter.prototype.makeMe = function() {
  return new CollectionPresenter();
}
CollectionPresenter.prototype._initCollectionPresenterProperties = function() {
  var $this = this;
  this.presentationPanelProperty = new FrameworkProperty(this, "presentationPanel", (function (p) {
    if (p.get$parent() != null) $throw(const$0012);
    if (!$this._component.get$elements().isEmpty()) $this._component.get$elements().$index((0)).remove$0();
    $add$(p.loaded, (function (_, __) {
      return $this._updateCollection();
    })
    );
    p.addToLayoutTree($this);
  })
  , new StackPanel());
  this.itemsTemplateProperty = new FrameworkProperty(this, "itemsTemplate", (function (_) {

  })
  );
}
CollectionPresenter.prototype.get$presentationPanel = function() {
  return getValue(this.presentationPanelProperty);
}
CollectionPresenter.prototype.set$presentationPanel = function(value) {
  return setValue(this.presentationPanelProperty, value);
}
CollectionPresenter.prototype.get$content = function() {
  return this.get$presentationPanel();
}
CollectionPresenter.prototype.get$itemsTemplate = function() {
  return getValue(this.itemsTemplateProperty);
}
CollectionPresenter.prototype.set$itemsTemplate = function(value) {
  return setValue(this.itemsTemplateProperty, value);
}
CollectionPresenter.prototype._updateCollection = function() {
  var $this = this;
  var dc = this.resolveDataContext();
  if ($eq$(dc) && this.get$presentationPanel()._isLoaded) {
    this.get$presentationPanel().children.clear$_();
    return;
  }
  else if ($eq$(dc)) {
    return;
  }
  var values = getValue(dc);
  if ((values instanceof ObservableList) && $eq$(this._eHandler)) {
    this._eHandler = $add$(values.get$listChanged(), (function (_, __) {
      return $this._updateCollection();
    })
    );
  }
  if (!(values && values.is$Collection())) $throw(const$0012);
  this.get$presentationPanel()._component.get$elements().clear$_();
  if (this.get$itemsTemplate() == null) {
    values.forEach$1((function (iterationObject) {
      var it = $this._pfp.deserialize(("<textblock horizontalalignment=\"stretch\">" + ("" + iterationObject + "</textblock>")));
      it.get$_stateBag().$setindex("__CollectionPresenterData__", iterationObject);
      $this.itemCreated.invoke($this, new ItemCreatedEventArgs(it));
      $this.get$presentationPanel().children.add(it);
    })
    );
  }
  else {
    values.forEach$1((function (iterationObject) {
      var it = $this._pfp.deserialize($this.get$itemsTemplate());
      it.get$_stateBag().$setindex("__CollectionPresenterData__", iterationObject);
      it.set$dataContext(iterationObject);
      $this.itemCreated.invoke($this, new ItemCreatedEventArgs(it));
      $this.get$presentationPanel().children.add(it);
    })
    );
  }
}
CollectionPresenter.prototype.updateLayout = function() {

}
CollectionPresenter.prototype.CreateElement = function() {
  this._component = _Dom.createByTag("div");
}
CollectionPresenter.prototype.get$type = function() {
  return "CollectionPresenter";
}
$inherits(ItemCreatedEventArgs, EventArgs);
function ItemCreatedEventArgs(itemCreated) {
  this.itemCreated = itemCreated;
  EventArgs.call(this);
}
$inherits(Control, FrameworkElement);
function Control() {
  this._visualTemplateApplied = false;
  this._templateApplied = false;
  this._templateBindingsApplied = false;
  FrameworkElement.call(this);
  _Dom.appendBuckshotClass(this._component, "control");
  this._initControlProperties();
}
Control.prototype.get$template = function() { return this.template; };
Control.prototype.get$defaultControlTemplate = function() {
  return "";
}
Control.prototype._initControlProperties = function() {
  var $this = this;
  this.isEnabledProperty = new FrameworkProperty(this, "isEnabled", (function (value) {
    if (value) {
      if ($this._component.get$attributes().containsKey("disabled")) $this._component.get$attributes().remove$1("disabled");
    }
    else {
      $this._component.get$attributes().$setindex("disabled", "disabled");
    }
  })
  , true, const$0195);
}
Control.prototype.applyVisualTemplate = function() {
  if (this._visualTemplateApplied) $throw(const$0012);
  this._visualTemplateApplied = true;
  if (!this.get$defaultControlTemplate().isEmpty()) {
    get$$buckshot().defaultPresentationProvider.deserialize(this.get$defaultControlTemplate());
  }
  var t = get$$buckshot().retrieveResource(this.get$templateName());
  if ($eq$(t)) {
    this.template = this;
    FrameworkObject.prototype.applyVisualTemplate.call(this);
    return;
  }
  this._templateApplied = true;
  this.template = t.get$template();
  this.template.set$parent(this);
  this._component = this.template._component;
}
Control.prototype.onLoaded = function() {
  if (this._templateBindingsApplied || !this._templateApplied) return;
  this._templateBindingsApplied = true;
  this._bindTemplateBindings();
  this.template._isLoaded = true;
}
Control.prototype._bindTemplateBindings = function() {
  var $this = this;
  var tb = new HashMapImplementation_FrameworkProperty$dart_core_String();
  this._getAllTemplateBindings(tb, this.template);
  tb.forEach$1((function (k, v) {
    var prop = $this._getPropertyByName(v);
    if ($eq$(prop)) {
      $throw(const$0012);
    }
    new _BindingImplementation(prop, k, const$0016, const$0017);
  })
  );
}
Control.prototype._getAllTemplateBindings = function(list, element) {
  var $this = this;
  var $0;
  element._templateBindings.forEach$1((function (k, v) {
    list.$setindex(k, v);
  })
  );
  if (!(element && element.is$IFrameworkContainer())) return;
  if (!!(($0 = element.get$dynamic().get$content()) && $0.is$List())) {
    element.get$dynamic().get$content().forEach$1((function (child) {
      return $this._getAllTemplateBindings(list, child);
    })
    );
  }
  else if ((element.get$dynamic().get$content() instanceof FrameworkElement)) {
    this._getAllTemplateBindings(list, element.get$dynamic().get$content());
  }
}
Control.prototype.get$templateName = function() {
  return ("template_" + this.get$type());
}
Control.prototype.get$type = function() {
  return "Control";
}
$inherits(TextBox, Control);
function TextBox() {
  this.textChanged = new _FrameworkEventImplementation_TextChangedEventArgs();
  Control.call(this);
  _Dom.appendBuckshotClass(this._component, "textbox");
  this._initTextBoxProperties();
  this._stateBag.$setindex("CONTAINER_CONTEXT", this.textProperty);
  this._initEvents();
}
TextBox.prototype.makeMe = function() {
  return new TextBox();
}
TextBox.prototype._initTextBoxProperties = function() {
  var $this = this;
  this.placeholderProperty = new FrameworkProperty(this, "placeholder", (function (value) {
    $this._component.get$attributes().$setindex("placeholder", value);
  })
  );
  this.textProperty = new FrameworkProperty(this, "text", (function (value) {
    $this._component.get$dynamic().set$value(value);
  })
  , "");
  this.inputTypeProperty = new FrameworkProperty(this, "inputType", (function (value) {
    if (InputTypes._isValidInputType(value)) {
      $this._component.get$attributes().$setindex("type", value.toString());
    }
    else {
      $throw(new BuckshotException(("Invalid input '" + value + "' type passed to TextBox.inputType. Use InputTypes.{type} for safe assignment.")));
    }
  })
  , const$0245, const$0250);
}
TextBox.prototype._initEvents = function() {
  var $this = this;
  this._component.get$on().get$keyUp().add($wrap_call$1((function (e) {
    if ($this.get$text() == $this._component.get$dynamic().get$value()) return;
    var oldValue = $this.get$text();
    $this.set$text($this._component.get$dynamic().get$value());
    if (!$this.textChanged.get$hasHandlers()) return;
    $this.textChanged.invoke($this, new TextChangedEventArgs.with$ctor(oldValue, $this.get$text()));
    if (e.get$cancelable()) e.set$cancelBubble(true);
  })
  ), false);
  this._component.get$on().get$change().add($wrap_call$1((function (e) {
    if ($this.get$text() == $this._component.get$dynamic().get$value()) return;
    var oldValue = $this.get$text();
    $this.set$text($this._component.get$dynamic().get$value());
    if (!$this.textChanged.get$hasHandlers()) return;
    $this.textChanged.invoke($this, new TextChangedEventArgs.with$ctor(oldValue, $this.get$text()));
    if (e.get$cancelable()) e.set$cancelBubble(true);
  })
  ), false);
}
TextBox.prototype.get$text = function() {
  return getValue(this.textProperty);
}
TextBox.prototype.set$text = function(value) {
  return setValue(this.textProperty, value);
}
TextBox.prototype.CreateElement = function() {
  this._component = _Dom.createByTag("input");
  this._component.get$attributes().$setindex("type", "text");
}
TextBox.prototype.get$type = function() {
  return "TextBox";
}
function InputTypes(_str) {
  this._Buckshot_Client_str = _str;
}
InputTypes._isValidInputType = function(candidate) {
  return const$0249.indexOf(candidate, (0)) > (-1);
}
InputTypes.prototype.toString = function() {
  return this._Buckshot_Client_str;
}
$inherits(TextChangedEventArgs, EventArgs);
TextChangedEventArgs.with$ctor = function(oldText, newText) {
  this.oldText = oldText;
  this.newText = newText;
  EventArgs.call(this);
}
TextChangedEventArgs.with$ctor.prototype = TextChangedEventArgs.prototype;
function TextChangedEventArgs() {}
TextChangedEventArgs.prototype.makeMe = function() {
  return null;
}
$inherits(FrameworkResource, FrameworkObject);
function FrameworkResource() {
  FrameworkObject.call(this);
  this._initFrameworkResourceProperties();
}
FrameworkResource.prototype._initFrameworkResourceProperties = function() {
  this.keyProperty = new FrameworkProperty(this, "key", (function (_) {

  })
  , "");
}
FrameworkResource.prototype.set$rawData = function(value) { return this.rawData = value; };
FrameworkResource.prototype.get$key = function() {
  return getValue(this.keyProperty);
}
FrameworkResource.prototype.get$type = function() {
  return "FrameworkResource";
}
$inherits(ControlTemplate, FrameworkResource);
function ControlTemplate() {
  FrameworkResource.call(this);
  this._initializeControlTemplateProperties();
  this._stateBag.$setindex("CONTAINER_CONTEXT", this.templateProperty);
}
ControlTemplate.prototype.makeMe = function() {
  return new ControlTemplate();
}
ControlTemplate.prototype._initializeControlTemplateProperties = function() {
  this.controlTypeProperty = new FrameworkProperty(this, "controlType", (function (_) {

  })
  , "");
  this.templateProperty = new FrameworkProperty(this, "template", (function (_) {

  })
  );
  new _BindingImplementation(this.controlTypeProperty, this.keyProperty, const$0016, const$0017);
}
ControlTemplate.prototype.get$template = function() {
  return getValue(this.templateProperty);
}
ControlTemplate.prototype.get$type = function() {
  return "ControlTemplate";
}
$inherits(RadioButton, Control);
function RadioButton() {
  this.selectionChanged = new _FrameworkEventImplementation_EventArgs();
  Control.call(this);
  _Dom.appendBuckshotClass(this._component, "radiobutton");
  this._initProperties();
  this._initEvents();
}
RadioButton.prototype.makeMe = function() {
  return new RadioButton();
}
RadioButton.prototype._initProperties = function() {
  var $this = this;
  this.valueProperty = new FrameworkProperty(this, "value", (function (v) {
    $this._component.get$attributes().$setindex("value", v);
  })
  );
  this.groupNameProperty = new FrameworkProperty(this, "groupName", (function (v) {
    $this._component.get$attributes().$setindex("name", v);
  })
  , "default");
}
RadioButton.prototype._initEvents = function() {
  var $this = this;
  $add$(this.click, (function (_, __) {
    $this.selectionChanged.invoke($this, new EventArgs());
  })
  );
}
RadioButton.prototype.get$value = function() {
  return getValue(this.valueProperty);
}
RadioButton.prototype.set$value = function(v) {
  return setValue(this.valueProperty, v);
}
RadioButton.prototype.CreateElement = function() {
  this._component = _Dom.createByTag("input");
  this._component.get$attributes().$setindex("type", "radio");
}
RadioButton.prototype.get$type = function() {
  return "RadioButton";
}
$inherits(Button, Control);
function Button() {
  var $this = this;
  Control.call(this);
  _Dom.appendBuckshotClass(this._component, "button");
  this.contentProperty = new FrameworkProperty(this, "content", (function (value) {
    if (($this._content instanceof TextBlock) && (typeof(value) == 'string')) {
      $this._content.set$text(value);
      return;
    }
    if ((typeof(value) == 'string')) {
      var tempStr = value;
      value = new TextBlock();
      value.set$text(tempStr);
    }
    if ($ne$($this._content)) {
      $this._content.get$_component().remove();
      $this._content.set$parent(null);
    }
    if ($ne$(value)) {
      $this._content = value;
      $this._content.set$parent($this);
      $this._component.get$nodes().add($this._content.get$_component());
    }
    else {
      $this._content = null;
    }
  })
  );
  this._stateBag.$setindex("CONTAINER_CONTEXT", this.contentProperty);
}
Button.prototype.is$IFrameworkContainer = function(){return true};
Button.prototype.makeMe = function() {
  return new Button();
}
Button.prototype.get$content = function() {
  return getValue(this.contentProperty);
}
Button.prototype.CreateElement = function() {
  this._component = _Dom.createByTag("button");
  this._component.get$style().set$display("block");
}
Button.prototype.get$type = function() {
  return "Button";
}
$inherits(CheckBox, Control);
function CheckBox() {
  this.selectionChanged = new _FrameworkEventImplementation_EventArgs();
  Control.call(this);
  _Dom.appendBuckshotClass(this._component, "checkbox");
  this._initProperties();
  this._initEvents();
}
CheckBox.prototype.makeMe = function() {
  return new CheckBox();
}
CheckBox.prototype._initProperties = function() {
  var $this = this;
  this.valueProperty = new FrameworkProperty(this, "value", (function (v) {
    $this._component.get$attributes().$setindex("value", v);
  })
  );
  this.groupNameProperty = new FrameworkProperty(this, "groupName", (function (v) {
    $this._component.get$attributes().$setindex("name", v);
  })
  , "default");
}
CheckBox.prototype._initEvents = function() {
  var $this = this;
  $add$(this.click, (function (_, __) {
    $this.selectionChanged.invoke($this, new EventArgs());
  })
  );
}
CheckBox.prototype.get$value = function() {
  return getValue(this.valueProperty);
}
CheckBox.prototype.set$value = function(v) {
  return setValue(this.valueProperty, v);
}
CheckBox.prototype.CreateElement = function() {
  this._component = _Dom.createByTag("input");
  this._component.get$attributes().$setindex("type", "checkbox");
}
CheckBox.prototype.get$type = function() {
  return "CheckBox";
}
$inherits(TextArea, Control);
function TextArea() {
  this.textChanged = new _FrameworkEventImplementation_TextChangedEventArgs();
  Control.call(this);
  _Dom.appendBuckshotClass(this._component, "textarea");
  this._initProperties();
  this._stateBag.$setindex("CONTAINER_CONTEXT", this.textProperty);
  this._initEvents();
}
TextArea.prototype.makeMe = function() {
  return new TextArea();
}
TextArea.prototype._initProperties = function() {
  var $this = this;
  this.placeholderProperty = new FrameworkProperty(this, "placeholder", (function (value) {
    $this._component.get$attributes().$setindex("placeholder", value);
  })
  );
  this.textProperty = new FrameworkProperty(this, "text", (function (value) {
    $this._component.get$dynamic().set$value(value);
  })
  , "");
  this.spellcheckProperty = new FrameworkProperty(this, "spellcheck", (function (value) {
    $this._component.get$attributes().$setindex("spellcheck", value.toString());
  })
  , null, const$0195);
}
TextArea.prototype._initEvents = function() {
  var $this = this;
  this._component.get$on().get$keyUp().add($wrap_call$1((function (e) {
    if ($this.get$text() == $this._component.get$dynamic().get$value()) return;
    var oldValue = $this.get$text();
    $this.set$text($this._component.get$dynamic().get$value());
    if (!$this.textChanged.get$hasHandlers()) return;
    $this.textChanged.invoke($this, new TextChangedEventArgs.with$ctor(oldValue, $this.get$text()));
    if (e.get$cancelable()) e.set$cancelBubble(true);
  })
  ), false);
  this._component.get$on().get$change().add($wrap_call$1((function (e) {
    if ($this.get$text() == $this._component.get$dynamic().get$value()) return;
    var oldValue = $this.get$text();
    $this.set$text($this._component.get$dynamic().get$value());
    if (!$this.textChanged.get$hasHandlers()) return;
    $this.textChanged.invoke($this, new TextChangedEventArgs.with$ctor(oldValue, $this.get$text()));
    if (e.get$cancelable()) e.set$cancelBubble(true);
  })
  ), false);
}
TextArea.prototype.get$text = function() {
  return getValue(this.textProperty);
}
TextArea.prototype.set$text = function(value) {
  return setValue(this.textProperty, value);
}
TextArea.prototype.CreateElement = function() {
  this._component = _Dom.createByTag("textarea");
}
TextArea.prototype.get$type = function() {
  return "TextArea";
}
$inherits(Slider, Control);
function Slider() {
  Control.call(this);
  _Dom.appendBuckshotClass(this._component, "slider");
  this._initSliderProperties();
  this._initSliderEvents();
}
Slider.prototype.makeMe = function() {
  return new Slider();
}
Slider.prototype._initSliderEvents = function() {
  var $this = this;
  this._component.get$on().get$change().add($wrap_call$1((function (e) {
    if ($this.get$value() == $this._component.get$dynamic().get$value()) return;
    $this.set$value($this._component.get$dynamic().get$value());
    e.stopPropagation();
  })
  ), false);
}
Slider.prototype._initSliderProperties = function() {
  var $this = this;
  this.minProperty = new FrameworkProperty(this, "min", (function (v) {
    $this._component.get$attributes().$setindex("min", v.toString());
  })
  , (0), const$0019);
  this.maxProperty = new FrameworkProperty(this, "max", (function (v) {
    $this._component.get$attributes().$setindex("max", v.toInt().toString());
  })
  , (100), const$0019);
  this.stepProperty = new FrameworkProperty(this, "step", (function (v) {
    $this._component.get$attributes().$setindex("step", v.toString());
  })
  , null, const$0019);
  this.valueProperty = new FrameworkProperty(this, "value", (function (v) {
    $this._component.get$dynamic().set$value(v.toString());
  })
  , null, const$0019);
}
Slider.prototype.get$value = function() {
  return getValue(this.valueProperty);
}
Slider.prototype.set$value = function(v) {
  return setValue(this.valueProperty, v);
}
Slider.prototype.CreateElement = function() {
  this._component = _Dom.createByTag("input");
  this._component.get$attributes().$setindex("type", "range");
}
Slider.prototype.get$type = function() {
  return "Slider";
}
$inherits(Hyperlink, Control);
function Hyperlink() {
  Control.call(this);
  _Dom.appendBuckshotClass(this._component, "hyperlink");
  this._initHyperlinkProperties();
  this._stateBag.$setindex("CONTAINER_CONTEXT", this.contentProperty);
}
Hyperlink.prototype.is$IFrameworkContainer = function(){return true};
Hyperlink.prototype.makeMe = function() {
  return new Hyperlink();
}
Hyperlink.prototype.get$content = function() {
  return getValue(this.contentProperty);
}
Hyperlink.prototype.set$fontFamily = function(value) {
  return setValue(this.fontFamilyProperty, value);
}
Hyperlink.prototype.set$fontSize = function(value) {
  return setValue(this.fontSizeProperty, value);
}
Hyperlink.prototype._initHyperlinkProperties = function() {
  var $this = this;
  this.contentProperty = new FrameworkProperty(this, "content", (function (value) {
    if (($this._content instanceof TextBlock) && (typeof(value) == 'string')) {
      $this._content.set$text(value);
      return;
    }
    $this._component.get$style().set$textDecoration("none");
    if ((typeof(value) == 'string')) {
      var tempStr = value;
      $this._component.get$style().set$textDecoration("underline");
      value = new TextBlock();
      value.set$text(tempStr);
    }
    if ($ne$($this._content)) {
      $this._content.get$_component().remove();
      $this._content.set$parent(null);
    }
    if ($ne$(value)) {
      $this._content = value;
      $this._content.set$parent($this);
      $this._component.get$nodes().add($this._content.get$_component());
    }
    else {
      $this._content = null;
    }
  })
  );
  this.targetNameProperty = new FrameworkProperty(this, "targetName", (function (value) {
    $this._component.get$attributes().$setindex("target", value.toString());
  })
  , "_self");
  this.navigateToProperty = new FrameworkProperty(this, "navigateTo", (function (value) {
    $this._component.get$attributes().$setindex("href", value.toString());
  })
  );
  this.foregroundProperty = new FrameworkProperty(this, "foreground", (function (value) {
    $this._component.get$style().set$color(value.get$color().toString());
  })
  , new SolidColorBrush(new Color.predefined$ctor(const$0062)), const$0194);
  this.fontSizeProperty = new FrameworkProperty(this, "fontSize", (function (value) {
    $this._component.get$style().set$fontSize(("" + value.toString() + "px"));
  })
  );
  this.fontFamilyProperty = new FrameworkProperty(this, "fontFamily", (function (value) {
    $this._component.get$style().set$fontFamily(value.toString());
  })
  );
}
Hyperlink.prototype.CreateElement = function() {
  this._component = _Dom.createByTag("a");
}
Hyperlink.prototype.get$type = function() {
  return "Hyperlink";
}
$inherits(DropDownList, Control);
function DropDownList() {
  this.selectionChanged = new _FrameworkEventImplementation_SelectedItemChangedEventArgs_DropDownListItem();
  Control.call(this);
  _Dom.appendBuckshotClass(this._component, "dropdownlist");
  this._initDropDownListProperties();
}
DropDownList.prototype._initDropDownListProperties = function() {
  var $this = this;
  this.itemsProperty = new FrameworkProperty(this, "items", (function (v) {

  })
  , new ObservableList_DropDownListItem());
  this.itemsSourceProperty = new FrameworkProperty(this, "itemsSource", (function (v) {
    $this._updateDDL();
  })
  );
  this.selectedItemProperty = new FrameworkProperty(this, "selectedItem", (function (v) {

  })
  , new DropDownListItem());
  $add$(this.get$items().listChanged, (function (_, __) {
    if (!$this._isLoaded) return;
    $this._updateDDL();
  })
  );
  function doNotify() {
    var selected;
    if ($this.get$itemsSource() != null && !$this.get$itemsSource().isEmpty()) {
      $this.selectedItemProperty.get$value().set$name($this.get$itemsSource().$index($this._component.get$dynamic().get$selectedIndex()));
      $this.selectedItemProperty.get$value().set$value($this.get$itemsSource().$index($this._component.get$dynamic().get$selectedIndex()));
      selected = $this.selectedItemProperty.get$value();
    }
    else if (!$this.get$items().isEmpty()) {
      selected = $this.get$items().$index($this._component.get$dynamic().get$selectedIndex());
      $this.selectedItemProperty.get$value().set$name(selected.get$name());
      $this.selectedItemProperty.get$value().set$value(selected.get$value());
    }
    if (selected != null) $this.selectionChanged.invoke($this, new SelectedItemChangedEventArgs_DropDownListItem(selected));
  }
  $add$(this.loaded, (function (_, __) {
    $this._updateDDL();
    doNotify();
  })
  );
  this._component.get$on().get$change().add($wrap_call$1((function (e) {
    return doNotify();
  })
  ), false);
}
DropDownList.prototype._updateDDL = function() {
  var $this = this;
  this._component.get$elements().clear$_();
  if (this.get$itemsSource() != null) {
    this.get$itemsSource().forEach$1((function (i) {
      var option = _Dom.createByTag("option");
      option.get$attributes().$setindex("value", ("" + i));
      option.set$text(("" + i));
      $this._component.get$elements().add(option);
    })
    );
  }
  else {
    this.get$items().forEach((function (i) {
      var option = _Dom.createByTag("option");
      option.get$attributes().$setindex("value", i.get$value());
      option.set$text(i.get$name());
      $this._component.get$elements().add(option);
    })
    );
  }
}
DropDownList.prototype.get$itemsSource = function() {
  return getValue(this.itemsSourceProperty);
}
DropDownList.prototype.get$items = function() {
  return getValue(this.itemsProperty);
}
DropDownList.prototype.makeMe = function() {
  return new DropDownList();
}
DropDownList.prototype.CreateElement = function() {
  this._component = _Dom.createByTag("select");
}
DropDownList.prototype.get$type = function() {
  return "DropDownList";
}
$inherits(DropDownListItem, BuckshotObject);
function DropDownListItem() {
  BuckshotObject.call(this);
  this._initDropDownListItemProperties();
}
DropDownListItem.prototype.makeMe = function() {
  return new DropDownListItem();
}
DropDownListItem.prototype._initDropDownListItemProperties = function() {
  this.nameProperty = new FrameworkProperty(this, "name", (function (v) {

  })
  , "");
  this.valueProperty = new FrameworkProperty(this, "value", (function (v) {

  })
  );
}
DropDownListItem.prototype.get$name = function() {
  return getValue(this.nameProperty);
}
DropDownListItem.prototype.set$name = function(v) {
  return setValue(this.nameProperty, v);
}
DropDownListItem.prototype.get$value = function() {
  return getValue(this.valueProperty);
}
DropDownListItem.prototype.set$value = function(v) {
  return setValue(this.valueProperty, v);
}
DropDownListItem.prototype.get$type = function() {
  return "DropDownListItem";
}
$inherits(ListBox, Control);
function ListBox() {
  this._selectedIndex = (-1);
  this.selectionChanged = new _FrameworkEventImplementation_SelectedItemChangedEventArgs();
  Control.call(this);
  _Dom.appendBuckshotClass(this._component, "listbox");
  this._initListBoxProperties();
  if (this.template == null) $throw(const$0012);
  this._presenter = Buckshot.findByName("__buckshot_listbox_presenter__", this.template);
  this._border = Buckshot.findByName("__buckshot_listbox_border__", this.template);
  if (this._presenter == null) $throw(const$0012);
  $add$(this._presenter.itemCreated, this.get$_OnItemCreated());
}
ListBox.prototype.is$IFrameworkContainer = function(){return true};
ListBox.prototype.get$selectedIndex = function() {
  return this._selectedIndex;
}
ListBox.prototype.makeMe = function() {
  return new ListBox();
}
ListBox.prototype.get$defaultControlTemplate = function() {
  return ("<controltemplate controlType=\"" + this.get$templateName() + "\">\r\n          <template>\r\n            <border bordercolor=\"{template borderColor}\" \r\n                    borderthickness=\"{template borderThickness}\" \r\n                    horizontalScrollEnabled=\"{template horizontalScrollEnabled}\" \r\n                    verticalScrollEnabled=\"{template verticalScrollEnabled}\"\r\n                    name=\"__buckshot_listbox_border__\"\r\n                    cursor=\"Arrow\">\r\n                <collectionPresenter name=\"__buckshot_listbox_presenter__\" \r\n                                      horizontalAlignment='stretch'>\r\n                </collectionPresenter>\r\n            </border>\r\n          </template>\r\n        </controltemplate>\r\n    ");
}
ListBox.prototype._OnItemCreated = function(sender, args) {
  var $this = this;
  var item = args.itemCreated;
  $add$(item.click, (function (_, __) {
    $this._selectedIndex = $this._presenter.get$presentationPanel().children.indexOf(item, (0));
    setValue($this.selectedItemProperty, item._stateBag.$index("__CollectionPresenterData__"));
    $this.selectionChanged.invoke($this, new SelectedItemChangedEventArgs(item._stateBag.$index("__CollectionPresenterData__")));
  })
  );
  $add$(item.mouseEnter, (function (_, __) {
    return $this.onItemMouseEnter(item);
  })
  );
  $add$(item.mouseLeave, (function (_, __) {
    return $this.onItemMouseLeave(item);
  })
  );
  $add$(item.mouseDown, (function (_, __) {
    return $this.onItemMouseDown(item);
  })
  );
  $add$(item.mouseUp, (function (_, __) {
    return $this.onItemMouseUp(item);
  })
  );
}
ListBox.prototype.get$_OnItemCreated = function() {
  return this._OnItemCreated.bind(this);
}
ListBox.prototype.get$content = function() {
  return this.template;
}
ListBox.prototype.onItemMouseDown = function(item) {
  if (item.hasProperty("background")) {
    item.get$dynamic().set$background(getValue(this.selectColorProperty));
  }
}
ListBox.prototype.onItemMouseUp = function(item) {
  if (item.hasProperty("background")) {
    item.get$dynamic().set$background(getValue(this.highlightColorProperty));
  }
}
ListBox.prototype.onItemMouseEnter = function(item) {
  if (item.hasProperty("background")) {
    item._stateBag.$setindex("__lb_item_bg_brush__", item.get$dynamic().get$background());
    item.get$dynamic().set$background(getValue(this.highlightColorProperty));
  }
}
ListBox.prototype.onItemMouseLeave = function(item) {
  if (item._stateBag.containsKey("__lb_item_bg_brush__")) {
    item.get$dynamic().set$background(item._stateBag.$index("__lb_item_bg_brush__"));
  }
}
ListBox.prototype._initListBoxProperties = function() {
  var $this = this;
  this.highlightColorProperty = new FrameworkProperty(this, "highlightColor", (function (_) {

  })
  , new SolidColorBrush(new Color.predefined$ctor(const$0166)), const$0194);
  this.selectColorProperty = new FrameworkProperty(this, "selectColor", (function (_) {

  })
  , new SolidColorBrush(new Color.predefined$ctor(const$0178)), const$0194);
  this.borderColorProperty = new FrameworkProperty(this, "borderColor", (function (v) {
    if ($this._border == null) return;
    $this._border.set$borderColor(v);
  })
  , new SolidColorBrush(new Color.predefined$ctor(const$0062)), const$0194);
  this.borderThicknessProperty = new FrameworkProperty(this, "borderThickness", (function (v) {

  })
  , new Thickness((1)), const$0031);
  this.selectedItemProperty = new FrameworkProperty(this, "selectedItem", (function (_) {

  })
  );
  this.presentationPanelProperty = new FrameworkProperty(this, "presentationPanel", (function (p) {
    if ($this._presenter == null) return;
    $this._presenter.set$presentationPanel(p);
  })
  );
  this.itemsTemplateProperty = new FrameworkProperty(this, "itemsTemplate", (function (value) {
    if ($this._presenter == null) return;
    $this._presenter.set$itemsTemplate(value);
  })
  );
  this.horizontalScrollEnabledProperty = new FrameworkProperty(this, "horizontalScrollEnabled", (function (value) {

  })
  , false, const$0195);
  this.verticalScrollEnabledProperty = new FrameworkProperty(this, "verticalScrollEnabled", (function (value) {

  })
  , true, const$0195);
}
ListBox.prototype.get$type = function() {
  return "ListBox";
}
function ExceptionBase(msg) {

}
ExceptionBase.prototype.is$Exception = function(){return true};
$inherits(AnimationException, ExceptionBase);
function AnimationException(msg) {
  ExceptionBase.call(this);
}
$inherits(PresentationProviderException, ExceptionBase);
function PresentationProviderException(msg) {
  ExceptionBase.call(this);
}
$inherits(BuckshotException, ExceptionBase);
function BuckshotException(msg) {
  ExceptionBase.call(this);
}
function StringToNumericConverter() {

}
StringToNumericConverter.prototype.is$IValueConverter = function(){return true};
StringToNumericConverter.prototype.convert = function(value, parameter) {
  if ((typeof(value) != 'string') || $eq$(value, "auto")) return value;
  try {
    return Math.parseDouble(value);
  } catch (e) {
    e = _toDartException(e);
    if (!(e && e.is$Exception())) throw e;
    return value;
  }
}
StringToNumericConverter.prototype.convert$1 = StringToNumericConverter.prototype.convert;
function StringToThicknessConverter() {

}
StringToThicknessConverter.prototype.is$IValueConverter = function(){return true};
StringToThicknessConverter.prototype.convert = function(value, parameter) {
  if (!((typeof(value) == 'string'))) return value;
  var svl = value.split$_(",");
  switch (svl.get$length()) {
    case (1):

      return new Thickness(Math.parseInt(svl.$index((0)).trim()));

    case (2):

      return new Thickness.widthheight$ctor(Math.parseInt(svl.$index((0)).trim()), Math.parseInt(svl.$index((1)).trim()));

    case (4):

      return new Thickness.specified$ctor(Math.parseInt(svl.$index((0)).trim()), Math.parseInt(svl.$index((1)).trim()), Math.parseInt(svl.$index((2)).trim()), Math.parseInt(svl.$index((3)).trim()));

    default:

      $throw(const$0012);

  }
}
StringToThicknessConverter.prototype.convert$1 = StringToThicknessConverter.prototype.convert;
function StringToBooleanConverter() {

}
StringToBooleanConverter.prototype.is$IValueConverter = function(){return true};
StringToBooleanConverter.prototype.convert = function(value, parameter) {
  if (!((typeof(value) == 'string'))) return value;
  if (value.toLowerCase() == "false") {
    return false;
  }
  else if (value.toLowerCase() == "true") {
    return true;
  }
  else {
    $throw(new BuckshotException(("Invalid string passed to boolean converter: '" + value + "'.")));
  }
}
StringToBooleanConverter.prototype.convert$1 = StringToBooleanConverter.prototype.convert;
function StringToGridLengthConverter() {

}
StringToGridLengthConverter.prototype.is$IValueConverter = function(){return true};
StringToGridLengthConverter.prototype.convert = function(value, parameter) {
  if (!((typeof(value) == 'string'))) return value;
  if ($eq$(value, "auto")) {
    return new GridLength.auto$ctor();
  }
  if (value.contains$1("*")) {
    var stripped = value.replaceAll("*", "");
    if (stripped == "") return new GridLength.star$ctor((1));
    try {
      var val = Math.parseDouble(stripped);
      return new GridLength.star$ctor(val);
    } catch (e) {
      e = _toDartException(e);
      if (!(e instanceof BadNumberFormatException)) throw e;
      $throw(const$0012);
    }
  }
  try {
    var val = Math.parseInt(value);
    return new GridLength.pixel$ctor(val);
  } catch (e) {
    e = _toDartException(e);
    if (!(e instanceof BadNumberFormatException)) throw e;
    $throw(const$0012);
  }
}
StringToGridLengthConverter.prototype.convert$1 = StringToGridLengthConverter.prototype.convert;
function StringToHorizontalAlignmentConverter() {

}
StringToHorizontalAlignmentConverter.prototype.is$IValueConverter = function(){return true};
StringToHorizontalAlignmentConverter.prototype.convert = function(value, parameter) {
  if (!((typeof(value) == 'string'))) return value;
  switch (value) {
    case "center":

      return const$0026;

    case "stretch":

      return const$0023;

    case "left":

      return const$0024;

    case "right":

      return const$0025;

    default:

      $throw(new BuckshotException(("Invalid horizontalAlignment value \"" + value + "\".")));

  }
}
StringToHorizontalAlignmentConverter.prototype.convert$1 = StringToHorizontalAlignmentConverter.prototype.convert;
function StringToOrientationConverter() {

}
StringToOrientationConverter.prototype.is$IValueConverter = function(){return true};
StringToOrientationConverter.prototype.convert = function(value, parameter) {
  if (!((typeof(value) == 'string'))) return value;
  switch (value) {
    case "horizontal":

      return const$0199;

    case "vertical":

      return const$0200;

    default:

      $throw(new BuckshotException(("Invalid orientation value \"" + value + "\".")));

  }
}
StringToOrientationConverter.prototype.convert$1 = StringToOrientationConverter.prototype.convert;
function StringToVerticalAlignmentConverter() {

}
StringToVerticalAlignmentConverter.prototype.is$IValueConverter = function(){return true};
StringToVerticalAlignmentConverter.prototype.convert = function(value, parameter) {
  if (!((typeof(value) == 'string'))) return value;
  switch (value) {
    case "center":

      return const$0029;

    case "stretch":

      return const$0030;

    case "top":

      return const$0027;

    case "bottom":

      return const$0028;

    default:

      $throw(new BuckshotException(("Invalid verticalAlignment value \"" + value + "\".")));

  }
}
StringToVerticalAlignmentConverter.prototype.convert$1 = StringToVerticalAlignmentConverter.prototype.convert;
function StringToColorConverter() {

}
StringToColorConverter.prototype.is$IValueConverter = function(){return true};
StringToColorConverter.prototype.convert = function(value, parameter) {
  if (value.startsWith("#")) {
    return new Color.hex$ctor(value);
  }
  else {
    switch (value) {
      case "AliceBlue":

        return new Color.hex$ctor(const$0055.toString());

      case "AntiqueWhite":

        return new Color.hex$ctor(const$0056.toString());

      case "Aqua":

        return new Color.hex$ctor(const$0057.toString());

      case "Aquamarine":

        return new Color.hex$ctor(const$0058.toString());

      case "Azure":

        return new Color.hex$ctor(const$0059.toString());

      case "Beige":

        return new Color.hex$ctor(const$0060.toString());

      case "Bisque":

        return new Color.hex$ctor(const$0061.toString());

      case "Black":

        return new Color.hex$ctor(const$0062.toString());

      case "BlanchedAlmond":

        return new Color.hex$ctor(const$0063.toString());

      case "Blue":

        return new Color.hex$ctor(const$0064.toString());

      case "BlueViolet":

        return new Color.hex$ctor(const$0065.toString());

      case "Brown":

        return new Color.hex$ctor(const$0066.toString());

      case "BurlyWood":

        return new Color.hex$ctor(const$0067.toString());

      case "CadetBlue":

        return new Color.hex$ctor(const$0068.toString());

      case "Chartreuse":

        return new Color.hex$ctor(const$0069.toString());

      case "Chocolate":

        return new Color.hex$ctor(const$0070.toString());

      case "Coral":

        return new Color.hex$ctor(const$0071.toString());

      case "ConflowerBlue":

        return new Color.hex$ctor(const$0072.toString());

      case "Cornsilk":

        return new Color.hex$ctor(const$0073.toString());

      case "Crimson":

        return new Color.hex$ctor(const$0074.toString());

      case "Cyan":

        return new Color.hex$ctor(const$0075.toString());

      case "DarkBlue":

        return new Color.hex$ctor(const$0076.toString());

      case "DarkCyan":

        return new Color.hex$ctor(const$0077.toString());

      case "DarkGoldenrod":

        return new Color.hex$ctor(const$0078.toString());

      case "DarkGray":

        return new Color.hex$ctor(const$0079.toString());

      case "DarkGreen":

        return new Color.hex$ctor(const$0080.toString());

      case "DarkKhaki":

        return new Color.hex$ctor(const$0081.toString());

      case "DarkMagenta":

        return new Color.hex$ctor(const$0082.toString());

      case "DarkOliveGreen":

        return new Color.hex$ctor(const$0083.toString());

      case "DarkOrange":

        return new Color.hex$ctor(const$0084.toString());

      case "DarkOrchid":

        return new Color.hex$ctor(const$0085.toString());

      case "DarkRed":

        return new Color.hex$ctor(const$0086.toString());

      case "DarkSalmon":

        return new Color.hex$ctor(const$0087.toString());

      case "DarkSeaGreen":

        return new Color.hex$ctor(const$0088.toString());

      case "DarkSlateBlue":

        return new Color.hex$ctor(const$0089.toString());

      case "DarkSlateGray":

        return new Color.hex$ctor(const$0090.toString());

      case "DarkTurquoise":

        return new Color.hex$ctor(const$0091.toString());

      case "DarkViolet":

        return new Color.hex$ctor(const$0092.toString());

      case "DeepPink":

        return new Color.hex$ctor(const$0093.toString());

      case "DeepSkyBlue":

        return new Color.hex$ctor(const$0094.toString());

      case "DimGray":

        return new Color.hex$ctor(const$0095.toString());

      case "DodgerBlue":

        return new Color.hex$ctor(const$0096.toString());

      case "Firebrick":

        return new Color.hex$ctor(const$0097.toString());

      case "FloralWhite":

        return new Color.hex$ctor(const$0098.toString());

      case "ForestGreen":

        return new Color.hex$ctor(const$0099.toString());

      case "Fuchsia":

        return new Color.hex$ctor(const$0100.toString());

      case "Gainsboro":

        return new Color.hex$ctor(const$0101.toString());

      case "GhostWhite":

        return new Color.hex$ctor(const$0102.toString());

      case "Gold":

        return new Color.hex$ctor(const$0103.toString());

      case "Goldenrod":

        return new Color.hex$ctor(const$0104.toString());

      case "Gray":

        return new Color.hex$ctor(const$0105.toString());

      case "Green":

        return new Color.hex$ctor(const$0106.toString());

      case "GreenYellow":

        return new Color.hex$ctor(const$0107.toString());

      case "Honeydew":

        return new Color.hex$ctor(const$0108.toString());

      case "HotPink":

        return new Color.hex$ctor(const$0109.toString());

      case "IndianRed":

        return new Color.hex$ctor(const$0110.toString());

      case "Indigo":

        return new Color.hex$ctor(const$0111.toString());

      case "Ivory":

        return new Color.hex$ctor(const$0112.toString());

      case "Khaki":

        return new Color.hex$ctor(const$0113.toString());

      case "Lavender":

        return new Color.hex$ctor(const$0114.toString());

      case "LavenderBlush":

        return new Color.hex$ctor(const$0115.toString());

      case "LawnGreen":

        return new Color.hex$ctor(const$0116.toString());

      case "LemonChiffon":

        return new Color.hex$ctor(const$0117.toString());

      case "LightBlue":

        return new Color.hex$ctor(const$0118.toString());

      case "LightCoral":

        return new Color.hex$ctor(const$0119.toString());

      case "LightCyan":

        return new Color.hex$ctor(const$0120.toString());

      case "LightGoldenrod":

        return new Color.hex$ctor(const$0121.toString());

      case "LightGray":

        return new Color.hex$ctor(const$0122.toString());

      case "LightGreen":

        return new Color.hex$ctor(const$0123.toString());

      case "LightPink":

        return new Color.hex$ctor(const$0124.toString());

      case "LightSalmon":

        return new Color.hex$ctor(const$0125.toString());

      case "LightSeaGreen":

        return new Color.hex$ctor(const$0126.toString());

      case "LightSkyBlue":

        return new Color.hex$ctor(const$0127.toString());

      case "LightSlateGray":

        return new Color.hex$ctor(const$0128.toString());

      case "LightSteelBlue":

        return new Color.hex$ctor(const$0129.toString());

      case "LightYellow":

        return new Color.hex$ctor(const$0130.toString());

      case "Lime":

        return new Color.hex$ctor(const$0131.toString());

      case "LimeGreen":

        return new Color.hex$ctor(const$0132.toString());

      case "Linen":

        return new Color.hex$ctor(const$0133.toString());

      case "Magenta":

        return new Color.hex$ctor(const$0134.toString());

      case "Maroon":

        return new Color.hex$ctor(const$0135.toString());

      case "MediumAquamarine":

        return new Color.hex$ctor(const$0136.toString());

      case "MediumBlue":

        return new Color.hex$ctor(const$0137.toString());

      case "MediumOrchid":

        return new Color.hex$ctor(const$0138.toString());

      case "MediumPurple":

        return new Color.hex$ctor(const$0139.toString());

      case "MediumSeaGreen":

        return new Color.hex$ctor(const$0140.toString());

      case "MediumSlateBlue":

        return new Color.hex$ctor(const$0141.toString());

      case "MediumSpringGreen":

        return new Color.hex$ctor(const$0142.toString());

      case "MediumTurquoise":

        return new Color.hex$ctor(const$0143.toString());

      case "MediumVioletRed":

        return new Color.hex$ctor(const$0144.toString());

      case "MidnightBlue":

        return new Color.hex$ctor(const$0145.toString());

      case "MintCream":

        return new Color.hex$ctor(const$0146.toString());

      case "MistyRose":

        return new Color.hex$ctor(const$0147.toString());

      case "Moccasin":

        return new Color.hex$ctor(const$0148.toString());

      case "NavajoWhite":

        return new Color.hex$ctor(const$0149.toString());

      case "Navy":

        return new Color.hex$ctor(const$0150.toString());

      case "OldLace":

        return new Color.hex$ctor(const$0151.toString());

      case "Olive":

        return new Color.hex$ctor(const$0152.toString());

      case "OliveDrab":

        return new Color.hex$ctor(const$0153.toString());

      case "Orange":

        return new Color.hex$ctor(const$0154.toString());

      case "OrangeRed":

        return new Color.hex$ctor(const$0155.toString());

      case "Orchid":

        return new Color.hex$ctor(const$0156.toString());

      case "PaleGoldenrod":

        return new Color.hex$ctor(const$0157.toString());

      case "PaleGreen":

        return new Color.hex$ctor(const$0158.toString());

      case "PaleTurquoise":

        return new Color.hex$ctor(const$0159.toString());

      case "PaleVioletRed":

        return new Color.hex$ctor(const$0160.toString());

      case "PapayaWhip":

        return new Color.hex$ctor(const$0161.toString());

      case "PeachPuff":

        return new Color.hex$ctor(const$0162.toString());

      case "Peru":

        return new Color.hex$ctor(const$0163.toString());

      case "Pink":

        return new Color.hex$ctor(const$0164.toString());

      case "Plum":

        return new Color.hex$ctor(const$0165.toString());

      case "PowderBlue":

        return new Color.hex$ctor(const$0166.toString());

      case "Purple":

        return new Color.hex$ctor(const$0167.toString());

      case "Red":

        return new Color.hex$ctor(const$0168.toString());

      case "RosyBrown":

        return new Color.hex$ctor(const$0169.toString());

      case "RoyalBlue":

        return new Color.hex$ctor(const$0170.toString());

      case "SaddleBrown":

        return new Color.hex$ctor(const$0171.toString());

      case "Salmon":

        return new Color.hex$ctor(const$0172.toString());

      case "SandyBrown":

        return new Color.hex$ctor(const$0173.toString());

      case "SeaGreen":

        return new Color.hex$ctor(const$0174.toString());

      case "SeaShell":

        return new Color.hex$ctor(const$0175.toString());

      case "Sienna":

        return new Color.hex$ctor(const$0176.toString());

      case "Silver":

        return new Color.hex$ctor(const$0177.toString());

      case "SkyBlue":

        return new Color.hex$ctor(const$0178.toString());

      case "SlateBlue":

        return new Color.hex$ctor(const$0179.toString());

      case "SlateGray":

        return new Color.hex$ctor(const$0180.toString());

      case "Snow":

        return new Color.hex$ctor(const$0181.toString());

      case "SpringGreen":

        return new Color.hex$ctor(const$0182.toString());

      case "SteelBlue":

        return new Color.hex$ctor(const$0183.toString());

      case "Tan":

        return new Color.hex$ctor(const$0184.toString());

      case "Teal":

        return new Color.hex$ctor(const$0185.toString());

      case "Thistle":

        return new Color.hex$ctor(const$0186.toString());

      case "Tomato":

        return new Color.hex$ctor(const$0187.toString());

      case "Turquoise":

        return new Color.hex$ctor(const$0188.toString());

      case "Violet":

        return new Color.hex$ctor(const$0189.toString());

      case "Wheat":

        return new Color.hex$ctor(const$0190.toString());

      case "White":

        return new Color.hex$ctor(const$0054.toString());

      case "WhiteSmoke":

        return new Color.hex$ctor(const$0191.toString());

      case "Yellow":

        return new Color.hex$ctor(const$0192.toString());

      case "YellowGreen":

        return new Color.hex$ctor(const$0193.toString());

      default:

        return value;

    }
  }
}
StringToColorConverter.prototype.convert$1 = StringToColorConverter.prototype.convert;
function StringToSolidColorBrushConverter() {

}
StringToSolidColorBrushConverter.prototype.is$IValueConverter = function(){return true};
StringToSolidColorBrushConverter.prototype.convert = function(value, parameter) {
  if (!((typeof(value) == 'string'))) return value;
  if (value.startsWith("#")) {
    return new SolidColorBrush(new Color.hex$ctor(value));
  }
  switch (value) {
    case "AliceBlue":

      return new SolidColorBrush(new Color.hex$ctor(const$0055.toString()));

    case "AntiqueWhite":

      return new SolidColorBrush(new Color.hex$ctor(const$0056.toString()));

    case "Aqua":

      return new SolidColorBrush(new Color.hex$ctor(const$0057.toString()));

    case "Aquamarine":

      return new SolidColorBrush(new Color.hex$ctor(const$0058.toString()));

    case "Azure":

      return new SolidColorBrush(new Color.hex$ctor(const$0059.toString()));

    case "Beige":

      return new SolidColorBrush(new Color.hex$ctor(const$0060.toString()));

    case "Bisque":

      return new SolidColorBrush(new Color.hex$ctor(const$0061.toString()));

    case "Black":

      return new SolidColorBrush(new Color.hex$ctor(const$0062.toString()));

    case "BlanchedAlmond":

      return new SolidColorBrush(new Color.hex$ctor(const$0063.toString()));

    case "Blue":

      return new SolidColorBrush(new Color.hex$ctor(const$0064.toString()));

    case "BlueViolet":

      return new SolidColorBrush(new Color.hex$ctor(const$0065.toString()));

    case "Brown":

      return new SolidColorBrush(new Color.hex$ctor(const$0066.toString()));

    case "BurlyWood":

      return new SolidColorBrush(new Color.hex$ctor(const$0067.toString()));

    case "CadetBlue":

      return new SolidColorBrush(new Color.hex$ctor(const$0068.toString()));

    case "Chartreuse":

      return new SolidColorBrush(new Color.hex$ctor(const$0069.toString()));

    case "Chocolate":

      return new SolidColorBrush(new Color.hex$ctor(const$0070.toString()));

    case "Coral":

      return new SolidColorBrush(new Color.hex$ctor(const$0071.toString()));

    case "ConflowerBlue":

      return new SolidColorBrush(new Color.hex$ctor(const$0072.toString()));

    case "Cornsilk":

      return new SolidColorBrush(new Color.hex$ctor(const$0073.toString()));

    case "Crimson":

      return new SolidColorBrush(new Color.hex$ctor(const$0074.toString()));

    case "Cyan":

      return new SolidColorBrush(new Color.hex$ctor(const$0075.toString()));

    case "DarkBlue":

      return new SolidColorBrush(new Color.hex$ctor(const$0076.toString()));

    case "DarkCyan":

      return new SolidColorBrush(new Color.hex$ctor(const$0077.toString()));

    case "DarkGoldenrod":

      return new SolidColorBrush(new Color.hex$ctor(const$0078.toString()));

    case "DarkGray":

      return new SolidColorBrush(new Color.hex$ctor(const$0079.toString()));

    case "DarkGreen":

      return new SolidColorBrush(new Color.hex$ctor(const$0080.toString()));

    case "DarkKhaki":

      return new SolidColorBrush(new Color.hex$ctor(const$0081.toString()));

    case "DarkMagenta":

      return new SolidColorBrush(new Color.hex$ctor(const$0082.toString()));

    case "DarkOliveGreen":

      return new SolidColorBrush(new Color.hex$ctor(const$0083.toString()));

    case "DarkOrange":

      return new SolidColorBrush(new Color.hex$ctor(const$0084.toString()));

    case "DarkOrchid":

      return new SolidColorBrush(new Color.hex$ctor(const$0085.toString()));

    case "DarkRed":

      return new SolidColorBrush(new Color.hex$ctor(const$0086.toString()));

    case "DarkSalmon":

      return new SolidColorBrush(new Color.hex$ctor(const$0087.toString()));

    case "DarkSeaGreen":

      return new SolidColorBrush(new Color.hex$ctor(const$0088.toString()));

    case "DarkSlateBlue":

      return new SolidColorBrush(new Color.hex$ctor(const$0089.toString()));

    case "DarkSlateGray":

      return new SolidColorBrush(new Color.hex$ctor(const$0090.toString()));

    case "DarkTurquoise":

      return new SolidColorBrush(new Color.hex$ctor(const$0091.toString()));

    case "DarkViolet":

      return new SolidColorBrush(new Color.hex$ctor(const$0092.toString()));

    case "DeepPink":

      return new SolidColorBrush(new Color.hex$ctor(const$0093.toString()));

    case "DeepSkyBlue":

      return new SolidColorBrush(new Color.hex$ctor(const$0094.toString()));

    case "DimGray":

      return new SolidColorBrush(new Color.hex$ctor(const$0095.toString()));

    case "DodgerBlue":

      return new SolidColorBrush(new Color.hex$ctor(const$0096.toString()));

    case "Firebrick":

      return new SolidColorBrush(new Color.hex$ctor(const$0097.toString()));

    case "FloralWhite":

      return new SolidColorBrush(new Color.hex$ctor(const$0098.toString()));

    case "ForestGreen":

      return new SolidColorBrush(new Color.hex$ctor(const$0099.toString()));

    case "Fuchsia":

      return new SolidColorBrush(new Color.hex$ctor(const$0100.toString()));

    case "Gainsboro":

      return new SolidColorBrush(new Color.hex$ctor(const$0101.toString()));

    case "GhostWhite":

      return new SolidColorBrush(new Color.hex$ctor(const$0102.toString()));

    case "Gold":

      return new SolidColorBrush(new Color.hex$ctor(const$0103.toString()));

    case "Goldenrod":

      return new SolidColorBrush(new Color.hex$ctor(const$0104.toString()));

    case "Gray":

      return new SolidColorBrush(new Color.hex$ctor(const$0105.toString()));

    case "Green":

      return new SolidColorBrush(new Color.hex$ctor(const$0106.toString()));

    case "GreenYellow":

      return new SolidColorBrush(new Color.hex$ctor(const$0107.toString()));

    case "Honeydew":

      return new SolidColorBrush(new Color.hex$ctor(const$0108.toString()));

    case "HotPink":

      return new SolidColorBrush(new Color.hex$ctor(const$0109.toString()));

    case "IndianRed":

      return new SolidColorBrush(new Color.hex$ctor(const$0110.toString()));

    case "Indigo":

      return new SolidColorBrush(new Color.hex$ctor(const$0111.toString()));

    case "Ivory":

      return new SolidColorBrush(new Color.hex$ctor(const$0112.toString()));

    case "Khaki":

      return new SolidColorBrush(new Color.hex$ctor(const$0113.toString()));

    case "Lavender":

      return new SolidColorBrush(new Color.hex$ctor(const$0114.toString()));

    case "LavenderBlush":

      return new SolidColorBrush(new Color.hex$ctor(const$0115.toString()));

    case "LawnGreen":

      return new SolidColorBrush(new Color.hex$ctor(const$0116.toString()));

    case "LemonChiffon":

      return new SolidColorBrush(new Color.hex$ctor(const$0117.toString()));

    case "LightBlue":

      return new SolidColorBrush(new Color.hex$ctor(const$0118.toString()));

    case "LightCoral":

      return new SolidColorBrush(new Color.hex$ctor(const$0119.toString()));

    case "LightCyan":

      return new SolidColorBrush(new Color.hex$ctor(const$0120.toString()));

    case "LightGoldenrod":

      return new SolidColorBrush(new Color.hex$ctor(const$0121.toString()));

    case "LightGray":

      return new SolidColorBrush(new Color.hex$ctor(const$0122.toString()));

    case "LightGreen":

      return new SolidColorBrush(new Color.hex$ctor(const$0123.toString()));

    case "LightPink":

      return new SolidColorBrush(new Color.hex$ctor(const$0124.toString()));

    case "LightSalmon":

      return new SolidColorBrush(new Color.hex$ctor(const$0125.toString()));

    case "LightSeaGreen":

      return new SolidColorBrush(new Color.hex$ctor(const$0126.toString()));

    case "LightSkyBlue":

      return new SolidColorBrush(new Color.hex$ctor(const$0127.toString()));

    case "LightSlateGray":

      return new SolidColorBrush(new Color.hex$ctor(const$0128.toString()));

    case "LightSteelBlue":

      return new SolidColorBrush(new Color.hex$ctor(const$0129.toString()));

    case "LightYellow":

      return new SolidColorBrush(new Color.hex$ctor(const$0130.toString()));

    case "Lime":

      return new SolidColorBrush(new Color.hex$ctor(const$0131.toString()));

    case "LimeGreen":

      return new SolidColorBrush(new Color.hex$ctor(const$0132.toString()));

    case "Linen":

      return new SolidColorBrush(new Color.hex$ctor(const$0133.toString()));

    case "Magenta":

      return new SolidColorBrush(new Color.hex$ctor(const$0134.toString()));

    case "Maroon":

      return new SolidColorBrush(new Color.hex$ctor(const$0135.toString()));

    case "MediumAquamarine":

      return new SolidColorBrush(new Color.hex$ctor(const$0136.toString()));

    case "MediumBlue":

      return new SolidColorBrush(new Color.hex$ctor(const$0137.toString()));

    case "MediumOrchid":

      return new SolidColorBrush(new Color.hex$ctor(const$0138.toString()));

    case "MediumPurple":

      return new SolidColorBrush(new Color.hex$ctor(const$0139.toString()));

    case "MediumSeaGreen":

      return new SolidColorBrush(new Color.hex$ctor(const$0140.toString()));

    case "MediumSlateBlue":

      return new SolidColorBrush(new Color.hex$ctor(const$0141.toString()));

    case "MediumSpringGreen":

      return new SolidColorBrush(new Color.hex$ctor(const$0142.toString()));

    case "MediumTurquoise":

      return new SolidColorBrush(new Color.hex$ctor(const$0143.toString()));

    case "MediumVioletRed":

      return new SolidColorBrush(new Color.hex$ctor(const$0144.toString()));

    case "MidnightBlue":

      return new SolidColorBrush(new Color.hex$ctor(const$0145.toString()));

    case "MintCream":

      return new SolidColorBrush(new Color.hex$ctor(const$0146.toString()));

    case "MistyRose":

      return new SolidColorBrush(new Color.hex$ctor(const$0147.toString()));

    case "Moccasin":

      return new SolidColorBrush(new Color.hex$ctor(const$0148.toString()));

    case "NavajoWhite":

      return new SolidColorBrush(new Color.hex$ctor(const$0149.toString()));

    case "Navy":

      return new SolidColorBrush(new Color.hex$ctor(const$0150.toString()));

    case "OldLace":

      return new SolidColorBrush(new Color.hex$ctor(const$0151.toString()));

    case "Olive":

      return new SolidColorBrush(new Color.hex$ctor(const$0152.toString()));

    case "OliveDrab":

      return new SolidColorBrush(new Color.hex$ctor(const$0153.toString()));

    case "Orange":

      return new SolidColorBrush(new Color.hex$ctor(const$0154.toString()));

    case "OrangeRed":

      return new SolidColorBrush(new Color.hex$ctor(const$0155.toString()));

    case "Orchid":

      return new SolidColorBrush(new Color.hex$ctor(const$0156.toString()));

    case "PaleGoldenrod":

      return new SolidColorBrush(new Color.hex$ctor(const$0157.toString()));

    case "PaleGreen":

      return new SolidColorBrush(new Color.hex$ctor(const$0158.toString()));

    case "PaleTurquoise":

      return new SolidColorBrush(new Color.hex$ctor(const$0159.toString()));

    case "PaleVioletRed":

      return new SolidColorBrush(new Color.hex$ctor(const$0160.toString()));

    case "PapayaWhip":

      return new SolidColorBrush(new Color.hex$ctor(const$0161.toString()));

    case "PeachPuff":

      return new SolidColorBrush(new Color.hex$ctor(const$0162.toString()));

    case "Peru":

      return new SolidColorBrush(new Color.hex$ctor(const$0163.toString()));

    case "Pink":

      return new SolidColorBrush(new Color.hex$ctor(const$0164.toString()));

    case "Plum":

      return new SolidColorBrush(new Color.hex$ctor(const$0165.toString()));

    case "PowderBlue":

      return new SolidColorBrush(new Color.hex$ctor(const$0166.toString()));

    case "Purple":

      return new SolidColorBrush(new Color.hex$ctor(const$0167.toString()));

    case "Red":

      return new SolidColorBrush(new Color.hex$ctor(const$0168.toString()));

    case "RosyBrown":

      return new SolidColorBrush(new Color.hex$ctor(const$0169.toString()));

    case "RoyalBlue":

      return new SolidColorBrush(new Color.hex$ctor(const$0170.toString()));

    case "SaddleBrown":

      return new SolidColorBrush(new Color.hex$ctor(const$0171.toString()));

    case "Salmon":

      return new SolidColorBrush(new Color.hex$ctor(const$0172.toString()));

    case "SandyBrown":

      return new SolidColorBrush(new Color.hex$ctor(const$0173.toString()));

    case "SeaGreen":

      return new SolidColorBrush(new Color.hex$ctor(const$0174.toString()));

    case "SeaShell":

      return new SolidColorBrush(new Color.hex$ctor(const$0175.toString()));

    case "Sienna":

      return new SolidColorBrush(new Color.hex$ctor(const$0176.toString()));

    case "Silver":

      return new SolidColorBrush(new Color.hex$ctor(const$0177.toString()));

    case "SkyBlue":

      return new SolidColorBrush(new Color.hex$ctor(const$0178.toString()));

    case "SlateBlue":

      return new SolidColorBrush(new Color.hex$ctor(const$0179.toString()));

    case "SlateGray":

      return new SolidColorBrush(new Color.hex$ctor(const$0180.toString()));

    case "Snow":

      return new SolidColorBrush(new Color.hex$ctor(const$0181.toString()));

    case "SpringGreen":

      return new SolidColorBrush(new Color.hex$ctor(const$0182.toString()));

    case "SteelBlue":

      return new SolidColorBrush(new Color.hex$ctor(const$0183.toString()));

    case "Tan":

      return new SolidColorBrush(new Color.hex$ctor(const$0184.toString()));

    case "Teal":

      return new SolidColorBrush(new Color.hex$ctor(const$0185.toString()));

    case "Thistle":

      return new SolidColorBrush(new Color.hex$ctor(const$0186.toString()));

    case "Tomato":

      return new SolidColorBrush(new Color.hex$ctor(const$0187.toString()));

    case "Turquoise":

      return new SolidColorBrush(new Color.hex$ctor(const$0188.toString()));

    case "Violet":

      return new SolidColorBrush(new Color.hex$ctor(const$0189.toString()));

    case "Wheat":

      return new SolidColorBrush(new Color.hex$ctor(const$0190.toString()));

    case "White":

      return new SolidColorBrush(new Color.hex$ctor(const$0054.toString()));

    case "WhiteSmoke":

      return new SolidColorBrush(new Color.hex$ctor(const$0191.toString()));

    case "Yellow":

      return new SolidColorBrush(new Color.hex$ctor(const$0192.toString()));

    case "YellowGreen":

      return new SolidColorBrush(new Color.hex$ctor(const$0193.toString()));

    default:

      return new SolidColorBrush(new Color.predefined$ctor(const$0054));

  }
}
StringToSolidColorBrushConverter.prototype.convert$1 = StringToSolidColorBrushConverter.prototype.convert;
function StringToRadialGradientDrawModeConverter() {

}
StringToRadialGradientDrawModeConverter.prototype.is$IValueConverter = function(){return true};
StringToRadialGradientDrawModeConverter.prototype.convert = function(value, parameter) {
  if (!((typeof(value) == 'string'))) return value;
  switch (value) {
    case "cover":

      return const$0234;

    case "contain":

      return const$0233;

    default:

      $throw(const$0012);

  }
}
StringToRadialGradientDrawModeConverter.prototype.convert$1 = StringToRadialGradientDrawModeConverter.prototype.convert;
function StringToVisibilityConverter() {

}
StringToVisibilityConverter.prototype.is$IValueConverter = function(){return true};
StringToVisibilityConverter.prototype.convert = function(value, parameter) {
  if ((typeof(value) != 'string')) return value;
  switch (value) {
    case "visible":

      return const$0020;

    case "collapsed":

      return const$0021;

    default:

      return value;

  }
}
StringToVisibilityConverter.prototype.convert$1 = StringToVisibilityConverter.prototype.convert;
function StringToInputTypesConverter() {

}
StringToInputTypesConverter.prototype.is$IValueConverter = function(){return true};
StringToInputTypesConverter.prototype.convert = function(value, parameter) {
  if ((typeof(value) != 'string')) return value;
  switch (value) {
    case "password":

      return const$0238;

    case "email":

      return const$0239;

    case "date":

      return const$0240;

    case "datetime":

      return const$0241;

    case "month":

      return const$0242;

    case "search":

      return const$0243;

    case "telephone":

      return const$0244;

    case "text":

      return const$0245;

    case "time":

      return const$0246;

    case "url":

      return const$0247;

    case "week":

      return const$0248;

    default:

      $throw(const$0012);

  }
}
StringToInputTypesConverter.prototype.convert$1 = StringToInputTypesConverter.prototype.convert;
$inherits(ResourceCollection, FrameworkResource);
function ResourceCollection() {
  this.resources = new ObservableList_FrameworkResource();
  FrameworkResource.call(this);
  this._stateBag.$setindex("CONTAINER_CONTEXT", this.resources);
  $add$(this.resources.listChanged, this.get$_onListChanging());
}
ResourceCollection.prototype.makeMe = function() {
  return new ResourceCollection();
}
ResourceCollection.prototype._onListChanging = function(_, args) {
  if (!args.newItems.isEmpty()) {
    args.newItems.forEach$1((function (r) {
      if (!((r instanceof FrameworkResource)) || (r instanceof ResourceCollection)) $throw(const$0012);
    })
    );
  }
}
ResourceCollection.prototype.get$_onListChanging = function() {
  return this._onListChanging.bind(this);
}
ResourceCollection.prototype.get$type = function() {
  return "ResourceCollection";
}
$inherits(VarResource, FrameworkResource);
function VarResource() {
  FrameworkResource.call(this);
  this._initVarProperties();
  this._stateBag.$setindex("RESOURCE_PROPERTY", this.valueProperty);
  this._stateBag.$setindex("CONTAINER_CONTEXT", this.valueProperty);
}
VarResource.prototype.makeMe = function() {
  return new VarResource();
}
VarResource.prototype._initVarProperties = function() {
  this.valueProperty = new FrameworkProperty(this, "value", (function (v) {

  })
  );
}
VarResource.prototype.get$value = function() {
  return getValue(this.valueProperty);
}
VarResource.prototype.set$value = function(c) {
  return setValue(this.valueProperty, c);
}
VarResource.prototype.get$type = function() {
  return "Var";
}
$inherits(Color, FrameworkResource);
function Color() {
  FrameworkResource.call(this);
  this._initColorProperties();
  this._stateBag.$setindex("RESOURCE_PROPERTY", this.valueProperty);
}
Color.predefined$ctor = function(predefinedColor) {
  FrameworkResource.call(this);
  this._initColorProperties();
  this.set$value(predefinedColor.toString());
}
Color.predefined$ctor.prototype = Color.prototype;
Color.hex$ctor = function(hex) {
  FrameworkResource.call(this);
  this._initColorProperties();
  this.set$value(hex);
}
Color.hex$ctor.prototype = Color.prototype;
Color.prototype.makeMe = function() {
  return new Color();
}
Color.prototype.get$value = function() {
  return getValue(this.valueProperty);
}
Color.prototype.set$value = function(c) {
  return setValue(this.valueProperty, c);
}
Color.prototype._initColorProperties = function() {
  this.valueProperty = new FrameworkProperty(this, "value", (function (c) {
    if (!c.startsWith("#") || c.length != (7)) {
      db(c);
      $throw(const$0012);
    }
  })
  , const$0054.toString());
}
Color.prototype.toString = function() {
  return this.get$value();
}
Color.prototype.get$type = function() {
  return "Color";
}
$inherits(Brush, FrameworkResource);
function Brush() {
  FrameworkResource.call(this);
}
Brush.prototype.get$type = function() {
  return "Brush";
}
$inherits(SolidColorBrush, Brush);
function SolidColorBrush(toColor) {
  Brush.call(this);
  this._initSolidColorBrushProperties();
  if (toColor != null) this.set$color(toColor);
}
SolidColorBrush.prototype.makeMe = function() {
  return new SolidColorBrush();
}
SolidColorBrush.prototype._initSolidColorBrushProperties = function() {
  this.colorProperty = new FrameworkProperty(this, "color", (function (c) {

  })
  );
}
SolidColorBrush.prototype.get$color = function() {
  return getValue(this.colorProperty);
}
SolidColorBrush.prototype.set$color = function(c) {
  return setValue(this.colorProperty, c);
}
SolidColorBrush.prototype.renderBrush = function(element) {
  element.get$style().set$background(("" + this.get$color()));
}
SolidColorBrush.prototype.get$type = function() {
  return "SolidColorBrush";
}
$inherits(LinearGradientBrush, Brush);
function LinearGradientBrush(dir, fallback) {
  Brush.call(this);
  this._initLinearGradientBrushProperties();
  if (dir != null) this.set$direction(dir);
  if (fallback != null) this.set$fallbackColor(fallback);
  this._stateBag.$setindex("CONTAINER_CONTEXT", this.stopsProperty);
}
LinearGradientBrush.prototype.makeMe = function() {
  return new LinearGradientBrush();
}
LinearGradientBrush.prototype.get$stops = function() {
  return getValue(this.stopsProperty);
}
LinearGradientBrush.prototype.get$direction = function() {
  return getValue(this.directionProperty);
}
LinearGradientBrush.prototype.set$direction = function(value) {
  return setValue(this.directionProperty, value);
}
LinearGradientBrush.prototype.get$fallbackColor = function() {
  return getValue(this.fallbackColorProperty);
}
LinearGradientBrush.prototype.set$fallbackColor = function(value) {
  return setValue(this.fallbackColorProperty, value);
}
LinearGradientBrush.prototype._initLinearGradientBrushProperties = function() {
  this.stopsProperty = new FrameworkProperty(this, "stops", (function (v) {

  })
  , new Array());
  this.directionProperty = new FrameworkProperty(this, "direction", (function (v) {

  })
  , const$0229, const$0231);
  this.fallbackColorProperty = new FrameworkProperty(this, "fallbackColor", (function (v) {

  })
  , new Color.predefined$ctor(const$0054), const$0232);
}
LinearGradientBrush.prototype.renderBrush = function(element) {
  var $this = this;
  element.get$style().set$background(this.get$fallbackColor().toString());
  var colorString = "";
  this.get$stops().forEach$1((function (stop) {
    colorString = $add$(colorString, stop.get$color().toString());
    if (stop.get$percent() != (-1)) colorString = $add$(colorString, (" " + stop.get$percent() + "%"));
    if ($ne$(stop, $this.get$stops().last())) colorString = $add$(colorString, ", ");
  })
  );
  element.get$style().set$background(("-webkit-linear-gradient(" + this.get$direction().toString() + ", " + colorString + ")"));
  element.get$style().set$background(("-moz-linear-gradient(" + this.get$direction().toString() + ", " + colorString + ")"));
  element.get$style().set$background(("-ms-linear-gradient(" + this.get$direction().toString() + ", " + colorString + ")"));
  element.get$style().set$background(("-o-linear-gradient(" + this.get$direction().toString() + ", " + colorString + ")"));
  element.get$style().set$background(("linear-gradient(" + this.get$direction().toString() + ", " + colorString + ")"));
}
LinearGradientBrush.prototype.get$type = function() {
  return "LinearGradientBrush";
}
$inherits(RadialGradientBrush, Brush);
function RadialGradientBrush(mode, fallback) {
  Brush.call(this);
  this._initRadialGradientProperties();
  if (fallback != null) this.set$fallbackColor(fallback);
  if (mode != null) this.set$drawMode(mode);
}
RadialGradientBrush.prototype.makeMe = function() {
  return new RadialGradientBrush();
}
RadialGradientBrush.prototype.get$stops = function() {
  return getValue(this.stopsProperty);
}
RadialGradientBrush.prototype.get$drawMode = function() {
  return getValue(this.drawModeProperty);
}
RadialGradientBrush.prototype.set$drawMode = function(value) {
  return setValue(this.drawModeProperty, value);
}
RadialGradientBrush.prototype.get$fallbackColor = function() {
  return getValue(this.fallbackColorProperty);
}
RadialGradientBrush.prototype.set$fallbackColor = function(value) {
  return setValue(this.fallbackColorProperty, value);
}
RadialGradientBrush.prototype._initRadialGradientProperties = function() {
  this.stopsProperty = new FrameworkProperty(this, "stops", (function (v) {

  })
  , new Array());
  this.drawModeProperty = new FrameworkProperty(this, "drawMode", (function (v) {

  })
  , const$0233, const$0235);
  this.fallbackColorProperty = new FrameworkProperty(this, "fallbackColor", (function (v) {

  })
  , new Color.predefined$ctor(const$0054));
}
RadialGradientBrush.prototype.renderBrush = function(element) {
  var $this = this;
  element.get$style().set$background(this.get$fallbackColor().toString());
  var colorString = "";
  this.get$stops().forEach$1((function (stop) {
    colorString = $add$(colorString, stop.get$color().toString());
    if (stop.get$percent() != (-1)) colorString = $add$(colorString, (" " + stop.get$percent() + "%"));
    if ($ne$(stop, $this.get$stops().last())) colorString = $add$(colorString, ", ");
  })
  );
  element.get$style().set$background(("-webkit-radial-gradient(50% 50%, " + this.get$drawMode().toString() + ", " + colorString + ")"));
  element.get$style().set$background(("-moz-radial-gradient(50% 50%, " + this.get$drawMode().toString() + ", " + colorString + ")"));
  element.get$style().set$background(("-ms-radial-gradient(50% 50%, " + this.get$drawMode().toString() + ", " + colorString + ")"));
  element.get$style().set$background(("-o-radial-gradient(50% 50%, " + this.get$drawMode().toString() + ", " + colorString + ")"));
  element.get$style().set$background(("radial-gradient(50% 50%, " + this.get$drawMode().toString() + ", " + colorString + ")"));
}
RadialGradientBrush.prototype.get$type = function() {
  return "RadialGradientBrush";
}
$inherits(StyleSetter, BuckshotObject);
function StyleSetter() {
  BuckshotObject.call(this);
  this._initStyleSetterProperties();
}
StyleSetter.with$ctor = function(propertyName, propertyValue) {
  BuckshotObject.call(this);
  this._initStyleSetterProperties();
  this.set$property(propertyName);
  this.set$value(propertyValue);
}
StyleSetter.with$ctor.prototype = StyleSetter.prototype;
StyleSetter.prototype.makeMe = function() {
  return new StyleSetter();
}
StyleSetter.prototype.get$value = function() {
  return getValue(this.valueProperty);
}
StyleSetter.prototype.set$value = function(newValue) {
  return setValue(this.valueProperty, newValue);
}
StyleSetter.prototype.get$property = function() {
  return getValue(this.propertyProperty);
}
StyleSetter.prototype.set$property = function(v) {
  return setValue(this.propertyProperty, v);
}
StyleSetter.prototype._initStyleSetterProperties = function() {
  this.valueProperty = new FrameworkProperty(this, "value", (function (v) {

  })
  );
  this.propertyProperty = new FrameworkProperty(this, "property", (function (v) {

  })
  );
}
StyleSetter.prototype.get$type = function() {
  return "StyleSetter";
}
$inherits(_StyleTemplateImplementation, FrameworkResource);
function _StyleTemplateImplementation() {
  this.stateBagPrefix = "__StyleBinding__";
  this._registeredElements = new HashSetImplementation_FrameworkElement();
  this._setters = new HashMapImplementation_dart_core_String$StyleSetter();
  FrameworkResource.call(this);
  this._initStyleTemplateProperties();
  $add$(this.get$setters().listChanged, this.get$_onSettersCollectionChanging());
}
_StyleTemplateImplementation.prototype.makeMe = function() {
  return new _StyleTemplateImplementation();
}
_StyleTemplateImplementation.prototype.get$setters = function() {
  return getValue(this.settersProperty);
}
_StyleTemplateImplementation.prototype.setProperty = function(property, newValue) {
  if (this._setters.containsKey(property)) {
    this._setters.$index(property).set$value(newValue);
  }
  else {
    this._setters.$setindex(property, new StyleSetter.with$ctor(property, newValue));
    this._registerNewSetterBindings(this._setters.$index(property));
  }
}
_StyleTemplateImplementation.prototype._onSettersCollectionChanging = function(_, args) {
  var $this = this;
  args.oldItems.forEach$1((function (item) {
    if ($this._setters.containsKey(item.get$property())) $this._setters.remove(item.get$property());
  })
  );
  args.newItems.forEach$1((function (item) {
    $this.setProperty(item.get$property(), item.get$value());
  })
  );
}
_StyleTemplateImplementation.prototype.get$_onSettersCollectionChanging = function() {
  return this._onSettersCollectionChanging.bind(this);
}
_StyleTemplateImplementation.prototype._registerNewSetterBindings = function(newSetter) {
  var $this = this;
  this._registeredElements.forEach$1((function (e) {
    $this._bindSetterToElement(newSetter, e);
  })
  );
}
_StyleTemplateImplementation.prototype._initStyleTemplateProperties = function() {
  this.settersProperty = new FrameworkProperty(this, "setters", (function (v) {

  })
  , new ObservableList_StyleSetter());
}
_StyleTemplateImplementation.prototype._registerElement = function(element) {
  this._registeredElements.add(element);
  this._setStyleBindings(element);
}
_StyleTemplateImplementation.prototype._unregisterElement = function(element) {
  if (this._registeredElements.contains(element)) {
    this._registeredElements.remove(element);
    this._unsetStyleBindings(element);
  }
}
_StyleTemplateImplementation.prototype._setStyleBindings = function(element) {
  var $this = this;
  this._setters.forEach$1((function (_, s) {
    $this._bindSetterToElement(s, element);
  })
  );
}
_StyleTemplateImplementation.prototype._unsetStyleBindings = function(element) {
  var $this = this;
  element._stateBag.forEach$1((function (k, v) {
    if (k.startsWith($this.stateBagPrefix)) {
      v.unregister$0();
      element._stateBag.remove(k);
    }
  })
  );
}
_StyleTemplateImplementation.prototype._bindSetterToElement = function(setter, element) {
  var $this = this;
  element._frameworkProperties.filter$1((function (p) {
    return p.propertyName == setter.get$property();
  })
  ).forEach$1((function (p) {
    var b = new _BindingImplementation(setter.valueProperty, p, const$0016, const$0017);
    p.sourceObject._stateBag.$setindex(("" + $this.stateBagPrefix + setter.get$property() + "__"), b);
  })
  );
}
_StyleTemplateImplementation.prototype.get$type = function() {
  return "StyleTemplate";
}
$inherits(GradientStop, BuckshotObject);
function GradientStop() {
  BuckshotObject.call(this);
  this._initGradientStopProperties();
}
GradientStop.prototype.makeMe = function() {
  return new GradientStop();
}
GradientStop.prototype.get$color = function() {
  return getValue(this.colorProperty);
}
GradientStop.prototype.set$color = function(value) {
  return setValue(this.colorProperty, value);
}
GradientStop.prototype.get$percent = function() {
  return getValue(this.percentProperty);
}
GradientStop.prototype._initGradientStopProperties = function() {
  this.colorProperty = new FrameworkProperty(this, "color", (function (v) {

  })
  , null, const$0232);
  this.percentProperty = new FrameworkProperty(this, "percent", (function (v) {

  })
  , (-1), const$0019);
}
GradientStop.prototype.get$type = function() {
  return "GradientStop";
}
$inherits(Buckshot, FrameworkObject);
Buckshot._init$ctor = function(rootID) {
  this.namedElements = new HashMapImplementation_dart_core_String$FrameworkObject();
  this._resourceRegistry = new HashMapImplementation_dart_core_String$FrameworkResource();
  this._objectRegistry = new HashMapImplementation_dart_core_String$Dynamic();
  this._attachedProperties = new HashMapImplementation_AttachedFrameworkProperty$HashMap_FrameworkObject$Dynamic();
  this.domRoot = new Border();
  FrameworkObject.call(this);
  $globals.Buckshot__ref = this;
  this._initBuckshotSystem(rootID);
}
Buckshot._init$ctor.prototype = Buckshot.prototype;
function Buckshot() {}
Buckshot.Buckshot$_cached$factory = function() {
  if ($globals.Buckshot__ref != null) return $globals.Buckshot__ref;
  new Buckshot._init$ctor("#BuckshotHost");
  return $globals.Buckshot__ref;
}
Buckshot.prototype._initBuckshotSystem = function(rootID) {
  this._domRootElement = get$$document().query(rootID);
  if (this._domRootElement == null) $throw(new BuckshotException(("Unable to locate required root" + (" element (must be <div id='" + rootID + "' />)"))));
  if (this._domRootElement.get$tagName() != "DIV") $throw(new BuckshotException(("Root element for Buckshot" + " must be a <div>. Element given was" + (" a <" + this._domRootElement.get$tagName().toLowerCase() + ">"))));
  this._initCSS();
  this.defaultPresentationProvider = new BuckshotTemplateProvider();
  this._initializeBuckshotProperties();
  this._domRootElement.get$elements().clear$_();
  this._domRootElement.get$elements().add(this.domRoot._component);
  this._registerCoreElements();
  this._registerCoreControls();
}
Buckshot.prototype._initCSS = function() {
  get$$document().head.get$elements().add(_ElementFactoryProvider.Element$html$factory("<style id=\"__BuckshotCSS__\"></style>"));
  this._buckshotCSS = get$$document().head.querySelector("#__BuckshotCSS__");
  if (this._buckshotCSS == null) $throw(const$0012);
}
Buckshot.prototype._initializeBuckshotProperties = function() {
  var $this = this;
  this.versionProperty = new FrameworkProperty($globals.Buckshot__ref, "version", (function (_) {

  })
  , "0.41 Alpha");
  this.versionProperty.readOnly = true;
  this.windowWidthProperty = new FrameworkProperty($globals.Buckshot__ref, "windowWidth", (function (_) {

  })
  , get$$window().innerWidth);
  this.windowHeightProperty = new FrameworkProperty($globals.Buckshot__ref, "windowHeight", (function (_) {

  })
  , get$$window().innerHeight);
  get$$window().get$on().get$resize().add($wrap_call$1((function (e) {
    if ($globals.Buckshot__ref == null) return;
    if (get$$window().innerWidth != $this.get$windowWidth()) {
      setValue($this.windowWidthProperty, get$$window().innerWidth);
    }
    if (get$$window().innerHeight != $this.get$windowHeight()) {
      setValue($this.windowHeightProperty, get$$window().innerHeight);
    }
  })
  ), false);
}
Buckshot.findByName = function(name, startingWith) {
  if (startingWith.get$name() != null && startingWith.get$name() == name) return startingWith;
  if (!startingWith.get$isContainer()) return null;
  var cc = startingWith._stateBag.$index("CONTAINER_CONTEXT");
  if (!!(cc && cc.is$List())) {
    for (var $$i = cc.iterator(); $$i.hasNext(); ) {
      var el = $$i.next();
      var result = Buckshot.findByName(name, el);
      if ($ne$(result)) return result;
    }
  }
  else if ((cc instanceof FrameworkProperty)) {
    var obj = getValue(cc);
    if (obj == null || !((obj instanceof FrameworkElement))) return null;
    return Buckshot.findByName(name, obj);
  }
  else {
    return null;
  }
}
Buckshot.prototype._registerCoreElements = function() {
  this.registerElement(new Ellipse());
  this.registerElement(new Rectangle());
  this.registerElement(new Line());
  this.registerElement(new PolyLine());
  this.registerElement(new Polygon());
  this.registerElement(new StackPanel());
  this.registerElement(new Grid());
  this.registerElement(new Border());
  this.registerElement(new TextArea());
  this.registerElement(new LayoutCanvas());
  this.registerElement(new TextBlock());
  this.registerElement(new CheckBox());
  this.registerElement(new RadioButton());
  this.registerElement(new Hyperlink());
  this.registerElement(new Image());
  this.registerElement(new RawHtml());
  this.registerElement(new ColumnDefinition());
  this.registerElement(new RowDefinition());
  this.registerElement(new DropDownListItem());
  this.registerElement(new CollectionPresenter());
  this.registerElement(new ResourceCollection());
  this.registerElement(new Color());
  this.registerElement(new LinearGradientBrush());
  this.registerElement(new GradientStop());
  this.registerElement(new SolidColorBrush());
  this.registerElement(new RadialGradientBrush());
  this.registerElement(new StyleSetter());
  this.registerElement(new _StyleTemplateImplementation());
  this.registerElement(new VarResource());
  this.registerElement(new ControlTemplate());
  this.registerElement(new AnimationResource());
  this.registerElement(new AnimationKeyFrame());
  this.registerElement(new AnimationState());
  this._objectRegistry.$setindex("grid.column", Grid.setColumn);
  this._objectRegistry.$setindex("grid.row", Grid.setRow);
  this._objectRegistry.$setindex("grid.columnspan", Grid.setColumnSpan);
  this._objectRegistry.$setindex("grid.rowspan", Grid.setRowSpan);
  this._objectRegistry.$setindex("layoutcanvas.top", LayoutCanvas.setTop);
  this._objectRegistry.$setindex("layoutcanvas.left", LayoutCanvas.setLeft);
}
Buckshot.prototype._registerCoreControls = function() {
  this.registerElement(new TextBox());
  this.registerElement(new Slider());
  this.registerElement(new Button());
  this.registerElement(new DropDownList());
  this.registerElement(new ListBox());
}
Buckshot.prototype.retrieveResource = function(resourceKey) {
  var lowered = resourceKey.trim().toLowerCase();
  if (!this._resourceRegistry.containsKey(lowered)) return null;
  var res = this._resourceRegistry.$index(lowered);
  if (res.get$_stateBag().containsKey("RESOURCE_PROPERTY")) {
    return getValue(res.get$_stateBag().$index("RESOURCE_PROPERTY"));
  }
  else {
    return res;
  }
}
Buckshot.prototype.registerResource = function(resource) {
  this._resourceRegistry.$setindex(resource.get$key().trim().toLowerCase(), resource);
}
Buckshot.prototype.registerElement = function(o) {
  this._objectRegistry.$setindex(o.get$type().trim().toLowerCase(), o);
}
Buckshot.prototype.get$windowWidth = function() {
  return getValue(this.windowWidthProperty);
}
Buckshot.prototype.get$windowHeight = function() {
  return getValue(this.windowHeightProperty);
}
Buckshot.prototype.set$rootView = function(view) {
  this._currentView = view;
  this.domRoot._isLoaded = true;
  this.domRoot.set$content(view.get$rootVisual());
}
Buckshot.prototype.get$type = function() {
  return "BuckshotSystem";
}
$inherits(FrameworkPropertyBase, HashableObject);
function FrameworkPropertyBase(sourceObject, propertyName, propertyChangedCallback, stringToValueConverter) {
  this.sourceObject = sourceObject;
  this.propertyName = propertyName;
  this.propertyChangedCallback = propertyChangedCallback;
  this.stringToValueConverter = stringToValueConverter;
  this.propertyChanging = new _FrameworkEventImplementation_PropertyChangingEventArgs();
  HashableObject.call(this);
}
FrameworkPropertyBase.prototype.get$type = function() {
  return "FrameworkPropertyBase";
}
$inherits(FrameworkProperty, FrameworkPropertyBase);
function FrameworkProperty(sourceObject, propertyName, propertyChangedCallback, defaultValue, converter) {
  this.readOnly = false;
  FrameworkPropertyBase.call(this, sourceObject, propertyName, propertyChangedCallback, converter);
  if (this.sourceObject != null) this.sourceObject._frameworkProperties.add(this);
  if (propertyChangedCallback == null) propertyChangedCallback = (function (v) {

  })
  ;
  if (null != defaultValue) {
    this.set$value(defaultValue);
    propertyChangedCallback.call$1(this.get$value());
    this.propertyChanging.invoke(this, new PropertyChangingEventArgs(null, this.get$value()));
  }
}
FrameworkProperty.prototype.get$value = function() {
  return this._Buckshot_Client_value;
}
FrameworkProperty.prototype.set$value = function(v) {
  if (this.readOnly) {
    $throw(const$0012);
  }
  this._Buckshot_Client_value = v;
}
FrameworkProperty.prototype.get$previousValue = function() {
  return this._previousValue;
}
FrameworkProperty.prototype.get$type = function() {
  return "FrameworkProperty";
}
$inherits(AnimatingFrameworkProperty, FrameworkProperty);
function AnimatingFrameworkProperty(sourceObject, propertyName, propertyChangedCallback, cssPropertyPeer, value, converter) {
  this.cssPropertyPeer = cssPropertyPeer;
  FrameworkProperty.call(this, sourceObject, propertyName, propertyChangedCallback, value, converter);
  if (!(sourceObject instanceof FrameworkElement)) $throw(const$0012);
}
AnimatingFrameworkProperty.prototype.get$type = function() {
  return "AnimatingFrameworkProperty";
}
function ObservableList() {}
ObservableList.prototype.is$List = function(){return true};
ObservableList.prototype.is$Collection = function(){return true};
ObservableList.prototype.get$listChanged = function() { return this.listChanged; };
ObservableList.prototype.$setindex = function(index, value) {
  var oldValue = this._Buckshot_Client_list.$index(index);
  this._Buckshot_Client_list.$setindex(index, value);
  this._notifySingleOldAndNew(oldValue, value);
}
ObservableList.prototype.$index = function(index) {
  return this._Buckshot_Client_list.$index(index);
}
ObservableList.prototype.isEmpty = function() {
  return this._Buckshot_Client_list.isEmpty();
}
ObservableList.prototype.forEach = function(f) {
  return this._Buckshot_Client_list.forEach$1(f);
}
ObservableList.prototype.filter = function(f) {
  return this._Buckshot_Client_list.filter$1(f);
}
ObservableList.prototype.every = function(f) {
  return this._Buckshot_Client_list.every$1(f);
}
ObservableList.prototype.some = function(f) {
  return this._Buckshot_Client_list.some$1(f);
}
ObservableList.prototype.iterator = function() {
  return this._Buckshot_Client_list.iterator();
}
ObservableList.prototype.indexOf = function(element, start) {
  return this._Buckshot_Client_list.indexOf(element, start);
}
ObservableList.prototype.get$length = function() {
  return this._Buckshot_Client_list.get$length();
}
ObservableList.prototype.getRange = function(start, length) {
  return this._Buckshot_Client_list.getRange(start, length);
}
ObservableList.prototype.add = function(element) {
  this._Buckshot_Client_list.add(element);
  this._notifySingleNew(element);
}
ObservableList.prototype.remove = function(element) {
  if ($eq$(this._Buckshot_Client_list.indexOf$1(element), (-1))) return;
  this._Buckshot_Client_list.removeRange(this._Buckshot_Client_list.indexOf$1(element), (1));
  this._notifySingleOld(element);
}
ObservableList.prototype.addAll = function(elements) {
  this._Buckshot_Client_list.addAll(elements);
  this.listChanged.invoke(this, new ListChangedEventArgs(new Array(), elements));
}
ObservableList.prototype.clear$_ = function() {
  var c = this._Buckshot_Client_list;
  this._Buckshot_Client_list.clear$_();
  this.listChanged.invoke(this, new ListChangedEventArgs(c, new Array()));
}
ObservableList.prototype.removeLast = function() {
  var item = this._Buckshot_Client_list.last();
  this._Buckshot_Client_list.removeLast();
  this._notifySingleOld(item);
  return item;
}
ObservableList.prototype.last = function() {
  return this._Buckshot_Client_list.last();
}
ObservableList.prototype.sort = function(compare) {
  return this._Buckshot_Client_list.sort$1(compare);
}
ObservableList.prototype.removeRange = function(start, length) {
  var l = this.getRange(start, length);
  this._Buckshot_Client_list.removeRange(start, length);
  this.listChanged.invoke(this, new ListChangedEventArgs(l, new Array()));
}
ObservableList.prototype._notifySingleOld = function(oldItem) {
  var ol = new Array();
  ol.add$1(oldItem);
  this.listChanged.invoke(this, new ListChangedEventArgs(ol, new Array()));
}
ObservableList.prototype._notifySingleNew = function(newItem) {
  var nl = new Array();
  nl.add(newItem);
  this.listChanged.invoke(this, new ListChangedEventArgs(new Array(), nl));
}
ObservableList.prototype._notifySingleOldAndNew = function(oldItem, newItem) {
  var ol = new Array();
  var nl = new Array();
  ol.add(oldItem);
  nl.add(newItem);
  this.listChanged.invoke(this, new ListChangedEventArgs(ol, nl));
}
ObservableList.prototype.add$1 = ObservableList.prototype.add;
ObservableList.prototype.clear$0 = ObservableList.prototype.clear$_;
ObservableList.prototype.every$1 = function($0) {
  return this.every(to$call$1($0));
};
ObservableList.prototype.filter$1 = function($0) {
  return this.filter(to$call$1($0));
};
ObservableList.prototype.forEach$1 = function($0) {
  return this.forEach(to$call$1($0));
};
ObservableList.prototype.indexOf$1 = function($0) {
  return this.indexOf($0, (0));
};
ObservableList.prototype.remove$1 = ObservableList.prototype.remove;
ObservableList.prototype.some$1 = function($0) {
  return this.some(to$call$1($0));
};
ObservableList.prototype.sort$1 = function($0) {
  return this.sort(to$call$2($0));
};
$inherits(ObservableList_ActionBase, ObservableList);
function ObservableList_ActionBase() {
  this._Buckshot_Client_list = new Array();
  this.listChanged = new _FrameworkEventImplementation_ListChangedEventArgs_ActionBase();
}
$inherits(ObservableList_ColumnDefinition, ObservableList);
function ObservableList_ColumnDefinition() {
  this._Buckshot_Client_list = new Array();
  this.listChanged = new _FrameworkEventImplementation_ListChangedEventArgs_ColumnDefinition();
}
ObservableList_ColumnDefinition.prototype.add$1 = ObservableList_ColumnDefinition.prototype.add;
ObservableList_ColumnDefinition.prototype.clear$0 = ObservableList_ColumnDefinition.prototype.clear$_;
ObservableList_ColumnDefinition.prototype.every$1 = function($0) {
  return this.every(to$call$1($0));
};
ObservableList_ColumnDefinition.prototype.forEach$1 = function($0) {
  return this.forEach(to$call$1($0));
};
ObservableList_ColumnDefinition.prototype.indexOf$1 = function($0) {
  return this.indexOf($0, (0));
};
ObservableList_ColumnDefinition.prototype.some$1 = function($0) {
  return this.some(to$call$1($0));
};
ObservableList_ColumnDefinition.prototype.sort$1 = function($0) {
  return this.sort(to$call$2($0));
};
$inherits(ObservableList_DropDownListItem, ObservableList);
function ObservableList_DropDownListItem() {
  this._Buckshot_Client_list = new Array();
  this.listChanged = new _FrameworkEventImplementation_ListChangedEventArgs_DropDownListItem();
}
ObservableList_DropDownListItem.prototype.add$1 = ObservableList_DropDownListItem.prototype.add;
ObservableList_DropDownListItem.prototype.clear$0 = ObservableList_DropDownListItem.prototype.clear$_;
ObservableList_DropDownListItem.prototype.every$1 = function($0) {
  return this.every(to$call$1($0));
};
ObservableList_DropDownListItem.prototype.forEach$1 = function($0) {
  return this.forEach(to$call$1($0));
};
ObservableList_DropDownListItem.prototype.indexOf$1 = function($0) {
  return this.indexOf($0, (0));
};
ObservableList_DropDownListItem.prototype.some$1 = function($0) {
  return this.some(to$call$1($0));
};
ObservableList_DropDownListItem.prototype.sort$1 = function($0) {
  return this.sort(to$call$2($0));
};
$inherits(ObservableList_FrameworkElement, ObservableList);
function ObservableList_FrameworkElement() {
  this._Buckshot_Client_list = new Array();
  this.listChanged = new _FrameworkEventImplementation_ListChangedEventArgs_FrameworkElement();
}
ObservableList_FrameworkElement.prototype.add$1 = ObservableList_FrameworkElement.prototype.add;
ObservableList_FrameworkElement.prototype.clear$0 = ObservableList_FrameworkElement.prototype.clear$_;
ObservableList_FrameworkElement.prototype.every$1 = function($0) {
  return this.every(to$call$1($0));
};
ObservableList_FrameworkElement.prototype.forEach$1 = function($0) {
  return this.forEach(to$call$1($0));
};
ObservableList_FrameworkElement.prototype.indexOf$1 = function($0) {
  return this.indexOf($0, (0));
};
ObservableList_FrameworkElement.prototype.some$1 = function($0) {
  return this.some(to$call$1($0));
};
ObservableList_FrameworkElement.prototype.sort$1 = function($0) {
  return this.sort(to$call$2($0));
};
$inherits(ObservableList_FrameworkResource, ObservableList);
function ObservableList_FrameworkResource() {
  this._Buckshot_Client_list = new Array();
  this.listChanged = new _FrameworkEventImplementation_ListChangedEventArgs_FrameworkResource();
}
ObservableList_FrameworkResource.prototype.add$1 = ObservableList_FrameworkResource.prototype.add;
ObservableList_FrameworkResource.prototype.clear$0 = ObservableList_FrameworkResource.prototype.clear$_;
ObservableList_FrameworkResource.prototype.every$1 = function($0) {
  return this.every(to$call$1($0));
};
ObservableList_FrameworkResource.prototype.forEach$1 = function($0) {
  return this.forEach(to$call$1($0));
};
ObservableList_FrameworkResource.prototype.indexOf$1 = function($0) {
  return this.indexOf($0, (0));
};
ObservableList_FrameworkResource.prototype.some$1 = function($0) {
  return this.some(to$call$1($0));
};
ObservableList_FrameworkResource.prototype.sort$1 = function($0) {
  return this.sort(to$call$2($0));
};
$inherits(ObservableList_RowDefinition, ObservableList);
function ObservableList_RowDefinition() {
  this._Buckshot_Client_list = new Array();
  this.listChanged = new _FrameworkEventImplementation_ListChangedEventArgs_RowDefinition();
}
ObservableList_RowDefinition.prototype.add$1 = ObservableList_RowDefinition.prototype.add;
ObservableList_RowDefinition.prototype.clear$0 = ObservableList_RowDefinition.prototype.clear$_;
ObservableList_RowDefinition.prototype.every$1 = function($0) {
  return this.every(to$call$1($0));
};
ObservableList_RowDefinition.prototype.forEach$1 = function($0) {
  return this.forEach(to$call$1($0));
};
ObservableList_RowDefinition.prototype.indexOf$1 = function($0) {
  return this.indexOf($0, (0));
};
ObservableList_RowDefinition.prototype.some$1 = function($0) {
  return this.some(to$call$1($0));
};
ObservableList_RowDefinition.prototype.sort$1 = function($0) {
  return this.sort(to$call$2($0));
};
$inherits(ObservableList_StyleSetter, ObservableList);
function ObservableList_StyleSetter() {
  this._Buckshot_Client_list = new Array();
  this.listChanged = new _FrameworkEventImplementation_ListChangedEventArgs_StyleSetter();
}
ObservableList_StyleSetter.prototype.add$1 = ObservableList_StyleSetter.prototype.add;
ObservableList_StyleSetter.prototype.clear$0 = ObservableList_StyleSetter.prototype.clear$_;
ObservableList_StyleSetter.prototype.every$1 = function($0) {
  return this.every(to$call$1($0));
};
ObservableList_StyleSetter.prototype.forEach$1 = function($0) {
  return this.forEach(to$call$1($0));
};
ObservableList_StyleSetter.prototype.indexOf$1 = function($0) {
  return this.indexOf($0, (0));
};
ObservableList_StyleSetter.prototype.some$1 = function($0) {
  return this.some(to$call$1($0));
};
ObservableList_StyleSetter.prototype.sort$1 = function($0) {
  return this.sort(to$call$2($0));
};
function Dom() {}
Dom.createByTag = function(tagName) {
  return _ElementFactoryProvider.Element$tag$factory(tagName);
}
function _Dom() {}
_Dom.appendBuckshotClass = function(element, classToAppend) {
  _Dom.appendClass(element, $add$("buckshot_", classToAppend));
}
_Dom.appendClass = function(element, classToAppend) {
  var currentClasses = element.get$attributes().$index("class");
  currentClasses = currentClasses == null || currentClasses == "null" ? "" : currentClasses;
  element.get$attributes().$setindex("class", currentClasses != "" ? $add$($add$(currentClasses, " "), classToAppend) : classToAppend);
}
_Dom.createByTag = function(tagName) {
  return _ElementFactoryProvider.Element$tag$factory(tagName);
}
_Dom.makeFlexBox = function(element) {
  const$0018.forEach$1((function (p) {
    var pre = ("" + p + "box");
    element._component.get$style().set$display(pre);
    pre = ("" + p + "flexbox");
    element._component.get$style().set$display(pre);
    pre = ("" + p + "flex");
    element._component.get$style().set$display(pre);
  })
  );
}
_Dom.generateXPCSS = function(declaration, value) {
  var sb = new StringBufferImpl("");
  const$0018.forEach$1((function (p) {
    sb.add(("" + p + declaration + ": " + value + ";"));
  })
  );
  return sb.toString();
}
_Dom.attemptSetXPCSS = function(e, property, value) {
  _Dom.setXPCSS(e, property, value);
  return _Dom.getXPCSS(e, property) != null;
}
_Dom.setXPCSS = function(e, property, value) {
  const$0018.forEach$1((function (p) {
    var pre = ("" + p + property);
    e.get$style().setProperty$3(pre, value, "1");
  })
  );
}
_Dom.getXPCSS = function(e, property) {
  for (var $$i = const$0018.iterator(); $$i.hasNext(); ) {
    var p = $$i.next();
    var pre = ("" + p + property);
    var result = e.get$style().getPropertyValue(pre);
    if (result != null) return result;
  }
  return null;
}
_Dom.setFlexBoxOrientation = function(element, orientation) {
  element._component.get$style().set$boxOrient(($eq$(orientation, const$0199)) ? "horizontal" : "vertical");
}
_Dom.setHorizontalItemFlexAlignment = function(element, alignment) {
  switch (alignment) {
    case const$0024:

      _Dom.setXPCSS(element.get$rawElement(), "flex-item-align", "start");
      break;

    case const$0025:

      _Dom.setXPCSS(element.get$rawElement(), "flex-item-align", "end");
      break;

    case const$0026:

      _Dom.setXPCSS(element.get$rawElement(), "flex-item-align", "center");
      break;

    case const$0023:

      _Dom.setXPCSS(element.get$rawElement(), "flex-item-align", "stretch");
      break;

  }
}
_Dom.setVerticalItemFlexAlignment = function(element, alignment) {
  switch (alignment) {
    case const$0027:

      _Dom.setXPCSS(element.get$rawElement(), "flex-item-align", "start");
      break;

    case const$0028:

      _Dom.setXPCSS(element.get$rawElement(), "flex-item-align", "end");
      break;

    case const$0029:

      _Dom.setXPCSS(element.get$rawElement(), "flex-item-align", "center");
      break;

    case const$0030:

      _Dom.setXPCSS(element.get$rawElement(), "flex-item-align", "stretch");
      break;

  }
}
_Dom.setHorizontalFlexBoxAlignment = function(element, alignment) {
  switch (alignment) {
    case const$0024:

      element._component.get$style().set$flexPack("start");
      break;

    case const$0025:

      element._component.get$style().set$flexPack("end");
      break;

    case const$0026:

      element._component.get$style().set$flexPack("center");
      break;

    case const$0023:

      element._component.get$style().set$flexPack("start");
      break;

  }
}
_Dom.setVerticalFlexBoxAlignment = function(element, alignment) {
  switch (alignment) {
    case const$0027:

      element._component.get$style().set$flexAlign("start");
      break;

    case const$0028:

      element._component.get$style().set$flexAlign("end");
      break;

    case const$0029:

      element._component.get$style().set$flexAlign("center");
      break;

    case const$0030:

      element._component.get$style().set$flexAlign("stretch");
      break;

  }
}
$inherits(BuckshotTemplateProvider, HashableObject);
function BuckshotTemplateProvider() {
  HashableObject.call(this);
}
BuckshotTemplateProvider.prototype.deserialize = function(fileData) {
  return this._getNextElement(XML.parse(fileData, true));
}
BuckshotTemplateProvider.prototype._getNextElement = function(xmlElement) {
  var lowerTagName = xmlElement.name.toLowerCase();
  if (!get$$buckshot()._objectRegistry.containsKey(lowerTagName)) $throw(new PresentationProviderException((("Element \"" + lowerTagName + "\"") + " not found in object registry.")));
  var newElement = get$$buckshot()._objectRegistry.$index(lowerTagName).makeMe();
  if (xmlElement.get$children().get$length() > (0) && xmlElement.get$children().every$1((function (n) {
    return !(n instanceof XmlText);
  })
  )) {
    var $$list = xmlElement.get$children();
    for (var $$i = $$list.iterator(); $$i.hasNext(); ) {
      var e = $$i.next();
      var elementLowerTagName = e.get$name().toLowerCase();
      if (get$$buckshot()._objectRegistry.containsKey(elementLowerTagName)) {
        if (e.get$name().contains(".")) {
          var setAttachedPropertyFunction = get$$buckshot()._objectRegistry.$index(elementLowerTagName);
          setAttachedPropertyFunction.call$2(newElement, Math.parseInt(e.get$text().trim()));
        }
        else {
          if (!newElement.get$isContainer()) $throw(const$0227);
          var cc = newElement.get$_stateBag().$index("CONTAINER_CONTEXT");
          var childElement = this._getNextElement(e);
          if (childElement == null) continue;
          if (!!(cc && cc.is$List())) {
            cc.add$1(childElement);
          }
          else {
            setValue(cc, childElement);
          }
        }
      }
      else {
        var p = newElement.resolveProperty(elementLowerTagName);
        if (p == null) $throw(new PresentationProviderException(("Property node" + (" name '" + elementLowerTagName + "' is not a valid") + (" property of '" + lowerTagName + "'."))));
        if (elementLowerTagName == "itemstemplate") {
          if (e.get$children().get$length() != (1)) {
            $throw(const$0227);
          }
          setValue(p, e.get$children().$index((0)).toString());
        }
        else {
          var testValue = getValue(p);
          if ($ne$(testValue) && !!(testValue && testValue.is$List())) {
            var $list0 = e.get$children();
            for (var $i0 = $list0.iterator(); $i0.hasNext(); ) {
              var se = $i0.next();
              testValue.add$1(this._getNextElement(se));
            }
          }
          else if (e.get$text().trim().startsWith("{")) {
            this._resolveBinding(p, e.get$text().trim());
          }
          else {
            if (e.get$children().isEmpty()) {
              setValue(p, e.get$text().trim());
            }
            else {
              if (e.get$children().every$1((function (n) {
                return (n instanceof XmlText);
              })
              )) {
                setValue(p, e.get$text().trim());
              }
              else if (e.get$children().get$length() == (1) && !(e.get$children().$index((0)) instanceof XmlText)) {
                setValue(p, this._getNextElement(e.get$children().$index((0))));
              }
            }
          }
        }
      }
    }
  }
  else {
    if (xmlElement.get$text().trim() != "") {
      if (!newElement.get$isContainer()) $throw(const$0227);
      var cc = newElement.get$_stateBag().$index("CONTAINER_CONTEXT");
      if (!!(cc && cc.is$List())) $throw(const$0227);
      setValue(cc, xmlElement.get$text().trim());
    }
  }
  this._assignAttributeProperties(newElement, xmlElement);
  if ((newElement instanceof FrameworkResource)) {
    newElement.set$rawData(xmlElement.toString());
    this._processResource(newElement);
    return null;
  }
  else {
    return newElement;
  }
}
BuckshotTemplateProvider.prototype._resolveBinding = function(p, binding) {
  var $this = this;
  if (!binding.startsWith("{") || !binding.endsWith("}")) $throw(const$0227);
  var placeholder = new FrameworkProperty(null, "placeholder", (function (_) {

  })
  );
  var stripped = binding.substring((1), binding.length - (1));
  var mode = const$0016;
  var vc = null;
  var params = stripped.split$_(",");
  var words = params.$index((0)).trim().split$_(" ");
  if (params.get$length() > (1) && $ne$(words.$index((0)), "template")) {
    params.getRange((1), params.get$length() - (1)).forEach$1((function (param) {
      var lParam = param.trim().toLowerCase();
      if (lParam.startsWith("mode=") || lParam.startsWith("mode =")) {
        var modeSplit = lParam.split$_("=");
        if (modeSplit.get$length() == (2)) {
          switch (modeSplit.$index((1))) {
            case "twoway":

              mode = const$0015;
              break;

            case "onetime":

              mode = const$0013;
              break;

          }
        }
      }
      else if (lParam.startsWith("converter=") || lParam.startsWith("converter =")) {
        var converterSplit = lParam.split$_("=");
        if (converterSplit.get$length() == (2) && converterSplit.$index((1)).startsWith("{resource ") && converterSplit.$index((1)).endsWith("}")) {
          $this._resolveBinding(placeholder, converterSplit.$index((1)));
          var testValueConverter = getValue(placeholder);
          if (!!(testValueConverter && testValueConverter.is$IValueConverter())) vc = testValueConverter;
        }
      }
    })
    );
  }
  switch (words.$index((0))) {
    case "resource":

      if (words.get$length() != (2)) $throw(const$0227);
      setValue(p, get$$buckshot().retrieveResource(words.$index((1))));
      break;

    case "template":

      if (words.get$length() != (2)) $throw(const$0012);
      p.sourceObject.get$dynamic().get$_templateBindings().$setindex(p, words.$index((1)));
      break;

    case "data":

      if (!((p.sourceObject instanceof FrameworkElement))) {
        $throw(const$0227);
      }
      switch (words.get$length()) {
        case (1):

          p.sourceObject.get$dynamic().get$lateBindings().$setindex(p, new BindingData("", null, mode));
          break;

        case (2):

          p.sourceObject.get$dynamic().get$lateBindings().$setindex(p, new BindingData(words.$index((1)), null, mode));
          break;

        default:

          $throw(const$0227);

      }
      break;

    case "element":

      if (words.get$length() != (2)) $throw(const$0227);
      if (words.$index((1)).contains$1(".")) {
        var ne = words.$index((1)).substring((0), words.$index((1)).indexOf$1("."));
        var prop = words.$index((1)).substring$1($add$(words.$index((1)).indexOf$1("."), (1)));
        if (!get$$buckshot().namedElements.containsKey(ne)) $throw(new PresentationProviderException((("Named element '" + ne + "'") + " not found.")));
        var b;
        try {
          new _BindingImplementation(get$$buckshot().namedElements.$index(ne).resolveProperty(prop), p, mode, const$0017);
        } catch (err) {
          err = _toDartException(err);
          if (!(err && err.is$Exception())) throw err;
          var theProperty = get$$buckshot().namedElements.$index(ne).resolveFirstProperty(prop);
          $add$(theProperty.propertyChanging, (function (_, __) {
            if (b != null) b.unregister();
            b = new _BindingImplementation(get$$buckshot().namedElements.$index(ne).resolveProperty(prop), p, mode, const$0017);
          })
          );
        }
      }
      else {
        $throw(const$0227);
      }
      break;

    default:

      $throw(const$0227);

  }
}
BuckshotTemplateProvider.prototype._processResource = function(resource) {
  if ((resource instanceof ResourceCollection)) return;
  if (resource.get$key().isEmpty()) $throw(const$0227);
  get$$buckshot().registerResource(resource);
}
BuckshotTemplateProvider.prototype._assignAttributeProperties = function(element, xmlElement) {
  var $this = this;
  if (xmlElement.get$attributes().get$length() == (0)) return;
  xmlElement.get$attributes().forEach$1((function (k, v) {
    if (k.contains(".")) {
      var prop = k.toLowerCase();
      if (get$$buckshot()._objectRegistry.containsKey(prop)) {
        var setAttachedPropertyFunction = get$$buckshot()._objectRegistry.$index(prop);
        setAttachedPropertyFunction.call$2(element, Math.parseInt(v));
      }
    }
    else {
      var p = element.resolveProperty(k);
      if (p == null) return;
      if (v.trim().startsWith("{")) {
        $this._resolveBinding(p, v.trim());
      }
      else {
        setValue(p, v);
      }
    }
  })
  );
}
BuckshotTemplateProvider.prototype.get$type = function() {
  return "BuckshotTemplateProvider";
}
$inherits(AttachedFrameworkProperty, FrameworkPropertyBase);
function AttachedFrameworkProperty(propertyName, propertyChangedCallback) {
  FrameworkPropertyBase.call(this, null, propertyName, propertyChangedCallback);
  get$$buckshot()._attachedProperties.$setindex(this, new HashMapImplementation_FrameworkElement$Dynamic());
}
function FrameworkPropertyResolutionException(message) {
  this.message = message;
}
FrameworkPropertyResolutionException.prototype.is$Exception = function(){return true};
$inherits(AnimationResource, FrameworkResource);
function AnimationResource() {
  FrameworkResource.call(this);
  this._initAnimationResourceProperties();
  this._stateBag.$setindex("CONTAINER_CONTEXT", this.keyFramesProperty);
}
AnimationResource.prototype.makeMe = function() {
  return new AnimationResource();
}
AnimationResource.prototype._initAnimationResourceProperties = function() {
  var $this = this;
  this.keyFramesProperty = new FrameworkProperty(this, "keyFrames", (function (_) {
    $this._invalidate();
  })
  , new Array());
}
AnimationResource.prototype._invalidate = function() {
  this._cachedAnimation = null;
  _CssCompiler.compileAnimation(this);
}
AnimationResource.prototype.get$keyFrames = function() {
  return getValue(this.keyFramesProperty);
}
AnimationResource.prototype.get$type = function() {
  return "AnimationResource";
}
$inherits(AnimationKeyFrame, BuckshotObject);
function AnimationKeyFrame() {
  BuckshotObject.call(this);
  this._initAnimationKeyFrameProperties();
  this._stateBag.$setindex("CONTAINER_CONTEXT", this.statesProperty);
}
AnimationKeyFrame.prototype.set$_percentage = function(value) { return this._percentage = value; };
AnimationKeyFrame.prototype._initAnimationKeyFrameProperties = function() {
  this.timeProperty = new FrameworkProperty(this, "time", (function (_) {

  })
  , null, const$0019);
  this.statesProperty = new FrameworkProperty(this, "states", (function (_) {

  })
  , new Array());
}
AnimationKeyFrame.prototype.get$time = function() {
  return getValue(this.timeProperty);
}
AnimationKeyFrame.prototype.get$states = function() {
  return getValue(this.statesProperty);
}
AnimationKeyFrame.prototype.makeMe = function() {
  return new AnimationKeyFrame();
}
AnimationKeyFrame.prototype.get$type = function() {
  return "AnimationKeyFrame";
}
$inherits(AnimationState, FrameworkObject);
function AnimationState() {
  FrameworkObject.call(this);
  this._initAnimationStateProperties();
}
AnimationState.prototype._initAnimationStateProperties = function() {
  this.targetProperty = new FrameworkProperty(this, "target", (function (_) {

  })
  );
  this.propertyProperty = new FrameworkProperty(this, "property", (function (_) {

  })
  );
  this.valueProperty = new FrameworkProperty(this, "value", (function (_) {

  })
  );
}
AnimationState.prototype.get$target = function() {
  return getValue(this.targetProperty);
}
AnimationState.prototype.get$property = function() {
  return getValue(this.propertyProperty);
}
AnimationState.prototype.get$value = function() {
  return getValue(this.valueProperty);
}
AnimationState.prototype.set$value = function(v) {
  return setValue(this.valueProperty, v);
}
AnimationState.prototype.makeMe = function() {
  return new AnimationState();
}
AnimationState.prototype.get$type = function() {
  return "AnimationState";
}
function _CssAnimationObject() {
  this.css = new StringBufferImpl("");
  this.standardPropertyCarryOver = new HashMapImplementation_dart_core_String$Dynamic();
}
_CssAnimationObject.prototype.get$css = function() { return this.css; };
_CssAnimationObject.prototype.get$standardPropertyCarryOver = function() { return this.standardPropertyCarryOver; };
_CssAnimationObject.prototype.get$concreteElement = function() { return this.concreteElement; };
_CssAnimationObject.prototype.set$concreteElement = function(value) { return this.concreteElement = value; };
function _CssCompiler() {}
_CssCompiler.compileAnimation = function(anim) {
  if (anim._cachedAnimation != null || anim.get$keyFrames() == null || anim.get$keyFrames().get$length() == (0)) return;
  _CssCompiler.sortKeyFrames(anim.get$keyFrames());
  if ($lt$(anim.get$keyFrames().$index((0)).get$time(), (0))) $throw(const$0237);
  _CssCompiler.computeKeyFramePercentages(anim.get$keyFrames());
  var animHash = new HashMapImplementation_dart_core_String$_CssAnimationObject();
  var previous;
  anim.get$keyFrames().forEach$1((function (k) {
    k.get$states().forEach$1((function (s) {
      if (!animHash.containsKey(s.get$target())) {
        animHash.$setindex(s.get$target(), new _CssAnimationObject());
        animHash.$index(s.get$target()).set$concreteElement(get$$buckshot().namedElements.$index(s.get$target()).makeMe());
        animHash.$index(s.get$target()).get$css().add(("@keyframes " + anim.get$key() + s.get$target() + " { "));
        if (animHash.$index(s.get$target()).get$concreteElement() == null) $throw(const$0237);
      }
    })
    );
    animHash.forEach$1((function (_, s) {
      s.get$css().add((" " + k._percentage + "% {"));
    })
    );
    k.get$states().forEach$1((function (s) {
      var ao = animHash.$index(s.get$target());
      var prop = ao.concreteElement._getPropertyByName(s.get$property());
      if (prop == null) {
        $throw(new AnimationException(("Unable to find specified property: " + s.get$property())));
      }
      if (!(prop instanceof AnimatingFrameworkProperty)) $throw(new AnimationException(("Attempted to animate property " + s.get$property() + " that is not type AnimatingFrameworkProperty.")));
      if (prop.propertyName == "fill") {
        db(("" + prop.propertyName + " ... " + s.get$value()));
      }
      setValue(prop, s.get$value());
      ao.standardPropertyCarryOver.$setindex(prop.cssPropertyPeer, _Dom.getXPCSS(ao.concreteElement._component, prop.cssPropertyPeer));
    })
    );
    animHash.forEach$1((function (t, ah) {
      if (ah.get$standardPropertyCarryOver().get$length() > (0)) {
        ah.get$standardPropertyCarryOver().forEach$1((function (kk, v) {
          ah.get$css().add(("" + kk + ": " + v + ";"));
        })
        );
      }
      ah.get$css().add("}");
    })
    );
  })
  );
  var compiledCSS = new StringBufferImpl("");
  animHash.forEach$1((function (t, ah) {
    ah.get$css().add(" } ");
    var sb = new StringBufferImpl("");
    const$0018.forEach$1((function (p) {
      var temp = ah.get$css().toString();
      temp = temp.replaceAll("@keyframes", ("@" + p + "keyframes"));
      temp = temp.replaceAll("transform", ("" + p + "transform"));
      sb.add(temp);
    })
    );
    sb.add(("#" + t + " { " + _Dom.generateXPCSS("animation", ("" + anim.get$key() + t + " " + anim.get$keyFrames().last().get$time() + "s linear forwards")) + " }"));
    compiledCSS.add(sb.toString());
  })
  );
  anim._cachedAnimation = compiledCSS.toString();
}
_CssCompiler.computeKeyFramePercentages = function(keyFrames) {
  var span = keyFrames.last().get$time();
  for (var i = (0);
   i < keyFrames.get$length(); i++) {
    keyFrames.$index(i).set$_percentage(($div$(keyFrames.$index(i).get$time(), span)) * (100));
  }
}
_CssCompiler.sortKeyFrames = function(keyFrames) {
  keyFrames.sort$1((function (a, b) {
    if ($lt$(a.get$time(), b.get$time())) return (-1);
    if ($gt$(a.get$time(), b.get$time())) return (1);
    return (0);
  })
  );
}
$inherits(Shape, FrameworkElement);
function Shape() {
  FrameworkElement.call(this);
  _Dom.appendBuckshotClass(this._component, "shape");
  this._initShapeProperties();
}
Shape.prototype._initShapeProperties = function() {
  var $this = this;
  this.fillProperty = new AnimatingFrameworkProperty(this, "fill", (function (value) {
    value.renderBrush($this.shapeElement);
  })
  , "fill", null, const$0194);
  this._swProperty = new FrameworkProperty(this, "_sw", (function (v) {
    if ((typeof(v) != 'number')) return;
    $this._svgWrapper.get$attributes().$setindex("width", v);
  })
  );
  this._shProperty = new FrameworkProperty(this, "_sh", (function (v) {
    if ((typeof(v) != 'number')) return;
    $this._svgWrapper.get$attributes().$setindex("height", v);
  })
  );
  new _BindingImplementation(this.widthProperty, this._swProperty, const$0016, const$0017);
  new _BindingImplementation(this.heightProperty, this._shProperty, const$0016, const$0017);
}
Shape.prototype.get$type = function() {
  return "Shape";
}
Shape.prototype.CreateElement = function() {
  this._component = Dom.createByTag("div");
}
$inherits(Ellipse, Shape);
function Ellipse() {
  Shape.call(this);
  _Dom.appendBuckshotClass(this._component, "ellipse");
  this._initEllipseProperties();
}
Ellipse.prototype.makeMe = function() {
  return new Ellipse();
}
Ellipse.prototype._initEllipseProperties = function() {
  var $this = this;
  this._cxProperty = new FrameworkProperty(this, "_cx", (function (v) {
    if ((typeof(v) != 'number')) return;
    var result = $div$(v, (2));
    $this.shapeElement.get$attributes().$setindex("cx", result);
    setValue($this._rxProperty, result);
  })
  );
  this._cyProperty = new FrameworkProperty(this, "_cy", (function (v) {
    if ((typeof(v) != 'number')) return;
    var result = $div$(v, (2));
    $this.shapeElement.get$attributes().$setindex("cy", result);
    setValue($this._ryProperty, result);
  })
  );
  this._rxProperty = new FrameworkProperty(this, "_rx", (function (v) {
    $this.shapeElement.get$attributes().$setindex("rx", ("" + ($sub$(v, $div$(getValue($this.strokeWidthProperty), (2))))));
  })
  );
  this._ryProperty = new FrameworkProperty(this, "_ry", (function (v) {
    $this.shapeElement.get$attributes().$setindex("ry", ("" + ($sub$(v, $div$(getValue($this.strokeWidthProperty), (2))))));
  })
  );
  new _BindingImplementation(this.widthProperty, this._cxProperty, const$0016, const$0017);
  new _BindingImplementation(this.heightProperty, this._cyProperty, const$0016, const$0017);
}
Ellipse.prototype.get$type = function() {
  return "Ellipse";
}
$inherits(Rectangle, Shape);
function Rectangle() {
  Shape.call(this);
  _Dom.appendBuckshotClass(this._component, "rectangle");
}
Rectangle.prototype.makeMe = function() {
  return new Rectangle();
}
Rectangle.prototype._initShapeProperties = function() {
  var $this = this;
  this.strokeWidthProperty = new AnimatingFrameworkProperty(this, "strokeWidth", (function (value) {
    var color = $ne$(getValue($this.strokeProperty)) ? getValue($this.strokeProperty) : const$0054.toString();
    $this._component.get$style().set$borderTop(("solid " + value.get$top() + "px " + color));
    $this._component.get$style().set$borderRight(("solid " + value.get$right() + "px " + color));
    $this._component.get$style().set$borderLeft(("solid " + value.get$left() + "px " + color));
    $this._component.get$style().set$borderBottom(("solid " + value.get$bottom() + "px " + color));
  })
  , "border-thickness", null, const$0019);
  this.strokeProperty = new AnimatingFrameworkProperty(this, "stroke", (function (value) {
    $this.shapeElement.get$style().set$borderColor(value.get$color().toString());
  })
  , "border-color", null, const$0194);
  this.fillProperty = new AnimatingFrameworkProperty(this, "fill", (function (value) {
    value.renderBrush($this._component);
  })
  , "background", null, const$0194);
}
Rectangle.prototype.get$type = function() {
  return "Rectangle";
}
Rectangle.prototype.CreateElement = function() {
  this._component = Dom.createByTag("div");
}
$inherits(Line, Shape);
function Line() {
  Shape.call(this);
  _Dom.appendBuckshotClass(this._component, "line");
  this._initLineProperties();
}
Line.prototype.makeMe = function() {
  return new Line();
}
Line.prototype._initLineProperties = function() {

}
$inherits(PolyLine, Shape);
function PolyLine() {
  Shape.call(this);
  _Dom.appendBuckshotClass(this._component, "polyline");
  this._initPolyLineProperties();
}
PolyLine.prototype.makeMe = function() {
  return new PolyLine();
}
PolyLine.prototype._initPolyLineProperties = function() {

}
$inherits(Polygon, Shape);
function Polygon() {
  Shape.call(this);
  _Dom.appendBuckshotClass(this._component, "polygon");
  this._initPolygonProperties();
}
Polygon.prototype.makeMe = function() {
  return new Polygon();
}
Polygon.prototype._initPolygonProperties = function() {

}
function setValue(property, value) {
  if (property.stringToValueConverter != null && (typeof(value) == 'string')) {
    value = property.stringToValueConverter.convert$1(value);
  }
  if ($eq$(property.get$value(), value)) return;
  property._previousValue = property.get$value();
  property.set$value(value);
  var f = property.propertyChangedCallback;
  f.call$1(value);
  _BindingImplementation._executeBindingsFor(property);
  if (property.propertyChanging.get$hasHandlers()) property.propertyChanging.invoke(property.sourceObject, new PropertyChangingEventArgs(property.get$previousValue(), value));
}
function getValue(propertyInfo) {
  return (propertyInfo == null) ? null : propertyInfo.get$value();
}
function br(breakInfo) {
  if (!$globals.DEBUG) return;
  get$$window().alert(("Debug Break: " + ($ne$(breakInfo) ? breakInfo.toString() : "")));
}
function db(message, element) {
  if (!$globals.DEBUG) return;
  if (element == null) {
    print$(message);
    return;
  }
  print$(("[" + element.get$type() + "(" + element.get$name() + ")] " + message));
}
function get$$buckshot() {
  return Buckshot.Buckshot$_cached$factory();
}
function Debug() {
  this._vm = new ViewModel();
}
Debug.prototype.run = function() {
  if (this._vm == null) br("is null");
  this._vm.set$title("Demo Title");
  get$$buckshot().set$rootView(new StackPanelDebug());
}
$inherits(ViewModel, ViewModelBase);
function ViewModel() {
  ViewModelBase.call(this);
  this.titleProperty = new FrameworkProperty(this, "title", (function (_) {

  })
  );
}
ViewModel.prototype.set$title = function(value) {
  return setValue(this.titleProperty, value);
}
function StackPanelDebug() {
  this._rootElement = get$$buckshot().defaultPresentationProvider.deserialize("\r\n<stackpanel background='Orange' margin='10'>\r\n  <stackpanel orientation='horizontal' horizontalalignment='center'>\r\n    <border margin='10' background='Black' width='10' height='10'></border>\r\n    <border margin='10' background='Red' width='10' height='10'></border>\r\n    <border margin='10' background='Green' width='10' height='10'></border>\r\n    <border margin='10' background='Blue' width='10' height='10'></border>\r\n  </stackpanel>\r\n\r\n  <textblock horizontalalignment='center'>center center</textblock>\r\n  <textblock horizontalalignment='right'>right right right</textblock>\r\n  <textblock>long long long long long long long long</textblock>\r\n  <border horizontalalignment='center' borderthickness='5' bordercolor='Purple' width='150' height='150' background='Yellow' cornerradius='150'></border>\r\n</stackpanel>\r\n");
}
StackPanelDebug.prototype.get$rootVisual = function() {
  return this._rootElement;
}
function main() {
  new Debug().run();
}
(function(){
  var v0/*SVGTextPositioningElement*/ = 'SVGTextPositioningElement|SVGAltGlyphElement|SVGTRefElement|SVGTSpanElement|SVGTextElement';
  var v1/*HTMLMediaElement*/ = 'HTMLMediaElement|HTMLAudioElement|HTMLVideoElement';
  var v2/*SVGElement*/ = [v0/*SVGTextPositioningElement*/,'SVGElement|SVGAElement|SVGAltGlyphDefElement|SVGAltGlyphItemElement|SVGAnimationElement|SVGAnimateColorElement|SVGAnimateElement|SVGAnimateMotionElement|SVGAnimateTransformElement|SVGSetElement|SVGCircleElement|SVGClipPathElement|SVGComponentTransferFunctionElement|SVGFEFuncAElement|SVGFEFuncBElement|SVGFEFuncGElement|SVGFEFuncRElement|SVGCursorElement|SVGDefsElement|SVGDescElement|SVGEllipseElement|SVGFEBlendElement|SVGFEColorMatrixElement|SVGFEComponentTransferElement|SVGFECompositeElement|SVGFEConvolveMatrixElement|SVGFEDiffuseLightingElement|SVGFEDisplacementMapElement|SVGFEDistantLightElement|SVGFEDropShadowElement|SVGFEFloodElement|SVGFEGaussianBlurElement|SVGFEImageElement|SVGFEMergeElement|SVGFEMergeNodeElement|SVGFEMorphologyElement|SVGFEOffsetElement|SVGFEPointLightElement|SVGFESpecularLightingElement|SVGFESpotLightElement|SVGFETileElement|SVGFETurbulenceElement|SVGFilterElement|SVGFontElement|SVGFontFaceElement|SVGFontFaceFormatElement|SVGFontFaceNameElement|SVGFontFaceSrcElement|SVGFontFaceUriElement|SVGForeignObjectElement|SVGGElement|SVGGlyphElement|SVGGlyphRefElement|SVGGradientElement|SVGLinearGradientElement|SVGRadialGradientElement|SVGHKernElement|SVGImageElement|SVGLineElement|SVGMPathElement|SVGMarkerElement|SVGMaskElement|SVGMetadataElement|SVGMissingGlyphElement|SVGPathElement|SVGPatternElement|SVGPolygonElement|SVGPolylineElement|SVGRectElement|SVGSVGElement|SVGScriptElement|SVGStopElement|SVGStyleElement|SVGSwitchElement|SVGSymbolElement|SVGTextContentElement|SVGTextPathElement|SVGTitleElement|SVGUseElement|SVGVKernElement|SVGViewElement'].join('|');
  var v3/*UIEvent*/ = 'UIEvent|CompositionEvent|KeyboardEvent|MouseEvent|SVGZoomEvent|TextEvent|TouchEvent|WheelEvent';
  var v4/*CharacterData*/ = 'CharacterData|Comment|Text|CDATASection';
  var v5/*HTMLDocument*/ = 'HTMLDocument|SVGDocument';
  var v6/*DocumentFragment*/ = 'DocumentFragment|ShadowRoot';
  var v7/*Element*/ = [v1/*HTMLMediaElement*/,v2/*SVGElement*/,'Element|HTMLElement|HTMLAnchorElement|HTMLAppletElement|HTMLAreaElement|HTMLBRElement|HTMLBaseElement|HTMLBaseFontElement|HTMLBodyElement|HTMLButtonElement|HTMLCanvasElement|HTMLContentElement|HTMLDListElement|HTMLDetailsElement|HTMLDirectoryElement|HTMLDivElement|HTMLEmbedElement|HTMLFieldSetElement|HTMLFontElement|HTMLFormElement|HTMLFrameElement|HTMLFrameSetElement|HTMLHRElement|HTMLHeadElement|HTMLHeadingElement|HTMLHtmlElement|HTMLIFrameElement|HTMLImageElement|HTMLInputElement|HTMLKeygenElement|HTMLLIElement|HTMLLabelElement|HTMLLegendElement|HTMLLinkElement|HTMLMapElement|HTMLMarqueeElement|HTMLMenuElement|HTMLMetaElement|HTMLMeterElement|HTMLModElement|HTMLOListElement|HTMLObjectElement|HTMLOptGroupElement|HTMLOptionElement|HTMLOutputElement|HTMLParagraphElement|HTMLParamElement|HTMLPreElement|HTMLProgressElement|HTMLQuoteElement|HTMLScriptElement|HTMLSelectElement|HTMLShadowElement|HTMLSourceElement|HTMLSpanElement|HTMLStyleElement|HTMLTableCaptionElement|HTMLTableCellElement|HTMLTableColElement|HTMLTableElement|HTMLTableRowElement|HTMLTableSectionElement|HTMLTextAreaElement|HTMLTitleElement|HTMLTrackElement|HTMLUListElement|HTMLUnknownElement'].join('|');
  var v8/*AbstractWorker*/ = 'AbstractWorker|SharedWorker|Worker';
  var v9/*IDBRequest*/ = 'IDBRequest|IDBVersionChangeRequest';
  var v10/*MediaStream*/ = 'MediaStream|LocalMediaStream';
  var v11/*Node*/ = [v4/*CharacterData*/,v5/*HTMLDocument*/,v6/*DocumentFragment*/,v7/*Element*/,'Node|Attr|DocumentType|Entity|EntityReference|Notation|ProcessingInstruction'].join('|');
  var v12/*WorkerContext*/ = 'WorkerContext|DedicatedWorkerContext|SharedWorkerContext';
  var table = [
    ['AbstractWorker', v8/*AbstractWorker*/]
    , ['AudioParam', 'AudioParam|AudioGain']
    , ['CSSValueList', 'CSSValueList|WebKitCSSTransformValue|WebKitCSSFilterValue']
    , ['CharacterData', v4/*CharacterData*/]
    , ['DOMTokenList', 'DOMTokenList|DOMSettableTokenList']
    , ['HTMLDocument', v5/*HTMLDocument*/]
    , ['DocumentFragment', v6/*DocumentFragment*/]
    , ['HTMLMediaElement', v1/*HTMLMediaElement*/]
    , ['SVGTextPositioningElement', v0/*SVGTextPositioningElement*/]
    , ['SVGElement', v2/*SVGElement*/]
    , ['Element', v7/*Element*/]
    , ['Entry', 'Entry|DirectoryEntry|FileEntry']
    , ['EntrySync', 'EntrySync|DirectoryEntrySync|FileEntrySync']
    , ['UIEvent', v3/*UIEvent*/]
    , ['Event', [v3/*UIEvent*/,'Event|WebKitAnimationEvent|AudioProcessingEvent|BeforeLoadEvent|CloseEvent|CustomEvent|DeviceMotionEvent|DeviceOrientationEvent|ErrorEvent|HashChangeEvent|IDBVersionChangeEvent|MediaKeyEvent|MediaStreamEvent|MessageEvent|MutationEvent|OfflineAudioCompletionEvent|OverflowEvent|PageTransitionEvent|PopStateEvent|ProgressEvent|XMLHttpRequestProgressEvent|SpeechInputEvent|SpeechRecognitionEvent|StorageEvent|TrackEvent|WebKitTransitionEvent|WebGLContextEvent'].join('|')]
    , ['IDBRequest', v9/*IDBRequest*/]
    , ['MediaStream', v10/*MediaStream*/]
    , ['Node', v11/*Node*/]
    , ['WorkerContext', v12/*WorkerContext*/]
    , ['EventTarget', [v8/*AbstractWorker*/,v9/*IDBRequest*/,v10/*MediaStream*/,v11/*Node*/,v12/*WorkerContext*/,'EventTarget|AudioContext|BatteryManager|DOMApplicationCache|DeprecatedPeerConnection|EventSource|FileReader|FileWriter|IDBDatabase|IDBTransaction|MediaController|MessagePort|Notification|PeerConnection00|SpeechRecognition|TextTrack|TextTrackCue|TextTrackList|WebSocket|DOMWindow|XMLHttpRequest|XMLHttpRequestUpload'].join('|')]
    , ['HTMLCollection', 'HTMLCollection|HTMLOptionsCollection']
    , ['NodeList', 'NodeList|RadioNodeList']
    , ['Uint8Array', 'Uint8Array|Uint8ClampedArray']
  ];
  $dynamicSetMetadata(table);
})();
function $static_init(){
  $globals.DEBUG = true;
  $globals._firstMeasurementRequest = true;
  $globals.HashableObject__hashNum = (0);
  $globals._nextMeasurementFrameScheduled = false;
}
var const$0000 = Object.create(_DeletedKeySentinel.prototype, {});
var const$0001 = Object.create(NoMoreElementsException.prototype, {});
var const$0003 = Object.create(EmptyQueueException.prototype, {});
var const$0004 = Object.create(UnsupportedOperationException.prototype, {_message: {"value": "", writeable: false}});
var const$0005 = Object.create(IllegalAccessException.prototype, {});
var const$0006 = _constMap([]);
var const$0009 = Object.create(_SimpleClientRect.prototype, {left: {"value": (0), writeable: false}, width: {"value": (0), writeable: false}, top: {"value": (0), writeable: false}, height: {"value": (0), writeable: false}});
var const$0010 = ImmutableList.ImmutableList$from$factory([]);
var const$0011 = Object.create(EmptyElementRect.prototype, {offset: {"value": const$0009, writeable: false}, bounding: {"value": const$0009, writeable: false}, clientRects: {"value": const$0010, writeable: false}, client: {"value": const$0009, writeable: false}, scroll: {"value": const$0009, writeable: false}});
var const$0012 = Object.create(BuckshotException.prototype, {});
var const$0013 = Object.create(BindingMode.prototype, {_val: {"value": (3), writeable: false}});
var const$0014 = Object.create(NotImplementedException.prototype, {});
var const$0015 = Object.create(BindingMode.prototype, {_val: {"value": (2), writeable: false}});
var const$0016 = Object.create(BindingMode.prototype, {_val: {"value": (1), writeable: false}});
var const$0017 = Object.create(_DefaultConverter.prototype, {});
var const$0018 = ImmutableList.ImmutableList$from$factory(["", "-webkit-", "-moz-", "-o-", "-ms-"]);
var const$0019 = Object.create(StringToNumericConverter.prototype, {});
var const$0020 = Object.create(Visibility.prototype, {_Buckshot_Client_str: {"value": "visible", writeable: false}});
var const$0021 = Object.create(Visibility.prototype, {_Buckshot_Client_str: {"value": "hidden", writeable: false}});
var const$0022 = Object.create(StringToVisibilityConverter.prototype, {});
var const$0023 = Object.create(HorizontalAlignment.prototype, {_Buckshot_Client_str: {"value": "stretch", writeable: false}});
var const$0024 = Object.create(HorizontalAlignment.prototype, {_Buckshot_Client_str: {"value": "left", writeable: false}});
var const$0025 = Object.create(HorizontalAlignment.prototype, {_Buckshot_Client_str: {"value": "right", writeable: false}});
var const$0026 = Object.create(HorizontalAlignment.prototype, {_Buckshot_Client_str: {"value": "center", writeable: false}});
var const$0027 = Object.create(VerticalAlignment.prototype, {_Buckshot_Client_str: {"value": "top", writeable: false}});
var const$0028 = Object.create(VerticalAlignment.prototype, {_Buckshot_Client_str: {"value": "bottom", writeable: false}});
var const$0029 = Object.create(VerticalAlignment.prototype, {_Buckshot_Client_str: {"value": "center", writeable: false}});
var const$0030 = Object.create(VerticalAlignment.prototype, {_Buckshot_Client_str: {"value": "stretch", writeable: false}});
var const$0031 = Object.create(StringToThicknessConverter.prototype, {});
var const$0032 = Object.create(Cursors.prototype, {_Buckshot_Client_str: {"value": "auto", writeable: false}});
var const$0033 = Object.create(Cursors.prototype, {_Buckshot_Client_str: {"value": "crosshair", writeable: false}});
var const$0034 = Object.create(Cursors.prototype, {_Buckshot_Client_str: {"value": "default", writeable: false}});
var const$0035 = Object.create(Cursors.prototype, {_Buckshot_Client_str: {"value": "e-resize", writeable: false}});
var const$0036 = Object.create(Cursors.prototype, {_Buckshot_Client_str: {"value": "help", writeable: false}});
var const$0037 = Object.create(Cursors.prototype, {_Buckshot_Client_str: {"value": "move", writeable: false}});
var const$0038 = Object.create(Cursors.prototype, {_Buckshot_Client_str: {"value": "n-resize", writeable: false}});
var const$0039 = Object.create(Cursors.prototype, {_Buckshot_Client_str: {"value": "ne-resize", writeable: false}});
var const$0040 = Object.create(Cursors.prototype, {_Buckshot_Client_str: {"value": "nw-resize", writeable: false}});
var const$0041 = Object.create(Cursors.prototype, {_Buckshot_Client_str: {"value": "pointer", writeable: false}});
var const$0042 = Object.create(Cursors.prototype, {_Buckshot_Client_str: {"value": "progress", writeable: false}});
var const$0043 = Object.create(Cursors.prototype, {_Buckshot_Client_str: {"value": "s-resize", writeable: false}});
var const$0044 = Object.create(Cursors.prototype, {_Buckshot_Client_str: {"value": "se-resize", writeable: false}});
var const$0045 = Object.create(Cursors.prototype, {_Buckshot_Client_str: {"value": "sw-resize", writeable: false}});
var const$0046 = Object.create(Cursors.prototype, {_Buckshot_Client_str: {"value": "text", writeable: false}});
var const$0047 = Object.create(Cursors.prototype, {_Buckshot_Client_str: {"value": "wait", writeable: false}});
var const$0048 = Object.create(Cursors.prototype, {_Buckshot_Client_str: {"value": "inherit", writeable: false}});
var const$0049 = Object.create(StringToCursorConverter.prototype, {});
var const$0050 = Object.create(StringToHorizontalAlignmentConverter.prototype, {});
var const$0051 = Object.create(StringToVerticalAlignmentConverter.prototype, {});
var const$0053 = Object.create(FrameworkPropertyResolutionException.prototype, {message: {"value": "Unable to resolve further.  Remaining properties in the chain while current property value is not a BuckshotObject", writeable: false}});
var const$0054 = Object.create(Colors.prototype, {_name: {"value": "White", writeable: false}, _hex: {"value": "#ffffff", writeable: false}});
var const$0055 = Object.create(Colors.prototype, {_name: {"value": "AliceBlue", writeable: false}, _hex: {"value": "#F0F8FF", writeable: false}});
var const$0056 = Object.create(Colors.prototype, {_name: {"value": "AntiqueWhite", writeable: false}, _hex: {"value": "#FAEBD7", writeable: false}});
var const$0057 = Object.create(Colors.prototype, {_name: {"value": "Aqua", writeable: false}, _hex: {"value": "#00FFFF", writeable: false}});
var const$0058 = Object.create(Colors.prototype, {_name: {"value": "Aquamarine", writeable: false}, _hex: {"value": "#7FFFD4", writeable: false}});
var const$0059 = Object.create(Colors.prototype, {_name: {"value": "Azure", writeable: false}, _hex: {"value": "#F0FFFF", writeable: false}});
var const$0060 = Object.create(Colors.prototype, {_name: {"value": "Beige", writeable: false}, _hex: {"value": "#F5F5DC", writeable: false}});
var const$0061 = Object.create(Colors.prototype, {_name: {"value": "Bisque", writeable: false}, _hex: {"value": "#FFE4C4", writeable: false}});
var const$0062 = Object.create(Colors.prototype, {_name: {"value": "Black", writeable: false}, _hex: {"value": "#000000", writeable: false}});
var const$0063 = Object.create(Colors.prototype, {_name: {"value": "BlanchedAlmond", writeable: false}, _hex: {"value": "#FFEBCD", writeable: false}});
var const$0064 = Object.create(Colors.prototype, {_name: {"value": "Blue", writeable: false}, _hex: {"value": "#0000FF", writeable: false}});
var const$0065 = Object.create(Colors.prototype, {_name: {"value": "BlueViolet", writeable: false}, _hex: {"value": "#8a2be2", writeable: false}});
var const$0066 = Object.create(Colors.prototype, {_name: {"value": "Brown", writeable: false}, _hex: {"value": "#a52a2a", writeable: false}});
var const$0067 = Object.create(Colors.prototype, {_name: {"value": "BurlyWood", writeable: false}, _hex: {"value": "#deb887", writeable: false}});
var const$0068 = Object.create(Colors.prototype, {_name: {"value": "CadetBlue", writeable: false}, _hex: {"value": "#5f9ea0", writeable: false}});
var const$0069 = Object.create(Colors.prototype, {_name: {"value": "Chartreuse", writeable: false}, _hex: {"value": "#7fff00", writeable: false}});
var const$0070 = Object.create(Colors.prototype, {_name: {"value": "Chocolate", writeable: false}, _hex: {"value": "#d2691e", writeable: false}});
var const$0071 = Object.create(Colors.prototype, {_name: {"value": "Coral", writeable: false}, _hex: {"value": "#ff7f50", writeable: false}});
var const$0072 = Object.create(Colors.prototype, {_name: {"value": "ConflowerBlue", writeable: false}, _hex: {"value": "#6495ed", writeable: false}});
var const$0073 = Object.create(Colors.prototype, {_name: {"value": "Cornsilk", writeable: false}, _hex: {"value": "#fff8dc", writeable: false}});
var const$0074 = Object.create(Colors.prototype, {_name: {"value": "Crimson", writeable: false}, _hex: {"value": "#dc143c", writeable: false}});
var const$0075 = Object.create(Colors.prototype, {_name: {"value": "Cyan", writeable: false}, _hex: {"value": "#00ffff", writeable: false}});
var const$0076 = Object.create(Colors.prototype, {_name: {"value": "DarkBlue", writeable: false}, _hex: {"value": "#00008b", writeable: false}});
var const$0077 = Object.create(Colors.prototype, {_name: {"value": "DarkCyan", writeable: false}, _hex: {"value": "#008b8b", writeable: false}});
var const$0078 = Object.create(Colors.prototype, {_name: {"value": "DarkGoldenrod", writeable: false}, _hex: {"value": "#b8860b", writeable: false}});
var const$0079 = Object.create(Colors.prototype, {_name: {"value": "DarkGray", writeable: false}, _hex: {"value": "#A9A9A9", writeable: false}});
var const$0080 = Object.create(Colors.prototype, {_name: {"value": "DarkGreen", writeable: false}, _hex: {"value": "#006400", writeable: false}});
var const$0081 = Object.create(Colors.prototype, {_name: {"value": "DarkKhaki", writeable: false}, _hex: {"value": "#000000", writeable: false}});
var const$0082 = Object.create(Colors.prototype, {_name: {"value": "DarkMagenta", writeable: false}, _hex: {"value": "#8b008b", writeable: false}});
var const$0083 = Object.create(Colors.prototype, {_name: {"value": "DarkOliveGreen", writeable: false}, _hex: {"value": "#556b2f", writeable: false}});
var const$0084 = Object.create(Colors.prototype, {_name: {"value": "DarkOrange", writeable: false}, _hex: {"value": "#ff8c00", writeable: false}});
var const$0085 = Object.create(Colors.prototype, {_name: {"value": "DarkOrchid", writeable: false}, _hex: {"value": "#9932cc", writeable: false}});
var const$0086 = Object.create(Colors.prototype, {_name: {"value": "DarkRed", writeable: false}, _hex: {"value": "#8b0000", writeable: false}});
var const$0087 = Object.create(Colors.prototype, {_name: {"value": "DarkSalmon", writeable: false}, _hex: {"value": "#e9967a", writeable: false}});
var const$0088 = Object.create(Colors.prototype, {_name: {"value": "DarkSeaGreen", writeable: false}, _hex: {"value": "#8fbc8f", writeable: false}});
var const$0089 = Object.create(Colors.prototype, {_name: {"value": "DarkSlateBlue", writeable: false}, _hex: {"value": "#483d8b", writeable: false}});
var const$0090 = Object.create(Colors.prototype, {_name: {"value": "DarkSlateGray", writeable: false}, _hex: {"value": "#2f4f4f", writeable: false}});
var const$0091 = Object.create(Colors.prototype, {_name: {"value": "DarkTurquoise", writeable: false}, _hex: {"value": "#00ced1", writeable: false}});
var const$0092 = Object.create(Colors.prototype, {_name: {"value": "DarkViolet", writeable: false}, _hex: {"value": "#9400d3", writeable: false}});
var const$0093 = Object.create(Colors.prototype, {_name: {"value": "DeepPink", writeable: false}, _hex: {"value": "#ff1493", writeable: false}});
var const$0094 = Object.create(Colors.prototype, {_name: {"value": "DeepSkyBlue", writeable: false}, _hex: {"value": "#00bfff", writeable: false}});
var const$0095 = Object.create(Colors.prototype, {_name: {"value": "DimGray", writeable: false}, _hex: {"value": "#696969", writeable: false}});
var const$0096 = Object.create(Colors.prototype, {_name: {"value": "DodgerBlue", writeable: false}, _hex: {"value": "#1e90ff", writeable: false}});
var const$0097 = Object.create(Colors.prototype, {_name: {"value": "Firebrick", writeable: false}, _hex: {"value": "#b22222", writeable: false}});
var const$0098 = Object.create(Colors.prototype, {_name: {"value": "FloralWhite", writeable: false}, _hex: {"value": "#fffaf0", writeable: false}});
var const$0099 = Object.create(Colors.prototype, {_name: {"value": "ForestGreen", writeable: false}, _hex: {"value": "#228b22", writeable: false}});
var const$0100 = Object.create(Colors.prototype, {_name: {"value": "Fuchsia", writeable: false}, _hex: {"value": "#ff00ff", writeable: false}});
var const$0101 = Object.create(Colors.prototype, {_name: {"value": "Gainsboro", writeable: false}, _hex: {"value": "#dcdcdc", writeable: false}});
var const$0102 = Object.create(Colors.prototype, {_name: {"value": "GhostWhite", writeable: false}, _hex: {"value": "#f8f8ff", writeable: false}});
var const$0103 = Object.create(Colors.prototype, {_name: {"value": "Gold", writeable: false}, _hex: {"value": "#ffd700", writeable: false}});
var const$0104 = Object.create(Colors.prototype, {_name: {"value": "Goldenrod", writeable: false}, _hex: {"value": "#daa520", writeable: false}});
var const$0105 = Object.create(Colors.prototype, {_name: {"value": "Gray", writeable: false}, _hex: {"value": "#808080", writeable: false}});
var const$0106 = Object.create(Colors.prototype, {_name: {"value": "Green", writeable: false}, _hex: {"value": "#008000", writeable: false}});
var const$0107 = Object.create(Colors.prototype, {_name: {"value": "GreenYellow", writeable: false}, _hex: {"value": "#adff2f", writeable: false}});
var const$0108 = Object.create(Colors.prototype, {_name: {"value": "Honeydew", writeable: false}, _hex: {"value": "#f0fff0", writeable: false}});
var const$0109 = Object.create(Colors.prototype, {_name: {"value": "HotPink", writeable: false}, _hex: {"value": "#ff69b4", writeable: false}});
var const$0110 = Object.create(Colors.prototype, {_name: {"value": "IndianRed", writeable: false}, _hex: {"value": "#cd5c5c", writeable: false}});
var const$0111 = Object.create(Colors.prototype, {_name: {"value": "Indigo", writeable: false}, _hex: {"value": "#4b0082", writeable: false}});
var const$0112 = Object.create(Colors.prototype, {_name: {"value": "Ivory", writeable: false}, _hex: {"value": "#fffff0", writeable: false}});
var const$0113 = Object.create(Colors.prototype, {_name: {"value": "Khaki", writeable: false}, _hex: {"value": "#f0e68c", writeable: false}});
var const$0114 = Object.create(Colors.prototype, {_name: {"value": "Lavender", writeable: false}, _hex: {"value": "#e6e6fa", writeable: false}});
var const$0115 = Object.create(Colors.prototype, {_name: {"value": "LavenderBlush", writeable: false}, _hex: {"value": "#fff0f5", writeable: false}});
var const$0116 = Object.create(Colors.prototype, {_name: {"value": "LawnGreen", writeable: false}, _hex: {"value": "#7cfc00", writeable: false}});
var const$0117 = Object.create(Colors.prototype, {_name: {"value": "LemonChiffon", writeable: false}, _hex: {"value": "#fffacd", writeable: false}});
var const$0118 = Object.create(Colors.prototype, {_name: {"value": "LightBlue", writeable: false}, _hex: {"value": "#add8e6", writeable: false}});
var const$0119 = Object.create(Colors.prototype, {_name: {"value": "LightCoral", writeable: false}, _hex: {"value": "#f08080", writeable: false}});
var const$0120 = Object.create(Colors.prototype, {_name: {"value": "LightCyan", writeable: false}, _hex: {"value": "#e0ffff", writeable: false}});
var const$0121 = Object.create(Colors.prototype, {_name: {"value": "LightGoldenrod", writeable: false}, _hex: {"value": "#fafad2", writeable: false}});
var const$0122 = Object.create(Colors.prototype, {_name: {"value": "LightGray", writeable: false}, _hex: {"value": "#d3d3d3", writeable: false}});
var const$0123 = Object.create(Colors.prototype, {_name: {"value": "LightGreen", writeable: false}, _hex: {"value": "#90ee90", writeable: false}});
var const$0124 = Object.create(Colors.prototype, {_name: {"value": "LightPink", writeable: false}, _hex: {"value": "#ffb6c1", writeable: false}});
var const$0125 = Object.create(Colors.prototype, {_name: {"value": "LightSalmon", writeable: false}, _hex: {"value": "#ffa07a", writeable: false}});
var const$0126 = Object.create(Colors.prototype, {_name: {"value": "LightSeaGreen", writeable: false}, _hex: {"value": "#20b2aa", writeable: false}});
var const$0127 = Object.create(Colors.prototype, {_name: {"value": "LightSkyBlue", writeable: false}, _hex: {"value": "#87cefa", writeable: false}});
var const$0128 = Object.create(Colors.prototype, {_name: {"value": "LightSlateGray", writeable: false}, _hex: {"value": "#778899", writeable: false}});
var const$0129 = Object.create(Colors.prototype, {_name: {"value": "LightSteelBlue", writeable: false}, _hex: {"value": "#b0c4de", writeable: false}});
var const$0130 = Object.create(Colors.prototype, {_name: {"value": "LightYellow", writeable: false}, _hex: {"value": "#ffffe0", writeable: false}});
var const$0131 = Object.create(Colors.prototype, {_name: {"value": "Lime", writeable: false}, _hex: {"value": "#00ff00", writeable: false}});
var const$0132 = Object.create(Colors.prototype, {_name: {"value": "LimeGreen", writeable: false}, _hex: {"value": "#32cd32", writeable: false}});
var const$0133 = Object.create(Colors.prototype, {_name: {"value": "Linen", writeable: false}, _hex: {"value": "#faf0e6", writeable: false}});
var const$0134 = Object.create(Colors.prototype, {_name: {"value": "Magenta", writeable: false}, _hex: {"value": "#ff00ff", writeable: false}});
var const$0135 = Object.create(Colors.prototype, {_name: {"value": "Maroon", writeable: false}, _hex: {"value": "#800000", writeable: false}});
var const$0136 = Object.create(Colors.prototype, {_name: {"value": "MediumAquamarine", writeable: false}, _hex: {"value": "#66cdaa", writeable: false}});
var const$0137 = Object.create(Colors.prototype, {_name: {"value": "MediumBlue", writeable: false}, _hex: {"value": "#0000cd", writeable: false}});
var const$0138 = Object.create(Colors.prototype, {_name: {"value": "MediumOrchid", writeable: false}, _hex: {"value": "#ba55d3", writeable: false}});
var const$0139 = Object.create(Colors.prototype, {_name: {"value": "MediumPurple", writeable: false}, _hex: {"value": "#9370db", writeable: false}});
var const$0140 = Object.create(Colors.prototype, {_name: {"value": "MediumSeaGreen", writeable: false}, _hex: {"value": "#3cb371", writeable: false}});
var const$0141 = Object.create(Colors.prototype, {_name: {"value": "MediumSlateBlue", writeable: false}, _hex: {"value": "#7b68ee", writeable: false}});
var const$0142 = Object.create(Colors.prototype, {_name: {"value": "MediumSpringGreen", writeable: false}, _hex: {"value": "#00fa9a", writeable: false}});
var const$0143 = Object.create(Colors.prototype, {_name: {"value": "MediumTurquoise", writeable: false}, _hex: {"value": "#48d1cc", writeable: false}});
var const$0144 = Object.create(Colors.prototype, {_name: {"value": "MediumVioletRed", writeable: false}, _hex: {"value": "#c71585", writeable: false}});
var const$0145 = Object.create(Colors.prototype, {_name: {"value": "MidnightBlue", writeable: false}, _hex: {"value": "#191970", writeable: false}});
var const$0146 = Object.create(Colors.prototype, {_name: {"value": "MintCream", writeable: false}, _hex: {"value": "#f5fffa", writeable: false}});
var const$0147 = Object.create(Colors.prototype, {_name: {"value": "MistyRose", writeable: false}, _hex: {"value": "#ffe4e1", writeable: false}});
var const$0148 = Object.create(Colors.prototype, {_name: {"value": "Moccasin", writeable: false}, _hex: {"value": "#ffe4b5", writeable: false}});
var const$0149 = Object.create(Colors.prototype, {_name: {"value": "NavajoWhite", writeable: false}, _hex: {"value": "#ffdead", writeable: false}});
var const$0150 = Object.create(Colors.prototype, {_name: {"value": "Navy", writeable: false}, _hex: {"value": "#000080", writeable: false}});
var const$0151 = Object.create(Colors.prototype, {_name: {"value": "OldLace", writeable: false}, _hex: {"value": "#fdf5e6", writeable: false}});
var const$0152 = Object.create(Colors.prototype, {_name: {"value": "Olive", writeable: false}, _hex: {"value": "#808000", writeable: false}});
var const$0153 = Object.create(Colors.prototype, {_name: {"value": "OliveDrab", writeable: false}, _hex: {"value": "#6b8e23", writeable: false}});
var const$0154 = Object.create(Colors.prototype, {_name: {"value": "Orange", writeable: false}, _hex: {"value": "#ffa500", writeable: false}});
var const$0155 = Object.create(Colors.prototype, {_name: {"value": "OrangeRed", writeable: false}, _hex: {"value": "#ff4500", writeable: false}});
var const$0156 = Object.create(Colors.prototype, {_name: {"value": "Orchid", writeable: false}, _hex: {"value": "#da70d6", writeable: false}});
var const$0157 = Object.create(Colors.prototype, {_name: {"value": "PaleGoldenrod", writeable: false}, _hex: {"value": "#eee8aa", writeable: false}});
var const$0158 = Object.create(Colors.prototype, {_name: {"value": "PaleGreen", writeable: false}, _hex: {"value": "#98fb98", writeable: false}});
var const$0159 = Object.create(Colors.prototype, {_name: {"value": "PaleTurquoise", writeable: false}, _hex: {"value": "#afeeee", writeable: false}});
var const$0160 = Object.create(Colors.prototype, {_name: {"value": "PaleVioletRed", writeable: false}, _hex: {"value": "#db7093", writeable: false}});
var const$0161 = Object.create(Colors.prototype, {_name: {"value": "PapayaWhip", writeable: false}, _hex: {"value": "#ffefd5", writeable: false}});
var const$0162 = Object.create(Colors.prototype, {_name: {"value": "PeachPuff", writeable: false}, _hex: {"value": "#ffdab9", writeable: false}});
var const$0163 = Object.create(Colors.prototype, {_name: {"value": "Peru", writeable: false}, _hex: {"value": "#cd853f", writeable: false}});
var const$0164 = Object.create(Colors.prototype, {_name: {"value": "Pink", writeable: false}, _hex: {"value": "#ffc0cb", writeable: false}});
var const$0165 = Object.create(Colors.prototype, {_name: {"value": "Plum", writeable: false}, _hex: {"value": "#dda0dd", writeable: false}});
var const$0166 = Object.create(Colors.prototype, {_name: {"value": "PowderBlue", writeable: false}, _hex: {"value": "#b0e0e6", writeable: false}});
var const$0167 = Object.create(Colors.prototype, {_name: {"value": "Purple", writeable: false}, _hex: {"value": "#800080", writeable: false}});
var const$0168 = Object.create(Colors.prototype, {_name: {"value": "Red", writeable: false}, _hex: {"value": "#ff0000", writeable: false}});
var const$0169 = Object.create(Colors.prototype, {_name: {"value": "RosyBrown", writeable: false}, _hex: {"value": "#bc8f8f", writeable: false}});
var const$0170 = Object.create(Colors.prototype, {_name: {"value": "RoyalBlue", writeable: false}, _hex: {"value": "#4169e1", writeable: false}});
var const$0171 = Object.create(Colors.prototype, {_name: {"value": "SaddleBrown", writeable: false}, _hex: {"value": "#8b4513", writeable: false}});
var const$0172 = Object.create(Colors.prototype, {_name: {"value": "Salmon", writeable: false}, _hex: {"value": "#fa8072", writeable: false}});
var const$0173 = Object.create(Colors.prototype, {_name: {"value": "SandyBrown", writeable: false}, _hex: {"value": "#f4a460", writeable: false}});
var const$0174 = Object.create(Colors.prototype, {_name: {"value": "SeaGreen", writeable: false}, _hex: {"value": "#2e8b57", writeable: false}});
var const$0175 = Object.create(Colors.prototype, {_name: {"value": "SeaShell", writeable: false}, _hex: {"value": "#fff5ee", writeable: false}});
var const$0176 = Object.create(Colors.prototype, {_name: {"value": "Sienna", writeable: false}, _hex: {"value": "#a0522d", writeable: false}});
var const$0177 = Object.create(Colors.prototype, {_name: {"value": "Silver", writeable: false}, _hex: {"value": "#c0c0c0", writeable: false}});
var const$0178 = Object.create(Colors.prototype, {_name: {"value": "SkyBlue", writeable: false}, _hex: {"value": "#87ceeb", writeable: false}});
var const$0179 = Object.create(Colors.prototype, {_name: {"value": "SlateBlue", writeable: false}, _hex: {"value": "#6a5acd", writeable: false}});
var const$0180 = Object.create(Colors.prototype, {_name: {"value": "SlateGray", writeable: false}, _hex: {"value": "#708090", writeable: false}});
var const$0181 = Object.create(Colors.prototype, {_name: {"value": "Snow", writeable: false}, _hex: {"value": "#fffafa", writeable: false}});
var const$0182 = Object.create(Colors.prototype, {_name: {"value": "SpringGreen", writeable: false}, _hex: {"value": "#00ff7f", writeable: false}});
var const$0183 = Object.create(Colors.prototype, {_name: {"value": "SteelBlue", writeable: false}, _hex: {"value": "#4682b4", writeable: false}});
var const$0184 = Object.create(Colors.prototype, {_name: {"value": "Tan", writeable: false}, _hex: {"value": "#d2b48c", writeable: false}});
var const$0185 = Object.create(Colors.prototype, {_name: {"value": "Teal", writeable: false}, _hex: {"value": "#008080", writeable: false}});
var const$0186 = Object.create(Colors.prototype, {_name: {"value": "Thistle", writeable: false}, _hex: {"value": "#d8bfd8", writeable: false}});
var const$0187 = Object.create(Colors.prototype, {_name: {"value": "Tomato", writeable: false}, _hex: {"value": "#ff6347", writeable: false}});
var const$0188 = Object.create(Colors.prototype, {_name: {"value": "Turquoise", writeable: false}, _hex: {"value": "#40e0d0", writeable: false}});
var const$0189 = Object.create(Colors.prototype, {_name: {"value": "Violet", writeable: false}, _hex: {"value": "#ee82ee", writeable: false}});
var const$0190 = Object.create(Colors.prototype, {_name: {"value": "Wheat", writeable: false}, _hex: {"value": "#f5deb3", writeable: false}});
var const$0191 = Object.create(Colors.prototype, {_name: {"value": "WhiteSmoke", writeable: false}, _hex: {"value": "#f5f5f5", writeable: false}});
var const$0192 = Object.create(Colors.prototype, {_name: {"value": "Yellow", writeable: false}, _hex: {"value": "#ffff00", writeable: false}});
var const$0193 = Object.create(Colors.prototype, {_name: {"value": "YellowGreen", writeable: false}, _hex: {"value": "#9acd32", writeable: false}});
var const$0194 = Object.create(StringToSolidColorBrushConverter.prototype, {});
var const$0195 = Object.create(StringToBooleanConverter.prototype, {});
var const$0196 = new JSSyntaxRegExp("^#[_a-zA-Z]\\w*$");
var const$0197 = new JSSyntaxRegExp("<(\\w+)");
var const$0198 = _constMap(["body", "html", "head", "html", "caption", "table", "td", "tr", "colgroup", "table", "col", "colgroup", "tr", "tbody", "tbody", "table", "tfoot", "table", "thead", "table", "track", "audio"]);
var const$0199 = Object.create(Orientation.prototype, {_Buckshot_Client_str: {"value": "horizontal", writeable: false}});
var const$0200 = Object.create(Orientation.prototype, {_Buckshot_Client_str: {"value": "vertical", writeable: false}});
var const$0201 = Object.create(GridUnitType.prototype, {_val: {"value": (2), writeable: false}});
var const$0202 = Object.create(GridUnitType.prototype, {_val: {"value": (1), writeable: false}});
var const$0203 = Object.create(GridUnitType.prototype, {_val: {"value": (3), writeable: false}});
var const$0204 = Object.create(XmlException.prototype, {msg: {"value": "Nothing to parse.", writeable: false}, debugXml: {"value": "", writeable: false}, errorLocation: {"value": (0), writeable: false}});
var const$0205 = ImmutableList.ImmutableList$from$factory(["<!--", "<![CDATA[", "<?", "</"]);
var const$0206 = Object.create(XmlException.prototype, {msg: {"value": "End comment tag not found.", writeable: false}, debugXml: {"value": "", writeable: false}, errorLocation: {"value": (0), writeable: false}});
var const$0207 = Object.create(XmlException.prototype, {msg: {"value": "Nested comments not allowed.", writeable: false}, debugXml: {"value": "", writeable: false}, errorLocation: {"value": (0), writeable: false}});
var const$0208 = Object.create(XmlException.prototype, {msg: {"value": "End CDATA tag not found.", writeable: false}, debugXml: {"value": "", writeable: false}, errorLocation: {"value": (0), writeable: false}});
var const$0209 = Object.create(XmlException.prototype, {msg: {"value": "Nested CDATA not allowed.", writeable: false}, debugXml: {"value": "", writeable: false}, errorLocation: {"value": (0), writeable: false}});
var const$0210 = Object.create(XmlException.prototype, {msg: {"value": "End PI tag not found.", writeable: false}, debugXml: {"value": "", writeable: false}, errorLocation: {"value": (0), writeable: false}});
var const$0211 = Object.create(XmlException.prototype, {msg: {"value": "Nested PI not allowed.", writeable: false}, debugXml: {"value": "", writeable: false}, errorLocation: {"value": (0), writeable: false}});
var const$0212 = ImmutableList.ImmutableList$from$factory([(60), (62), (33), (58), (47), (34), (39), (61)]);
var const$0213 = Object.create(XmlException.prototype, {msg: {"value": "CDATA nodes are not supported in the top level.", writeable: false}, debugXml: {"value": "", writeable: false}, errorLocation: {"value": (0), writeable: false}});
var const$0214 = Object.create(XmlNodeType.prototype, {_Xml_type: {"value": "CDATA", writeable: false}});
var const$0215 = Object.create(XmlException.prototype, {msg: {"value": "Element not found.", writeable: false}, debugXml: {"value": "", writeable: false}, errorLocation: {"value": (0), writeable: false}});
var const$0216 = Object.create(XmlNodeType.prototype, {_Xml_type: {"value": "Element", writeable: false}});
var const$0217 = Object.create(XmlNodeType.prototype, {_Xml_type: {"value": "Namespace", writeable: false}});
var const$0218 = Object.create(XmlNodeType.prototype, {_Xml_type: {"value": "Attribute", writeable: false}});
var const$0219 = Object.create(XmlNodeType.prototype, {_Xml_type: {"value": "Text", writeable: false}});
var const$0220 = Object.create(XmlNodeType.prototype, {_Xml_type: {"value": "PI", writeable: false}});
var const$0221 = Object.create(XmlException.prototype, {msg: {"value": "PI nodes are not supported in the top level.", writeable: false}, debugXml: {"value": "", writeable: false}, errorLocation: {"value": (0), writeable: false}});
var const$0222 = ImmutableList.ImmutableList$from$factory([]);
var const$0223 = Object.create(XmlException.prototype, {msg: {"value": "Unexpected end of file.", writeable: false}, debugXml: {"value": "", writeable: false}, errorLocation: {"value": (0), writeable: false}});
var const$0224 = Object.create(ExceptionImplementation.prototype, {_msg: {"value": "Unexpected end of file.", writeable: false}});
var const$0225 = Object.create(XmlException.prototype, {msg: {"value": "Text not allowed in root level. Use comments instead.", writeable: false}, debugXml: {"value": "", writeable: false}, errorLocation: {"value": (0), writeable: false}});
var const$0226 = Object.create(XmlException.prototype, {msg: {"value": "Unexpected end of file.  Not all tags were closed.", writeable: false}, debugXml: {"value": "", writeable: false}, errorLocation: {"value": (0), writeable: false}});
var const$0227 = Object.create(PresentationProviderException.prototype, {});
var const$0228 = Object.create(StringToGridLengthConverter.prototype, {});
var const$0229 = Object.create(LinearGradientDirection.prototype, {_Buckshot_Client_str: {"value": "left", writeable: false}});
var const$0230 = Object.create(LinearGradientDirection.prototype, {_Buckshot_Client_str: {"value": "top", writeable: false}});
var const$0231 = Object.create(StringToLinearGradientDirectionConverter.prototype, {});
var const$0232 = Object.create(StringToColorConverter.prototype, {});
var const$0233 = Object.create(RadialGradientDrawMode.prototype, {_Buckshot_Client_str: {"value": "contain", writeable: false}});
var const$0234 = Object.create(RadialGradientDrawMode.prototype, {_Buckshot_Client_str: {"value": "cover", writeable: false}});
var const$0235 = Object.create(StringToRadialGradientDrawModeConverter.prototype, {});
var const$0236 = Object.create(UnsupportedOperationException.prototype, {_message: {"value": "TODO(jacobr): should we impl?", writeable: false}});
var const$0237 = Object.create(AnimationException.prototype, {});
var const$0238 = Object.create(InputTypes.prototype, {_Buckshot_Client_str: {"value": "password", writeable: false}});
var const$0239 = Object.create(InputTypes.prototype, {_Buckshot_Client_str: {"value": "email", writeable: false}});
var const$0240 = Object.create(InputTypes.prototype, {_Buckshot_Client_str: {"value": "date", writeable: false}});
var const$0241 = Object.create(InputTypes.prototype, {_Buckshot_Client_str: {"value": "datetime", writeable: false}});
var const$0242 = Object.create(InputTypes.prototype, {_Buckshot_Client_str: {"value": "month", writeable: false}});
var const$0243 = Object.create(InputTypes.prototype, {_Buckshot_Client_str: {"value": "search", writeable: false}});
var const$0244 = Object.create(InputTypes.prototype, {_Buckshot_Client_str: {"value": "tel", writeable: false}});
var const$0245 = Object.create(InputTypes.prototype, {_Buckshot_Client_str: {"value": "text", writeable: false}});
var const$0246 = Object.create(InputTypes.prototype, {_Buckshot_Client_str: {"value": "time", writeable: false}});
var const$0247 = Object.create(InputTypes.prototype, {_Buckshot_Client_str: {"value": "url", writeable: false}});
var const$0248 = Object.create(InputTypes.prototype, {_Buckshot_Client_str: {"value": "week", writeable: false}});
var const$0250 = Object.create(StringToInputTypesConverter.prototype, {});
var const$0249 = ImmutableList.ImmutableList$from$factory([const$0238, const$0239, const$0240, const$0241, const$0242, const$0243, const$0244, const$0245, const$0246, const$0247, const$0248]);
var $globals = {};
$static_init();
if (typeof window != 'undefined' && typeof document != 'undefined' &&
    window.addEventListener && document.readyState == 'loading') {
  window.addEventListener('DOMContentLoaded', function(e) {
    main();
  });
} else {
  main();
}
